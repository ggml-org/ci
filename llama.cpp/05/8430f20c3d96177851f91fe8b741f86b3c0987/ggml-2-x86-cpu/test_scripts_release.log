+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.545 I build: 3883 (058430f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.001.888 I main: load the model and apply lora adapter, if any
0.00.022.304 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.351 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.360 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.364 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.373 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.377 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.378 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.378 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.379 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.380 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.380 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.385 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.386 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.387 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.387 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.387 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.552 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.753 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.630 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.637 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.638 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.638 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.639 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.640 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.641 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.644 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.645 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.646 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.646 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.647 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.651 I llama_model_loader: - type  f32:   37 tensors
0.00.132.655 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.360 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.217.333 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.218.094 I llm_load_vocab: special tokens cache size = 5
0.00.239.100 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.239.115 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.239.115 I llm_load_print_meta: arch             = gemma
0.00.239.116 I llm_load_print_meta: vocab type       = SPM
0.00.239.117 I llm_load_print_meta: n_vocab          = 256000
0.00.239.118 I llm_load_print_meta: n_merges         = 0
0.00.239.118 I llm_load_print_meta: vocab_only       = 0
0.00.239.118 I llm_load_print_meta: n_ctx_train      = 8192
0.00.239.118 I llm_load_print_meta: n_embd           = 2048
0.00.239.119 I llm_load_print_meta: n_layer          = 18
0.00.239.132 I llm_load_print_meta: n_head           = 8
0.00.239.133 I llm_load_print_meta: n_head_kv        = 1
0.00.239.133 I llm_load_print_meta: n_rot            = 256
0.00.239.134 I llm_load_print_meta: n_swa            = 0
0.00.239.134 I llm_load_print_meta: n_embd_head_k    = 256
0.00.239.134 I llm_load_print_meta: n_embd_head_v    = 256
0.00.239.135 I llm_load_print_meta: n_gqa            = 8
0.00.239.136 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.239.136 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.239.137 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.239.138 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.239.139 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.239.139 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.239.140 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.239.140 I llm_load_print_meta: n_ff             = 16384
0.00.239.141 I llm_load_print_meta: n_expert         = 0
0.00.239.141 I llm_load_print_meta: n_expert_used    = 0
0.00.239.141 I llm_load_print_meta: causal attn      = 1
0.00.239.141 I llm_load_print_meta: pooling type     = 0
0.00.239.142 I llm_load_print_meta: rope type        = 2
0.00.239.142 I llm_load_print_meta: rope scaling     = linear
0.00.239.144 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.239.144 I llm_load_print_meta: freq_scale_train = 1
0.00.239.145 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.239.145 I llm_load_print_meta: rope_finetuned   = unknown
0.00.239.145 I llm_load_print_meta: ssm_d_conv       = 0
0.00.239.145 I llm_load_print_meta: ssm_d_inner      = 0
0.00.239.146 I llm_load_print_meta: ssm_d_state      = 0
0.00.239.146 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.239.146 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.239.147 I llm_load_print_meta: model type       = 2B
0.00.239.147 I llm_load_print_meta: model ftype      = Q8_0
0.00.239.148 I llm_load_print_meta: model params     = 2.51 B
0.00.239.149 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.239.149 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.239.150 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.239.150 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.239.150 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.239.151 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.239.152 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.239.153 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.239.153 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.239.154 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.239.155 I llm_load_print_meta: max token length = 93
0.00.239.176 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.338.701 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.338.711 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.338.712 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.338.713 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.338.714 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.338.714 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.343.838 I llama_new_context_with_model: n_ctx      = 8192
0.00.343.845 I llama_new_context_with_model: n_batch    = 2048
0.00.343.845 I llama_new_context_with_model: n_ubatch   = 512
0.00.343.846 I llama_new_context_with_model: flash_attn = 0
0.00.343.849 I llama_new_context_with_model: freq_base  = 10000.0
0.00.343.850 I llama_new_context_with_model: freq_scale = 1
0.00.373.038 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.373.052 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.373.143 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.022 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.374.030 I llama_new_context_with_model: graph nodes  = 601
0.00.374.031 I llama_new_context_with_model: graph splits = 1
0.00.374.033 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.543 I main: llama threadpool init, n_threads = 4
0.00.465.556 I 
0.00.465.632 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.635 I 
0.00.465.671 I sampler seed: 3472560441
0.00.465.680 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.683 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.465.684 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.684 I 
 increably. [end of text]


0.00.751.659 I llama_perf_sampler_print:    sampling time =       0.71 ms /     5 runs   (    0.14 ms per token,  7052.19 tokens per second)
0.00.751.662 I llama_perf_context_print:        load time =     463.58 ms
0.00.751.663 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.751.665 I llama_perf_context_print:        eval time =     283.01 ms /     4 runs   (   70.75 ms per token,    14.13 tokens per second)
0.00.751.666 I llama_perf_context_print:       total time =     286.12 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.543 I build: 3883 (058430f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.022.485 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.500 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.508 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.509 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.514 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.515 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.515 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.516 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.516 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.517 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.522 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.523 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.523 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.525 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.525 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.275 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.449 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.386 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.393 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.394 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.395 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.395 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.397 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.398 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.401 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.402 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.403 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.404 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.405 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.409 I llama_model_loader: - type  f32:   37 tensors
0.00.133.412 I llama_model_loader: - type q8_0:  127 tensors
0.00.193.884 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.513 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.301 I llm_load_vocab: special tokens cache size = 5
0.00.233.471 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.486 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.487 I llm_load_print_meta: arch             = gemma
0.00.233.488 I llm_load_print_meta: vocab type       = SPM
0.00.233.489 I llm_load_print_meta: n_vocab          = 256000
0.00.233.489 I llm_load_print_meta: n_merges         = 0
0.00.233.489 I llm_load_print_meta: vocab_only       = 0
0.00.233.490 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.490 I llm_load_print_meta: n_embd           = 2048
0.00.233.490 I llm_load_print_meta: n_layer          = 18
0.00.233.503 I llm_load_print_meta: n_head           = 8
0.00.233.504 I llm_load_print_meta: n_head_kv        = 1
0.00.233.504 I llm_load_print_meta: n_rot            = 256
0.00.233.505 I llm_load_print_meta: n_swa            = 0
0.00.233.505 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.505 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.506 I llm_load_print_meta: n_gqa            = 8
0.00.233.507 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.508 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.509 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.510 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.511 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.511 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.512 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.513 I llm_load_print_meta: n_ff             = 16384
0.00.233.513 I llm_load_print_meta: n_expert         = 0
0.00.233.513 I llm_load_print_meta: n_expert_used    = 0
0.00.233.514 I llm_load_print_meta: causal attn      = 1
0.00.233.514 I llm_load_print_meta: pooling type     = 0
0.00.233.514 I llm_load_print_meta: rope type        = 2
0.00.233.514 I llm_load_print_meta: rope scaling     = linear
0.00.233.516 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.516 I llm_load_print_meta: freq_scale_train = 1
0.00.233.516 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.517 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.517 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.518 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.518 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.518 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.519 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.519 I llm_load_print_meta: model type       = 2B
0.00.233.520 I llm_load_print_meta: model ftype      = Q8_0
0.00.233.521 I llm_load_print_meta: model params     = 2.51 B
0.00.233.522 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.522 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.523 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.523 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.523 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.524 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.524 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.525 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.525 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.526 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.526 I llm_load_print_meta: max token length = 93
0.00.233.554 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.326.196 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.331.351 I llama_new_context_with_model: n_ctx      = 8192
0.00.331.359 I llama_new_context_with_model: n_batch    = 2048
0.00.331.359 I llama_new_context_with_model: n_ubatch   = 512
0.00.331.360 I llama_new_context_with_model: flash_attn = 0
0.00.331.363 I llama_new_context_with_model: freq_base  = 10000.0
0.00.331.364 I llama_new_context_with_model: freq_scale = 1
0.00.360.774 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.360.791 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.360.883 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.361.734 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.361.742 I llama_new_context_with_model: graph nodes  = 601
0.00.361.742 I llama_new_context_with_model: graph splits = 1
0.00.361.744 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.311 I main: llama threadpool init, n_threads = 4
0.00.449.323 I 
0.00.449.401 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.404 I 
0.00.449.445 I sampler seed: 834612599
0.00.449.456 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.449.459 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.449.459 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.449.459 I 
 seconded in the sentence "He couldn't help but smirk at the sight of his friend."

What is the meaning of "seconded" in this

0.02.652.488 I llama_perf_sampler_print:    sampling time =       5.40 ms /    33 runs   (    0.16 ms per token,  6115.64 tokens per second)
0.02.652.490 I llama_perf_context_print:        load time =     447.36 ms
0.02.652.491 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.652.493 I llama_perf_context_print:        eval time =    2184.43 ms /    32 runs   (   68.26 ms per token,    14.65 tokens per second)
0.02.652.494 I llama_perf_context_print:       total time =    2203.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.602 I build: 3883 (058430f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.833 I main: llama backend init
0.00.001.984 I main: load the model and apply lora adapter, if any
0.00.022.496 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.546 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.553 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.559 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.560 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.564 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.565 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.565 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.566 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.567 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.568 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.573 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.574 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.575 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.576 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.576 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.536 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.667 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.523 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.530 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.530 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.531 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.532 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.533 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.533 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.536 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.536 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.537 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.538 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.134.538 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.543 I llama_model_loader: - type  f32:   37 tensors
0.00.134.545 I llama_model_loader: - type q8_0:  127 tensors
0.00.195.969 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.215.178 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.960 I llm_load_vocab: special tokens cache size = 5
0.00.237.504 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.237.520 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.237.521 I llm_load_print_meta: arch             = gemma
0.00.237.521 I llm_load_print_meta: vocab type       = SPM
0.00.237.522 I llm_load_print_meta: n_vocab          = 256000
0.00.237.522 I llm_load_print_meta: n_merges         = 0
0.00.237.523 I llm_load_print_meta: vocab_only       = 0
0.00.237.523 I llm_load_print_meta: n_ctx_train      = 8192
0.00.237.523 I llm_load_print_meta: n_embd           = 2048
0.00.237.524 I llm_load_print_meta: n_layer          = 18
0.00.237.537 I llm_load_print_meta: n_head           = 8
0.00.237.538 I llm_load_print_meta: n_head_kv        = 1
0.00.237.538 I llm_load_print_meta: n_rot            = 256
0.00.237.538 I llm_load_print_meta: n_swa            = 0
0.00.237.538 I llm_load_print_meta: n_embd_head_k    = 256
0.00.237.539 I llm_load_print_meta: n_embd_head_v    = 256
0.00.237.539 I llm_load_print_meta: n_gqa            = 8
0.00.237.540 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.237.541 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.237.542 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.237.543 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.237.544 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.237.544 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.237.544 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.237.545 I llm_load_print_meta: n_ff             = 16384
0.00.237.546 I llm_load_print_meta: n_expert         = 0
0.00.237.546 I llm_load_print_meta: n_expert_used    = 0
0.00.237.546 I llm_load_print_meta: causal attn      = 1
0.00.237.547 I llm_load_print_meta: pooling type     = 0
0.00.237.547 I llm_load_print_meta: rope type        = 2
0.00.237.547 I llm_load_print_meta: rope scaling     = linear
0.00.237.548 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.237.549 I llm_load_print_meta: freq_scale_train = 1
0.00.237.549 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.237.549 I llm_load_print_meta: rope_finetuned   = unknown
0.00.237.550 I llm_load_print_meta: ssm_d_conv       = 0
0.00.237.550 I llm_load_print_meta: ssm_d_inner      = 0
0.00.237.550 I llm_load_print_meta: ssm_d_state      = 0
0.00.237.551 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.237.551 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.237.552 I llm_load_print_meta: model type       = 2B
0.00.237.552 I llm_load_print_meta: model ftype      = Q8_0
0.00.237.553 I llm_load_print_meta: model params     = 2.51 B
0.00.237.554 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.237.554 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.237.555 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.237.555 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.237.555 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.237.556 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.237.556 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.237.557 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.237.557 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.237.557 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.237.558 I llm_load_print_meta: max token length = 93
0.00.237.585 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.312.437 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.312.444 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.312.444 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.312.445 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.312.445 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.312.446 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.318.498 I llama_new_context_with_model: n_ctx      = 8192
0.00.318.505 I llama_new_context_with_model: n_batch    = 2048
0.00.318.506 I llama_new_context_with_model: n_ubatch   = 512
0.00.318.506 I llama_new_context_with_model: flash_attn = 0
0.00.318.509 I llama_new_context_with_model: freq_base  = 10000.0
0.00.318.510 I llama_new_context_with_model: freq_scale = 1
0.00.347.709 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.347.727 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.347.819 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.348.695 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.348.702 I llama_new_context_with_model: graph nodes  = 601
0.00.348.703 I llama_new_context_with_model: graph splits = 1
0.00.348.705 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.089 I main: llama threadpool init, n_threads = 4
0.00.441.102 I 
0.00.441.182 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.185 I 
0.00.441.223 I sampler seed: 2672969930
0.00.441.232 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.234 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.441.235 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.235 I 
 increably, engulfing the city in an ethereal embrace.

The sight was mesmerizing - towering buildings kissed by the soft glow of moonlight filtering through stained glass windows

0.02.785.809 I llama_perf_sampler_print:    sampling time =       5.54 ms /    33 runs   (    0.17 ms per token,  5953.45 tokens per second)
0.02.785.812 I llama_perf_context_print:        load time =     439.03 ms
0.02.785.814 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.785.815 I llama_perf_context_print:        eval time =    2325.76 ms /    32 runs   (   72.68 ms per token,    13.76 tokens per second)
0.02.785.815 I llama_perf_context_print:       total time =    2344.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.576 I build: 3883 (058430f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.773 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.022.117 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.165 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.177 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.182 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.183 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.187 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.188 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.188 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.189 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.189 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.190 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.194 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.195 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.195 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.196 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.197 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.539 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.931 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.731 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.737 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.738 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.739 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.740 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.741 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.742 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.744 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.745 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.746 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.747 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.749 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.752 I llama_model_loader: - type  f32:   37 tensors
0.00.132.755 I llama_model_loader: - type q8_0:  127 tensors
0.00.191.582 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.207.859 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.637 I llm_load_vocab: special tokens cache size = 5
0.00.229.675 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.692 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.693 I llm_load_print_meta: arch             = gemma
0.00.229.693 I llm_load_print_meta: vocab type       = SPM
0.00.229.694 I llm_load_print_meta: n_vocab          = 256000
0.00.229.695 I llm_load_print_meta: n_merges         = 0
0.00.229.695 I llm_load_print_meta: vocab_only       = 0
0.00.229.695 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.696 I llm_load_print_meta: n_embd           = 2048
0.00.229.696 I llm_load_print_meta: n_layer          = 18
0.00.229.709 I llm_load_print_meta: n_head           = 8
0.00.229.710 I llm_load_print_meta: n_head_kv        = 1
0.00.229.710 I llm_load_print_meta: n_rot            = 256
0.00.229.710 I llm_load_print_meta: n_swa            = 0
0.00.229.710 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.711 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.711 I llm_load_print_meta: n_gqa            = 8
0.00.229.712 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.713 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.714 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.715 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.716 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.716 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.716 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.717 I llm_load_print_meta: n_ff             = 16384
0.00.229.718 I llm_load_print_meta: n_expert         = 0
0.00.229.718 I llm_load_print_meta: n_expert_used    = 0
0.00.229.718 I llm_load_print_meta: causal attn      = 1
0.00.229.718 I llm_load_print_meta: pooling type     = 0
0.00.229.719 I llm_load_print_meta: rope type        = 2
0.00.229.719 I llm_load_print_meta: rope scaling     = linear
0.00.229.720 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.721 I llm_load_print_meta: freq_scale_train = 1
0.00.229.721 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.721 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.722 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.722 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.722 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.723 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.723 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.724 I llm_load_print_meta: model type       = 2B
0.00.229.724 I llm_load_print_meta: model ftype      = Q8_0
0.00.229.725 I llm_load_print_meta: model params     = 2.51 B
0.00.229.726 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.229.726 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.726 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.727 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.727 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.727 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.728 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.729 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.729 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.729 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.730 I llm_load_print_meta: max token length = 93
0.00.229.761 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.299.576 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.299.584 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.304.699 I llama_new_context_with_model: n_ctx      = 8192
0.00.304.705 I llama_new_context_with_model: n_batch    = 2048
0.00.304.706 I llama_new_context_with_model: n_ubatch   = 512
0.00.304.706 I llama_new_context_with_model: flash_attn = 0
0.00.304.709 I llama_new_context_with_model: freq_base  = 10000.0
0.00.304.710 I llama_new_context_with_model: freq_scale = 1
0.00.333.921 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.333.936 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.334.040 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.334.895 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.334.903 I llama_new_context_with_model: graph nodes  = 601
0.00.334.904 I llama_new_context_with_model: graph splits = 1
0.00.334.906 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.085 I main: llama threadpool init, n_threads = 4
0.00.431.097 I 
0.00.431.172 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.176 I 
0.00.431.213 I sampler seed: 814288464
0.00.431.224 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.233 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.431.234 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.234 I 
 increasities of the Earth's crust.

**Answer:** Folding and faulting. [end of text]


0.01.817.871 I llama_perf_sampler_print:    sampling time =       3.13 ms /    19 runs   (    0.16 ms per token,  6072.23 tokens per second)
0.01.817.874 I llama_perf_context_print:        load time =     429.16 ms
0.01.817.875 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.817.876 I llama_perf_context_print:        eval time =    1375.13 ms /    18 runs   (   76.40 ms per token,    13.09 tokens per second)
0.01.817.878 I llama_perf_context_print:       total time =    1386.79 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.817s
user	0m27.663s
sys	0m9.558s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3883 (058430f2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31983.53 ms
main:    total time = 31983.53 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.575 I build: 3883 (058430f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.777 I main: llama backend init
0.00.001.936 I main: load the model and apply lora adapter, if any
0.00.022.085 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.133 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.140 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.146 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.147 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.151 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.152 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.152 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.154 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.155 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.155 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.160 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.161 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.161 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.162 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.162 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.608 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.372 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.220 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.228 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.229 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.230 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.231 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.233 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.234 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.237 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.238 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.239 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.240 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.241 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.245 I llama_model_loader: - type  f32:   37 tensors
0.00.133.248 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.248 I llama_model_loader: - type q6_K:   19 tensors
0.00.190.430 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.733 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.595 I llm_load_vocab: special tokens cache size = 5
0.00.226.621 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.635 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.635 I llm_load_print_meta: arch             = gemma
0.00.226.636 I llm_load_print_meta: vocab type       = SPM
0.00.226.636 I llm_load_print_meta: n_vocab          = 256000
0.00.226.637 I llm_load_print_meta: n_merges         = 0
0.00.226.638 I llm_load_print_meta: vocab_only       = 0
0.00.226.638 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.638 I llm_load_print_meta: n_embd           = 2048
0.00.226.639 I llm_load_print_meta: n_layer          = 18
0.00.226.651 I llm_load_print_meta: n_head           = 8
0.00.226.652 I llm_load_print_meta: n_head_kv        = 1
0.00.226.653 I llm_load_print_meta: n_rot            = 256
0.00.226.653 I llm_load_print_meta: n_swa            = 0
0.00.226.653 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.653 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.654 I llm_load_print_meta: n_gqa            = 8
0.00.226.655 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.656 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.657 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.658 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.659 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.659 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.659 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.660 I llm_load_print_meta: n_ff             = 16384
0.00.226.661 I llm_load_print_meta: n_expert         = 0
0.00.226.661 I llm_load_print_meta: n_expert_used    = 0
0.00.226.661 I llm_load_print_meta: causal attn      = 1
0.00.226.662 I llm_load_print_meta: pooling type     = 0
0.00.226.662 I llm_load_print_meta: rope type        = 2
0.00.226.662 I llm_load_print_meta: rope scaling     = linear
0.00.226.663 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.664 I llm_load_print_meta: freq_scale_train = 1
0.00.226.664 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.665 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.665 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.665 I llm_load_print_meta: ssm_d_inner      = 0
0.00.226.665 I llm_load_print_meta: ssm_d_state      = 0
0.00.226.666 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.226.666 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.226.667 I llm_load_print_meta: model type       = 2B
0.00.226.667 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.226.668 I llm_load_print_meta: model params     = 2.51 B
0.00.226.669 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.226.669 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.226.670 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.226.670 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.226.670 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.226.671 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.226.671 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.226.671 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.226.672 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.226.672 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.226.672 I llm_load_print_meta: max token length = 93
0.00.226.698 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.285.189 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.285.195 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.285.196 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.285.197 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.285.197 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.285.198 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.290.254 I llama_new_context_with_model: n_ctx      = 8192
0.00.290.260 I llama_new_context_with_model: n_batch    = 2048
0.00.290.260 I llama_new_context_with_model: n_ubatch   = 512
0.00.290.261 I llama_new_context_with_model: flash_attn = 0
0.00.290.264 I llama_new_context_with_model: freq_base  = 10000.0
0.00.290.265 I llama_new_context_with_model: freq_scale = 1
0.00.319.173 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.319.187 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.319.288 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.320.221 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.320.228 I llama_new_context_with_model: graph nodes  = 601
0.00.320.228 I llama_new_context_with_model: graph splits = 1
0.00.320.230 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.402.593 I main: llama threadpool init, n_threads = 4
0.00.402.606 I 
0.00.402.680 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.402.683 I 
0.00.402.720 I sampler seed: 732208972
0.00.402.729 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.402.732 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.402.732 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.402.732 I 
 increasities and anxieties. This fear can lead to avoidance and procrastination, creating further feelings of frustration and despair.

**Possible solutions:**

* **Identify and

0.02.076.076 I llama_perf_sampler_print:    sampling time =       5.53 ms /    33 runs   (    0.17 ms per token,  5965.29 tokens per second)
0.02.076.079 I llama_perf_context_print:        load time =     400.59 ms
0.02.076.080 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.076.082 I llama_perf_context_print:        eval time =    1654.41 ms /    32 runs   (   51.70 ms per token,    19.34 tokens per second)
0.02.076.082 I llama_perf_context_print:       total time =    1673.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3883 (058430f2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32072.02 ms
main:    total time = 32072.02 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.540 I build: 3883 (058430f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.775 I main: llama backend init
0.00.001.911 I main: load the model and apply lora adapter, if any
0.00.022.037 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.049 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.056 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.057 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.061 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.062 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.063 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.064 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.064 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.065 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.069 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.070 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.071 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.071 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.072 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.292 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.528 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.362 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.368 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.370 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.371 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.372 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.373 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.374 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.378 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.379 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.383 I llama_model_loader: - type  f32:   37 tensors
0.00.132.385 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.386 I llama_model_loader: - type q6_K:   19 tensors
0.00.198.035 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.217.527 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.218.292 I llm_load_vocab: special tokens cache size = 5
0.00.239.480 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.239.499 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.239.500 I llm_load_print_meta: arch             = gemma
0.00.239.500 I llm_load_print_meta: vocab type       = SPM
0.00.239.501 I llm_load_print_meta: n_vocab          = 256000
0.00.239.501 I llm_load_print_meta: n_merges         = 0
0.00.239.502 I llm_load_print_meta: vocab_only       = 0
0.00.239.502 I llm_load_print_meta: n_ctx_train      = 8192
0.00.239.502 I llm_load_print_meta: n_embd           = 2048
0.00.239.503 I llm_load_print_meta: n_layer          = 18
0.00.239.515 I llm_load_print_meta: n_head           = 8
0.00.239.516 I llm_load_print_meta: n_head_kv        = 1
0.00.239.517 I llm_load_print_meta: n_rot            = 256
0.00.239.517 I llm_load_print_meta: n_swa            = 0
0.00.239.517 I llm_load_print_meta: n_embd_head_k    = 256
0.00.239.517 I llm_load_print_meta: n_embd_head_v    = 256
0.00.239.518 I llm_load_print_meta: n_gqa            = 8
0.00.239.519 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.239.520 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.239.521 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.239.522 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.239.523 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.239.523 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.239.523 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.239.524 I llm_load_print_meta: n_ff             = 16384
0.00.239.524 I llm_load_print_meta: n_expert         = 0
0.00.239.525 I llm_load_print_meta: n_expert_used    = 0
0.00.239.525 I llm_load_print_meta: causal attn      = 1
0.00.239.525 I llm_load_print_meta: pooling type     = 0
0.00.239.526 I llm_load_print_meta: rope type        = 2
0.00.239.526 I llm_load_print_meta: rope scaling     = linear
0.00.239.527 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.239.528 I llm_load_print_meta: freq_scale_train = 1
0.00.239.528 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.239.528 I llm_load_print_meta: rope_finetuned   = unknown
0.00.239.529 I llm_load_print_meta: ssm_d_conv       = 0
0.00.239.529 I llm_load_print_meta: ssm_d_inner      = 0
0.00.239.529 I llm_load_print_meta: ssm_d_state      = 0
0.00.239.530 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.239.530 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.239.530 I llm_load_print_meta: model type       = 2B
0.00.239.531 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.239.532 I llm_load_print_meta: model params     = 2.51 B
0.00.239.533 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.239.533 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.239.533 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.239.534 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.239.534 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.239.534 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.239.535 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.239.535 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.239.535 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.239.536 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.239.536 I llm_load_print_meta: max token length = 93
0.00.239.559 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.296.088 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.301.166 I llama_new_context_with_model: n_ctx      = 8192
0.00.301.173 I llama_new_context_with_model: n_batch    = 2048
0.00.301.173 I llama_new_context_with_model: n_ubatch   = 512
0.00.301.174 I llama_new_context_with_model: flash_attn = 0
0.00.301.177 I llama_new_context_with_model: freq_base  = 10000.0
0.00.301.178 I llama_new_context_with_model: freq_scale = 1
0.00.331.199 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.331.215 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.331.310 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.332.184 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.332.192 I llama_new_context_with_model: graph nodes  = 601
0.00.332.192 I llama_new_context_with_model: graph splits = 1
0.00.332.194 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.415.011 I main: llama threadpool init, n_threads = 4
0.00.415.025 I 
0.00.415.109 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.415.112 I 
0.00.415.149 I sampler seed: 2624703668
0.00.415.159 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.415.163 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.415.163 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.415.164 I 
 seconded, and incomplete sentences. Write a complete and coherent sentence.

The bustling city streets were a canvas of vibrant hues, an enchanting symphony of life and

0.02.125.250 I llama_perf_sampler_print:    sampling time =       5.93 ms /    33 runs   (    0.18 ms per token,  5563.99 tokens per second)
0.02.125.253 I llama_perf_context_print:        load time =     413.03 ms
0.02.125.254 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.125.255 I llama_perf_context_print:        eval time =    1690.48 ms /    32 runs   (   52.83 ms per token,    18.93 tokens per second)
0.02.125.256 I llama_perf_context_print:       total time =    1710.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.083s
user	8m15.131s
sys	0m7.160s
