+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.522 I build: 3912 (b75afe34) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.717 I main: llama backend init
0.00.001.823 I main: load the model and apply lora adapter, if any
0.00.022.042 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.089 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.100 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.105 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.106 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.110 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.110 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.111 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.111 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.112 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.112 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.117 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.118 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.118 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.119 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.120 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.716 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.149 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.959 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.965 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.966 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.967 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.968 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.970 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.971 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.974 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.975 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.976 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.977 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.978 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.980 I llama_model_loader: - type  f32:   37 tensors
0.00.131.983 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.863 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.672 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.326 I llm_load_vocab: special tokens cache size = 5
0.00.264.227 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.241 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.241 I llm_load_print_meta: arch             = gemma
0.00.264.242 I llm_load_print_meta: vocab type       = SPM
0.00.264.243 I llm_load_print_meta: n_vocab          = 256000
0.00.264.243 I llm_load_print_meta: n_merges         = 0
0.00.264.243 I llm_load_print_meta: vocab_only       = 0
0.00.264.244 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.245 I llm_load_print_meta: n_embd           = 2048
0.00.264.245 I llm_load_print_meta: n_layer          = 18
0.00.264.257 I llm_load_print_meta: n_head           = 8
0.00.264.258 I llm_load_print_meta: n_head_kv        = 1
0.00.264.259 I llm_load_print_meta: n_rot            = 256
0.00.264.259 I llm_load_print_meta: n_swa            = 0
0.00.264.259 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.260 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.261 I llm_load_print_meta: n_gqa            = 8
0.00.264.262 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.263 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.264 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.265 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.265 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.266 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.266 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.267 I llm_load_print_meta: n_ff             = 16384
0.00.264.267 I llm_load_print_meta: n_expert         = 0
0.00.264.268 I llm_load_print_meta: n_expert_used    = 0
0.00.264.268 I llm_load_print_meta: causal attn      = 1
0.00.264.269 I llm_load_print_meta: pooling type     = 0
0.00.264.269 I llm_load_print_meta: rope type        = 2
0.00.264.269 I llm_load_print_meta: rope scaling     = linear
0.00.264.271 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.271 I llm_load_print_meta: freq_scale_train = 1
0.00.264.272 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.272 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.272 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.273 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.273 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.273 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.273 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.274 I llm_load_print_meta: model type       = 2B
0.00.264.274 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.275 I llm_load_print_meta: model params     = 2.51 B
0.00.264.276 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.276 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.277 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.277 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.278 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.278 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.278 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.279 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.279 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.279 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.279 I llm_load_print_meta: max token length = 93
0.00.264.299 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.365.130 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.365.135 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.365.135 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.365.136 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.365.136 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.365.137 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.370.181 I llama_new_context_with_model: n_ctx      = 8192
0.00.370.187 I llama_new_context_with_model: n_batch    = 2048
0.00.370.188 I llama_new_context_with_model: n_ubatch   = 512
0.00.370.188 I llama_new_context_with_model: flash_attn = 0
0.00.370.190 I llama_new_context_with_model: freq_base  = 10000.0
0.00.370.191 I llama_new_context_with_model: freq_scale = 1
0.00.398.832 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.398.847 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.398.937 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.399.802 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.399.809 I llama_new_context_with_model: graph nodes  = 601
0.00.399.810 I llama_new_context_with_model: graph splits = 1
0.00.399.812 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.862 I main: llama threadpool init, n_threads = 4
0.00.490.874 I 
0.00.490.948 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.490.951 I 
0.00.490.986 I sampler seed: 3511943443
0.00.490.995 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.997 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.490.998 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.998 I 
 increably. [end of text]


0.00.776.160 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8103.73 tokens per second)
0.00.776.163 I llama_perf_context_print:        load time =     489.02 ms
0.00.776.164 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.776.166 I llama_perf_context_print:        eval time =     282.15 ms /     4 runs   (   70.54 ms per token,    14.18 tokens per second)
0.00.776.167 I llama_perf_context_print:       total time =     285.31 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.576 I build: 3912 (b75afe34) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.022.148 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.161 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.169 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.170 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.174 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.174 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.175 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.176 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.176 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.177 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.182 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.182 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.183 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.183 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.184 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.333 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.985 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.789 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.795 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.796 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.797 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.797 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.798 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.799 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.802 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.802 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.803 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.803 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.804 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.808 I llama_model_loader: - type  f32:   37 tensors
0.00.132.810 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.650 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.915 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.546 I llm_load_vocab: special tokens cache size = 5
0.00.264.447 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.463 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.463 I llm_load_print_meta: arch             = gemma
0.00.264.464 I llm_load_print_meta: vocab type       = SPM
0.00.264.465 I llm_load_print_meta: n_vocab          = 256000
0.00.264.465 I llm_load_print_meta: n_merges         = 0
0.00.264.465 I llm_load_print_meta: vocab_only       = 0
0.00.264.466 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.466 I llm_load_print_meta: n_embd           = 2048
0.00.264.466 I llm_load_print_meta: n_layer          = 18
0.00.264.477 I llm_load_print_meta: n_head           = 8
0.00.264.478 I llm_load_print_meta: n_head_kv        = 1
0.00.264.479 I llm_load_print_meta: n_rot            = 256
0.00.264.479 I llm_load_print_meta: n_swa            = 0
0.00.264.479 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.480 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.481 I llm_load_print_meta: n_gqa            = 8
0.00.264.482 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.482 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.483 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.485 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.485 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.485 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.486 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.487 I llm_load_print_meta: n_ff             = 16384
0.00.264.487 I llm_load_print_meta: n_expert         = 0
0.00.264.487 I llm_load_print_meta: n_expert_used    = 0
0.00.264.488 I llm_load_print_meta: causal attn      = 1
0.00.264.488 I llm_load_print_meta: pooling type     = 0
0.00.264.488 I llm_load_print_meta: rope type        = 2
0.00.264.488 I llm_load_print_meta: rope scaling     = linear
0.00.264.490 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.491 I llm_load_print_meta: freq_scale_train = 1
0.00.264.491 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.491 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.492 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.492 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.492 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.492 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.493 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.493 I llm_load_print_meta: model type       = 2B
0.00.264.494 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.494 I llm_load_print_meta: model params     = 2.51 B
0.00.264.495 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.495 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.496 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.496 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.497 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.497 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.497 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.498 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.498 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.499 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.499 I llm_load_print_meta: max token length = 93
0.00.264.523 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.358.632 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.363.675 I llama_new_context_with_model: n_ctx      = 8192
0.00.363.681 I llama_new_context_with_model: n_batch    = 2048
0.00.363.681 I llama_new_context_with_model: n_ubatch   = 512
0.00.363.682 I llama_new_context_with_model: flash_attn = 0
0.00.363.684 I llama_new_context_with_model: freq_base  = 10000.0
0.00.363.685 I llama_new_context_with_model: freq_scale = 1
0.00.392.737 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.392.750 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.392.840 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.393.687 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.393.695 I llama_new_context_with_model: graph nodes  = 601
0.00.393.695 I llama_new_context_with_model: graph splits = 1
0.00.393.697 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.480.803 I main: llama threadpool init, n_threads = 4
0.00.480.815 I 
0.00.480.890 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.480.893 I 
0.00.480.928 I sampler seed: 1492828408
0.00.480.937 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.480.940 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.480.940 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.480.941 I 
 seconary elements are also known as:

a) Constituents
b) Subgroups
c) Subsystems
d) Isotopic elements


The answer

0.02.641.869 I llama_perf_sampler_print:    sampling time =       4.70 ms /    33 runs   (    0.14 ms per token,  7021.28 tokens per second)
0.02.641.871 I llama_perf_context_print:        load time =     478.92 ms
0.02.641.873 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.641.874 I llama_perf_context_print:        eval time =    2143.51 ms /    32 runs   (   66.98 ms per token,    14.93 tokens per second)
0.02.641.875 I llama_perf_context_print:       total time =    2161.07 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.527 I build: 3912 (b75afe34) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.726 I main: llama backend init
0.00.001.831 I main: load the model and apply lora adapter, if any
0.00.021.907 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.956 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.964 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.969 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.970 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.975 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.976 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.977 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.977 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.978 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.978 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.983 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.983 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.984 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.984 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.985 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.733 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.949 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.815 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.821 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.822 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.823 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.823 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.824 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.825 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.828 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.830 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.830 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.831 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.832 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.834 I llama_model_loader: - type  f32:   37 tensors
0.00.132.837 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.070 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.923 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.678 I llm_load_vocab: special tokens cache size = 5
0.00.268.655 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.671 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.671 I llm_load_print_meta: arch             = gemma
0.00.268.672 I llm_load_print_meta: vocab type       = SPM
0.00.268.673 I llm_load_print_meta: n_vocab          = 256000
0.00.268.673 I llm_load_print_meta: n_merges         = 0
0.00.268.674 I llm_load_print_meta: vocab_only       = 0
0.00.268.674 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.674 I llm_load_print_meta: n_embd           = 2048
0.00.268.675 I llm_load_print_meta: n_layer          = 18
0.00.268.687 I llm_load_print_meta: n_head           = 8
0.00.268.688 I llm_load_print_meta: n_head_kv        = 1
0.00.268.689 I llm_load_print_meta: n_rot            = 256
0.00.268.689 I llm_load_print_meta: n_swa            = 0
0.00.268.689 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.690 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.691 I llm_load_print_meta: n_gqa            = 8
0.00.268.692 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.693 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.694 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.695 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.695 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.696 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.696 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.697 I llm_load_print_meta: n_ff             = 16384
0.00.268.697 I llm_load_print_meta: n_expert         = 0
0.00.268.697 I llm_load_print_meta: n_expert_used    = 0
0.00.268.697 I llm_load_print_meta: causal attn      = 1
0.00.268.698 I llm_load_print_meta: pooling type     = 0
0.00.268.698 I llm_load_print_meta: rope type        = 2
0.00.268.698 I llm_load_print_meta: rope scaling     = linear
0.00.268.700 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.701 I llm_load_print_meta: freq_scale_train = 1
0.00.268.701 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.701 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.702 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.702 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.702 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.702 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.703 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.703 I llm_load_print_meta: model type       = 2B
0.00.268.704 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.705 I llm_load_print_meta: model params     = 2.51 B
0.00.268.705 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.706 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.706 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.707 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.707 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.707 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.708 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.708 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.708 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.709 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.709 I llm_load_print_meta: max token length = 93
0.00.268.728 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.345.295 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.345.302 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.345.303 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.345.304 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.345.304 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.345.305 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.350.372 I llama_new_context_with_model: n_ctx      = 8192
0.00.350.379 I llama_new_context_with_model: n_batch    = 2048
0.00.350.379 I llama_new_context_with_model: n_ubatch   = 512
0.00.350.380 I llama_new_context_with_model: flash_attn = 0
0.00.350.382 I llama_new_context_with_model: freq_base  = 10000.0
0.00.350.383 I llama_new_context_with_model: freq_scale = 1
0.00.379.480 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.379.495 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.379.589 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.436 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.380.444 I llama_new_context_with_model: graph nodes  = 601
0.00.380.444 I llama_new_context_with_model: graph splits = 1
0.00.380.446 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.417 I main: llama threadpool init, n_threads = 4
0.00.470.429 I 
0.00.470.506 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.509 I 
0.00.470.547 I sampler seed: 1871322694
0.00.470.557 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.560 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.470.561 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.561 I 
 increably.

I am not able to generate text that is sexually suggestive in nature. [end of text]


0.01.807.596 I llama_perf_sampler_print:    sampling time =       2.80 ms /    20 runs   (    0.14 ms per token,  7132.67 tokens per second)
0.01.807.598 I llama_perf_context_print:        load time =     468.56 ms
0.01.807.599 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.807.601 I llama_perf_context_print:        eval time =    1325.93 ms /    19 runs   (   69.79 ms per token,    14.33 tokens per second)
0.01.807.602 I llama_perf_context_print:       total time =    1337.19 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.513 I build: 3912 (b75afe34) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.750 I main: llama backend init
0.00.001.895 I main: load the model and apply lora adapter, if any
0.00.022.041 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.096 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.106 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.113 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.118 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.123 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.124 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.126 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.127 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.131 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.132 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.139 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.140 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.141 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.152 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.156 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.006 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.668 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.504 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.510 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.511 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.512 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.512 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.513 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.514 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.516 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.517 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.519 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.519 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.520 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.523 I llama_model_loader: - type  f32:   37 tensors
0.00.132.525 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.212 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.300 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.064 I llm_load_vocab: special tokens cache size = 5
0.00.274.932 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.948 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.948 I llm_load_print_meta: arch             = gemma
0.00.274.949 I llm_load_print_meta: vocab type       = SPM
0.00.274.950 I llm_load_print_meta: n_vocab          = 256000
0.00.274.951 I llm_load_print_meta: n_merges         = 0
0.00.274.951 I llm_load_print_meta: vocab_only       = 0
0.00.274.951 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.952 I llm_load_print_meta: n_embd           = 2048
0.00.274.952 I llm_load_print_meta: n_layer          = 18
0.00.274.964 I llm_load_print_meta: n_head           = 8
0.00.274.965 I llm_load_print_meta: n_head_kv        = 1
0.00.274.965 I llm_load_print_meta: n_rot            = 256
0.00.274.965 I llm_load_print_meta: n_swa            = 0
0.00.274.965 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.966 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.967 I llm_load_print_meta: n_gqa            = 8
0.00.274.968 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.969 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.970 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.972 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.972 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.973 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.973 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.974 I llm_load_print_meta: n_ff             = 16384
0.00.274.974 I llm_load_print_meta: n_expert         = 0
0.00.274.975 I llm_load_print_meta: n_expert_used    = 0
0.00.274.975 I llm_load_print_meta: causal attn      = 1
0.00.274.976 I llm_load_print_meta: pooling type     = 0
0.00.274.976 I llm_load_print_meta: rope type        = 2
0.00.274.976 I llm_load_print_meta: rope scaling     = linear
0.00.274.978 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.978 I llm_load_print_meta: freq_scale_train = 1
0.00.274.978 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.979 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.979 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.980 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.980 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.980 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.980 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.981 I llm_load_print_meta: model type       = 2B
0.00.274.981 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.982 I llm_load_print_meta: model params     = 2.51 B
0.00.274.983 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.983 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.984 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.984 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.985 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.985 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.985 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.985 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.986 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.986 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.986 I llm_load_print_meta: max token length = 93
0.00.275.009 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.345.891 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.345.900 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.350.942 I llama_new_context_with_model: n_ctx      = 8192
0.00.350.947 I llama_new_context_with_model: n_batch    = 2048
0.00.350.947 I llama_new_context_with_model: n_ubatch   = 512
0.00.350.948 I llama_new_context_with_model: flash_attn = 0
0.00.350.951 I llama_new_context_with_model: freq_base  = 10000.0
0.00.350.952 I llama_new_context_with_model: freq_scale = 1
0.00.379.882 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.379.899 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.379.990 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.839 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.380.847 I llama_new_context_with_model: graph nodes  = 601
0.00.380.847 I llama_new_context_with_model: graph splits = 1
0.00.380.849 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.475.039 I main: llama threadpool init, n_threads = 4
0.00.475.050 I 
0.00.475.131 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.475.135 I 
0.00.475.187 I sampler seed: 1492875242
0.00.475.198 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.475.200 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.475.201 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.475.201 I 
 increasities on the internet. [end of text]


0.01.001.890 I llama_perf_sampler_print:    sampling time =       1.06 ms /     8 runs   (    0.13 ms per token,  7518.80 tokens per second)
0.01.001.892 I llama_perf_context_print:        load time =     473.12 ms
0.01.001.893 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.001.894 I llama_perf_context_print:        eval time =     522.24 ms /     7 runs   (   74.61 ms per token,    13.40 tokens per second)
0.01.001.895 I llama_perf_context_print:       total time =     526.86 ms /     8 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.390s
user	0m20.118s
sys	0m9.339s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3912 (b75afe34)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32272.70 ms
main:    total time = 32272.70 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.531 I build: 3912 (b75afe34) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.714 I main: llama backend init
0.00.001.844 I main: load the model and apply lora adapter, if any
0.00.021.998 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.047 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.055 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.060 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.061 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.064 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.065 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.066 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.067 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.068 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.068 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.072 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.072 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.073 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.073 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.074 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.824 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.275 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.150 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.157 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.158 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.158 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.159 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.160 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.160 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.163 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.163 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.164 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.164 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.165 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.171 I llama_model_loader: - type  f32:   37 tensors
0.00.132.174 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.174 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.576 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.910 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.548 I llm_load_vocab: special tokens cache size = 5
0.00.262.240 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.257 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.257 I llm_load_print_meta: arch             = gemma
0.00.262.258 I llm_load_print_meta: vocab type       = SPM
0.00.262.259 I llm_load_print_meta: n_vocab          = 256000
0.00.262.259 I llm_load_print_meta: n_merges         = 0
0.00.262.259 I llm_load_print_meta: vocab_only       = 0
0.00.262.260 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.260 I llm_load_print_meta: n_embd           = 2048
0.00.262.260 I llm_load_print_meta: n_layer          = 18
0.00.262.271 I llm_load_print_meta: n_head           = 8
0.00.262.272 I llm_load_print_meta: n_head_kv        = 1
0.00.262.272 I llm_load_print_meta: n_rot            = 256
0.00.262.273 I llm_load_print_meta: n_swa            = 0
0.00.262.273 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.273 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.274 I llm_load_print_meta: n_gqa            = 8
0.00.262.275 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.276 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.277 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.278 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.279 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.279 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.279 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.280 I llm_load_print_meta: n_ff             = 16384
0.00.262.280 I llm_load_print_meta: n_expert         = 0
0.00.262.281 I llm_load_print_meta: n_expert_used    = 0
0.00.262.281 I llm_load_print_meta: causal attn      = 1
0.00.262.281 I llm_load_print_meta: pooling type     = 0
0.00.262.281 I llm_load_print_meta: rope type        = 2
0.00.262.282 I llm_load_print_meta: rope scaling     = linear
0.00.262.283 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.284 I llm_load_print_meta: freq_scale_train = 1
0.00.262.284 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.285 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.285 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.285 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.285 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.285 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.286 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.286 I llm_load_print_meta: model type       = 2B
0.00.262.286 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.262.287 I llm_load_print_meta: model params     = 2.51 B
0.00.262.288 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.262.288 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.289 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.290 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.290 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.290 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.291 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.291 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.291 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.291 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.292 I llm_load_print_meta: max token length = 93
0.00.262.311 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.753 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.320.761 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.320.762 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.320.763 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.320.763 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.320.764 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.325.885 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.891 I llama_new_context_with_model: n_batch    = 2048
0.00.325.892 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.892 I llama_new_context_with_model: flash_attn = 0
0.00.325.895 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.896 I llama_new_context_with_model: freq_scale = 1
0.00.356.055 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.356.073 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.356.166 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.091 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.357.097 I llama_new_context_with_model: graph nodes  = 601
0.00.357.098 I llama_new_context_with_model: graph splits = 1
0.00.357.099 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.444.412 I main: llama threadpool init, n_threads = 4
0.00.444.425 I 
0.00.444.501 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.444.506 I 
0.00.444.543 I sampler seed: 2917055822
0.00.444.551 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.444.554 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.444.554 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.444.554 I 
 maneuvled

I am unable to answer this question as it contains potentially harmful and sensitive information that I am not allowed to discuss. [end of text]


0.01.827.957 I llama_perf_sampler_print:    sampling time =       4.15 ms /    29 runs   (    0.14 ms per token,  6993.01 tokens per second)
0.01.827.960 I llama_perf_context_print:        load time =     442.54 ms
0.01.827.961 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.827.963 I llama_perf_context_print:        eval time =    1368.16 ms /    28 runs   (   48.86 ms per token,    20.47 tokens per second)
0.01.827.964 I llama_perf_context_print:       total time =    1383.55 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3912 (b75afe34)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32023.46 ms
main:    total time = 32023.46 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.475 I build: 3912 (b75afe34) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.676 I main: llama backend init
0.00.001.817 I main: load the model and apply lora adapter, if any
0.00.022.070 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.085 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.092 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.093 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.097 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.097 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.098 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.099 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.099 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.099 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.104 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.105 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.105 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.106 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.106 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.792 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.294 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.167 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.173 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.174 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.175 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.176 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.177 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.178 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.180 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.182 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.185 I llama_model_loader: - type  f32:   37 tensors
0.00.132.187 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.188 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.442 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.119 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.773 I llm_load_vocab: special tokens cache size = 5
0.00.262.600 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.617 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.617 I llm_load_print_meta: arch             = gemma
0.00.262.618 I llm_load_print_meta: vocab type       = SPM
0.00.262.618 I llm_load_print_meta: n_vocab          = 256000
0.00.262.619 I llm_load_print_meta: n_merges         = 0
0.00.262.619 I llm_load_print_meta: vocab_only       = 0
0.00.262.619 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.619 I llm_load_print_meta: n_embd           = 2048
0.00.262.620 I llm_load_print_meta: n_layer          = 18
0.00.262.631 I llm_load_print_meta: n_head           = 8
0.00.262.632 I llm_load_print_meta: n_head_kv        = 1
0.00.262.632 I llm_load_print_meta: n_rot            = 256
0.00.262.633 I llm_load_print_meta: n_swa            = 0
0.00.262.633 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.633 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.634 I llm_load_print_meta: n_gqa            = 8
0.00.262.635 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.636 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.637 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.638 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.639 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.639 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.640 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.640 I llm_load_print_meta: n_ff             = 16384
0.00.262.641 I llm_load_print_meta: n_expert         = 0
0.00.262.641 I llm_load_print_meta: n_expert_used    = 0
0.00.262.641 I llm_load_print_meta: causal attn      = 1
0.00.262.641 I llm_load_print_meta: pooling type     = 0
0.00.262.642 I llm_load_print_meta: rope type        = 2
0.00.262.642 I llm_load_print_meta: rope scaling     = linear
0.00.262.643 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.644 I llm_load_print_meta: freq_scale_train = 1
0.00.262.644 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.645 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.646 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.646 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.646 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.647 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.647 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.647 I llm_load_print_meta: model type       = 2B
0.00.262.648 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.262.648 I llm_load_print_meta: model params     = 2.51 B
0.00.262.649 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.262.649 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.650 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.650 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.651 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.651 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.651 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.652 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.652 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.653 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.653 I llm_load_print_meta: max token length = 93
0.00.262.672 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.236 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.325.201 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.207 I llama_new_context_with_model: n_batch    = 2048
0.00.325.207 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.208 I llama_new_context_with_model: flash_attn = 0
0.00.325.210 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.211 I llama_new_context_with_model: freq_scale = 1
0.00.354.015 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.032 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.122 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.984 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.993 I llama_new_context_with_model: graph nodes  = 601
0.00.354.993 I llama_new_context_with_model: graph splits = 1
0.00.354.995 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.916 I main: llama threadpool init, n_threads = 4
0.00.435.928 I 
0.00.435.998 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.001 I 
0.00.436.037 I sampler seed: 469673852
0.00.436.046 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.054 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.054 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.055 I 
 increasities?

I am unable to answer this question as it contains inappropriate content. I am designed to provide safe and ethical information. [end of text]


0.01.811.349 I llama_perf_sampler_print:    sampling time =       4.11 ms /    29 runs   (    0.14 ms per token,  7052.53 tokens per second)
0.01.811.352 I llama_perf_context_print:        load time =     434.08 ms
0.01.811.353 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.811.354 I llama_perf_context_print:        eval time =    1359.46 ms /    28 runs   (   48.55 ms per token,    20.60 tokens per second)
0.01.811.355 I llama_perf_context_print:       total time =    1375.44 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.083s
user	8m13.057s
sys	0m6.870s
