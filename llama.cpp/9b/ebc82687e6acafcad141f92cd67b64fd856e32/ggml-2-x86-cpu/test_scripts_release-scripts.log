+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.532 I build: 4108 (9bebc826) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.722 I main: llama backend init
0.00.000.729 I main: load the model and apply lora adapter, if any
0.00.021.537 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.547 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.554 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.564 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.568 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.572 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.572 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.574 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.574 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.575 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.575 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.579 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.579 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.580 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.580 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.580 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.375 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.795 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.772 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.779 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.780 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.781 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.781 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.783 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.783 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.787 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.788 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.789 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.789 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.790 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.794 I llama_model_loader: - type  f32:   37 tensors
0.00.131.795 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.156 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.379 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.025 I llm_load_vocab: special tokens cache size = 5
0.00.269.831 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.849 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.849 I llm_load_print_meta: arch             = gemma
0.00.269.850 I llm_load_print_meta: vocab type       = SPM
0.00.269.850 I llm_load_print_meta: n_vocab          = 256000
0.00.269.851 I llm_load_print_meta: n_merges         = 0
0.00.269.851 I llm_load_print_meta: vocab_only       = 0
0.00.269.852 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.852 I llm_load_print_meta: n_embd           = 2048
0.00.269.852 I llm_load_print_meta: n_layer          = 18
0.00.269.863 I llm_load_print_meta: n_head           = 8
0.00.269.864 I llm_load_print_meta: n_head_kv        = 1
0.00.269.864 I llm_load_print_meta: n_rot            = 256
0.00.269.864 I llm_load_print_meta: n_swa            = 0
0.00.269.865 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.865 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.866 I llm_load_print_meta: n_gqa            = 8
0.00.269.867 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.868 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.868 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.870 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.870 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.870 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.871 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.872 I llm_load_print_meta: n_ff             = 16384
0.00.269.872 I llm_load_print_meta: n_expert         = 0
0.00.269.872 I llm_load_print_meta: n_expert_used    = 0
0.00.269.873 I llm_load_print_meta: causal attn      = 1
0.00.269.873 I llm_load_print_meta: pooling type     = 0
0.00.269.873 I llm_load_print_meta: rope type        = 2
0.00.269.874 I llm_load_print_meta: rope scaling     = linear
0.00.269.875 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.876 I llm_load_print_meta: freq_scale_train = 1
0.00.269.876 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.876 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.876 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.877 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.877 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.877 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.877 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.878 I llm_load_print_meta: model type       = 2B
0.00.269.879 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.880 I llm_load_print_meta: model params     = 2.51 B
0.00.269.880 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.881 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.881 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.882 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.882 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.882 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.883 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.883 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.883 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.883 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.884 I llm_load_print_meta: max token length = 93
0.00.368.900 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.368.909 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.368.910 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.368.910 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.368.911 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.368.912 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.374.193 I llama_new_context_with_model: n_seq_max     = 1
0.00.374.199 I llama_new_context_with_model: n_ctx         = 4096
0.00.374.200 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.374.200 I llama_new_context_with_model: n_batch       = 2048
0.00.374.201 I llama_new_context_with_model: n_ubatch      = 512
0.00.374.201 I llama_new_context_with_model: flash_attn    = 0
0.00.374.204 I llama_new_context_with_model: freq_base     = 10000.0
0.00.374.204 I llama_new_context_with_model: freq_scale    = 1
0.00.374.205 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.388.660 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.388.675 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.388.771 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.138 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.146 I llama_new_context_with_model: graph nodes  = 601
0.00.390.146 I llama_new_context_with_model: graph splits = 1
0.00.390.148 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.040 I main: llama threadpool init, n_threads = 4
0.00.478.057 I 
0.00.478.134 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.478.137 I 
0.00.478.177 I sampler seed: 3619484425
0.00.478.189 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.196 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.478.199 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.200 I 
 increasements in the paragraph.

The rise of social media has brought about a revolution in the way we communicate, connect, and consume information. Social media platforms

0.02.713.940 I llama_perf_sampler_print:    sampling time =       4.67 ms /    33 runs   (    0.14 ms per token,  7061.84 tokens per second)
0.02.713.942 I llama_perf_context_print:        load time =     477.29 ms
0.02.713.943 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.713.945 I llama_perf_context_print:        eval time =    2217.93 ms /    32 runs   (   69.31 ms per token,    14.43 tokens per second)
0.02.713.946 I llama_perf_context_print:       total time =    2235.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.619 I build: 4108 (9bebc826) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.816 I main: llama backend init
0.00.000.824 I main: load the model and apply lora adapter, if any
0.00.021.394 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.409 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.417 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.418 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.423 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.424 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.424 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.425 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.425 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.426 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.431 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.432 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.433 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.433 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.434 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.986 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.398 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.221 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.228 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.228 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.229 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.230 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.230 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.231 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.233 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.234 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.235 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.236 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.237 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.240 I llama_model_loader: - type  f32:   37 tensors
0.00.131.242 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.409 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.089 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.693 I llm_load_vocab: special tokens cache size = 5
0.00.264.832 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.848 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.848 I llm_load_print_meta: arch             = gemma
0.00.264.849 I llm_load_print_meta: vocab type       = SPM
0.00.264.850 I llm_load_print_meta: n_vocab          = 256000
0.00.264.850 I llm_load_print_meta: n_merges         = 0
0.00.264.850 I llm_load_print_meta: vocab_only       = 0
0.00.264.851 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.851 I llm_load_print_meta: n_embd           = 2048
0.00.264.851 I llm_load_print_meta: n_layer          = 18
0.00.264.863 I llm_load_print_meta: n_head           = 8
0.00.264.864 I llm_load_print_meta: n_head_kv        = 1
0.00.264.864 I llm_load_print_meta: n_rot            = 256
0.00.264.865 I llm_load_print_meta: n_swa            = 0
0.00.264.865 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.865 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.866 I llm_load_print_meta: n_gqa            = 8
0.00.264.867 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.868 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.869 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.871 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.871 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.871 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.871 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.872 I llm_load_print_meta: n_ff             = 16384
0.00.264.873 I llm_load_print_meta: n_expert         = 0
0.00.264.873 I llm_load_print_meta: n_expert_used    = 0
0.00.264.873 I llm_load_print_meta: causal attn      = 1
0.00.264.873 I llm_load_print_meta: pooling type     = 0
0.00.264.874 I llm_load_print_meta: rope type        = 2
0.00.264.874 I llm_load_print_meta: rope scaling     = linear
0.00.264.875 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.876 I llm_load_print_meta: freq_scale_train = 1
0.00.264.876 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.876 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.877 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.877 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.877 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.877 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.878 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.878 I llm_load_print_meta: model type       = 2B
0.00.264.879 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.880 I llm_load_print_meta: model params     = 2.51 B
0.00.264.880 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.881 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.881 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.881 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.882 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.882 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.882 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.883 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.883 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.884 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.884 I llm_load_print_meta: max token length = 93
0.00.359.989 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.365.351 I llama_new_context_with_model: n_seq_max     = 1
0.00.365.357 I llama_new_context_with_model: n_ctx         = 4096
0.00.365.357 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.365.358 I llama_new_context_with_model: n_batch       = 2048
0.00.365.358 I llama_new_context_with_model: n_ubatch      = 512
0.00.365.359 I llama_new_context_with_model: flash_attn    = 0
0.00.365.361 I llama_new_context_with_model: freq_base     = 10000.0
0.00.365.362 I llama_new_context_with_model: freq_scale    = 1
0.00.365.363 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.379.891 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.379.907 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.380.006 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.381.324 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.381.330 I llama_new_context_with_model: graph nodes  = 601
0.00.381.330 I llama_new_context_with_model: graph splits = 1
0.00.381.332 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.635 I main: llama threadpool init, n_threads = 4
0.00.461.648 I 
0.00.461.722 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.725 I 
0.00.461.767 I sampler seed: 3836227058
0.00.461.779 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.781 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.461.782 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.782 I 
 increasities. [end of text]


0.00.733.016 I llama_perf_sampler_print:    sampling time =       0.64 ms /     5 runs   (    0.13 ms per token,  7800.31 tokens per second)
0.00.733.018 I llama_perf_context_print:        load time =     460.79 ms
0.00.733.019 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.733.021 I llama_perf_context_print:        eval time =     267.89 ms /     4 runs   (   66.97 ms per token,    14.93 tokens per second)
0.00.733.021 I llama_perf_context_print:       total time =     271.39 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.544 I build: 4108 (9bebc826) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.000.751 I main: load the model and apply lora adapter, if any
0.00.021.420 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.427 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.435 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.440 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.441 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.444 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.445 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.446 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.446 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.447 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.447 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.451 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.452 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.452 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.453 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.453 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.651 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.461 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.326 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.333 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.333 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.334 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.334 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.335 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.336 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.339 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.339 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.340 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.340 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.341 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.345 I llama_model_loader: - type  f32:   37 tensors
0.00.131.346 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.854 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.707 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.513 I llm_load_vocab: special tokens cache size = 5
0.00.282.510 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.529 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.529 I llm_load_print_meta: arch             = gemma
0.00.282.530 I llm_load_print_meta: vocab type       = SPM
0.00.282.531 I llm_load_print_meta: n_vocab          = 256000
0.00.282.531 I llm_load_print_meta: n_merges         = 0
0.00.282.531 I llm_load_print_meta: vocab_only       = 0
0.00.282.532 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.532 I llm_load_print_meta: n_embd           = 2048
0.00.282.533 I llm_load_print_meta: n_layer          = 18
0.00.282.544 I llm_load_print_meta: n_head           = 8
0.00.282.545 I llm_load_print_meta: n_head_kv        = 1
0.00.282.546 I llm_load_print_meta: n_rot            = 256
0.00.282.546 I llm_load_print_meta: n_swa            = 0
0.00.282.546 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.547 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.548 I llm_load_print_meta: n_gqa            = 8
0.00.282.549 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.550 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.550 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.552 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.552 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.552 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.553 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.554 I llm_load_print_meta: n_ff             = 16384
0.00.282.554 I llm_load_print_meta: n_expert         = 0
0.00.282.554 I llm_load_print_meta: n_expert_used    = 0
0.00.282.555 I llm_load_print_meta: causal attn      = 1
0.00.282.555 I llm_load_print_meta: pooling type     = 0
0.00.282.556 I llm_load_print_meta: rope type        = 2
0.00.282.556 I llm_load_print_meta: rope scaling     = linear
0.00.282.557 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.558 I llm_load_print_meta: freq_scale_train = 1
0.00.282.558 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.559 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.559 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.559 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.559 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.559 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.560 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.560 I llm_load_print_meta: model type       = 2B
0.00.282.561 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.561 I llm_load_print_meta: model params     = 2.51 B
0.00.282.562 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.563 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.563 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.564 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.564 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.564 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.565 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.565 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.565 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.566 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.566 I llm_load_print_meta: max token length = 93
0.00.359.374 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.359.381 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.359.381 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.359.382 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.359.383 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.359.383 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.364.618 I llama_new_context_with_model: n_seq_max     = 1
0.00.364.624 I llama_new_context_with_model: n_ctx         = 4096
0.00.364.625 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.364.625 I llama_new_context_with_model: n_batch       = 2048
0.00.364.625 I llama_new_context_with_model: n_ubatch      = 512
0.00.364.626 I llama_new_context_with_model: flash_attn    = 0
0.00.364.629 I llama_new_context_with_model: freq_base     = 10000.0
0.00.364.629 I llama_new_context_with_model: freq_scale    = 1
0.00.364.631 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.378.890 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.378.904 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.378.995 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.238 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.380.244 I llama_new_context_with_model: graph nodes  = 601
0.00.380.244 I llama_new_context_with_model: graph splits = 1
0.00.380.246 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.216 I main: llama threadpool init, n_threads = 4
0.00.464.233 I 
0.00.464.328 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.332 I 
0.00.464.414 I sampler seed: 384554659
0.00.464.438 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.441 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.442 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.442 I 
 increasities, and other forms of inappropriate or suggestive behavior. [end of text]


0.01.376.128 I llama_perf_sampler_print:    sampling time =       2.06 ms /    14 runs   (    0.15 ms per token,  6799.42 tokens per second)
0.01.376.130 I llama_perf_context_print:        load time =     463.44 ms
0.01.376.132 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.376.133 I llama_perf_context_print:        eval time =     903.66 ms /    13 runs   (   69.51 ms per token,    14.39 tokens per second)
0.01.376.134 I llama_perf_context_print:       total time =     911.92 ms /    14 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.555 I build: 4108 (9bebc826) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.000.776 I main: load the model and apply lora adapter, if any
0.00.023.085 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.094 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.103 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.109 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.113 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.120 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.123 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.124 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.125 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.126 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.127 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.134 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.135 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.136 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.137 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.138 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.532 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.225 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.221 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.228 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.229 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.229 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.230 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.231 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.232 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.234 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.235 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.236 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.236 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.237 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.252 I llama_model_loader: - type  f32:   37 tensors
0.00.133.253 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.324 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.026 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.613 I llm_load_vocab: special tokens cache size = 5
0.00.271.596 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.614 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.615 I llm_load_print_meta: arch             = gemma
0.00.271.616 I llm_load_print_meta: vocab type       = SPM
0.00.271.616 I llm_load_print_meta: n_vocab          = 256000
0.00.271.617 I llm_load_print_meta: n_merges         = 0
0.00.271.617 I llm_load_print_meta: vocab_only       = 0
0.00.271.618 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.618 I llm_load_print_meta: n_embd           = 2048
0.00.271.618 I llm_load_print_meta: n_layer          = 18
0.00.271.630 I llm_load_print_meta: n_head           = 8
0.00.271.631 I llm_load_print_meta: n_head_kv        = 1
0.00.271.632 I llm_load_print_meta: n_rot            = 256
0.00.271.632 I llm_load_print_meta: n_swa            = 0
0.00.271.632 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.633 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.634 I llm_load_print_meta: n_gqa            = 8
0.00.271.635 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.636 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.637 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.638 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.638 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.639 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.639 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.640 I llm_load_print_meta: n_ff             = 16384
0.00.271.640 I llm_load_print_meta: n_expert         = 0
0.00.271.640 I llm_load_print_meta: n_expert_used    = 0
0.00.271.641 I llm_load_print_meta: causal attn      = 1
0.00.271.641 I llm_load_print_meta: pooling type     = 0
0.00.271.641 I llm_load_print_meta: rope type        = 2
0.00.271.642 I llm_load_print_meta: rope scaling     = linear
0.00.271.643 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.644 I llm_load_print_meta: freq_scale_train = 1
0.00.271.644 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.644 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.644 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.645 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.645 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.645 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.645 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.646 I llm_load_print_meta: model type       = 2B
0.00.271.646 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.647 I llm_load_print_meta: model params     = 2.51 B
0.00.271.648 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.648 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.649 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.649 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.650 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.650 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.650 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.651 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.651 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.652 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.652 I llm_load_print_meta: max token length = 93
0.00.343.640 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.343.648 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.348.961 I llama_new_context_with_model: n_seq_max     = 1
0.00.348.968 I llama_new_context_with_model: n_ctx         = 4096
0.00.348.968 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.348.969 I llama_new_context_with_model: n_batch       = 2048
0.00.348.969 I llama_new_context_with_model: n_ubatch      = 512
0.00.348.969 I llama_new_context_with_model: flash_attn    = 0
0.00.348.972 I llama_new_context_with_model: freq_base     = 10000.0
0.00.348.973 I llama_new_context_with_model: freq_scale    = 1
0.00.348.974 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.363.243 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.363.256 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.363.347 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.607 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.364.614 I llama_new_context_with_model: graph nodes  = 601
0.00.364.614 I llama_new_context_with_model: graph splits = 1
0.00.364.616 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.453.000 I main: llama threadpool init, n_threads = 4
0.00.453.015 I 
0.00.453.100 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.453.103 I 
0.00.453.154 I sampler seed: 2021334235
0.00.453.165 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.453.169 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.453.171 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.453.171 I 
 increasities and grievances with the current government. [end of text]


0.01.215.636 I llama_perf_sampler_print:    sampling time =       1.68 ms /    11 runs   (    0.15 ms per token,  6532.07 tokens per second)
0.01.215.639 I llama_perf_context_print:        load time =     452.20 ms
0.01.215.641 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.215.642 I llama_perf_context_print:        eval time =     755.66 ms /    10 runs   (   75.57 ms per token,    13.23 tokens per second)
0.01.215.643 I llama_perf_context_print:       total time =     762.64 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m15.911s
user	0m19.663s
sys	0m9.282s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4108 (9bebc826)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40209.90 ms
main:    total time = 40209.90 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.601 I build: 4108 (9bebc826) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.796 I main: llama backend init
0.00.000.803 I main: load the model and apply lora adapter, if any
0.00.021.078 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.088 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.097 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.102 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.103 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.108 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.110 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.111 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.112 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.112 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.113 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.117 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.118 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.118 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.119 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.119 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.384 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.266 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.088 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.094 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.095 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.095 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.096 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.097 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.098 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.100 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.101 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.101 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.102 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.104 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.109 I llama_model_loader: - type  f32:   37 tensors
0.00.131.110 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.111 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.020 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.006 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.599 I llm_load_vocab: special tokens cache size = 5
0.00.266.756 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.769 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.770 I llm_load_print_meta: arch             = gemma
0.00.266.770 I llm_load_print_meta: vocab type       = SPM
0.00.266.771 I llm_load_print_meta: n_vocab          = 256000
0.00.266.771 I llm_load_print_meta: n_merges         = 0
0.00.266.772 I llm_load_print_meta: vocab_only       = 0
0.00.266.772 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.772 I llm_load_print_meta: n_embd           = 2048
0.00.266.773 I llm_load_print_meta: n_layer          = 18
0.00.266.784 I llm_load_print_meta: n_head           = 8
0.00.266.785 I llm_load_print_meta: n_head_kv        = 1
0.00.266.785 I llm_load_print_meta: n_rot            = 256
0.00.266.786 I llm_load_print_meta: n_swa            = 0
0.00.266.786 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.787 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.788 I llm_load_print_meta: n_gqa            = 8
0.00.266.789 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.790 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.791 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.792 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.793 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.793 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.793 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.794 I llm_load_print_meta: n_ff             = 16384
0.00.266.794 I llm_load_print_meta: n_expert         = 0
0.00.266.795 I llm_load_print_meta: n_expert_used    = 0
0.00.266.795 I llm_load_print_meta: causal attn      = 1
0.00.266.796 I llm_load_print_meta: pooling type     = 0
0.00.266.796 I llm_load_print_meta: rope type        = 2
0.00.266.796 I llm_load_print_meta: rope scaling     = linear
0.00.266.798 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.798 I llm_load_print_meta: freq_scale_train = 1
0.00.266.799 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.799 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.799 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.799 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.800 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.800 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.800 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.801 I llm_load_print_meta: model type       = 2B
0.00.266.802 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.802 I llm_load_print_meta: model params     = 2.51 B
0.00.266.803 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.803 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.804 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.804 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.805 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.805 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.805 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.806 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.806 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.806 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.807 I llm_load_print_meta: max token length = 93
0.00.326.823 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.326.829 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.326.830 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.326.831 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.326.832 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.326.832 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.331.926 I llama_new_context_with_model: n_seq_max     = 1
0.00.331.932 I llama_new_context_with_model: n_ctx         = 4096
0.00.331.932 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.331.933 I llama_new_context_with_model: n_batch       = 2048
0.00.331.933 I llama_new_context_with_model: n_ubatch      = 512
0.00.331.933 I llama_new_context_with_model: flash_attn    = 0
0.00.331.936 I llama_new_context_with_model: freq_base     = 10000.0
0.00.331.937 I llama_new_context_with_model: freq_scale    = 1
0.00.331.938 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.346.801 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.346.813 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.346.907 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.348.248 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.348.255 I llama_new_context_with_model: graph nodes  = 601
0.00.348.255 I llama_new_context_with_model: graph splits = 1
0.00.348.257 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.192 I main: llama threadpool init, n_threads = 4
0.00.423.205 I 
0.00.423.278 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.423.281 I 
0.00.423.327 I sampler seed: 3702418790
0.00.423.339 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.342 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.423.342 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.343 I 
 increasities in the comments section, and downvote content that is inappropriate, harmful, or offensive.

**Guidelines for Using the Platform:**

* Be respectful and

0.01.996.846 I llama_perf_sampler_print:    sampling time =       5.52 ms /    33 runs   (    0.17 ms per token,  5981.51 tokens per second)
0.01.996.849 I llama_perf_context_print:        load time =     422.37 ms
0.01.996.850 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.996.851 I llama_perf_context_print:        eval time =    1554.32 ms /    32 runs   (   48.57 ms per token,    20.59 tokens per second)
0.01.996.852 I llama_perf_context_print:       total time =    1573.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4108 (9bebc826)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40184.79 ms
main:    total time = 40184.79 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.545 I build: 4108 (9bebc826) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.000.752 I main: load the model and apply lora adapter, if any
0.00.021.224 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.242 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.249 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.250 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.254 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.257 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.258 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.258 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.258 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.259 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.262 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.263 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.263 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.264 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.265 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.884 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.505 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.306 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.313 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.313 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.314 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.314 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.315 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.316 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.318 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.319 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.323 I llama_model_loader: - type  f32:   37 tensors
0.00.131.324 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.325 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.019 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.322 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.911 I llm_load_vocab: special tokens cache size = 5
0.00.262.763 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.782 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.782 I llm_load_print_meta: arch             = gemma
0.00.262.783 I llm_load_print_meta: vocab type       = SPM
0.00.262.783 I llm_load_print_meta: n_vocab          = 256000
0.00.262.784 I llm_load_print_meta: n_merges         = 0
0.00.262.784 I llm_load_print_meta: vocab_only       = 0
0.00.262.784 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.785 I llm_load_print_meta: n_embd           = 2048
0.00.262.785 I llm_load_print_meta: n_layer          = 18
0.00.262.795 I llm_load_print_meta: n_head           = 8
0.00.262.796 I llm_load_print_meta: n_head_kv        = 1
0.00.262.797 I llm_load_print_meta: n_rot            = 256
0.00.262.797 I llm_load_print_meta: n_swa            = 0
0.00.262.797 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.798 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.798 I llm_load_print_meta: n_gqa            = 8
0.00.262.800 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.801 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.801 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.805 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.806 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.806 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.806 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.807 I llm_load_print_meta: n_ff             = 16384
0.00.262.808 I llm_load_print_meta: n_expert         = 0
0.00.262.808 I llm_load_print_meta: n_expert_used    = 0
0.00.262.808 I llm_load_print_meta: causal attn      = 1
0.00.262.808 I llm_load_print_meta: pooling type     = 0
0.00.262.809 I llm_load_print_meta: rope type        = 2
0.00.262.809 I llm_load_print_meta: rope scaling     = linear
0.00.262.811 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.812 I llm_load_print_meta: freq_scale_train = 1
0.00.262.812 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.812 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.813 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.813 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.813 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.813 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.814 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.814 I llm_load_print_meta: model type       = 2B
0.00.262.815 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.262.815 I llm_load_print_meta: model params     = 2.51 B
0.00.262.816 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.262.816 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.817 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.817 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.818 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.818 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.818 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.819 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.819 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.820 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.820 I llm_load_print_meta: max token length = 93
0.00.319.041 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.324.238 I llama_new_context_with_model: n_seq_max     = 1
0.00.324.244 I llama_new_context_with_model: n_ctx         = 4096
0.00.324.244 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.324.245 I llama_new_context_with_model: n_batch       = 2048
0.00.324.245 I llama_new_context_with_model: n_ubatch      = 512
0.00.324.246 I llama_new_context_with_model: flash_attn    = 0
0.00.324.248 I llama_new_context_with_model: freq_base     = 10000.0
0.00.324.249 I llama_new_context_with_model: freq_scale    = 1
0.00.324.250 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.338.759 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.338.772 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.338.862 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.340.103 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.340.107 I llama_new_context_with_model: graph nodes  = 601
0.00.340.107 I llama_new_context_with_model: graph splits = 1
0.00.340.109 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.414.575 I main: llama threadpool init, n_threads = 4
0.00.414.589 I 
0.00.414.664 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.414.668 I 
0.00.414.710 I sampler seed: 1490795976
0.00.414.721 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.414.728 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.414.729 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.414.729 I 
 seconded?

I am not sure how to respond to this question. The question seems to be asking for a response that is inappropriate and potentially offensive. I

0.01.975.600 I llama_perf_sampler_print:    sampling time =       5.30 ms /    33 runs   (    0.16 ms per token,  6228.77 tokens per second)
0.01.975.602 I llama_perf_context_print:        load time =     413.81 ms
0.01.975.604 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.975.605 I llama_perf_context_print:        eval time =    1541.48 ms /    32 runs   (   48.17 ms per token,    20.76 tokens per second)
0.01.975.606 I llama_perf_context_print:       total time =    1561.03 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.149s
user	10m24.033s
sys	0m6.985s
