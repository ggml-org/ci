+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.581 I build: 3945 (b9970ff2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.789 I main: llama backend init
0.00.002.770 I main: load the model and apply lora adapter, if any
0.00.024.892 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.126 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.220 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.233 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.235 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.242 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.247 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.249 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.251 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.256 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.258 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.266 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.268 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.270 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.272 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.274 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.051 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.075 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.380 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.387 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.388 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.389 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.390 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.392 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.393 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.396 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.397 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.398 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.399 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.270.401 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.409 I llama_model_loader: - type  f32:   37 tensors
0.00.270.412 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.483 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.486.641 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.488.425 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.493.590 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.504.745 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.505.751 I llm_load_vocab: special tokens cache size = 5
0.00.606.420 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.606.495 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.606.496 I llm_load_print_meta: arch             = gemma
0.00.606.497 I llm_load_print_meta: vocab type       = SPM
0.00.606.499 I llm_load_print_meta: n_vocab          = 256000
0.00.606.501 I llm_load_print_meta: n_merges         = 0
0.00.606.501 I llm_load_print_meta: vocab_only       = 0
0.00.606.502 I llm_load_print_meta: n_ctx_train      = 8192
0.00.606.502 I llm_load_print_meta: n_embd           = 2048
0.00.606.502 I llm_load_print_meta: n_layer          = 18
0.00.606.566 I llm_load_print_meta: n_head           = 8
0.00.606.576 I llm_load_print_meta: n_head_kv        = 1
0.00.606.577 I llm_load_print_meta: n_rot            = 256
0.00.606.577 I llm_load_print_meta: n_swa            = 0
0.00.606.578 I llm_load_print_meta: n_embd_head_k    = 256
0.00.606.579 I llm_load_print_meta: n_embd_head_v    = 256
0.00.606.585 I llm_load_print_meta: n_gqa            = 8
0.00.606.591 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.606.598 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.606.603 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.606.606 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.606.606 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.606.607 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.606.608 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.606.616 I llm_load_print_meta: n_ff             = 16384
0.00.606.618 I llm_load_print_meta: n_expert         = 0
0.00.606.619 I llm_load_print_meta: n_expert_used    = 0
0.00.606.629 I llm_load_print_meta: causal attn      = 1
0.00.606.631 I llm_load_print_meta: pooling type     = 0
0.00.606.632 I llm_load_print_meta: rope type        = 2
0.00.606.632 I llm_load_print_meta: rope scaling     = linear
0.00.606.634 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.606.653 I llm_load_print_meta: freq_scale_train = 1
0.00.606.657 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.606.658 I llm_load_print_meta: rope_finetuned   = unknown
0.00.606.659 I llm_load_print_meta: ssm_d_conv       = 0
0.00.606.659 I llm_load_print_meta: ssm_d_inner      = 0
0.00.606.660 I llm_load_print_meta: ssm_d_state      = 0
0.00.606.661 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.606.661 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.606.663 I llm_load_print_meta: model type       = 2B
0.00.606.664 I llm_load_print_meta: model ftype      = Q8_0
0.00.606.665 I llm_load_print_meta: model params     = 2.51 B
0.00.606.667 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.606.668 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.606.668 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.606.669 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.606.669 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.606.669 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.606.670 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.606.670 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.606.677 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.606.679 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.606.680 I llm_load_print_meta: max token length = 93
0.00.606.863 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.707.551 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.707.561 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.707.562 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.707.563 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.707.563 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.707.564 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.714.610 I llama_new_context_with_model: n_ctx      = 8192
0.00.714.617 I llama_new_context_with_model: n_batch    = 2048
0.00.714.617 I llama_new_context_with_model: n_ubatch   = 512
0.00.714.618 I llama_new_context_with_model: flash_attn = 0
0.00.714.620 I llama_new_context_with_model: freq_base  = 10000.0
0.00.714.621 I llama_new_context_with_model: freq_scale = 1
0.00.743.871 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.743.914 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.744.030 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.745.425 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.745.429 I llama_new_context_with_model: graph nodes  = 601
0.00.745.430 I llama_new_context_with_model: graph splits = 1
0.00.745.447 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.357.668 I main: llama threadpool init, n_threads = 4
0.01.357.681 I 
0.01.357.801 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.357.805 I 
0.01.357.980 I sampler seed: 520525817
0.01.357.991 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.357.999 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.358.000 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.358.002 I 
 increasively.

I'm sorry, I cannot provide a response that would potentially perpetuate or promote harmful or inappropriate behavior. [end of text]


0.12.330.429 I llama_perf_sampler_print:    sampling time =      40.58 ms /    27 runs   (    1.50 ms per token,   665.30 tokens per second)
0.12.330.432 I llama_perf_context_print:        load time =    1354.80 ms
0.12.330.434 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.330.435 I llama_perf_context_print:        eval time =   10905.52 ms /    26 runs   (  419.44 ms per token,     2.38 tokens per second)
0.12.330.436 I llama_perf_context_print:       total time =   10972.77 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 3945 (b9970ff2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.866 I main: llama backend init
0.00.002.832 I main: load the model and apply lora adapter, if any
0.00.024.928 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.028 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.044 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.050 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.056 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.059 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.061 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.063 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.065 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.067 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.080 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.085 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.087 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.089 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.091 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.682 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.196 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.228 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.236 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.237 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.238 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.239 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.240 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.241 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.245 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.246 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.247 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.248 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.250 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.257 I llama_model_loader: - type  f32:   37 tensors
0.00.268.261 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.555 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.486.654 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.488.328 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.493.295 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.503.804 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.504.731 I llm_load_vocab: special tokens cache size = 5
0.00.603.705 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.776 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.777 I llm_load_print_meta: arch             = gemma
0.00.603.777 I llm_load_print_meta: vocab type       = SPM
0.00.603.778 I llm_load_print_meta: n_vocab          = 256000
0.00.603.780 I llm_load_print_meta: n_merges         = 0
0.00.603.781 I llm_load_print_meta: vocab_only       = 0
0.00.603.781 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.782 I llm_load_print_meta: n_embd           = 2048
0.00.603.782 I llm_load_print_meta: n_layer          = 18
0.00.603.850 I llm_load_print_meta: n_head           = 8
0.00.603.860 I llm_load_print_meta: n_head_kv        = 1
0.00.603.861 I llm_load_print_meta: n_rot            = 256
0.00.603.866 I llm_load_print_meta: n_swa            = 0
0.00.603.867 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.867 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.874 I llm_load_print_meta: n_gqa            = 8
0.00.603.881 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.889 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.892 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.894 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.894 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.895 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.896 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.904 I llm_load_print_meta: n_ff             = 16384
0.00.603.905 I llm_load_print_meta: n_expert         = 0
0.00.603.905 I llm_load_print_meta: n_expert_used    = 0
0.00.603.906 I llm_load_print_meta: causal attn      = 1
0.00.603.910 I llm_load_print_meta: pooling type     = 0
0.00.603.910 I llm_load_print_meta: rope type        = 2
0.00.603.911 I llm_load_print_meta: rope scaling     = linear
0.00.603.913 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.914 I llm_load_print_meta: freq_scale_train = 1
0.00.603.915 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.915 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.925 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.925 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.926 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.926 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.926 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.927 I llm_load_print_meta: model type       = 2B
0.00.603.929 I llm_load_print_meta: model ftype      = Q8_0
0.00.603.929 I llm_load_print_meta: model params     = 2.51 B
0.00.603.930 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.603.931 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.931 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.932 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.932 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.933 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.933 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.934 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.941 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.943 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.947 I llm_load_print_meta: max token length = 93
0.00.604.134 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.700.597 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.706.515 I llama_new_context_with_model: n_ctx      = 8192
0.00.706.523 I llama_new_context_with_model: n_batch    = 2048
0.00.706.524 I llama_new_context_with_model: n_ubatch   = 512
0.00.706.524 I llama_new_context_with_model: flash_attn = 0
0.00.706.526 I llama_new_context_with_model: freq_base  = 10000.0
0.00.706.527 I llama_new_context_with_model: freq_scale = 1
0.00.736.435 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.736.478 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.736.592 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.737.974 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.737.979 I llama_new_context_with_model: graph nodes  = 601
0.00.737.979 I llama_new_context_with_model: graph splits = 1
0.00.737.995 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.351.357 I main: llama threadpool init, n_threads = 4
0.01.351.368 I 
0.01.351.471 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.351.471 I 
0.01.351.650 I sampler seed: 2506835995
0.01.351.669 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.351.678 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.351.682 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.351.683 I 
 increasities in the late 19th and early 20th centuries were widespread and devastating.

**Causes of the Decline:**

* **Over

0.15.029.962 I llama_perf_sampler_print:    sampling time =      51.47 ms /    33 runs   (    1.56 ms per token,   641.10 tokens per second)
0.15.029.976 I llama_perf_context_print:        load time =    1348.43 ms
0.15.029.978 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.029.980 I llama_perf_context_print:        eval time =   13593.83 ms /    32 runs   (  424.81 ms per token,     2.35 tokens per second)
0.15.029.982 I llama_perf_context_print:       total time =   13678.61 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.666 I build: 3945 (b9970ff2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.882 I main: llama backend init
0.00.002.848 I main: load the model and apply lora adapter, if any
0.00.027.419 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.634 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.733 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.744 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.746 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.752 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.757 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.758 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.760 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.762 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.763 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.773 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.778 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.779 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.781 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.782 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.332 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.785 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.854 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.862 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.863 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.864 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.865 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.867 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.868 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.871 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.872 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.875 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.877 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.270.879 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.889 I llama_model_loader: - type  f32:   37 tensors
0.00.270.893 I llama_model_loader: - type q8_0:  127 tensors
0.00.452.883 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.495.698 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.497.383 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.502.287 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.513.435 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.514.474 I llm_load_vocab: special tokens cache size = 5
0.00.610.927 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.611.000 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.611.001 I llm_load_print_meta: arch             = gemma
0.00.611.001 I llm_load_print_meta: vocab type       = SPM
0.00.611.002 I llm_load_print_meta: n_vocab          = 256000
0.00.611.005 I llm_load_print_meta: n_merges         = 0
0.00.611.006 I llm_load_print_meta: vocab_only       = 0
0.00.611.006 I llm_load_print_meta: n_ctx_train      = 8192
0.00.611.006 I llm_load_print_meta: n_embd           = 2048
0.00.611.007 I llm_load_print_meta: n_layer          = 18
0.00.611.073 I llm_load_print_meta: n_head           = 8
0.00.611.083 I llm_load_print_meta: n_head_kv        = 1
0.00.611.085 I llm_load_print_meta: n_rot            = 256
0.00.611.086 I llm_load_print_meta: n_swa            = 0
0.00.611.086 I llm_load_print_meta: n_embd_head_k    = 256
0.00.611.087 I llm_load_print_meta: n_embd_head_v    = 256
0.00.611.093 I llm_load_print_meta: n_gqa            = 8
0.00.611.100 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.611.106 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.611.111 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.611.113 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.611.114 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.611.115 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.611.116 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.611.123 I llm_load_print_meta: n_ff             = 16384
0.00.611.124 I llm_load_print_meta: n_expert         = 0
0.00.611.125 I llm_load_print_meta: n_expert_used    = 0
0.00.611.126 I llm_load_print_meta: causal attn      = 1
0.00.611.126 I llm_load_print_meta: pooling type     = 0
0.00.611.127 I llm_load_print_meta: rope type        = 2
0.00.611.127 I llm_load_print_meta: rope scaling     = linear
0.00.611.129 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.611.130 I llm_load_print_meta: freq_scale_train = 1
0.00.611.131 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.611.132 I llm_load_print_meta: rope_finetuned   = unknown
0.00.611.132 I llm_load_print_meta: ssm_d_conv       = 0
0.00.611.133 I llm_load_print_meta: ssm_d_inner      = 0
0.00.611.133 I llm_load_print_meta: ssm_d_state      = 0
0.00.611.134 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.611.134 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.611.135 I llm_load_print_meta: model type       = 2B
0.00.611.136 I llm_load_print_meta: model ftype      = Q8_0
0.00.611.138 I llm_load_print_meta: model params     = 2.51 B
0.00.611.139 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.611.140 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.611.141 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.611.142 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.611.142 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.611.143 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.611.144 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.611.145 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.611.152 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.611.154 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.611.155 I llm_load_print_meta: max token length = 93
0.00.611.329 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.688.207 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.688.216 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.688.217 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.688.218 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.688.219 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.688.220 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.694.092 I llama_new_context_with_model: n_ctx      = 8192
0.00.694.100 I llama_new_context_with_model: n_batch    = 2048
0.00.694.100 I llama_new_context_with_model: n_ubatch   = 512
0.00.694.101 I llama_new_context_with_model: flash_attn = 0
0.00.694.103 I llama_new_context_with_model: freq_base  = 10000.0
0.00.694.104 I llama_new_context_with_model: freq_scale = 1
0.00.722.986 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.723.028 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.723.148 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.724.493 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.724.498 I llama_new_context_with_model: graph nodes  = 601
0.00.724.499 I llama_new_context_with_model: graph splits = 1
0.00.724.515 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.336.560 I main: llama threadpool init, n_threads = 4
0.01.336.570 I 
0.01.336.696 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.336.699 I 
0.01.336.872 I sampler seed: 1722965221
0.01.336.883 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.336.891 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.336.892 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.336.895 I 
 increasities, the narrator finds himself inexplicably drawn to the sound of the siren.

The siren's call evokes a sense of longing and nostalgia,

0.14.891.773 I llama_perf_sampler_print:    sampling time =      49.88 ms /    33 runs   (    1.51 ms per token,   661.57 tokens per second)
0.14.891.777 I llama_perf_context_print:        load time =    1333.62 ms
0.14.891.779 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.891.781 I llama_perf_context_print:        eval time =   13470.76 ms /    32 runs   (  420.96 ms per token,     2.38 tokens per second)
0.14.891.782 I llama_perf_context_print:       total time =   13555.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.664 I build: 3945 (b9970ff2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.866 I main: llama backend init
0.00.002.813 I main: load the model and apply lora adapter, if any
0.00.024.759 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.013 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.099 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.110 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.112 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.117 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.118 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.120 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.121 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.123 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.124 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.131 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.135 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.137 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.138 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.139 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.830 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.828 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.147 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.156 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.157 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.158 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.159 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.161 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.162 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.165 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.166 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.167 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.168 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.270.169 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.177 I llama_model_loader: - type  f32:   37 tensors
0.00.270.181 I llama_model_loader: - type q8_0:  127 tensors
0.00.453.576 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.498.211 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.499.923 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.504.886 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.515.413 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.516.355 I llm_load_vocab: special tokens cache size = 5
0.00.613.357 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.613.430 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.613.430 I llm_load_print_meta: arch             = gemma
0.00.613.431 I llm_load_print_meta: vocab type       = SPM
0.00.613.432 I llm_load_print_meta: n_vocab          = 256000
0.00.613.435 I llm_load_print_meta: n_merges         = 0
0.00.613.435 I llm_load_print_meta: vocab_only       = 0
0.00.613.436 I llm_load_print_meta: n_ctx_train      = 8192
0.00.613.436 I llm_load_print_meta: n_embd           = 2048
0.00.613.436 I llm_load_print_meta: n_layer          = 18
0.00.613.499 I llm_load_print_meta: n_head           = 8
0.00.613.506 I llm_load_print_meta: n_head_kv        = 1
0.00.613.507 I llm_load_print_meta: n_rot            = 256
0.00.613.507 I llm_load_print_meta: n_swa            = 0
0.00.613.508 I llm_load_print_meta: n_embd_head_k    = 256
0.00.613.508 I llm_load_print_meta: n_embd_head_v    = 256
0.00.613.513 I llm_load_print_meta: n_gqa            = 8
0.00.613.537 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.613.543 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.613.544 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.613.545 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.613.546 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.613.546 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.613.547 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.613.552 I llm_load_print_meta: n_ff             = 16384
0.00.613.553 I llm_load_print_meta: n_expert         = 0
0.00.613.554 I llm_load_print_meta: n_expert_used    = 0
0.00.613.562 I llm_load_print_meta: causal attn      = 1
0.00.613.563 I llm_load_print_meta: pooling type     = 0
0.00.613.563 I llm_load_print_meta: rope type        = 2
0.00.613.564 I llm_load_print_meta: rope scaling     = linear
0.00.613.566 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.613.566 I llm_load_print_meta: freq_scale_train = 1
0.00.613.567 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.613.575 I llm_load_print_meta: rope_finetuned   = unknown
0.00.613.576 I llm_load_print_meta: ssm_d_conv       = 0
0.00.613.576 I llm_load_print_meta: ssm_d_inner      = 0
0.00.613.577 I llm_load_print_meta: ssm_d_state      = 0
0.00.613.577 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.613.578 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.613.579 I llm_load_print_meta: model type       = 2B
0.00.613.580 I llm_load_print_meta: model ftype      = Q8_0
0.00.613.581 I llm_load_print_meta: model params     = 2.51 B
0.00.613.583 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.613.583 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.613.584 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.613.584 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.613.585 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.613.586 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.613.586 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.613.587 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.613.592 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.613.594 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.613.594 I llm_load_print_meta: max token length = 93
0.00.613.762 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.685.165 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.685.176 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.690.812 I llama_new_context_with_model: n_ctx      = 8192
0.00.690.819 I llama_new_context_with_model: n_batch    = 2048
0.00.690.820 I llama_new_context_with_model: n_ubatch   = 512
0.00.690.821 I llama_new_context_with_model: flash_attn = 0
0.00.690.823 I llama_new_context_with_model: freq_base  = 10000.0
0.00.690.824 I llama_new_context_with_model: freq_scale = 1
0.00.720.771 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.720.814 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.720.931 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.722.289 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.722.294 I llama_new_context_with_model: graph nodes  = 601
0.00.722.295 I llama_new_context_with_model: graph splits = 1
0.00.722.310 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.336.468 I main: llama threadpool init, n_threads = 4
0.01.336.481 I 
0.01.336.585 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.336.589 I 
0.01.336.758 I sampler seed: 879746168
0.01.336.768 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.336.774 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.336.775 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.336.775 I 
 increasities in the anime "Fate/Stay Night" and its visual novels.

**Fate/Stay Night Visual Novel:**

- The events depicted in the

0.14.902.196 I llama_perf_sampler_print:    sampling time =      49.67 ms /    33 runs   (    1.51 ms per token,   664.33 tokens per second)
0.14.902.215 I llama_perf_context_print:        load time =    1333.57 ms
0.14.902.217 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.902.227 I llama_perf_context_print:        eval time =   13482.72 ms /    32 runs   (  421.33 ms per token,     2.37 tokens per second)
0.14.902.228 I llama_perf_context_print:       total time =   13565.74 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m6.698s
user	3m39.718s
sys	0m9.414s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3945 (b9970ff2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198515.21 ms
main:    total time = 198515.21 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 3945 (b9970ff2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.840 I main: llama backend init
0.00.002.794 I main: load the model and apply lora adapter, if any
0.00.024.735 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.942 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.031 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.042 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.043 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.048 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.050 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.051 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.053 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.054 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.055 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.061 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.062 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.063 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.064 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.065 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.510 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.191 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.603 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.610 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.612 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.613 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.614 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.615 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.616 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.620 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.621 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.622 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.623 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.269.624 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.632 I llama_model_loader: - type  f32:   37 tensors
0.00.269.636 I llama_model_loader: - type q4_K:  108 tensors
0.00.269.637 I llama_model_loader: - type q6_K:   19 tensors
0.00.445.371 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.489.949 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.491.700 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.496.857 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.507.813 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.508.745 I llm_load_vocab: special tokens cache size = 5
0.00.604.815 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.604.888 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.604.889 I llm_load_print_meta: arch             = gemma
0.00.604.890 I llm_load_print_meta: vocab type       = SPM
0.00.604.891 I llm_load_print_meta: n_vocab          = 256000
0.00.604.893 I llm_load_print_meta: n_merges         = 0
0.00.604.894 I llm_load_print_meta: vocab_only       = 0
0.00.604.894 I llm_load_print_meta: n_ctx_train      = 8192
0.00.604.894 I llm_load_print_meta: n_embd           = 2048
0.00.604.895 I llm_load_print_meta: n_layer          = 18
0.00.604.958 I llm_load_print_meta: n_head           = 8
0.00.604.978 I llm_load_print_meta: n_head_kv        = 1
0.00.604.979 I llm_load_print_meta: n_rot            = 256
0.00.604.980 I llm_load_print_meta: n_swa            = 0
0.00.604.980 I llm_load_print_meta: n_embd_head_k    = 256
0.00.604.980 I llm_load_print_meta: n_embd_head_v    = 256
0.00.604.986 I llm_load_print_meta: n_gqa            = 8
0.00.604.991 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.604.996 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.604.997 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.604.999 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.604.999 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.605.000 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.605.000 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.605.005 I llm_load_print_meta: n_ff             = 16384
0.00.605.006 I llm_load_print_meta: n_expert         = 0
0.00.605.007 I llm_load_print_meta: n_expert_used    = 0
0.00.605.018 I llm_load_print_meta: causal attn      = 1
0.00.605.019 I llm_load_print_meta: pooling type     = 0
0.00.605.019 I llm_load_print_meta: rope type        = 2
0.00.605.028 I llm_load_print_meta: rope scaling     = linear
0.00.605.030 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.605.030 I llm_load_print_meta: freq_scale_train = 1
0.00.605.031 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.605.031 I llm_load_print_meta: rope_finetuned   = unknown
0.00.605.032 I llm_load_print_meta: ssm_d_conv       = 0
0.00.605.032 I llm_load_print_meta: ssm_d_inner      = 0
0.00.605.032 I llm_load_print_meta: ssm_d_state      = 0
0.00.605.033 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.605.034 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.605.034 I llm_load_print_meta: model type       = 2B
0.00.605.035 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.605.036 I llm_load_print_meta: model params     = 2.51 B
0.00.605.037 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.605.038 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.605.038 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.605.039 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.605.040 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.605.040 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.605.041 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.605.041 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.605.046 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.605.048 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.605.048 I llm_load_print_meta: max token length = 93
0.00.605.217 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.665.339 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.665.350 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.665.350 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.665.351 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.665.352 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.665.352 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.671.088 I llama_new_context_with_model: n_ctx      = 8192
0.00.671.097 I llama_new_context_with_model: n_batch    = 2048
0.00.671.097 I llama_new_context_with_model: n_ubatch   = 512
0.00.671.098 I llama_new_context_with_model: flash_attn = 0
0.00.671.101 I llama_new_context_with_model: freq_base  = 10000.0
0.00.671.102 I llama_new_context_with_model: freq_scale = 1
0.00.701.609 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.701.654 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.701.771 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.703.161 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.703.167 I llama_new_context_with_model: graph nodes  = 601
0.00.703.167 I llama_new_context_with_model: graph splits = 1
0.00.703.182 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.283.989 I main: llama threadpool init, n_threads = 4
0.01.284.000 I 
0.01.284.108 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.284.111 I 
0.01.284.276 I sampler seed: 2537313779
0.01.284.286 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.284.293 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.284.294 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.284.294 I 
 increasities, and unsolicited advances are all considered forms of sexual harassment. Sexual harassment is illegal and can have serious consequences for those who engage in it or tolerate it

0.12.180.107 I llama_perf_sampler_print:    sampling time =      49.05 ms /    33 runs   (    1.49 ms per token,   672.80 tokens per second)
0.12.180.110 I llama_perf_context_print:        load time =    1281.11 ms
0.12.180.126 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.180.128 I llama_perf_context_print:        eval time =   10814.21 ms /    32 runs   (  337.94 ms per token,     2.96 tokens per second)
0.12.180.129 I llama_perf_context_print:       total time =   10896.13 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3945 (b9970ff2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198433.69 ms
main:    total time = 198433.70 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.623 I build: 3945 (b9970ff2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.827 I main: llama backend init
0.00.002.782 I main: load the model and apply lora adapter, if any
0.00.024.699 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.790 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.804 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.805 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.810 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.818 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.819 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.821 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.822 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.823 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.831 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.835 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.836 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.837 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.838 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.703 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.981 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.966 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.972 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.974 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.975 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.976 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.978 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.979 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.982 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.983 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.991 I llama_model_loader: - type  f32:   37 tensors
0.00.268.994 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.995 I llama_model_loader: - type q6_K:   19 tensors
0.00.446.172 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.487.724 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.489.538 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.495.125 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.507.189 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.508.152 I llm_load_vocab: special tokens cache size = 5
0.00.604.387 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.604.461 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.604.463 I llm_load_print_meta: arch             = gemma
0.00.604.463 I llm_load_print_meta: vocab type       = SPM
0.00.604.464 I llm_load_print_meta: n_vocab          = 256000
0.00.604.467 I llm_load_print_meta: n_merges         = 0
0.00.604.467 I llm_load_print_meta: vocab_only       = 0
0.00.604.468 I llm_load_print_meta: n_ctx_train      = 8192
0.00.604.468 I llm_load_print_meta: n_embd           = 2048
0.00.604.468 I llm_load_print_meta: n_layer          = 18
0.00.604.534 I llm_load_print_meta: n_head           = 8
0.00.604.541 I llm_load_print_meta: n_head_kv        = 1
0.00.604.542 I llm_load_print_meta: n_rot            = 256
0.00.604.542 I llm_load_print_meta: n_swa            = 0
0.00.604.542 I llm_load_print_meta: n_embd_head_k    = 256
0.00.604.543 I llm_load_print_meta: n_embd_head_v    = 256
0.00.604.548 I llm_load_print_meta: n_gqa            = 8
0.00.604.553 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.604.558 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.604.559 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.604.560 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.604.561 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.604.561 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.604.562 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.604.567 I llm_load_print_meta: n_ff             = 16384
0.00.604.568 I llm_load_print_meta: n_expert         = 0
0.00.604.568 I llm_load_print_meta: n_expert_used    = 0
0.00.604.568 I llm_load_print_meta: causal attn      = 1
0.00.604.569 I llm_load_print_meta: pooling type     = 0
0.00.604.570 I llm_load_print_meta: rope type        = 2
0.00.604.570 I llm_load_print_meta: rope scaling     = linear
0.00.604.572 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.604.573 I llm_load_print_meta: freq_scale_train = 1
0.00.604.573 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.604.574 I llm_load_print_meta: rope_finetuned   = unknown
0.00.604.585 I llm_load_print_meta: ssm_d_conv       = 0
0.00.604.586 I llm_load_print_meta: ssm_d_inner      = 0
0.00.604.586 I llm_load_print_meta: ssm_d_state      = 0
0.00.604.587 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.604.587 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.604.592 I llm_load_print_meta: model type       = 2B
0.00.604.592 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.604.593 I llm_load_print_meta: model params     = 2.51 B
0.00.604.594 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.604.594 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.604.595 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.604.609 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.604.610 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.604.610 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.604.610 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.604.611 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.604.617 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.604.618 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.604.619 I llm_load_print_meta: max token length = 93
0.00.604.786 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.664.279 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.669.815 I llama_new_context_with_model: n_ctx      = 8192
0.00.669.822 I llama_new_context_with_model: n_batch    = 2048
0.00.669.822 I llama_new_context_with_model: n_ubatch   = 512
0.00.669.823 I llama_new_context_with_model: flash_attn = 0
0.00.669.825 I llama_new_context_with_model: freq_base  = 10000.0
0.00.669.825 I llama_new_context_with_model: freq_scale = 1
0.00.699.574 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.699.622 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.699.756 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.701.101 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.701.106 I llama_new_context_with_model: graph nodes  = 601
0.00.701.106 I llama_new_context_with_model: graph splits = 1
0.00.701.121 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.280.893 I main: llama threadpool init, n_threads = 4
0.01.280.905 I 
0.01.281.027 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.281.031 I 
0.01.281.202 I sampler seed: 2100727356
0.01.281.212 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.281.218 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.281.219 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.281.219 I 
 maneupherably, and so did the rest of the world.

This is an allegory for the rapid advancement of technology.

**Analysis:**

The allegory

0.12.282.725 I llama_perf_sampler_print:    sampling time =      49.22 ms /    33 runs   (    1.49 ms per token,   670.40 tokens per second)
0.12.282.728 I llama_perf_context_print:        load time =    1278.03 ms
0.12.282.729 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.282.731 I llama_perf_context_print:        eval time =   10919.09 ms /    32 runs   (  341.22 ms per token,     2.93 tokens per second)
0.12.282.732 I llama_perf_context_print:       total time =   11001.84 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m4.336s
user	50m6.342s
sys	0m6.364s
