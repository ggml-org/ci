+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.547 I build: 4400 (6e1531ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.000.768 I main: load the model and apply lora adapter, if any
0.00.021.347 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.356 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.367 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.372 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.376 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.379 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.380 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.380 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.381 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.381 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.381 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.385 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.386 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.386 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.387 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.387 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.139 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.153 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.046 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.054 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.056 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.056 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.057 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.058 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.059 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.062 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.063 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.064 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.065 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.066 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.069 I llama_model_loader: - type  f32:   37 tensors
0.00.132.070 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.087 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.041 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.673 I llm_load_vocab: special tokens cache size = 5
0.00.276.622 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.638 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.639 I llm_load_print_meta: arch             = gemma
0.00.276.639 I llm_load_print_meta: vocab type       = SPM
0.00.276.640 I llm_load_print_meta: n_vocab          = 256000
0.00.276.640 I llm_load_print_meta: n_merges         = 0
0.00.276.641 I llm_load_print_meta: vocab_only       = 0
0.00.276.641 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.642 I llm_load_print_meta: n_embd           = 2048
0.00.276.642 I llm_load_print_meta: n_layer          = 18
0.00.276.654 I llm_load_print_meta: n_head           = 8
0.00.276.655 I llm_load_print_meta: n_head_kv        = 1
0.00.276.655 I llm_load_print_meta: n_rot            = 256
0.00.276.655 I llm_load_print_meta: n_swa            = 0
0.00.276.656 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.656 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.657 I llm_load_print_meta: n_gqa            = 8
0.00.276.658 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.659 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.660 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.662 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.662 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.662 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.662 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.663 I llm_load_print_meta: n_ff             = 16384
0.00.276.664 I llm_load_print_meta: n_expert         = 0
0.00.276.664 I llm_load_print_meta: n_expert_used    = 0
0.00.276.664 I llm_load_print_meta: causal attn      = 1
0.00.276.665 I llm_load_print_meta: pooling type     = 0
0.00.276.665 I llm_load_print_meta: rope type        = 2
0.00.276.665 I llm_load_print_meta: rope scaling     = linear
0.00.276.667 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.667 I llm_load_print_meta: freq_scale_train = 1
0.00.276.668 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.668 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.668 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.669 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.669 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.669 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.669 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.670 I llm_load_print_meta: model type       = 2B
0.00.276.670 I llm_load_print_meta: model ftype      = Q8_0
0.00.276.671 I llm_load_print_meta: model params     = 2.51 B
0.00.276.672 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.276.672 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.672 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.673 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.673 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.673 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.674 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.674 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.674 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.675 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.675 I llm_load_print_meta: max token length = 93
0.00.377.636 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.377.644 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.377.645 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.377.646 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.377.646 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.377.647 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.382.933 I llama_new_context_with_model: n_seq_max     = 1
0.00.382.940 I llama_new_context_with_model: n_ctx         = 4096
0.00.382.940 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.382.941 I llama_new_context_with_model: n_batch       = 2048
0.00.382.941 I llama_new_context_with_model: n_ubatch      = 512
0.00.382.942 I llama_new_context_with_model: flash_attn    = 0
0.00.382.944 I llama_new_context_with_model: freq_base     = 10000.0
0.00.382.945 I llama_new_context_with_model: freq_scale    = 1
0.00.382.946 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.382.966 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.397.313 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.397.326 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.397.417 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.398.670 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.398.676 I llama_new_context_with_model: graph nodes  = 601
0.00.398.676 I llama_new_context_with_model: graph splits = 1
0.00.398.678 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.398.679 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.484.432 I main: llama threadpool init, n_threads = 4
0.00.484.449 I 
0.00.484.524 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.484.527 I 
0.00.484.568 I sampler seed: 2881345819
0.00.484.579 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.484.591 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.484.595 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.484.595 I 
 increasities. [end of text]


0.00.764.766 I llama_perf_sampler_print:    sampling time =       0.60 ms /     5 runs   (    0.12 ms per token,  8264.46 tokens per second)
0.00.764.769 I llama_perf_context_print:        load time =     483.65 ms
0.00.764.770 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.764.772 I llama_perf_context_print:        eval time =     277.24 ms /     4 runs   (   69.31 ms per token,    14.43 tokens per second)
0.00.764.773 I llama_perf_context_print:       total time =     280.34 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.530 I build: 4400 (6e1531ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.000.760 I main: load the model and apply lora adapter, if any
0.00.020.537 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.020.555 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.561 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.564 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.569 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.574 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.574 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.575 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.576 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.577 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.581 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.582 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.583 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.583 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.584 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.037 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.135 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.129.952 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.129.958 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.129.959 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.129.959 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.129.960 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.129.961 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.129.962 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.129.964 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.129.965 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.129.967 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.129.968 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.129.968 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.129.971 I llama_model_loader: - type  f32:   37 tensors
0.00.129.972 I llama_model_loader: - type q8_0:  127 tensors
0.00.218.186 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.272.160 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.828 I llm_load_vocab: special tokens cache size = 5
0.00.294.084 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.294.102 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.294.103 I llm_load_print_meta: arch             = gemma
0.00.294.103 I llm_load_print_meta: vocab type       = SPM
0.00.294.104 I llm_load_print_meta: n_vocab          = 256000
0.00.294.104 I llm_load_print_meta: n_merges         = 0
0.00.294.104 I llm_load_print_meta: vocab_only       = 0
0.00.294.105 I llm_load_print_meta: n_ctx_train      = 8192
0.00.294.105 I llm_load_print_meta: n_embd           = 2048
0.00.294.105 I llm_load_print_meta: n_layer          = 18
0.00.294.116 I llm_load_print_meta: n_head           = 8
0.00.294.117 I llm_load_print_meta: n_head_kv        = 1
0.00.294.117 I llm_load_print_meta: n_rot            = 256
0.00.294.118 I llm_load_print_meta: n_swa            = 0
0.00.294.118 I llm_load_print_meta: n_embd_head_k    = 256
0.00.294.119 I llm_load_print_meta: n_embd_head_v    = 256
0.00.294.119 I llm_load_print_meta: n_gqa            = 8
0.00.294.120 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.294.121 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.294.122 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.294.124 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.294.124 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.294.124 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.294.124 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.294.125 I llm_load_print_meta: n_ff             = 16384
0.00.294.125 I llm_load_print_meta: n_expert         = 0
0.00.294.126 I llm_load_print_meta: n_expert_used    = 0
0.00.294.126 I llm_load_print_meta: causal attn      = 1
0.00.294.126 I llm_load_print_meta: pooling type     = 0
0.00.294.127 I llm_load_print_meta: rope type        = 2
0.00.294.127 I llm_load_print_meta: rope scaling     = linear
0.00.294.128 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.294.129 I llm_load_print_meta: freq_scale_train = 1
0.00.294.129 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.294.130 I llm_load_print_meta: rope_finetuned   = unknown
0.00.294.130 I llm_load_print_meta: ssm_d_conv       = 0
0.00.294.130 I llm_load_print_meta: ssm_d_inner      = 0
0.00.294.130 I llm_load_print_meta: ssm_d_state      = 0
0.00.294.131 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.294.131 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.294.132 I llm_load_print_meta: model type       = 2B
0.00.294.133 I llm_load_print_meta: model ftype      = Q8_0
0.00.294.134 I llm_load_print_meta: model params     = 2.51 B
0.00.294.135 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.294.135 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.294.135 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.294.136 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.294.137 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.294.137 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.294.137 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.294.137 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.294.138 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.294.138 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.294.139 I llm_load_print_meta: max token length = 93
0.00.389.427 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.394.555 I llama_new_context_with_model: n_seq_max     = 1
0.00.394.561 I llama_new_context_with_model: n_ctx         = 4096
0.00.394.562 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.394.562 I llama_new_context_with_model: n_batch       = 2048
0.00.394.563 I llama_new_context_with_model: n_ubatch      = 512
0.00.394.563 I llama_new_context_with_model: flash_attn    = 0
0.00.394.566 I llama_new_context_with_model: freq_base     = 10000.0
0.00.394.567 I llama_new_context_with_model: freq_scale    = 1
0.00.394.568 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.394.589 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.409.268 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.409.282 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.409.374 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.410.643 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.410.647 I llama_new_context_with_model: graph nodes  = 601
0.00.410.648 I llama_new_context_with_model: graph splits = 1
0.00.410.650 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.410.650 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.462 I main: llama threadpool init, n_threads = 4
0.00.492.479 I 
0.00.492.558 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.492.562 I 
0.00.492.615 I sampler seed: 3334825417
0.00.492.625 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.642 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.492.647 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.647 I 
 increasities.

I am unable to generate the requested text due to the presence of inappropriate and sexually suggestive content. [end of text]


0.02.127.150 I llama_perf_sampler_print:    sampling time =       3.92 ms /    25 runs   (    0.16 ms per token,  6382.44 tokens per second)
0.02.127.153 I llama_perf_context_print:        load time =     491.69 ms
0.02.127.154 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.127.156 I llama_perf_context_print:        eval time =    1619.96 ms /    24 runs   (   67.50 ms per token,    14.82 tokens per second)
0.02.127.156 I llama_perf_context_print:       total time =    1634.69 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.595 I build: 4400 (6e1531ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.802 I main: llama backend init
0.00.000.808 I main: load the model and apply lora adapter, if any
0.00.021.184 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.195 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.204 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.213 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.214 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.217 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.218 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.219 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.219 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.220 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.220 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.225 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.226 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.227 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.227 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.227 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.374 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.127 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.038 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.045 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.045 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.046 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.047 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.048 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.048 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.051 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.051 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.052 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.052 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.053 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.057 I llama_model_loader: - type  f32:   37 tensors
0.00.132.059 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.454 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.148 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.663 I llm_load_vocab: special tokens cache size = 5
0.00.271.508 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.523 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.524 I llm_load_print_meta: arch             = gemma
0.00.271.524 I llm_load_print_meta: vocab type       = SPM
0.00.271.525 I llm_load_print_meta: n_vocab          = 256000
0.00.271.525 I llm_load_print_meta: n_merges         = 0
0.00.271.526 I llm_load_print_meta: vocab_only       = 0
0.00.271.526 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.526 I llm_load_print_meta: n_embd           = 2048
0.00.271.527 I llm_load_print_meta: n_layer          = 18
0.00.271.539 I llm_load_print_meta: n_head           = 8
0.00.271.540 I llm_load_print_meta: n_head_kv        = 1
0.00.271.540 I llm_load_print_meta: n_rot            = 256
0.00.271.541 I llm_load_print_meta: n_swa            = 0
0.00.271.541 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.541 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.542 I llm_load_print_meta: n_gqa            = 8
0.00.271.543 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.544 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.545 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.546 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.547 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.547 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.548 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.548 I llm_load_print_meta: n_ff             = 16384
0.00.271.549 I llm_load_print_meta: n_expert         = 0
0.00.271.549 I llm_load_print_meta: n_expert_used    = 0
0.00.271.549 I llm_load_print_meta: causal attn      = 1
0.00.271.550 I llm_load_print_meta: pooling type     = 0
0.00.271.550 I llm_load_print_meta: rope type        = 2
0.00.271.550 I llm_load_print_meta: rope scaling     = linear
0.00.271.552 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.552 I llm_load_print_meta: freq_scale_train = 1
0.00.271.553 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.553 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.553 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.554 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.554 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.554 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.554 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.555 I llm_load_print_meta: model type       = 2B
0.00.271.555 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.556 I llm_load_print_meta: model params     = 2.51 B
0.00.271.557 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.557 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.558 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.558 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.558 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.559 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.559 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.559 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.559 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.560 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.560 I llm_load_print_meta: max token length = 93
0.00.349.595 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.349.602 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.349.603 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.349.604 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.349.604 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.349.605 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.354.641 I llama_new_context_with_model: n_seq_max     = 1
0.00.354.647 I llama_new_context_with_model: n_ctx         = 4096
0.00.354.647 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.354.647 I llama_new_context_with_model: n_batch       = 2048
0.00.354.648 I llama_new_context_with_model: n_ubatch      = 512
0.00.354.648 I llama_new_context_with_model: flash_attn    = 0
0.00.354.650 I llama_new_context_with_model: freq_base     = 10000.0
0.00.354.651 I llama_new_context_with_model: freq_scale    = 1
0.00.354.652 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.354.671 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.368.620 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.368.633 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.368.728 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.369.964 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.369.970 I llama_new_context_with_model: graph nodes  = 601
0.00.369.971 I llama_new_context_with_model: graph splits = 1
0.00.369.973 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.369.973 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.454.109 I main: llama threadpool init, n_threads = 4
0.00.454.125 I 
0.00.454.198 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.454.201 I 
0.00.454.243 I sampler seed: 83724850
0.00.454.253 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.454.257 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.454.257 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.454.258 I 
 increamentalism, also known as incrementalism, is a philosophical perspective that emphasizes the gradual and incremental nature of knowledge acquisition and the role of experience in shaping our

0.02.706.225 I llama_perf_sampler_print:    sampling time =       5.09 ms /    33 runs   (    0.15 ms per token,  6482.03 tokens per second)
0.02.706.228 I llama_perf_context_print:        load time =     453.28 ms
0.02.706.229 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.706.230 I llama_perf_context_print:        eval time =    2232.76 ms /    32 runs   (   69.77 ms per token,    14.33 tokens per second)
0.02.706.231 I llama_perf_context_print:       total time =    2252.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.168 I build: 4400 (6e1531ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.374 I main: llama backend init
0.00.000.381 I main: load the model and apply lora adapter, if any
0.00.020.791 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.800 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.812 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.817 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.818 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.821 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.822 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.824 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.825 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.826 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.827 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.832 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.833 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.834 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.836 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.837 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.408 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.379 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.275 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.282 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.282 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.283 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.283 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.284 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.285 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.287 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.288 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.288 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.289 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.290 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.293 I llama_model_loader: - type  f32:   37 tensors
0.00.131.294 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.081 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.726 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.296 I llm_load_vocab: special tokens cache size = 5
0.00.278.055 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.072 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.072 I llm_load_print_meta: arch             = gemma
0.00.278.073 I llm_load_print_meta: vocab type       = SPM
0.00.278.074 I llm_load_print_meta: n_vocab          = 256000
0.00.278.075 I llm_load_print_meta: n_merges         = 0
0.00.278.075 I llm_load_print_meta: vocab_only       = 0
0.00.278.075 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.076 I llm_load_print_meta: n_embd           = 2048
0.00.278.076 I llm_load_print_meta: n_layer          = 18
0.00.278.088 I llm_load_print_meta: n_head           = 8
0.00.278.089 I llm_load_print_meta: n_head_kv        = 1
0.00.278.090 I llm_load_print_meta: n_rot            = 256
0.00.278.090 I llm_load_print_meta: n_swa            = 0
0.00.278.090 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.091 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.092 I llm_load_print_meta: n_gqa            = 8
0.00.278.093 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.094 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.095 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.096 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.096 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.096 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.097 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.098 I llm_load_print_meta: n_ff             = 16384
0.00.278.099 I llm_load_print_meta: n_expert         = 0
0.00.278.099 I llm_load_print_meta: n_expert_used    = 0
0.00.278.099 I llm_load_print_meta: causal attn      = 1
0.00.278.100 I llm_load_print_meta: pooling type     = 0
0.00.278.100 I llm_load_print_meta: rope type        = 2
0.00.278.100 I llm_load_print_meta: rope scaling     = linear
0.00.278.102 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.102 I llm_load_print_meta: freq_scale_train = 1
0.00.278.102 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.103 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.103 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.103 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.104 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.104 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.104 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.105 I llm_load_print_meta: model type       = 2B
0.00.278.105 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.106 I llm_load_print_meta: model params     = 2.51 B
0.00.278.107 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.107 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.108 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.108 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.109 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.109 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.109 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.109 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.110 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.110 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.110 I llm_load_print_meta: max token length = 93
0.00.349.633 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.349.643 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.354.856 I llama_new_context_with_model: n_seq_max     = 1
0.00.354.864 I llama_new_context_with_model: n_ctx         = 4096
0.00.354.865 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.354.865 I llama_new_context_with_model: n_batch       = 2048
0.00.354.865 I llama_new_context_with_model: n_ubatch      = 512
0.00.354.866 I llama_new_context_with_model: flash_attn    = 0
0.00.354.869 I llama_new_context_with_model: freq_base     = 10000.0
0.00.354.870 I llama_new_context_with_model: freq_scale    = 1
0.00.354.871 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.354.894 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.369.953 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.369.968 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.370.061 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.350 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.371.357 I llama_new_context_with_model: graph nodes  = 601
0.00.371.358 I llama_new_context_with_model: graph splits = 1
0.00.371.361 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.371.361 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.462.232 I main: llama threadpool init, n_threads = 4
0.00.462.246 I 
0.00.462.329 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.462.333 I 
0.00.462.380 I sampler seed: 2142411716
0.00.462.390 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.399 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.462.403 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.403 I 
 increasively from 2015.

**a) Calculate the compound interest for the years 2015, 2016,

0.02.857.267 I llama_perf_sampler_print:    sampling time =       4.94 ms /    33 runs   (    0.15 ms per token,  6686.93 tokens per second)
0.02.857.270 I llama_perf_context_print:        load time =     461.84 ms
0.02.857.271 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.857.273 I llama_perf_context_print:        eval time =    2375.68 ms /    32 runs   (   74.24 ms per token,    13.47 tokens per second)
0.02.857.273 I llama_perf_context_print:       total time =    2395.04 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.902s
user	0m29.195s
sys	0m9.306s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4400 (6e1531ac)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40252.45 ms
main:    total time = 40252.45 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.527 I build: 4400 (6e1531ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.722 I main: llama backend init
0.00.000.728 I main: load the model and apply lora adapter, if any
0.00.021.296 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.302 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.314 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.319 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.320 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.323 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.323 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.324 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.324 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.325 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.326 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.329 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.330 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.330 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.331 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.332 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.602 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.749 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.578 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.584 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.585 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.585 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.586 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.587 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.587 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.589 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.590 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.590 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.591 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.591 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.594 I llama_model_loader: - type  f32:   37 tensors
0.00.130.595 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.596 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.351 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.554 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.271 I llm_load_vocab: special tokens cache size = 5
0.00.276.209 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.230 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.230 I llm_load_print_meta: arch             = gemma
0.00.276.231 I llm_load_print_meta: vocab type       = SPM
0.00.276.232 I llm_load_print_meta: n_vocab          = 256000
0.00.276.232 I llm_load_print_meta: n_merges         = 0
0.00.276.233 I llm_load_print_meta: vocab_only       = 0
0.00.276.233 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.233 I llm_load_print_meta: n_embd           = 2048
0.00.276.233 I llm_load_print_meta: n_layer          = 18
0.00.276.245 I llm_load_print_meta: n_head           = 8
0.00.276.246 I llm_load_print_meta: n_head_kv        = 1
0.00.276.246 I llm_load_print_meta: n_rot            = 256
0.00.276.247 I llm_load_print_meta: n_swa            = 0
0.00.276.248 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.248 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.249 I llm_load_print_meta: n_gqa            = 8
0.00.276.251 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.252 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.253 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.254 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.255 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.255 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.256 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.257 I llm_load_print_meta: n_ff             = 16384
0.00.276.258 I llm_load_print_meta: n_expert         = 0
0.00.276.259 I llm_load_print_meta: n_expert_used    = 0
0.00.276.259 I llm_load_print_meta: causal attn      = 1
0.00.276.260 I llm_load_print_meta: pooling type     = 0
0.00.276.260 I llm_load_print_meta: rope type        = 2
0.00.276.261 I llm_load_print_meta: rope scaling     = linear
0.00.276.262 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.263 I llm_load_print_meta: freq_scale_train = 1
0.00.276.266 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.267 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.267 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.267 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.267 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.268 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.268 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.269 I llm_load_print_meta: model type       = 2B
0.00.276.270 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.276.271 I llm_load_print_meta: model params     = 2.51 B
0.00.276.271 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.276.272 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.273 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.273 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.273 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.274 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.274 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.274 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.275 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.275 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.275 I llm_load_print_meta: max token length = 93
0.00.335.584 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.335.593 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.335.593 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.335.594 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.335.594 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.335.595 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.340.872 I llama_new_context_with_model: n_seq_max     = 1
0.00.340.878 I llama_new_context_with_model: n_ctx         = 4096
0.00.340.879 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.340.879 I llama_new_context_with_model: n_batch       = 2048
0.00.340.879 I llama_new_context_with_model: n_ubatch      = 512
0.00.340.880 I llama_new_context_with_model: flash_attn    = 0
0.00.340.882 I llama_new_context_with_model: freq_base     = 10000.0
0.00.340.883 I llama_new_context_with_model: freq_scale    = 1
0.00.340.884 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.340.903 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.355.645 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.355.659 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.355.758 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.091 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.357.097 I llama_new_context_with_model: graph nodes  = 601
0.00.357.098 I llama_new_context_with_model: graph splits = 1
0.00.357.100 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.357.101 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.432.618 I main: llama threadpool init, n_threads = 4
0.00.432.634 I 
0.00.432.716 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.432.716 I 
0.00.432.760 I sampler seed: 1182164043
0.00.432.771 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.432.774 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.432.775 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.432.775 I 
 encompates a wide range of topics, including:

**Humanities and Social Sciences:**
- History
- Literature
- Philosophy
- Political science


0.02.016.346 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6565.86 tokens per second)
0.02.016.348 I llama_perf_context_print:        load time =     431.87 ms
0.02.016.350 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.016.351 I llama_perf_context_print:        eval time =    1565.32 ms /    32 runs   (   48.92 ms per token,    20.44 tokens per second)
0.02.016.352 I llama_perf_context_print:       total time =    1583.74 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4400 (6e1531ac)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40222.86 ms
main:    total time = 40222.86 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.533 I build: 4400 (6e1531ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.000.751 I main: load the model and apply lora adapter, if any
0.00.021.509 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.527 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.533 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.536 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.539 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.540 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.541 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.542 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.542 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.543 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.547 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.548 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.549 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.549 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.550 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.784 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.916 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.727 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.732 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.733 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.733 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.734 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.735 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.735 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.737 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.738 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.741 I llama_model_loader: - type  f32:   37 tensors
0.00.130.742 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.743 I llama_model_loader: - type q6_K:   19 tensors
0.00.212.011 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.266.016 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.266.759 I llm_load_vocab: special tokens cache size = 5
0.00.287.680 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.701 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.701 I llm_load_print_meta: arch             = gemma
0.00.287.702 I llm_load_print_meta: vocab type       = SPM
0.00.287.703 I llm_load_print_meta: n_vocab          = 256000
0.00.287.703 I llm_load_print_meta: n_merges         = 0
0.00.287.703 I llm_load_print_meta: vocab_only       = 0
0.00.287.704 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.704 I llm_load_print_meta: n_embd           = 2048
0.00.287.704 I llm_load_print_meta: n_layer          = 18
0.00.287.716 I llm_load_print_meta: n_head           = 8
0.00.287.717 I llm_load_print_meta: n_head_kv        = 1
0.00.287.717 I llm_load_print_meta: n_rot            = 256
0.00.287.717 I llm_load_print_meta: n_swa            = 0
0.00.287.718 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.718 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.719 I llm_load_print_meta: n_gqa            = 8
0.00.287.720 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.721 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.722 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.723 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.723 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.724 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.724 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.725 I llm_load_print_meta: n_ff             = 16384
0.00.287.725 I llm_load_print_meta: n_expert         = 0
0.00.287.725 I llm_load_print_meta: n_expert_used    = 0
0.00.287.726 I llm_load_print_meta: causal attn      = 1
0.00.287.726 I llm_load_print_meta: pooling type     = 0
0.00.287.726 I llm_load_print_meta: rope type        = 2
0.00.287.726 I llm_load_print_meta: rope scaling     = linear
0.00.287.728 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.729 I llm_load_print_meta: freq_scale_train = 1
0.00.287.729 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.730 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.730 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.730 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.730 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.730 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.731 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.731 I llm_load_print_meta: model type       = 2B
0.00.287.732 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.287.732 I llm_load_print_meta: model params     = 2.51 B
0.00.287.733 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.287.733 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.734 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.734 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.735 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.735 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.736 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.736 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.736 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.737 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.737 I llm_load_print_meta: max token length = 93
0.00.346.216 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.351.526 I llama_new_context_with_model: n_seq_max     = 1
0.00.351.532 I llama_new_context_with_model: n_ctx         = 4096
0.00.351.533 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.351.533 I llama_new_context_with_model: n_batch       = 2048
0.00.351.534 I llama_new_context_with_model: n_ubatch      = 512
0.00.351.534 I llama_new_context_with_model: flash_attn    = 0
0.00.351.537 I llama_new_context_with_model: freq_base     = 10000.0
0.00.351.538 I llama_new_context_with_model: freq_scale    = 1
0.00.351.539 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.351.560 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.366.133 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.366.148 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.366.251 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.367.510 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.367.518 I llama_new_context_with_model: graph nodes  = 601
0.00.367.518 I llama_new_context_with_model: graph splits = 1
0.00.367.520 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.367.520 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.626 I main: llama threadpool init, n_threads = 4
0.00.441.642 I 
0.00.441.725 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.441.730 I 
0.00.441.782 I sampler seed: 399101891
0.00.441.793 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.804 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.441.809 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.809 I 
 seconary clauses in sentences.

A. A clause that contains a subject and a verb.

B. A clause that contains a subject but does not contain

0.01.998.686 I llama_perf_sampler_print:    sampling time =       5.16 ms /    33 runs   (    0.16 ms per token,  6397.83 tokens per second)
0.01.998.689 I llama_perf_context_print:        load time =     440.86 ms
0.01.998.690 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.998.691 I llama_perf_context_print:        eval time =    1537.42 ms /    32 runs   (   48.04 ms per token,    20.81 tokens per second)
0.01.998.692 I llama_perf_context_print:       total time =    1557.07 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.370s
user	10m24.435s
sys	0m6.822s
