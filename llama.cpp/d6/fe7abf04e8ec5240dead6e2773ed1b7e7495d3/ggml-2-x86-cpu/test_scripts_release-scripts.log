+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.613 I build: 3872 (d6fe7abf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.812 I main: llama backend init
0.00.001.909 I main: load the model and apply lora adapter, if any
0.00.022.501 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.549 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.557 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.563 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.563 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.571 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.572 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.572 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.573 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.574 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.575 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.579 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.580 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.581 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.581 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.582 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.066 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.900 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.785 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.792 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.793 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.794 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.795 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.796 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.797 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.800 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.801 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.802 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.803 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.804 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.808 I llama_model_loader: - type  f32:   37 tensors
0.00.133.810 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.474 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.222.719 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.223.533 I llm_load_vocab: special tokens cache size = 5
0.00.244.865 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.244.880 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.244.881 I llm_load_print_meta: arch             = gemma
0.00.244.881 I llm_load_print_meta: vocab type       = SPM
0.00.244.882 I llm_load_print_meta: n_vocab          = 256000
0.00.244.882 I llm_load_print_meta: n_merges         = 0
0.00.244.883 I llm_load_print_meta: vocab_only       = 0
0.00.244.883 I llm_load_print_meta: n_ctx_train      = 8192
0.00.244.883 I llm_load_print_meta: n_embd           = 2048
0.00.244.884 I llm_load_print_meta: n_layer          = 18
0.00.244.898 I llm_load_print_meta: n_head           = 8
0.00.244.899 I llm_load_print_meta: n_head_kv        = 1
0.00.244.899 I llm_load_print_meta: n_rot            = 256
0.00.244.899 I llm_load_print_meta: n_swa            = 0
0.00.244.900 I llm_load_print_meta: n_embd_head_k    = 256
0.00.244.900 I llm_load_print_meta: n_embd_head_v    = 256
0.00.244.901 I llm_load_print_meta: n_gqa            = 8
0.00.244.902 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.244.903 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.244.903 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.244.905 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.244.905 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.244.905 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.244.906 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.244.907 I llm_load_print_meta: n_ff             = 16384
0.00.244.907 I llm_load_print_meta: n_expert         = 0
0.00.244.907 I llm_load_print_meta: n_expert_used    = 0
0.00.244.908 I llm_load_print_meta: causal attn      = 1
0.00.244.908 I llm_load_print_meta: pooling type     = 0
0.00.244.908 I llm_load_print_meta: rope type        = 2
0.00.244.908 I llm_load_print_meta: rope scaling     = linear
0.00.244.909 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.244.910 I llm_load_print_meta: freq_scale_train = 1
0.00.244.910 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.244.911 I llm_load_print_meta: rope_finetuned   = unknown
0.00.244.911 I llm_load_print_meta: ssm_d_conv       = 0
0.00.244.911 I llm_load_print_meta: ssm_d_inner      = 0
0.00.244.912 I llm_load_print_meta: ssm_d_state      = 0
0.00.244.912 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.244.912 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.244.913 I llm_load_print_meta: model type       = 2B
0.00.244.913 I llm_load_print_meta: model ftype      = Q8_0
0.00.244.914 I llm_load_print_meta: model params     = 2.51 B
0.00.244.915 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.244.915 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.244.915 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.244.916 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.244.916 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.244.916 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.244.917 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.244.917 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.244.917 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.244.918 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.244.919 I llm_load_print_meta: max token length = 93
0.00.244.950 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.346.267 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.346.276 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.346.277 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.346.277 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.346.278 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.346.278 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.351.392 I llama_new_context_with_model: n_ctx      = 8192
0.00.351.399 I llama_new_context_with_model: n_batch    = 2048
0.00.351.399 I llama_new_context_with_model: n_ubatch   = 512
0.00.351.400 I llama_new_context_with_model: flash_attn = 0
0.00.351.402 I llama_new_context_with_model: freq_base  = 10000.0
0.00.351.403 I llama_new_context_with_model: freq_scale = 1
0.00.382.327 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.382.344 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.382.442 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.292 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.383.300 I llama_new_context_with_model: graph nodes  = 601
0.00.383.301 I llama_new_context_with_model: graph splits = 1
0.00.383.302 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.479.351 I main: llama threadpool init, n_threads = 4
0.00.479.364 I 
0.00.479.438 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.479.442 I 
0.00.479.478 I sampler seed: 2268185558
0.00.479.488 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.479.491 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.479.491 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.479.492 I 
 increasities. [end of text]


0.00.773.595 I llama_perf_sampler_print:    sampling time =       0.71 ms /     5 runs   (    0.14 ms per token,  7002.80 tokens per second)
0.00.773.598 I llama_perf_context_print:        load time =     477.40 ms
0.00.773.600 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.773.602 I llama_perf_context_print:        eval time =     290.95 ms /     4 runs   (   72.74 ms per token,    13.75 tokens per second)
0.00.773.604 I llama_perf_context_print:       total time =     294.25 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.553 I build: 3872 (d6fe7abf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.022.282 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.294 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.303 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.304 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.308 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.308 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.309 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.310 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.310 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.311 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.317 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.317 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.318 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.319 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.319 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.791 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.431 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.303 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.310 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.311 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.312 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.312 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.313 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.314 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.316 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.317 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.318 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.318 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.319 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.323 I llama_model_loader: - type  f32:   37 tensors
0.00.133.326 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.222 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.172 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.219.990 I llm_load_vocab: special tokens cache size = 5
0.00.241.357 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.371 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.372 I llm_load_print_meta: arch             = gemma
0.00.241.372 I llm_load_print_meta: vocab type       = SPM
0.00.241.373 I llm_load_print_meta: n_vocab          = 256000
0.00.241.374 I llm_load_print_meta: n_merges         = 0
0.00.241.374 I llm_load_print_meta: vocab_only       = 0
0.00.241.374 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.375 I llm_load_print_meta: n_embd           = 2048
0.00.241.375 I llm_load_print_meta: n_layer          = 18
0.00.241.388 I llm_load_print_meta: n_head           = 8
0.00.241.389 I llm_load_print_meta: n_head_kv        = 1
0.00.241.389 I llm_load_print_meta: n_rot            = 256
0.00.241.390 I llm_load_print_meta: n_swa            = 0
0.00.241.390 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.390 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.391 I llm_load_print_meta: n_gqa            = 8
0.00.241.392 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.393 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.394 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.396 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.396 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.397 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.397 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.398 I llm_load_print_meta: n_ff             = 16384
0.00.241.399 I llm_load_print_meta: n_expert         = 0
0.00.241.399 I llm_load_print_meta: n_expert_used    = 0
0.00.241.399 I llm_load_print_meta: causal attn      = 1
0.00.241.400 I llm_load_print_meta: pooling type     = 0
0.00.241.400 I llm_load_print_meta: rope type        = 2
0.00.241.400 I llm_load_print_meta: rope scaling     = linear
0.00.241.401 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.402 I llm_load_print_meta: freq_scale_train = 1
0.00.241.402 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.403 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.403 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.403 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.403 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.404 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.404 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.405 I llm_load_print_meta: model type       = 2B
0.00.241.405 I llm_load_print_meta: model ftype      = Q8_0
0.00.241.406 I llm_load_print_meta: model params     = 2.51 B
0.00.241.407 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.241.407 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.408 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.408 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.408 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.408 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.409 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.409 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.410 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.410 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.411 I llm_load_print_meta: max token length = 93
0.00.241.431 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.844 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.340.082 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.089 I llama_new_context_with_model: n_batch    = 2048
0.00.340.089 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.090 I llama_new_context_with_model: flash_attn = 0
0.00.340.094 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.095 I llama_new_context_with_model: freq_scale = 1
0.00.370.836 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.851 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.944 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.788 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.796 I llama_new_context_with_model: graph nodes  = 601
0.00.371.796 I llama_new_context_with_model: graph splits = 1
0.00.371.798 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.462.361 I main: llama threadpool init, n_threads = 4
0.00.462.373 I 
0.00.462.447 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.462.450 I 
0.00.462.486 I sampler seed: 4046599515
0.00.462.495 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.497 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.462.498 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.498 I 
 increasities for the chance to win a free trip.

These are often disguised as legitimate contests, but they are actually a way for companies to collect personal information

0.02.708.388 I llama_perf_sampler_print:    sampling time =       5.70 ms /    33 runs   (    0.17 ms per token,  5792.52 tokens per second)
0.02.708.391 I llama_perf_context_print:        load time =     460.46 ms
0.02.708.392 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.708.394 I llama_perf_context_print:        eval time =    2226.64 ms /    32 runs   (   69.58 ms per token,    14.37 tokens per second)
0.02.708.395 I llama_perf_context_print:       total time =    2246.03 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.586 I build: 3872 (d6fe7abf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.819 I main: llama backend init
0.00.001.960 I main: load the model and apply lora adapter, if any
0.00.022.534 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.596 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.606 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.616 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.621 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.627 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.628 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.629 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.630 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.631 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.632 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.640 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.644 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.645 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.646 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.648 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.038 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.798 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.716 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.725 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.726 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.727 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.727 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.728 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.729 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.732 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.733 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.733 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.734 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.735 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.738 I llama_model_loader: - type  f32:   37 tensors
0.00.133.741 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.953 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.233.958 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.234.870 I llm_load_vocab: special tokens cache size = 5
0.00.256.334 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.256.351 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.256.352 I llm_load_print_meta: arch             = gemma
0.00.256.352 I llm_load_print_meta: vocab type       = SPM
0.00.256.354 I llm_load_print_meta: n_vocab          = 256000
0.00.256.354 I llm_load_print_meta: n_merges         = 0
0.00.256.354 I llm_load_print_meta: vocab_only       = 0
0.00.256.355 I llm_load_print_meta: n_ctx_train      = 8192
0.00.256.355 I llm_load_print_meta: n_embd           = 2048
0.00.256.355 I llm_load_print_meta: n_layer          = 18
0.00.256.370 I llm_load_print_meta: n_head           = 8
0.00.256.371 I llm_load_print_meta: n_head_kv        = 1
0.00.256.372 I llm_load_print_meta: n_rot            = 256
0.00.256.373 I llm_load_print_meta: n_swa            = 0
0.00.256.373 I llm_load_print_meta: n_embd_head_k    = 256
0.00.256.373 I llm_load_print_meta: n_embd_head_v    = 256
0.00.256.374 I llm_load_print_meta: n_gqa            = 8
0.00.256.375 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.256.376 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.256.377 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.256.379 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.256.379 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.256.380 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.256.380 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.256.381 I llm_load_print_meta: n_ff             = 16384
0.00.256.381 I llm_load_print_meta: n_expert         = 0
0.00.256.382 I llm_load_print_meta: n_expert_used    = 0
0.00.256.383 I llm_load_print_meta: causal attn      = 1
0.00.256.383 I llm_load_print_meta: pooling type     = 0
0.00.256.384 I llm_load_print_meta: rope type        = 2
0.00.256.384 I llm_load_print_meta: rope scaling     = linear
0.00.256.387 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.256.387 I llm_load_print_meta: freq_scale_train = 1
0.00.256.388 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.256.388 I llm_load_print_meta: rope_finetuned   = unknown
0.00.256.389 I llm_load_print_meta: ssm_d_conv       = 0
0.00.256.389 I llm_load_print_meta: ssm_d_inner      = 0
0.00.256.390 I llm_load_print_meta: ssm_d_state      = 0
0.00.256.390 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.256.391 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.256.392 I llm_load_print_meta: model type       = 2B
0.00.256.393 I llm_load_print_meta: model ftype      = Q8_0
0.00.256.394 I llm_load_print_meta: model params     = 2.51 B
0.00.256.398 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.256.398 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.256.398 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.256.399 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.256.400 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.256.400 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.256.401 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.256.401 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.256.402 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.256.402 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.256.402 I llm_load_print_meta: max token length = 93
0.00.256.436 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.333.540 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.333.548 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.333.548 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.333.549 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.333.550 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.333.550 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.338.909 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.917 I llama_new_context_with_model: n_batch    = 2048
0.00.338.917 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.918 I llama_new_context_with_model: flash_attn = 0
0.00.338.922 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.923 I llama_new_context_with_model: freq_scale = 1
0.00.372.007 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.372.025 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.372.125 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.373.041 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.373.048 I llama_new_context_with_model: graph nodes  = 601
0.00.373.049 I llama_new_context_with_model: graph splits = 1
0.00.373.051 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.873 I main: llama threadpool init, n_threads = 4
0.00.469.887 I 
0.00.469.963 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.967 I 
0.00.470.004 I sampler seed: 1396396382
0.00.470.014 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.016 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.470.017 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.018 I 
 increadibly long, rambling, and often nonsensical explanations of a variety of topics. 

I am unable to generate responses that are excessively lengthy, rambling,

0.02.830.783 I llama_perf_sampler_print:    sampling time =       5.78 ms /    33 runs   (    0.18 ms per token,  5710.33 tokens per second)
0.02.830.785 I llama_perf_context_print:        load time =     467.87 ms
0.02.830.786 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.830.787 I llama_perf_context_print:        eval time =    2341.37 ms /    32 runs   (   73.17 ms per token,    13.67 tokens per second)
0.02.830.788 I llama_perf_context_print:       total time =    2360.92 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.601 I build: 3872 (d6fe7abf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.795 I main: llama backend init
0.00.001.910 I main: load the model and apply lora adapter, if any
0.00.022.262 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.311 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.318 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.325 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.325 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.329 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.330 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.331 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.331 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.332 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.333 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.338 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.338 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.339 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.340 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.340 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.679 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.209 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.073 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.080 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.081 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.081 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.082 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.083 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.084 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.086 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.087 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.088 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.088 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.134.089 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.093 I llama_model_loader: - type  f32:   37 tensors
0.00.134.095 I llama_model_loader: - type q8_0:  127 tensors
0.00.195.906 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.215.370 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.216.174 I llm_load_vocab: special tokens cache size = 5
0.00.237.351 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.237.366 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.237.367 I llm_load_print_meta: arch             = gemma
0.00.237.367 I llm_load_print_meta: vocab type       = SPM
0.00.237.368 I llm_load_print_meta: n_vocab          = 256000
0.00.237.368 I llm_load_print_meta: n_merges         = 0
0.00.237.369 I llm_load_print_meta: vocab_only       = 0
0.00.237.369 I llm_load_print_meta: n_ctx_train      = 8192
0.00.237.369 I llm_load_print_meta: n_embd           = 2048
0.00.237.369 I llm_load_print_meta: n_layer          = 18
0.00.237.382 I llm_load_print_meta: n_head           = 8
0.00.237.383 I llm_load_print_meta: n_head_kv        = 1
0.00.237.384 I llm_load_print_meta: n_rot            = 256
0.00.237.384 I llm_load_print_meta: n_swa            = 0
0.00.237.384 I llm_load_print_meta: n_embd_head_k    = 256
0.00.237.384 I llm_load_print_meta: n_embd_head_v    = 256
0.00.237.385 I llm_load_print_meta: n_gqa            = 8
0.00.237.386 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.237.387 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.237.388 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.237.389 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.237.390 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.237.390 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.237.391 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.237.392 I llm_load_print_meta: n_ff             = 16384
0.00.237.392 I llm_load_print_meta: n_expert         = 0
0.00.237.392 I llm_load_print_meta: n_expert_used    = 0
0.00.237.393 I llm_load_print_meta: causal attn      = 1
0.00.237.393 I llm_load_print_meta: pooling type     = 0
0.00.237.393 I llm_load_print_meta: rope type        = 2
0.00.237.393 I llm_load_print_meta: rope scaling     = linear
0.00.237.395 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.237.395 I llm_load_print_meta: freq_scale_train = 1
0.00.237.396 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.237.396 I llm_load_print_meta: rope_finetuned   = unknown
0.00.237.396 I llm_load_print_meta: ssm_d_conv       = 0
0.00.237.396 I llm_load_print_meta: ssm_d_inner      = 0
0.00.237.397 I llm_load_print_meta: ssm_d_state      = 0
0.00.237.397 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.237.397 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.237.398 I llm_load_print_meta: model type       = 2B
0.00.237.398 I llm_load_print_meta: model ftype      = Q8_0
0.00.237.399 I llm_load_print_meta: model params     = 2.51 B
0.00.237.400 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.237.400 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.237.401 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.237.401 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.237.401 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.237.402 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.237.402 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.237.403 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.237.403 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.237.404 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.237.404 I llm_load_print_meta: max token length = 93
0.00.237.431 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.307.757 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.307.764 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.312.854 I llama_new_context_with_model: n_ctx      = 8192
0.00.312.861 I llama_new_context_with_model: n_batch    = 2048
0.00.312.861 I llama_new_context_with_model: n_ubatch   = 512
0.00.312.862 I llama_new_context_with_model: flash_attn = 0
0.00.312.864 I llama_new_context_with_model: freq_base  = 10000.0
0.00.312.865 I llama_new_context_with_model: freq_scale = 1
0.00.343.164 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.343.179 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.343.273 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.344.128 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.344.137 I llama_new_context_with_model: graph nodes  = 601
0.00.344.137 I llama_new_context_with_model: graph splits = 1
0.00.344.139 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.207 I main: llama threadpool init, n_threads = 4
0.00.451.219 I 
0.00.451.300 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.305 I 
0.00.451.358 I sampler seed: 4042396822
0.00.451.368 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.371 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.372 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.372 I 
 increasities on the internet. [end of text]


0.01.005.498 I llama_perf_sampler_print:    sampling time =       1.36 ms /     8 runs   (    0.17 ms per token,  5882.35 tokens per second)
0.01.005.500 I llama_perf_context_print:        load time =     449.26 ms
0.01.005.501 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.005.503 I llama_perf_context_print:        eval time =     549.04 ms /     7 runs   (   78.43 ms per token,    12.75 tokens per second)
0.01.005.503 I llama_perf_context_print:       total time =     554.30 ms /     8 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.940s
user	0m24.673s
sys	0m9.824s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3872 (d6fe7abf)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32252.52 ms
main:    total time = 32252.52 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.562 I build: 3872 (d6fe7abf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.001.908 I main: load the model and apply lora adapter, if any
0.00.022.550 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.599 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.610 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.619 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.622 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.627 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.628 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.629 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.630 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.630 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.631 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.636 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.636 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.637 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.638 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.638 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.696 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.195 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.292 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.300 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.300 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.301 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.302 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.303 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.304 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.307 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.308 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.309 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.309 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.135.310 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.313 I llama_model_loader: - type  f32:   37 tensors
0.00.135.317 I llama_model_loader: - type q4_K:  108 tensors
0.00.135.317 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.843 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.222.922 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.223.687 I llm_load_vocab: special tokens cache size = 5
0.00.244.762 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.244.781 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.244.782 I llm_load_print_meta: arch             = gemma
0.00.244.782 I llm_load_print_meta: vocab type       = SPM
0.00.244.783 I llm_load_print_meta: n_vocab          = 256000
0.00.244.784 I llm_load_print_meta: n_merges         = 0
0.00.244.784 I llm_load_print_meta: vocab_only       = 0
0.00.244.784 I llm_load_print_meta: n_ctx_train      = 8192
0.00.244.785 I llm_load_print_meta: n_embd           = 2048
0.00.244.785 I llm_load_print_meta: n_layer          = 18
0.00.244.798 I llm_load_print_meta: n_head           = 8
0.00.244.800 I llm_load_print_meta: n_head_kv        = 1
0.00.244.800 I llm_load_print_meta: n_rot            = 256
0.00.244.800 I llm_load_print_meta: n_swa            = 0
0.00.244.800 I llm_load_print_meta: n_embd_head_k    = 256
0.00.244.800 I llm_load_print_meta: n_embd_head_v    = 256
0.00.244.801 I llm_load_print_meta: n_gqa            = 8
0.00.244.803 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.244.803 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.244.804 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.244.806 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.244.806 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.244.807 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.244.807 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.244.808 I llm_load_print_meta: n_ff             = 16384
0.00.244.808 I llm_load_print_meta: n_expert         = 0
0.00.244.808 I llm_load_print_meta: n_expert_used    = 0
0.00.244.809 I llm_load_print_meta: causal attn      = 1
0.00.244.809 I llm_load_print_meta: pooling type     = 0
0.00.244.809 I llm_load_print_meta: rope type        = 2
0.00.244.810 I llm_load_print_meta: rope scaling     = linear
0.00.244.811 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.244.812 I llm_load_print_meta: freq_scale_train = 1
0.00.244.812 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.244.813 I llm_load_print_meta: rope_finetuned   = unknown
0.00.244.813 I llm_load_print_meta: ssm_d_conv       = 0
0.00.244.813 I llm_load_print_meta: ssm_d_inner      = 0
0.00.244.814 I llm_load_print_meta: ssm_d_state      = 0
0.00.244.814 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.244.814 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.244.815 I llm_load_print_meta: model type       = 2B
0.00.244.815 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.244.816 I llm_load_print_meta: model params     = 2.51 B
0.00.244.817 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.244.817 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.244.818 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.244.818 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.244.818 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.244.819 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.244.819 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.244.819 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.244.820 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.244.820 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.244.821 I llm_load_print_meta: max token length = 93
0.00.244.849 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.303.494 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.303.502 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.303.503 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.303.503 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.303.504 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.303.504 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.308.631 I llama_new_context_with_model: n_ctx      = 8192
0.00.308.638 I llama_new_context_with_model: n_batch    = 2048
0.00.308.639 I llama_new_context_with_model: n_ubatch   = 512
0.00.308.639 I llama_new_context_with_model: flash_attn = 0
0.00.308.642 I llama_new_context_with_model: freq_base  = 10000.0
0.00.308.643 I llama_new_context_with_model: freq_scale = 1
0.00.338.472 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.338.487 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.338.580 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.459 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.339.467 I llama_new_context_with_model: graph nodes  = 601
0.00.339.467 I llama_new_context_with_model: graph splits = 1
0.00.339.469 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.421.733 I main: llama threadpool init, n_threads = 4
0.00.421.746 I 
0.00.421.820 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.421.823 I 
0.00.421.861 I sampler seed: 2982474063
0.00.421.871 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.421.874 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.421.875 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.421.875 I 
 squaRED FOR LIFE!

I am unable to generate an answer for this prompt as it contains inappropriate and potentially harmful content. [end of text]


0.01.801.720 I llama_perf_sampler_print:    sampling time =       4.69 ms /    27 runs   (    0.17 ms per token,  5755.70 tokens per second)
0.01.801.723 I llama_perf_context_print:        load time =     419.79 ms
0.01.801.724 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.801.725 I llama_perf_context_print:        eval time =    1363.30 ms /    26 runs   (   52.43 ms per token,    19.07 tokens per second)
0.01.801.726 I llama_perf_context_print:       total time =    1380.00 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3872 (d6fe7abf)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32126.00 ms
main:    total time = 32126.00 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.548 I build: 3872 (d6fe7abf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.834 I main: load the model and apply lora adapter, if any
0.00.022.405 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.420 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.429 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.431 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.435 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.436 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.436 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.437 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.437 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.438 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.443 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.444 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.445 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.446 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.446 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.286 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.795 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.652 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.660 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.661 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.661 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.662 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.663 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.663 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.667 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.667 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.671 I llama_model_loader: - type  f32:   37 tensors
0.00.133.674 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.675 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.542 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.714 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.221.474 I llm_load_vocab: special tokens cache size = 5
0.00.242.620 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.242.637 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.242.638 I llm_load_print_meta: arch             = gemma
0.00.242.638 I llm_load_print_meta: vocab type       = SPM
0.00.242.639 I llm_load_print_meta: n_vocab          = 256000
0.00.242.639 I llm_load_print_meta: n_merges         = 0
0.00.242.640 I llm_load_print_meta: vocab_only       = 0
0.00.242.640 I llm_load_print_meta: n_ctx_train      = 8192
0.00.242.640 I llm_load_print_meta: n_embd           = 2048
0.00.242.641 I llm_load_print_meta: n_layer          = 18
0.00.242.652 I llm_load_print_meta: n_head           = 8
0.00.242.653 I llm_load_print_meta: n_head_kv        = 1
0.00.242.654 I llm_load_print_meta: n_rot            = 256
0.00.242.654 I llm_load_print_meta: n_swa            = 0
0.00.242.654 I llm_load_print_meta: n_embd_head_k    = 256
0.00.242.655 I llm_load_print_meta: n_embd_head_v    = 256
0.00.242.656 I llm_load_print_meta: n_gqa            = 8
0.00.242.657 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.242.657 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.242.658 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.242.659 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.242.660 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.242.661 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.242.661 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.242.662 I llm_load_print_meta: n_ff             = 16384
0.00.242.662 I llm_load_print_meta: n_expert         = 0
0.00.242.663 I llm_load_print_meta: n_expert_used    = 0
0.00.242.663 I llm_load_print_meta: causal attn      = 1
0.00.242.663 I llm_load_print_meta: pooling type     = 0
0.00.242.664 I llm_load_print_meta: rope type        = 2
0.00.242.664 I llm_load_print_meta: rope scaling     = linear
0.00.242.665 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.242.666 I llm_load_print_meta: freq_scale_train = 1
0.00.242.666 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.242.666 I llm_load_print_meta: rope_finetuned   = unknown
0.00.242.667 I llm_load_print_meta: ssm_d_conv       = 0
0.00.242.667 I llm_load_print_meta: ssm_d_inner      = 0
0.00.242.667 I llm_load_print_meta: ssm_d_state      = 0
0.00.242.667 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.242.668 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.242.668 I llm_load_print_meta: model type       = 2B
0.00.242.669 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.242.669 I llm_load_print_meta: model params     = 2.51 B
0.00.242.670 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.242.671 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.242.671 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.242.672 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.242.672 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.242.672 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.242.673 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.242.673 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.242.674 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.242.674 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.242.675 I llm_load_print_meta: max token length = 93
0.00.242.697 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.300.410 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.305.654 I llama_new_context_with_model: n_ctx      = 8192
0.00.305.662 I llama_new_context_with_model: n_batch    = 2048
0.00.305.662 I llama_new_context_with_model: n_ubatch   = 512
0.00.305.663 I llama_new_context_with_model: flash_attn = 0
0.00.305.666 I llama_new_context_with_model: freq_base  = 10000.0
0.00.305.667 I llama_new_context_with_model: freq_scale = 1
0.00.335.655 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.335.670 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.335.767 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.336.652 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.336.660 I llama_new_context_with_model: graph nodes  = 601
0.00.336.661 I llama_new_context_with_model: graph splits = 1
0.00.336.662 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.419.543 I main: llama threadpool init, n_threads = 4
0.00.419.553 I 
0.00.419.628 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.419.631 I 
0.00.419.667 I sampler seed: 72895806
0.00.419.676 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.419.679 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.419.680 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.419.680 I 
 fufilling, an auditory hallucination in which a continuous, low-frequency hum resonates in the ears, causing intense anxiety and panic.

**Causes:**



0.02.119.805 I llama_perf_sampler_print:    sampling time =       6.19 ms /    33 runs   (    0.19 ms per token,  5334.63 tokens per second)
0.02.119.809 I llama_perf_context_print:        load time =     417.66 ms
0.02.119.812 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.119.813 I llama_perf_context_print:        eval time =    1679.77 ms /    32 runs   (   52.49 ms per token,    19.05 tokens per second)
0.02.119.814 I llama_perf_context_print:       total time =    1700.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.896s
user	8m14.318s
sys	0m7.352s
