+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.625 I build: 3923 (60d8af44) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.846 I main: llama backend init
0.00.002.784 I main: load the model and apply lora adapter, if any
0.00.024.536 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.747 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.833 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.843 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.845 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.849 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.851 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.852 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.853 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.854 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.863 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.870 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.871 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.872 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.873 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.875 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.170.408 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.270.972 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.289.218 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.289.225 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.289.226 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.289.227 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.289.228 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.289.230 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.289.231 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.289.234 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.289.235 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.289.236 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.289.237 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.289.238 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.289.246 I llama_model_loader: - type  f32:   37 tensors
0.00.289.251 I llama_model_loader: - type q8_0:  127 tensors
0.00.480.157 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.526.461 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.528.541 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.534.693 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.547.635 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.548.628 I llm_load_vocab: special tokens cache size = 5
0.00.660.502 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.660.572 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.660.573 I llm_load_print_meta: arch             = gemma
0.00.660.574 I llm_load_print_meta: vocab type       = SPM
0.00.660.575 I llm_load_print_meta: n_vocab          = 256000
0.00.660.577 I llm_load_print_meta: n_merges         = 0
0.00.660.578 I llm_load_print_meta: vocab_only       = 0
0.00.660.578 I llm_load_print_meta: n_ctx_train      = 8192
0.00.660.579 I llm_load_print_meta: n_embd           = 2048
0.00.660.579 I llm_load_print_meta: n_layer          = 18
0.00.660.641 I llm_load_print_meta: n_head           = 8
0.00.660.669 I llm_load_print_meta: n_head_kv        = 1
0.00.660.670 I llm_load_print_meta: n_rot            = 256
0.00.660.671 I llm_load_print_meta: n_swa            = 0
0.00.660.671 I llm_load_print_meta: n_embd_head_k    = 256
0.00.660.671 I llm_load_print_meta: n_embd_head_v    = 256
0.00.660.677 I llm_load_print_meta: n_gqa            = 8
0.00.660.682 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.660.687 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.660.689 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.660.690 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.660.699 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.660.706 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.660.707 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.660.712 I llm_load_print_meta: n_ff             = 16384
0.00.660.713 I llm_load_print_meta: n_expert         = 0
0.00.660.713 I llm_load_print_meta: n_expert_used    = 0
0.00.660.714 I llm_load_print_meta: causal attn      = 1
0.00.660.721 I llm_load_print_meta: pooling type     = 0
0.00.660.722 I llm_load_print_meta: rope type        = 2
0.00.660.722 I llm_load_print_meta: rope scaling     = linear
0.00.660.725 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.660.725 I llm_load_print_meta: freq_scale_train = 1
0.00.660.726 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.660.731 I llm_load_print_meta: rope_finetuned   = unknown
0.00.660.731 I llm_load_print_meta: ssm_d_conv       = 0
0.00.660.732 I llm_load_print_meta: ssm_d_inner      = 0
0.00.660.732 I llm_load_print_meta: ssm_d_state      = 0
0.00.660.732 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.660.732 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.660.739 I llm_load_print_meta: model type       = 2B
0.00.660.740 I llm_load_print_meta: model ftype      = Q8_0
0.00.660.748 I llm_load_print_meta: model params     = 2.51 B
0.00.660.756 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.660.756 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.660.757 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.660.758 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.660.763 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.660.764 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.660.764 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.660.765 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.660.770 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.660.772 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.660.773 I llm_load_print_meta: max token length = 93
0.00.660.943 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.762.262 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.762.275 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.762.276 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.762.276 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.762.277 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.762.278 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.767.884 I llama_new_context_with_model: n_ctx      = 8192
0.00.767.890 I llama_new_context_with_model: n_batch    = 2048
0.00.767.890 I llama_new_context_with_model: n_ubatch   = 512
0.00.767.890 I llama_new_context_with_model: flash_attn = 0
0.00.767.893 I llama_new_context_with_model: freq_base  = 10000.0
0.00.767.894 I llama_new_context_with_model: freq_scale = 1
0.00.797.206 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.797.252 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.797.365 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.798.750 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.798.756 I llama_new_context_with_model: graph nodes  = 601
0.00.798.756 I llama_new_context_with_model: graph splits = 1
0.00.798.773 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.410.941 I main: llama threadpool init, n_threads = 4
0.01.410.953 I 
0.01.411.060 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.411.064 I 
0.01.411.243 I sampler seed: 4103634211
0.01.411.254 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.411.269 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.411.271 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.411.272 I 
 increasities and anxieties, but it is not the fear itself that consumes her. Rather, it is the fear of what will happen if she does not control it

0.14.823.805 I llama_perf_sampler_print:    sampling time =      49.58 ms /    33 runs   (    1.50 ms per token,   665.62 tokens per second)
0.14.823.808 I llama_perf_context_print:        load time =    1408.07 ms
0.14.823.810 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.823.811 I llama_perf_context_print:        eval time =   13331.11 ms /    32 runs   (  416.60 ms per token,     2.40 tokens per second)
0.14.823.826 I llama_perf_context_print:       total time =   13412.87 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.659 I build: 3923 (60d8af44) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.861 I main: llama backend init
0.00.002.814 I main: load the model and apply lora adapter, if any
0.00.025.186 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.279 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.294 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.297 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.301 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.305 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.306 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.307 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.308 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.310 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.316 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.317 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.318 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.319 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.321 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.380 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.864 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.791 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.799 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.800 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.802 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.802 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.804 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.805 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.809 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.810 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.811 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.812 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.267.813 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.821 I llama_model_loader: - type  f32:   37 tensors
0.00.267.825 I llama_model_loader: - type q8_0:  127 tensors
0.00.455.763 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.499.440 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.501.191 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.506.488 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.517.916 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.518.912 I llm_load_vocab: special tokens cache size = 5
0.00.627.473 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.627.553 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.627.557 I llm_load_print_meta: arch             = gemma
0.00.627.558 I llm_load_print_meta: vocab type       = SPM
0.00.627.559 I llm_load_print_meta: n_vocab          = 256000
0.00.627.561 I llm_load_print_meta: n_merges         = 0
0.00.627.562 I llm_load_print_meta: vocab_only       = 0
0.00.627.562 I llm_load_print_meta: n_ctx_train      = 8192
0.00.627.563 I llm_load_print_meta: n_embd           = 2048
0.00.627.563 I llm_load_print_meta: n_layer          = 18
0.00.627.630 I llm_load_print_meta: n_head           = 8
0.00.627.640 I llm_load_print_meta: n_head_kv        = 1
0.00.627.641 I llm_load_print_meta: n_rot            = 256
0.00.627.642 I llm_load_print_meta: n_swa            = 0
0.00.627.642 I llm_load_print_meta: n_embd_head_k    = 256
0.00.627.643 I llm_load_print_meta: n_embd_head_v    = 256
0.00.627.647 I llm_load_print_meta: n_gqa            = 8
0.00.627.652 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.627.657 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.627.658 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.627.660 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.627.661 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.627.661 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.627.661 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.627.667 I llm_load_print_meta: n_ff             = 16384
0.00.627.667 I llm_load_print_meta: n_expert         = 0
0.00.627.667 I llm_load_print_meta: n_expert_used    = 0
0.00.627.668 I llm_load_print_meta: causal attn      = 1
0.00.627.669 I llm_load_print_meta: pooling type     = 0
0.00.627.669 I llm_load_print_meta: rope type        = 2
0.00.627.670 I llm_load_print_meta: rope scaling     = linear
0.00.627.672 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.627.673 I llm_load_print_meta: freq_scale_train = 1
0.00.627.673 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.627.674 I llm_load_print_meta: rope_finetuned   = unknown
0.00.627.674 I llm_load_print_meta: ssm_d_conv       = 0
0.00.627.675 I llm_load_print_meta: ssm_d_inner      = 0
0.00.627.675 I llm_load_print_meta: ssm_d_state      = 0
0.00.627.675 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.627.676 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.627.679 I llm_load_print_meta: model type       = 2B
0.00.627.680 I llm_load_print_meta: model ftype      = Q8_0
0.00.627.681 I llm_load_print_meta: model params     = 2.51 B
0.00.627.682 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.627.682 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.627.683 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.627.683 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.627.684 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.627.684 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.627.684 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.627.685 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.627.691 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.627.692 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.627.693 I llm_load_print_meta: max token length = 93
0.00.627.857 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.723.803 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.729.535 I llama_new_context_with_model: n_ctx      = 8192
0.00.729.543 I llama_new_context_with_model: n_batch    = 2048
0.00.729.544 I llama_new_context_with_model: n_ubatch   = 512
0.00.729.544 I llama_new_context_with_model: flash_attn = 0
0.00.729.546 I llama_new_context_with_model: freq_base  = 10000.0
0.00.729.547 I llama_new_context_with_model: freq_scale = 1
0.00.760.004 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.760.047 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.760.158 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.761.525 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.761.527 I llama_new_context_with_model: graph nodes  = 601
0.00.761.528 I llama_new_context_with_model: graph splits = 1
0.00.761.543 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.375.219 I main: llama threadpool init, n_threads = 4
0.01.375.232 I 
0.01.375.339 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.375.344 I 
0.01.375.522 I sampler seed: 3757230192
0.01.375.533 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.375.540 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.375.541 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.375.542 I 
 increamentalism, and the historical evolution of the concept of "gender". [end of text]


0.08.205.327 I llama_perf_sampler_print:    sampling time =      25.04 ms /    17 runs   (    1.47 ms per token,   678.81 tokens per second)
0.08.205.331 I llama_perf_context_print:        load time =    1372.32 ms
0.08.205.332 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.205.347 I llama_perf_context_print:        eval time =    6788.07 ms /    16 runs   (  424.25 ms per token,     2.36 tokens per second)
0.08.205.349 I llama_perf_context_print:       total time =    6830.12 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.639 I build: 3923 (60d8af44) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.856 I main: llama backend init
0.00.002.790 I main: load the model and apply lora adapter, if any
0.00.024.804 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.019 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.106 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.116 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.118 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.122 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.124 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.126 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.127 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.129 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.130 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.136 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.138 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.139 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.140 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.142 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.848 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.931 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.031 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.042 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.043 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.044 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.045 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.046 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.047 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.051 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.052 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.053 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.054 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.268.056 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.065 I llama_model_loader: - type  f32:   37 tensors
0.00.268.069 I llama_model_loader: - type q8_0:  127 tensors
0.00.443.170 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.486.081 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.488.139 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.494.258 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.507.932 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.508.946 I llm_load_vocab: special tokens cache size = 5
0.00.603.017 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.090 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.091 I llm_load_print_meta: arch             = gemma
0.00.603.092 I llm_load_print_meta: vocab type       = SPM
0.00.603.092 I llm_load_print_meta: n_vocab          = 256000
0.00.603.095 I llm_load_print_meta: n_merges         = 0
0.00.603.095 I llm_load_print_meta: vocab_only       = 0
0.00.603.096 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.096 I llm_load_print_meta: n_embd           = 2048
0.00.603.097 I llm_load_print_meta: n_layer          = 18
0.00.603.159 I llm_load_print_meta: n_head           = 8
0.00.603.166 I llm_load_print_meta: n_head_kv        = 1
0.00.603.167 I llm_load_print_meta: n_rot            = 256
0.00.603.167 I llm_load_print_meta: n_swa            = 0
0.00.603.167 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.168 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.173 I llm_load_print_meta: n_gqa            = 8
0.00.603.177 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.183 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.185 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.186 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.187 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.188 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.188 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.193 I llm_load_print_meta: n_ff             = 16384
0.00.603.194 I llm_load_print_meta: n_expert         = 0
0.00.603.194 I llm_load_print_meta: n_expert_used    = 0
0.00.603.194 I llm_load_print_meta: causal attn      = 1
0.00.603.195 I llm_load_print_meta: pooling type     = 0
0.00.603.195 I llm_load_print_meta: rope type        = 2
0.00.603.196 I llm_load_print_meta: rope scaling     = linear
0.00.603.198 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.199 I llm_load_print_meta: freq_scale_train = 1
0.00.603.199 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.199 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.201 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.201 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.201 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.201 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.202 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.202 I llm_load_print_meta: model type       = 2B
0.00.603.207 I llm_load_print_meta: model ftype      = Q8_0
0.00.603.208 I llm_load_print_meta: model params     = 2.51 B
0.00.603.209 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.603.209 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.210 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.210 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.211 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.211 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.212 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.213 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.219 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.221 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.221 I llm_load_print_meta: max token length = 93
0.00.603.384 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.681.337 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.681.344 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.681.345 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.681.346 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.681.346 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.681.347 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.687.024 I llama_new_context_with_model: n_ctx      = 8192
0.00.687.031 I llama_new_context_with_model: n_batch    = 2048
0.00.687.032 I llama_new_context_with_model: n_ubatch   = 512
0.00.687.032 I llama_new_context_with_model: flash_attn = 0
0.00.687.035 I llama_new_context_with_model: freq_base  = 10000.0
0.00.687.036 I llama_new_context_with_model: freq_scale = 1
0.00.716.307 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.716.347 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.716.458 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.717.845 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.717.850 I llama_new_context_with_model: graph nodes  = 601
0.00.717.851 I llama_new_context_with_model: graph splits = 1
0.00.717.866 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.330.617 I main: llama threadpool init, n_threads = 4
0.01.330.629 I 
0.01.330.735 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.330.739 I 
0.01.330.920 I sampler seed: 2075664221
0.01.330.944 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.330.953 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.330.953 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.330.954 I 
 seconally.

**Assistant**

I am unable to provide medical advice or make health claims. Please consult a medical professional or qualified healthcare provider for any health

0.14.771.155 I llama_perf_sampler_print:    sampling time =      49.29 ms /    33 runs   (    1.49 ms per token,   669.45 tokens per second)
0.14.771.158 I llama_perf_context_print:        load time =    1327.74 ms
0.14.771.159 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.771.161 I llama_perf_context_print:        eval time =   13357.99 ms /    32 runs   (  417.44 ms per token,     2.40 tokens per second)
0.14.771.162 I llama_perf_context_print:       total time =   13440.55 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 3923 (60d8af44) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.837 I main: llama backend init
0.00.002.790 I main: load the model and apply lora adapter, if any
0.00.024.944 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.160 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.251 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.264 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.265 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.270 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.274 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.276 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.277 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.277 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.278 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.286 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.287 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.288 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.289 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.291 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.576 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.873 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.723 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.732 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.733 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.734 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.735 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.736 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.737 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.741 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.742 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.743 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.744 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.267.746 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.754 I llama_model_loader: - type  f32:   37 tensors
0.00.267.759 I llama_model_loader: - type q8_0:  127 tensors
0.00.463.437 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.510.651 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.512.734 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.518.977 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.532.182 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.533.217 I llm_load_vocab: special tokens cache size = 5
0.00.641.464 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.641.538 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.641.539 I llm_load_print_meta: arch             = gemma
0.00.641.540 I llm_load_print_meta: vocab type       = SPM
0.00.641.541 I llm_load_print_meta: n_vocab          = 256000
0.00.641.543 I llm_load_print_meta: n_merges         = 0
0.00.641.544 I llm_load_print_meta: vocab_only       = 0
0.00.641.544 I llm_load_print_meta: n_ctx_train      = 8192
0.00.641.544 I llm_load_print_meta: n_embd           = 2048
0.00.641.545 I llm_load_print_meta: n_layer          = 18
0.00.641.607 I llm_load_print_meta: n_head           = 8
0.00.641.613 I llm_load_print_meta: n_head_kv        = 1
0.00.641.614 I llm_load_print_meta: n_rot            = 256
0.00.641.614 I llm_load_print_meta: n_swa            = 0
0.00.641.615 I llm_load_print_meta: n_embd_head_k    = 256
0.00.641.615 I llm_load_print_meta: n_embd_head_v    = 256
0.00.641.619 I llm_load_print_meta: n_gqa            = 8
0.00.641.644 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.641.650 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.641.652 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.641.654 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.641.655 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.641.655 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.641.656 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.641.661 I llm_load_print_meta: n_ff             = 16384
0.00.641.662 I llm_load_print_meta: n_expert         = 0
0.00.641.662 I llm_load_print_meta: n_expert_used    = 0
0.00.641.663 I llm_load_print_meta: causal attn      = 1
0.00.641.664 I llm_load_print_meta: pooling type     = 0
0.00.641.664 I llm_load_print_meta: rope type        = 2
0.00.641.665 I llm_load_print_meta: rope scaling     = linear
0.00.641.666 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.641.667 I llm_load_print_meta: freq_scale_train = 1
0.00.641.667 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.641.668 I llm_load_print_meta: rope_finetuned   = unknown
0.00.641.668 I llm_load_print_meta: ssm_d_conv       = 0
0.00.641.668 I llm_load_print_meta: ssm_d_inner      = 0
0.00.641.669 I llm_load_print_meta: ssm_d_state      = 0
0.00.641.669 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.641.669 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.641.678 I llm_load_print_meta: model type       = 2B
0.00.641.680 I llm_load_print_meta: model ftype      = Q8_0
0.00.641.680 I llm_load_print_meta: model params     = 2.51 B
0.00.641.682 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.641.682 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.641.683 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.641.684 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.641.685 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.641.685 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.641.686 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.641.686 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.641.692 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.641.693 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.641.693 I llm_load_print_meta: max token length = 93
0.00.641.854 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.713.382 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.713.392 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.719.125 I llama_new_context_with_model: n_ctx      = 8192
0.00.719.133 I llama_new_context_with_model: n_batch    = 2048
0.00.719.133 I llama_new_context_with_model: n_ubatch   = 512
0.00.719.134 I llama_new_context_with_model: flash_attn = 0
0.00.719.136 I llama_new_context_with_model: freq_base  = 10000.0
0.00.719.137 I llama_new_context_with_model: freq_scale = 1
0.00.748.428 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.748.468 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.748.586 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.749.978 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.749.983 I llama_new_context_with_model: graph nodes  = 601
0.00.749.983 I llama_new_context_with_model: graph splits = 1
0.00.749.999 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.365.684 I main: llama threadpool init, n_threads = 4
0.01.365.697 I 
0.01.365.803 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.365.807 I 
0.01.365.986 I sampler seed: 484191569
0.01.365.997 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.366.004 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.366.014 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.366.014 I 
 increamentalism, and the theory of cognitive dissonance.

**Answer:**

**1. Decrementalism:**

* A cognitive approach that emphasizes the

0.14.939.353 I llama_perf_sampler_print:    sampling time =      49.71 ms /    33 runs   (    1.51 ms per token,   663.88 tokens per second)
0.14.939.377 I llama_perf_context_print:        load time =    1362.80 ms
0.14.939.380 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.939.383 I llama_perf_context_print:        eval time =   13490.92 ms /    32 runs   (  421.59 ms per token,     2.37 tokens per second)
0.14.939.385 I llama_perf_context_print:       total time =   13573.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m2.466s
user	3m21.882s
sys	0m9.441s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3923 (60d8af44)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199364.38 ms
main:    total time = 199364.38 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.659 I build: 3923 (60d8af44) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.865 I main: llama backend init
0.00.002.817 I main: load the model and apply lora adapter, if any
0.00.025.032 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.254 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.350 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.373 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.374 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.380 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.384 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.385 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.386 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.387 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.390 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.399 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.400 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.402 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.404 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.405 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.800 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.154 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.994 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.002 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.003 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.004 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.005 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.006 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.007 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.011 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.012 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.013 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.014 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.015 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.024 I llama_model_loader: - type  f32:   37 tensors
0.00.268.029 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.030 I llama_model_loader: - type q6_K:   19 tensors
0.00.465.478 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.511.248 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.513.293 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.519.887 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.534.344 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.535.403 I llm_load_vocab: special tokens cache size = 5
0.00.645.596 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.645.668 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.645.669 I llm_load_print_meta: arch             = gemma
0.00.645.670 I llm_load_print_meta: vocab type       = SPM
0.00.645.671 I llm_load_print_meta: n_vocab          = 256000
0.00.645.673 I llm_load_print_meta: n_merges         = 0
0.00.645.674 I llm_load_print_meta: vocab_only       = 0
0.00.645.674 I llm_load_print_meta: n_ctx_train      = 8192
0.00.645.674 I llm_load_print_meta: n_embd           = 2048
0.00.645.675 I llm_load_print_meta: n_layer          = 18
0.00.645.741 I llm_load_print_meta: n_head           = 8
0.00.645.747 I llm_load_print_meta: n_head_kv        = 1
0.00.645.748 I llm_load_print_meta: n_rot            = 256
0.00.645.748 I llm_load_print_meta: n_swa            = 0
0.00.645.749 I llm_load_print_meta: n_embd_head_k    = 256
0.00.645.749 I llm_load_print_meta: n_embd_head_v    = 256
0.00.645.753 I llm_load_print_meta: n_gqa            = 8
0.00.645.758 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.645.763 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.645.764 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.645.765 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.645.766 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.645.766 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.645.766 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.645.771 I llm_load_print_meta: n_ff             = 16384
0.00.645.772 I llm_load_print_meta: n_expert         = 0
0.00.645.772 I llm_load_print_meta: n_expert_used    = 0
0.00.645.772 I llm_load_print_meta: causal attn      = 1
0.00.645.773 I llm_load_print_meta: pooling type     = 0
0.00.645.773 I llm_load_print_meta: rope type        = 2
0.00.645.773 I llm_load_print_meta: rope scaling     = linear
0.00.645.775 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.645.776 I llm_load_print_meta: freq_scale_train = 1
0.00.645.776 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.645.776 I llm_load_print_meta: rope_finetuned   = unknown
0.00.645.777 I llm_load_print_meta: ssm_d_conv       = 0
0.00.645.777 I llm_load_print_meta: ssm_d_inner      = 0
0.00.645.777 I llm_load_print_meta: ssm_d_state      = 0
0.00.645.778 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.645.778 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.645.779 I llm_load_print_meta: model type       = 2B
0.00.645.780 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.645.781 I llm_load_print_meta: model params     = 2.51 B
0.00.645.781 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.645.782 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.645.782 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.645.782 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.645.783 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.645.783 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.645.784 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.645.784 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.645.790 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.645.791 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.645.791 I llm_load_print_meta: max token length = 93
0.00.645.960 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.705.617 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.705.627 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.705.627 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.705.628 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.705.629 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.705.630 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.711.275 I llama_new_context_with_model: n_ctx      = 8192
0.00.711.283 I llama_new_context_with_model: n_batch    = 2048
0.00.711.284 I llama_new_context_with_model: n_ubatch   = 512
0.00.711.284 I llama_new_context_with_model: flash_attn = 0
0.00.711.287 I llama_new_context_with_model: freq_base  = 10000.0
0.00.711.288 I llama_new_context_with_model: freq_scale = 1
0.00.741.445 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.741.487 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.741.597 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.742.976 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.742.981 I llama_new_context_with_model: graph nodes  = 601
0.00.742.982 I llama_new_context_with_model: graph splits = 1
0.00.742.999 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.323.963 I main: llama threadpool init, n_threads = 4
0.01.323.974 I 
0.01.324.081 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.324.084 I 
0.01.324.262 I sampler seed: 2051940094
0.01.324.274 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.324.283 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.324.284 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.324.284 I 
 seconally.

**Answer:**

I am not able to provide medical or health advice. If you have any questions or concerns about your health, please consult

0.12.264.431 I llama_perf_sampler_print:    sampling time =      49.27 ms /    33 runs   (    1.49 ms per token,   669.75 tokens per second)
0.12.264.446 I llama_perf_context_print:        load time =    1321.05 ms
0.12.264.448 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.264.450 I llama_perf_context_print:        eval time =   10859.41 ms /    32 runs   (  339.36 ms per token,     2.95 tokens per second)
0.12.264.466 I llama_perf_context_print:       total time =   10940.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3923 (60d8af44)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199296.50 ms
main:    total time = 199296.50 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.663 I build: 3923 (60d8af44) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.874 I main: llama backend init
0.00.002.813 I main: load the model and apply lora adapter, if any
0.00.024.906 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.005 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.021 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.022 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.028 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.029 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.031 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.031 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.032 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.033 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.041 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.042 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.043 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.043 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.044 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.416 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.775 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.713 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.721 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.723 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.724 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.725 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.726 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.728 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.731 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.732 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.740 I llama_model_loader: - type  f32:   37 tensors
0.00.268.744 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.745 I llama_model_loader: - type q6_K:   19 tensors
0.00.449.429 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.492.489 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.494.207 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.499.382 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.511.459 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.447 I llm_load_vocab: special tokens cache size = 5
0.00.624.616 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.624.689 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.624.690 I llm_load_print_meta: arch             = gemma
0.00.624.690 I llm_load_print_meta: vocab type       = SPM
0.00.624.691 I llm_load_print_meta: n_vocab          = 256000
0.00.624.693 I llm_load_print_meta: n_merges         = 0
0.00.624.694 I llm_load_print_meta: vocab_only       = 0
0.00.624.694 I llm_load_print_meta: n_ctx_train      = 8192
0.00.624.694 I llm_load_print_meta: n_embd           = 2048
0.00.624.695 I llm_load_print_meta: n_layer          = 18
0.00.624.760 I llm_load_print_meta: n_head           = 8
0.00.624.768 I llm_load_print_meta: n_head_kv        = 1
0.00.624.768 I llm_load_print_meta: n_rot            = 256
0.00.624.769 I llm_load_print_meta: n_swa            = 0
0.00.624.769 I llm_load_print_meta: n_embd_head_k    = 256
0.00.624.770 I llm_load_print_meta: n_embd_head_v    = 256
0.00.624.774 I llm_load_print_meta: n_gqa            = 8
0.00.624.779 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.624.784 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.624.785 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.624.786 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.624.787 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.624.787 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.624.787 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.624.792 I llm_load_print_meta: n_ff             = 16384
0.00.624.792 I llm_load_print_meta: n_expert         = 0
0.00.624.793 I llm_load_print_meta: n_expert_used    = 0
0.00.624.793 I llm_load_print_meta: causal attn      = 1
0.00.624.793 I llm_load_print_meta: pooling type     = 0
0.00.624.794 I llm_load_print_meta: rope type        = 2
0.00.624.794 I llm_load_print_meta: rope scaling     = linear
0.00.624.795 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.624.817 I llm_load_print_meta: freq_scale_train = 1
0.00.624.818 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.624.818 I llm_load_print_meta: rope_finetuned   = unknown
0.00.624.819 I llm_load_print_meta: ssm_d_conv       = 0
0.00.624.819 I llm_load_print_meta: ssm_d_inner      = 0
0.00.624.819 I llm_load_print_meta: ssm_d_state      = 0
0.00.624.820 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.624.820 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.624.821 I llm_load_print_meta: model type       = 2B
0.00.624.822 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.624.823 I llm_load_print_meta: model params     = 2.51 B
0.00.624.824 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.624.824 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.624.825 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.624.826 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.624.826 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.624.826 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.624.827 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.624.827 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.624.833 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.624.835 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.624.835 I llm_load_print_meta: max token length = 93
0.00.625.000 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.684.035 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.689.562 I llama_new_context_with_model: n_ctx      = 8192
0.00.689.567 I llama_new_context_with_model: n_batch    = 2048
0.00.689.568 I llama_new_context_with_model: n_ubatch   = 512
0.00.689.568 I llama_new_context_with_model: flash_attn = 0
0.00.689.571 I llama_new_context_with_model: freq_base  = 10000.0
0.00.689.571 I llama_new_context_with_model: freq_scale = 1
0.00.720.146 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.720.193 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.720.303 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.721.696 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.721.701 I llama_new_context_with_model: graph nodes  = 601
0.00.721.702 I llama_new_context_with_model: graph splits = 1
0.00.721.717 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.299.608 I main: llama threadpool init, n_threads = 4
0.01.299.620 I 
0.01.299.726 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.299.730 I 
0.01.299.906 I sampler seed: 3365901973
0.01.299.916 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.299.923 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.299.924 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.299.924 I 
 encompases, a common trope in horror films. They are often depicted as mindless, aggressive, and eager to attack. However, there are other ways to portray

0.12.276.482 I llama_perf_sampler_print:    sampling time =      49.29 ms /    33 runs   (    1.49 ms per token,   669.49 tokens per second)
0.12.276.485 I llama_perf_context_print:        load time =    1296.70 ms
0.12.276.486 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.276.488 I llama_perf_context_print:        eval time =   10894.99 ms /    32 runs   (  340.47 ms per token,     2.94 tokens per second)
0.12.276.488 I llama_perf_context_print:       total time =   10976.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m6.120s
user	50m9.436s
sys	0m6.426s
