+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.697 I build: 4187 (be0e350c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.914 I main: llama backend init
0.00.000.924 I main: load the model and apply lora adapter, if any
0.00.024.140 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.154 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.254 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.268 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.273 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.283 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.285 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.286 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.287 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.289 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.290 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.302 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.306 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.307 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.309 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.310 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.246.325 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.348.275 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.372.193 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.372.204 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.372.205 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.372.207 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.372.208 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.372.209 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.372.210 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.372.215 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.372.216 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.372.217 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.372.219 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.372.220 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.372.229 I llama_model_loader: - type  f32:   37 tensors
0.00.372.231 I llama_model_loader: - type q8_0:  127 tensors
0.00.616.744 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.688.199 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.689.276 I llm_load_vocab: special tokens cache size = 5
0.00.879.987 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.880.066 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.880.067 I llm_load_print_meta: arch             = gemma
0.00.880.068 I llm_load_print_meta: vocab type       = SPM
0.00.880.069 I llm_load_print_meta: n_vocab          = 256000
0.00.880.071 I llm_load_print_meta: n_merges         = 0
0.00.880.072 I llm_load_print_meta: vocab_only       = 0
0.00.880.072 I llm_load_print_meta: n_ctx_train      = 8192
0.00.880.072 I llm_load_print_meta: n_embd           = 2048
0.00.880.073 I llm_load_print_meta: n_layer          = 18
0.00.880.141 I llm_load_print_meta: n_head           = 8
0.00.880.148 I llm_load_print_meta: n_head_kv        = 1
0.00.880.149 I llm_load_print_meta: n_rot            = 256
0.00.880.149 I llm_load_print_meta: n_swa            = 0
0.00.880.149 I llm_load_print_meta: n_embd_head_k    = 256
0.00.880.150 I llm_load_print_meta: n_embd_head_v    = 256
0.00.880.154 I llm_load_print_meta: n_gqa            = 8
0.00.880.159 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.880.164 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.880.165 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.880.167 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.880.167 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.880.168 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.880.169 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.880.174 I llm_load_print_meta: n_ff             = 16384
0.00.880.175 I llm_load_print_meta: n_expert         = 0
0.00.880.175 I llm_load_print_meta: n_expert_used    = 0
0.00.880.176 I llm_load_print_meta: causal attn      = 1
0.00.880.176 I llm_load_print_meta: pooling type     = 0
0.00.880.177 I llm_load_print_meta: rope type        = 2
0.00.880.178 I llm_load_print_meta: rope scaling     = linear
0.00.880.180 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.880.180 I llm_load_print_meta: freq_scale_train = 1
0.00.880.180 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.880.181 I llm_load_print_meta: rope_finetuned   = unknown
0.00.880.182 I llm_load_print_meta: ssm_d_conv       = 0
0.00.880.182 I llm_load_print_meta: ssm_d_inner      = 0
0.00.880.182 I llm_load_print_meta: ssm_d_state      = 0
0.00.880.183 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.880.195 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.880.196 I llm_load_print_meta: model type       = 2B
0.00.880.198 I llm_load_print_meta: model ftype      = Q8_0
0.00.880.199 I llm_load_print_meta: model params     = 2.51 B
0.00.880.209 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.880.210 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.880.211 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.880.211 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.880.212 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.880.216 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.880.217 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.880.217 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.880.223 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.880.224 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.880.225 I llm_load_print_meta: max token length = 93
0.00.980.756 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.980.769 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.980.771 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.980.771 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.980.772 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.980.773 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.986.701 I llama_new_context_with_model: n_seq_max     = 1
0.00.986.708 I llama_new_context_with_model: n_ctx         = 4096
0.00.986.709 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.986.709 I llama_new_context_with_model: n_batch       = 2048
0.00.986.709 I llama_new_context_with_model: n_ubatch      = 512
0.00.986.710 I llama_new_context_with_model: flash_attn    = 0
0.00.986.712 I llama_new_context_with_model: freq_base     = 10000.0
0.00.986.713 I llama_new_context_with_model: freq_scale    = 1
0.00.986.714 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.002.171 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.002.215 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.002.338 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.004.900 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.004.903 I llama_new_context_with_model: graph nodes  = 601
0.01.004.904 I llama_new_context_with_model: graph splits = 1
0.01.004.928 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.617.650 I main: llama threadpool init, n_threads = 4
0.01.617.666 I 
0.01.617.783 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.617.787 I 
0.01.618.036 I sampler seed: 2055798884
0.01.618.051 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.618.061 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.618.063 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.618.063 I 
 increasities as a form of child sexual abuse.

I am unable to answer this question as it contains harmful and inappropriate content. It is important to respect the

0.15.231.322 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   671.00 tokens per second)
0.15.231.325 I llama_perf_context_print:        load time =    1616.60 ms
0.15.231.326 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.231.328 I llama_perf_context_print:        eval time =   13524.21 ms /    32 runs   (  422.63 ms per token,     2.37 tokens per second)
0.15.231.329 I llama_perf_context_print:       total time =   13613.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.645 I build: 4187 (be0e350c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.848 I main: llama backend init
0.00.000.856 I main: load the model and apply lora adapter, if any
0.00.023.422 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.528 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.543 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.547 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.554 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.558 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.559 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.561 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.562 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.563 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.571 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.581 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.583 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.584 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.585 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.241.823 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.344.377 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.368.296 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.368.309 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.368.311 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.368.312 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.368.313 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.368.315 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.368.316 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.368.320 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.368.322 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.368.323 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.368.324 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.368.326 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.368.335 I llama_model_loader: - type  f32:   37 tensors
0.00.368.337 I llama_model_loader: - type q8_0:  127 tensors
0.00.603.829 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.672.997 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.674.090 I llm_load_vocab: special tokens cache size = 5
0.00.873.313 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.873.388 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.873.392 I llm_load_print_meta: arch             = gemma
0.00.873.392 I llm_load_print_meta: vocab type       = SPM
0.00.873.393 I llm_load_print_meta: n_vocab          = 256000
0.00.873.396 I llm_load_print_meta: n_merges         = 0
0.00.873.396 I llm_load_print_meta: vocab_only       = 0
0.00.873.396 I llm_load_print_meta: n_ctx_train      = 8192
0.00.873.397 I llm_load_print_meta: n_embd           = 2048
0.00.873.397 I llm_load_print_meta: n_layer          = 18
0.00.873.461 I llm_load_print_meta: n_head           = 8
0.00.873.471 I llm_load_print_meta: n_head_kv        = 1
0.00.873.473 I llm_load_print_meta: n_rot            = 256
0.00.873.473 I llm_load_print_meta: n_swa            = 0
0.00.873.474 I llm_load_print_meta: n_embd_head_k    = 256
0.00.873.475 I llm_load_print_meta: n_embd_head_v    = 256
0.00.873.479 I llm_load_print_meta: n_gqa            = 8
0.00.873.484 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.873.490 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.873.492 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.873.493 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.873.494 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.873.495 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.873.496 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.873.501 I llm_load_print_meta: n_ff             = 16384
0.00.873.501 I llm_load_print_meta: n_expert         = 0
0.00.873.501 I llm_load_print_meta: n_expert_used    = 0
0.00.873.502 I llm_load_print_meta: causal attn      = 1
0.00.873.502 I llm_load_print_meta: pooling type     = 0
0.00.873.503 I llm_load_print_meta: rope type        = 2
0.00.873.504 I llm_load_print_meta: rope scaling     = linear
0.00.873.505 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.873.506 I llm_load_print_meta: freq_scale_train = 1
0.00.873.507 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.873.507 I llm_load_print_meta: rope_finetuned   = unknown
0.00.873.507 I llm_load_print_meta: ssm_d_conv       = 0
0.00.873.508 I llm_load_print_meta: ssm_d_inner      = 0
0.00.873.508 I llm_load_print_meta: ssm_d_state      = 0
0.00.873.509 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.873.510 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.873.511 I llm_load_print_meta: model type       = 2B
0.00.873.512 I llm_load_print_meta: model ftype      = Q8_0
0.00.873.513 I llm_load_print_meta: model params     = 2.51 B
0.00.873.523 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.873.524 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.873.525 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.873.525 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.873.526 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.873.526 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.873.527 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.873.527 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.873.532 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.873.534 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.873.535 I llm_load_print_meta: max token length = 93
0.00.968.703 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.974.759 I llama_new_context_with_model: n_seq_max     = 1
0.00.974.768 I llama_new_context_with_model: n_ctx         = 4096
0.00.974.769 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.974.769 I llama_new_context_with_model: n_batch       = 2048
0.00.974.769 I llama_new_context_with_model: n_ubatch      = 512
0.00.974.770 I llama_new_context_with_model: flash_attn    = 0
0.00.974.775 I llama_new_context_with_model: freq_base     = 10000.0
0.00.974.776 I llama_new_context_with_model: freq_scale    = 1
0.00.974.777 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.990.660 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.990.705 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.990.832 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.993.455 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.993.459 I llama_new_context_with_model: graph nodes  = 601
0.00.993.459 I llama_new_context_with_model: graph splits = 1
0.00.993.483 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.606.980 I main: llama threadpool init, n_threads = 4
0.01.606.995 I 
0.01.607.112 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.607.116 I 
0.01.607.357 I sampler seed: 2166053176
0.01.607.372 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.607.382 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.607.383 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.607.383 I 
 increably in popularity, particularly among younger generations. With the rise of social media and streaming services, fans can now access and engage with their favorite celebrities 2

0.15.317.658 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   671.05 tokens per second)
0.15.317.672 I llama_perf_context_print:        load time =    1606.03 ms
0.15.317.674 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.317.677 I llama_perf_context_print:        eval time =   13621.26 ms /    32 runs   (  425.66 ms per token,     2.35 tokens per second)
0.15.317.678 I llama_perf_context_print:       total time =   13710.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.701 I build: 4187 (be0e350c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.911 I main: llama backend init
0.00.000.920 I main: load the model and apply lora adapter, if any
0.00.027.020 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.036 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.136 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.150 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.152 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.161 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.165 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.167 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.168 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.169 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.171 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.178 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.179 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.181 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.182 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.183 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.226.399 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.328.750 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.352.586 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.352.596 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.352.597 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.352.599 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.352.600 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.352.601 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.352.603 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.352.607 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.352.609 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.352.610 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.352.612 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.352.613 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.352.622 I llama_model_loader: - type  f32:   37 tensors
0.00.352.624 I llama_model_loader: - type q8_0:  127 tensors
0.00.601.123 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.669.811 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.670.889 I llm_load_vocab: special tokens cache size = 5
0.00.866.627 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.866.700 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.866.701 I llm_load_print_meta: arch             = gemma
0.00.866.701 I llm_load_print_meta: vocab type       = SPM
0.00.866.702 I llm_load_print_meta: n_vocab          = 256000
0.00.866.704 I llm_load_print_meta: n_merges         = 0
0.00.866.705 I llm_load_print_meta: vocab_only       = 0
0.00.866.705 I llm_load_print_meta: n_ctx_train      = 8192
0.00.866.705 I llm_load_print_meta: n_embd           = 2048
0.00.866.706 I llm_load_print_meta: n_layer          = 18
0.00.866.768 I llm_load_print_meta: n_head           = 8
0.00.866.775 I llm_load_print_meta: n_head_kv        = 1
0.00.866.776 I llm_load_print_meta: n_rot            = 256
0.00.866.776 I llm_load_print_meta: n_swa            = 0
0.00.866.777 I llm_load_print_meta: n_embd_head_k    = 256
0.00.866.777 I llm_load_print_meta: n_embd_head_v    = 256
0.00.866.782 I llm_load_print_meta: n_gqa            = 8
0.00.866.787 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.866.792 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.866.793 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.866.795 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.866.795 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.866.796 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.866.797 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.866.802 I llm_load_print_meta: n_ff             = 16384
0.00.866.802 I llm_load_print_meta: n_expert         = 0
0.00.866.803 I llm_load_print_meta: n_expert_used    = 0
0.00.866.804 I llm_load_print_meta: causal attn      = 1
0.00.866.805 I llm_load_print_meta: pooling type     = 0
0.00.866.805 I llm_load_print_meta: rope type        = 2
0.00.866.806 I llm_load_print_meta: rope scaling     = linear
0.00.866.808 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.866.808 I llm_load_print_meta: freq_scale_train = 1
0.00.866.809 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.866.809 I llm_load_print_meta: rope_finetuned   = unknown
0.00.866.810 I llm_load_print_meta: ssm_d_conv       = 0
0.00.866.810 I llm_load_print_meta: ssm_d_inner      = 0
0.00.866.810 I llm_load_print_meta: ssm_d_state      = 0
0.00.866.811 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.866.811 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.866.812 I llm_load_print_meta: model type       = 2B
0.00.866.813 I llm_load_print_meta: model ftype      = Q8_0
0.00.866.814 I llm_load_print_meta: model params     = 2.51 B
0.00.866.823 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.866.824 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.866.825 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.866.825 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.866.826 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.866.826 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.866.827 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.866.827 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.866.833 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.866.834 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.866.835 I llm_load_print_meta: max token length = 93
0.00.943.017 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.943.025 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.943.026 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.943.027 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.943.028 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.943.029 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.948.881 I llama_new_context_with_model: n_seq_max     = 1
0.00.948.889 I llama_new_context_with_model: n_ctx         = 4096
0.00.948.890 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.948.890 I llama_new_context_with_model: n_batch       = 2048
0.00.948.891 I llama_new_context_with_model: n_ubatch      = 512
0.00.948.892 I llama_new_context_with_model: flash_attn    = 0
0.00.948.895 I llama_new_context_with_model: freq_base     = 10000.0
0.00.948.895 I llama_new_context_with_model: freq_scale    = 1
0.00.948.896 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.964.490 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.964.536 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.964.664 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.967.225 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.967.230 I llama_new_context_with_model: graph nodes  = 601
0.00.967.231 I llama_new_context_with_model: graph splits = 1
0.00.967.255 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.581.875 I main: llama threadpool init, n_threads = 4
0.01.581.891 I 
0.01.582.010 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.582.014 I 
0.01.582.263 I sampler seed: 3782146592
0.01.582.278 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.582.292 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.582.293 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.582.293 I 
 increasities, and a plethora of other bizarre occurrences.

**The Aftermath:**

The aftermath of the inconceivable events was a sight to behold. The world

0.15.323.835 I llama_perf_sampler_print:    sampling time =      49.39 ms /    33 runs   (    1.50 ms per token,   668.14 tokens per second)
0.15.323.839 I llama_perf_context_print:        load time =    1580.84 ms
0.15.323.852 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.323.855 I llama_perf_context_print:        eval time =   13652.47 ms /    32 runs   (  426.64 ms per token,     2.34 tokens per second)
0.15.323.856 I llama_perf_context_print:       total time =   13741.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.752 I build: 4187 (be0e350c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.957 I main: llama backend init
0.00.000.965 I main: load the model and apply lora adapter, if any
0.00.023.619 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.633 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.727 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.739 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.741 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.749 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.753 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.755 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.756 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.757 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.758 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.767 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.768 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.771 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.772 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.774 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.174 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.761 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.350.813 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.350.826 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.350.828 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.350.829 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.350.830 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.350.832 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.350.834 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.350.838 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.350.839 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.350.841 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.350.842 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.350.844 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.350.853 I llama_model_loader: - type  f32:   37 tensors
0.00.350.855 I llama_model_loader: - type q8_0:  127 tensors
0.00.597.095 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.668.247 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.669.329 I llm_load_vocab: special tokens cache size = 5
0.00.870.657 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.870.733 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.870.734 I llm_load_print_meta: arch             = gemma
0.00.870.735 I llm_load_print_meta: vocab type       = SPM
0.00.870.736 I llm_load_print_meta: n_vocab          = 256000
0.00.870.738 I llm_load_print_meta: n_merges         = 0
0.00.870.738 I llm_load_print_meta: vocab_only       = 0
0.00.870.739 I llm_load_print_meta: n_ctx_train      = 8192
0.00.870.739 I llm_load_print_meta: n_embd           = 2048
0.00.870.739 I llm_load_print_meta: n_layer          = 18
0.00.870.804 I llm_load_print_meta: n_head           = 8
0.00.870.811 I llm_load_print_meta: n_head_kv        = 1
0.00.870.811 I llm_load_print_meta: n_rot            = 256
0.00.870.812 I llm_load_print_meta: n_swa            = 0
0.00.870.812 I llm_load_print_meta: n_embd_head_k    = 256
0.00.870.812 I llm_load_print_meta: n_embd_head_v    = 256
0.00.870.817 I llm_load_print_meta: n_gqa            = 8
0.00.870.823 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.870.842 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.870.843 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.870.845 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.870.846 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.870.846 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.870.846 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.870.852 I llm_load_print_meta: n_ff             = 16384
0.00.870.852 I llm_load_print_meta: n_expert         = 0
0.00.870.853 I llm_load_print_meta: n_expert_used    = 0
0.00.870.854 I llm_load_print_meta: causal attn      = 1
0.00.870.854 I llm_load_print_meta: pooling type     = 0
0.00.870.854 I llm_load_print_meta: rope type        = 2
0.00.870.855 I llm_load_print_meta: rope scaling     = linear
0.00.870.860 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.870.861 I llm_load_print_meta: freq_scale_train = 1
0.00.870.861 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.870.876 I llm_load_print_meta: rope_finetuned   = unknown
0.00.870.877 I llm_load_print_meta: ssm_d_conv       = 0
0.00.870.878 I llm_load_print_meta: ssm_d_inner      = 0
0.00.870.879 I llm_load_print_meta: ssm_d_state      = 0
0.00.870.880 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.870.880 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.870.881 I llm_load_print_meta: model type       = 2B
0.00.870.882 I llm_load_print_meta: model ftype      = Q8_0
0.00.870.883 I llm_load_print_meta: model params     = 2.51 B
0.00.870.891 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.870.891 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.870.892 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.870.892 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.870.896 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.870.897 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.870.897 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.870.898 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.870.904 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.870.906 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.870.906 I llm_load_print_meta: max token length = 93
0.00.944.108 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.944.120 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.949.939 I llama_new_context_with_model: n_seq_max     = 1
0.00.949.947 I llama_new_context_with_model: n_ctx         = 4096
0.00.949.947 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.949.948 I llama_new_context_with_model: n_batch       = 2048
0.00.949.948 I llama_new_context_with_model: n_ubatch      = 512
0.00.949.949 I llama_new_context_with_model: flash_attn    = 0
0.00.949.952 I llama_new_context_with_model: freq_base     = 10000.0
0.00.949.953 I llama_new_context_with_model: freq_scale    = 1
0.00.949.954 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.964.657 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.964.702 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.964.832 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.967.455 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.967.459 I llama_new_context_with_model: graph nodes  = 601
0.00.967.460 I llama_new_context_with_model: graph splits = 1
0.00.967.483 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.580.488 I main: llama threadpool init, n_threads = 4
0.01.580.505 I 
0.01.580.618 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.580.622 I 
0.01.580.862 I sampler seed: 1690065257
0.01.580.875 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.580.885 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.580.888 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.580.889 I 
 seconally.

A man is walking towards a store. He is carrying a heavy box. As he walks, the box begins to roll.

What happened

0.15.265.289 I llama_perf_sampler_print:    sampling time =      49.40 ms /    33 runs   (    1.50 ms per token,   667.99 tokens per second)
0.15.265.292 I llama_perf_context_print:        load time =    1579.41 ms
0.15.265.293 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.265.295 I llama_perf_context_print:        eval time =   13594.51 ms /    32 runs   (  424.83 ms per token,     2.35 tokens per second)
0.15.265.310 I llama_perf_context_print:       total time =   13684.81 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m11.014s
user	3m52.808s
sys	0m9.622s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4187 (be0e350c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186343.40 ms
main:    total time = 186343.40 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.699 I build: 4187 (be0e350c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.906 I main: llama backend init
0.00.000.914 I main: load the model and apply lora adapter, if any
0.00.023.869 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.882 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.986 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.999 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.002 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.010 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.015 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.016 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.017 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.018 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.019 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.028 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.029 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.030 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.031 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.033 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.253.319 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.354.981 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.379.019 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.379.031 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.379.032 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.379.033 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.379.034 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.379.036 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.379.038 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.379.042 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.379.044 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.379.045 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.379.046 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.379.048 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.379.057 I llama_model_loader: - type  f32:   37 tensors
0.00.379.060 I llama_model_loader: - type q4_K:  108 tensors
0.00.379.061 I llama_model_loader: - type q6_K:   19 tensors
0.00.633.581 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.700.526 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.701.512 I llm_load_vocab: special tokens cache size = 5
0.00.907.194 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.907.269 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.907.270 I llm_load_print_meta: arch             = gemma
0.00.907.271 I llm_load_print_meta: vocab type       = SPM
0.00.907.272 I llm_load_print_meta: n_vocab          = 256000
0.00.907.274 I llm_load_print_meta: n_merges         = 0
0.00.907.275 I llm_load_print_meta: vocab_only       = 0
0.00.907.275 I llm_load_print_meta: n_ctx_train      = 8192
0.00.907.276 I llm_load_print_meta: n_embd           = 2048
0.00.907.276 I llm_load_print_meta: n_layer          = 18
0.00.907.343 I llm_load_print_meta: n_head           = 8
0.00.907.351 I llm_load_print_meta: n_head_kv        = 1
0.00.907.351 I llm_load_print_meta: n_rot            = 256
0.00.907.352 I llm_load_print_meta: n_swa            = 0
0.00.907.352 I llm_load_print_meta: n_embd_head_k    = 256
0.00.907.353 I llm_load_print_meta: n_embd_head_v    = 256
0.00.907.357 I llm_load_print_meta: n_gqa            = 8
0.00.907.362 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.907.367 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.907.368 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.907.370 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.907.370 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.907.371 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.907.371 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.907.376 I llm_load_print_meta: n_ff             = 16384
0.00.907.376 I llm_load_print_meta: n_expert         = 0
0.00.907.376 I llm_load_print_meta: n_expert_used    = 0
0.00.907.377 I llm_load_print_meta: causal attn      = 1
0.00.907.377 I llm_load_print_meta: pooling type     = 0
0.00.907.377 I llm_load_print_meta: rope type        = 2
0.00.907.378 I llm_load_print_meta: rope scaling     = linear
0.00.907.379 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.907.380 I llm_load_print_meta: freq_scale_train = 1
0.00.907.380 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.907.381 I llm_load_print_meta: rope_finetuned   = unknown
0.00.907.381 I llm_load_print_meta: ssm_d_conv       = 0
0.00.907.382 I llm_load_print_meta: ssm_d_inner      = 0
0.00.907.382 I llm_load_print_meta: ssm_d_state      = 0
0.00.907.382 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.907.382 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.907.383 I llm_load_print_meta: model type       = 2B
0.00.907.384 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.907.385 I llm_load_print_meta: model params     = 2.51 B
0.00.907.396 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.907.396 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.907.397 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.907.397 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.907.398 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.907.398 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.907.398 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.907.399 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.907.404 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.907.406 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.907.406 I llm_load_print_meta: max token length = 93
0.00.968.498 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.968.509 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.968.510 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.968.511 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.968.511 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.968.512 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.974.560 I llama_new_context_with_model: n_seq_max     = 1
0.00.974.568 I llama_new_context_with_model: n_ctx         = 4096
0.00.974.569 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.974.569 I llama_new_context_with_model: n_batch       = 2048
0.00.974.570 I llama_new_context_with_model: n_ubatch      = 512
0.00.974.570 I llama_new_context_with_model: flash_attn    = 0
0.00.974.574 I llama_new_context_with_model: freq_base     = 10000.0
0.00.974.575 I llama_new_context_with_model: freq_scale    = 1
0.00.974.576 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.989.996 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.990.038 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.990.182 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.992.742 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.992.746 I llama_new_context_with_model: graph nodes  = 601
0.00.992.747 I llama_new_context_with_model: graph splits = 1
0.00.992.772 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.577.006 I main: llama threadpool init, n_threads = 4
0.01.577.025 I 
0.01.577.142 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.577.146 I 
0.01.577.387 I sampler seed: 1403028980
0.01.577.401 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.577.413 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.577.413 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.577.414 I 
 seconally after the question.

I'm not sure if I answered this question correctly. Could you please review it and let me know if I did?

0.12.724.272 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.88 tokens per second)
0.12.724.275 I llama_perf_context_print:        load time =    1575.98 ms
0.12.724.290 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.724.292 I llama_perf_context_print:        eval time =   11057.02 ms /    32 runs   (  345.53 ms per token,     2.89 tokens per second)
0.12.724.293 I llama_perf_context_print:       total time =   11147.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4187 (be0e350c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186370.92 ms
main:    total time = 186370.92 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.671 I build: 4187 (be0e350c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.892 I main: llama backend init
0.00.000.902 I main: load the model and apply lora adapter, if any
0.00.023.517 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.639 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.660 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.666 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.677 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.683 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.685 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.688 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.691 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.693 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.703 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.710 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.711 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.713 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.714 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.230.956 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.332.906 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.356.897 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.356.908 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.356.910 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.356.911 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.356.912 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.356.914 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.356.915 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.356.920 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.356.922 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.356.931 I llama_model_loader: - type  f32:   37 tensors
0.00.356.933 I llama_model_loader: - type q4_K:  108 tensors
0.00.356.934 I llama_model_loader: - type q6_K:   19 tensors
0.00.600.910 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.668.901 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.669.895 I llm_load_vocab: special tokens cache size = 5
0.00.873.178 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.873.254 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.873.255 I llm_load_print_meta: arch             = gemma
0.00.873.256 I llm_load_print_meta: vocab type       = SPM
0.00.873.257 I llm_load_print_meta: n_vocab          = 256000
0.00.873.259 I llm_load_print_meta: n_merges         = 0
0.00.873.260 I llm_load_print_meta: vocab_only       = 0
0.00.873.260 I llm_load_print_meta: n_ctx_train      = 8192
0.00.873.261 I llm_load_print_meta: n_embd           = 2048
0.00.873.261 I llm_load_print_meta: n_layer          = 18
0.00.873.325 I llm_load_print_meta: n_head           = 8
0.00.873.335 I llm_load_print_meta: n_head_kv        = 1
0.00.873.335 I llm_load_print_meta: n_rot            = 256
0.00.873.336 I llm_load_print_meta: n_swa            = 0
0.00.873.337 I llm_load_print_meta: n_embd_head_k    = 256
0.00.873.338 I llm_load_print_meta: n_embd_head_v    = 256
0.00.873.344 I llm_load_print_meta: n_gqa            = 8
0.00.873.352 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.873.358 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.873.360 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.873.362 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.873.363 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.873.364 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.873.365 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.873.372 I llm_load_print_meta: n_ff             = 16384
0.00.873.373 I llm_load_print_meta: n_expert         = 0
0.00.873.384 I llm_load_print_meta: n_expert_used    = 0
0.00.873.388 I llm_load_print_meta: causal attn      = 1
0.00.873.389 I llm_load_print_meta: pooling type     = 0
0.00.873.389 I llm_load_print_meta: rope type        = 2
0.00.873.390 I llm_load_print_meta: rope scaling     = linear
0.00.873.393 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.873.394 I llm_load_print_meta: freq_scale_train = 1
0.00.873.394 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.873.396 I llm_load_print_meta: rope_finetuned   = unknown
0.00.873.396 I llm_load_print_meta: ssm_d_conv       = 0
0.00.873.397 I llm_load_print_meta: ssm_d_inner      = 0
0.00.873.398 I llm_load_print_meta: ssm_d_state      = 0
0.00.873.399 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.873.399 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.873.400 I llm_load_print_meta: model type       = 2B
0.00.873.403 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.873.404 I llm_load_print_meta: model params     = 2.51 B
0.00.873.414 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.873.415 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.873.416 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.873.416 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.873.418 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.873.418 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.873.420 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.873.421 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.873.429 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.873.431 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.873.432 I llm_load_print_meta: max token length = 93
0.00.929.927 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.936.204 I llama_new_context_with_model: n_seq_max     = 1
0.00.936.210 I llama_new_context_with_model: n_ctx         = 4096
0.00.936.211 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.936.211 I llama_new_context_with_model: n_batch       = 2048
0.00.936.211 I llama_new_context_with_model: n_ubatch      = 512
0.00.936.212 I llama_new_context_with_model: flash_attn    = 0
0.00.936.215 I llama_new_context_with_model: freq_base     = 10000.0
0.00.936.215 I llama_new_context_with_model: freq_scale    = 1
0.00.936.216 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.951.434 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.951.479 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.951.603 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.954.230 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.954.233 I llama_new_context_with_model: graph nodes  = 601
0.00.954.234 I llama_new_context_with_model: graph splits = 1
0.00.954.257 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.538.230 I main: llama threadpool init, n_threads = 4
0.01.538.247 I 
0.01.538.383 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.538.387 I 
0.01.538.634 I sampler seed: 2248546554
0.01.538.648 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.538.660 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.538.661 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.538.672 I 
 encomporn, frustrated, and defeated.

**What is the meaning of this sentence?**

The sentence expresses the feelings of a person who has experienced a

0.12.689.363 I llama_perf_sampler_print:    sampling time =      49.33 ms /    33 runs   (    1.49 ms per token,   668.95 tokens per second)
0.12.689.375 I llama_perf_context_print:        load time =    1537.21 ms
0.12.689.377 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.689.379 I llama_perf_context_print:        eval time =   11061.11 ms /    32 runs   (  345.66 ms per token,     2.89 tokens per second)
0.12.689.380 I llama_perf_context_print:       total time =   11151.14 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m41.110s
user	46m44.641s
sys	0m6.341s
