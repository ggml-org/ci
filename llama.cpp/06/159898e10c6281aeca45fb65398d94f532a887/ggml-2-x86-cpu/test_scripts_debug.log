+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.653 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.872 I main: llama backend init
0.00.002.807 I main: load the model and apply lora adapter, if any
0.00.024.989 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.195 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.293 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.306 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.309 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.314 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.317 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.318 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.319 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.320 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.321 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.329 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.330 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.332 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.333 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.334 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.901 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.707 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.896 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.903 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.905 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.906 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.906 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.908 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.909 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.913 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.914 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.915 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.916 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.917 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.925 I llama_model_loader: - type  f32:   37 tensors
0.00.267.930 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.750 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.497.317 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.499.234 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.505.077 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.517.571 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.518.543 I llm_load_vocab: special tokens cache size = 5
0.00.621.856 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.621.935 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.621.936 I llm_load_print_meta: arch             = gemma
0.00.621.937 I llm_load_print_meta: vocab type       = SPM
0.00.621.938 I llm_load_print_meta: n_vocab          = 256000
0.00.621.940 I llm_load_print_meta: n_merges         = 0
0.00.621.941 I llm_load_print_meta: vocab_only       = 0
0.00.621.941 I llm_load_print_meta: n_ctx_train      = 8192
0.00.621.941 I llm_load_print_meta: n_embd           = 2048
0.00.621.942 I llm_load_print_meta: n_layer          = 18
0.00.622.008 I llm_load_print_meta: n_head           = 8
0.00.622.015 I llm_load_print_meta: n_head_kv        = 1
0.00.622.016 I llm_load_print_meta: n_rot            = 256
0.00.622.017 I llm_load_print_meta: n_swa            = 0
0.00.622.017 I llm_load_print_meta: n_embd_head_k    = 256
0.00.622.017 I llm_load_print_meta: n_embd_head_v    = 256
0.00.622.022 I llm_load_print_meta: n_gqa            = 8
0.00.622.027 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.622.032 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.033 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.035 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.036 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.036 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.037 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.042 I llm_load_print_meta: n_ff             = 16384
0.00.622.042 I llm_load_print_meta: n_expert         = 0
0.00.622.042 I llm_load_print_meta: n_expert_used    = 0
0.00.622.043 I llm_load_print_meta: causal attn      = 1
0.00.622.044 I llm_load_print_meta: pooling type     = 0
0.00.622.044 I llm_load_print_meta: rope type        = 2
0.00.622.045 I llm_load_print_meta: rope scaling     = linear
0.00.622.046 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.047 I llm_load_print_meta: freq_scale_train = 1
0.00.622.061 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.062 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.062 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.063 I llm_load_print_meta: ssm_d_inner      = 0
0.00.622.076 I llm_load_print_meta: ssm_d_state      = 0
0.00.622.077 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.622.077 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.622.078 I llm_load_print_meta: model type       = 2B
0.00.622.080 I llm_load_print_meta: model ftype      = Q8_0
0.00.622.081 I llm_load_print_meta: model params     = 2.51 B
0.00.622.082 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.622.082 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.622.083 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.622.084 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.622.084 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.622.085 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.622.085 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.622.089 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.622.096 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.622.098 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.622.099 I llm_load_print_meta: max token length = 93
0.00.622.276 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.721.918 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.721.929 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.721.929 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.721.930 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.721.931 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.721.931 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.727.663 I llama_new_context_with_model: n_ctx      = 8192
0.00.727.672 I llama_new_context_with_model: n_batch    = 2048
0.00.727.672 I llama_new_context_with_model: n_ubatch   = 512
0.00.727.673 I llama_new_context_with_model: flash_attn = 0
0.00.727.676 I llama_new_context_with_model: freq_base  = 10000.0
0.00.727.677 I llama_new_context_with_model: freq_scale = 1
0.00.756.945 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.756.990 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.757.107 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.758.512 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.758.517 I llama_new_context_with_model: graph nodes  = 601
0.00.758.518 I llama_new_context_with_model: graph splits = 1
0.00.758.533 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.371.015 I main: llama threadpool init, n_threads = 4
0.01.371.030 I 
0.01.371.138 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.371.143 I 
0.01.371.324 I sampler seed: 1559259824
0.01.371.336 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.371.344 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.371.345 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.371.345 I 
 increasities, and other forms of flattery.

**Answer:**

**Flattery and flattery are forms of social manipulation that can be harmful and manipulative.**



0.14.771.208 I llama_perf_sampler_print:    sampling time =      49.40 ms /    33 runs   (    1.50 ms per token,   668.08 tokens per second)
0.14.771.220 I llama_perf_context_print:        load time =    1368.11 ms
0.14.771.222 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.771.224 I llama_perf_context_print:        eval time =   13317.57 ms /    32 runs   (  416.17 ms per token,     2.40 tokens per second)
0.14.771.225 I llama_perf_context_print:       total time =   13400.20 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.686 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.899 I main: llama backend init
0.00.002.837 I main: load the model and apply lora adapter, if any
0.00.025.184 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.287 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.302 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.304 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.309 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.313 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.314 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.315 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.315 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.316 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.323 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.324 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.325 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.326 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.327 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.279 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.068 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.394 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.404 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.405 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.406 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.407 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.409 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.409 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.427 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.430 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.432 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.433 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.434 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.443 I llama_model_loader: - type  f32:   37 tensors
0.00.268.447 I llama_model_loader: - type q8_0:  127 tensors
0.00.447.302 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.492.647 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.494.518 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.500.244 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.512.648 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.513.636 I llm_load_vocab: special tokens cache size = 5
0.00.614.622 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.614.693 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.614.697 I llm_load_print_meta: arch             = gemma
0.00.614.698 I llm_load_print_meta: vocab type       = SPM
0.00.614.699 I llm_load_print_meta: n_vocab          = 256000
0.00.614.701 I llm_load_print_meta: n_merges         = 0
0.00.614.701 I llm_load_print_meta: vocab_only       = 0
0.00.614.702 I llm_load_print_meta: n_ctx_train      = 8192
0.00.614.702 I llm_load_print_meta: n_embd           = 2048
0.00.614.703 I llm_load_print_meta: n_layer          = 18
0.00.614.768 I llm_load_print_meta: n_head           = 8
0.00.614.777 I llm_load_print_meta: n_head_kv        = 1
0.00.614.778 I llm_load_print_meta: n_rot            = 256
0.00.614.778 I llm_load_print_meta: n_swa            = 0
0.00.614.780 I llm_load_print_meta: n_embd_head_k    = 256
0.00.614.780 I llm_load_print_meta: n_embd_head_v    = 256
0.00.614.785 I llm_load_print_meta: n_gqa            = 8
0.00.614.789 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.614.794 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.614.796 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.614.797 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.614.798 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.614.798 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.614.799 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.614.804 I llm_load_print_meta: n_ff             = 16384
0.00.614.804 I llm_load_print_meta: n_expert         = 0
0.00.614.806 I llm_load_print_meta: n_expert_used    = 0
0.00.614.806 I llm_load_print_meta: causal attn      = 1
0.00.614.807 I llm_load_print_meta: pooling type     = 0
0.00.614.807 I llm_load_print_meta: rope type        = 2
0.00.614.808 I llm_load_print_meta: rope scaling     = linear
0.00.614.809 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.614.812 I llm_load_print_meta: freq_scale_train = 1
0.00.614.813 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.614.813 I llm_load_print_meta: rope_finetuned   = unknown
0.00.614.813 I llm_load_print_meta: ssm_d_conv       = 0
0.00.614.814 I llm_load_print_meta: ssm_d_inner      = 0
0.00.614.814 I llm_load_print_meta: ssm_d_state      = 0
0.00.614.814 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.614.814 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.614.815 I llm_load_print_meta: model type       = 2B
0.00.614.816 I llm_load_print_meta: model ftype      = Q8_0
0.00.614.817 I llm_load_print_meta: model params     = 2.51 B
0.00.614.817 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.614.818 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.614.819 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.614.820 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.614.820 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.614.821 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.614.821 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.614.822 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.614.827 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.614.846 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.614.847 I llm_load_print_meta: max token length = 93
0.00.615.014 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.708.138 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.713.925 I llama_new_context_with_model: n_ctx      = 8192
0.00.713.933 I llama_new_context_with_model: n_batch    = 2048
0.00.713.934 I llama_new_context_with_model: n_ubatch   = 512
0.00.713.934 I llama_new_context_with_model: flash_attn = 0
0.00.713.938 I llama_new_context_with_model: freq_base  = 10000.0
0.00.713.938 I llama_new_context_with_model: freq_scale = 1
0.00.744.496 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.744.545 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.744.665 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.746.061 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.746.066 I llama_new_context_with_model: graph nodes  = 601
0.00.746.066 I llama_new_context_with_model: graph splits = 1
0.00.746.081 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.381.776 I main: llama threadpool init, n_threads = 4
0.01.381.788 I 
0.01.381.904 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.381.909 I 
0.01.382.120 I sampler seed: 2673865815
0.01.382.137 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.382.149 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.382.151 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.382.152 I 
 increasels with the following data:

| Subject | Age | Gender |
|---|---|---|
| John | 25 | Male |
| Mary

0.14.928.539 I llama_perf_sampler_print:    sampling time =      49.53 ms /    33 runs   (    1.50 ms per token,   666.29 tokens per second)
0.14.928.542 I llama_perf_context_print:        load time =    1378.84 ms
0.14.928.543 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.928.567 I llama_perf_context_print:        eval time =   13463.73 ms /    32 runs   (  420.74 ms per token,     2.38 tokens per second)
0.14.928.568 I llama_perf_context_print:       total time =   13546.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.675 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.872 I main: llama backend init
0.00.002.851 I main: load the model and apply lora adapter, if any
0.00.025.343 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.573 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.672 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.685 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.686 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.691 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.695 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.696 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.697 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.698 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.699 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.708 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.710 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.719 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.724 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.725 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.578 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.267.789 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.286.056 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.286.066 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.286.067 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.286.068 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.286.069 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.286.070 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.286.071 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.286.075 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.286.076 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.286.077 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.286.078 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.286.080 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.286.089 I llama_model_loader: - type  f32:   37 tensors
0.00.286.093 I llama_model_loader: - type q8_0:  127 tensors
0.00.464.463 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.509.675 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.511.539 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.517.173 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.529.296 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.530.253 I llm_load_vocab: special tokens cache size = 5
0.00.626.282 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.626.353 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.626.354 I llm_load_print_meta: arch             = gemma
0.00.626.355 I llm_load_print_meta: vocab type       = SPM
0.00.626.364 I llm_load_print_meta: n_vocab          = 256000
0.00.626.366 I llm_load_print_meta: n_merges         = 0
0.00.626.367 I llm_load_print_meta: vocab_only       = 0
0.00.626.367 I llm_load_print_meta: n_ctx_train      = 8192
0.00.626.368 I llm_load_print_meta: n_embd           = 2048
0.00.626.368 I llm_load_print_meta: n_layer          = 18
0.00.626.430 I llm_load_print_meta: n_head           = 8
0.00.626.437 I llm_load_print_meta: n_head_kv        = 1
0.00.626.438 I llm_load_print_meta: n_rot            = 256
0.00.626.438 I llm_load_print_meta: n_swa            = 0
0.00.626.439 I llm_load_print_meta: n_embd_head_k    = 256
0.00.626.440 I llm_load_print_meta: n_embd_head_v    = 256
0.00.626.445 I llm_load_print_meta: n_gqa            = 8
0.00.626.450 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.626.456 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.626.457 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.626.458 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.626.459 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.626.460 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.626.460 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.626.465 I llm_load_print_meta: n_ff             = 16384
0.00.626.466 I llm_load_print_meta: n_expert         = 0
0.00.626.478 I llm_load_print_meta: n_expert_used    = 0
0.00.626.482 I llm_load_print_meta: causal attn      = 1
0.00.626.482 I llm_load_print_meta: pooling type     = 0
0.00.626.483 I llm_load_print_meta: rope type        = 2
0.00.626.483 I llm_load_print_meta: rope scaling     = linear
0.00.626.485 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.626.486 I llm_load_print_meta: freq_scale_train = 1
0.00.626.487 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.626.487 I llm_load_print_meta: rope_finetuned   = unknown
0.00.626.488 I llm_load_print_meta: ssm_d_conv       = 0
0.00.626.499 I llm_load_print_meta: ssm_d_inner      = 0
0.00.626.500 I llm_load_print_meta: ssm_d_state      = 0
0.00.626.503 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.626.503 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.626.504 I llm_load_print_meta: model type       = 2B
0.00.626.506 I llm_load_print_meta: model ftype      = Q8_0
0.00.626.507 I llm_load_print_meta: model params     = 2.51 B
0.00.626.508 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.626.508 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.626.509 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.626.509 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.626.510 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.626.510 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.626.510 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.626.511 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.626.518 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.626.520 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.626.521 I llm_load_print_meta: max token length = 93
0.00.626.691 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.703.616 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.703.627 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.703.628 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.703.628 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.703.629 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.703.630 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.709.454 I llama_new_context_with_model: n_ctx      = 8192
0.00.709.462 I llama_new_context_with_model: n_batch    = 2048
0.00.709.462 I llama_new_context_with_model: n_ubatch   = 512
0.00.709.462 I llama_new_context_with_model: flash_attn = 0
0.00.709.467 I llama_new_context_with_model: freq_base  = 10000.0
0.00.709.468 I llama_new_context_with_model: freq_scale = 1
0.00.740.890 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.740.938 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.741.053 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.742.487 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.742.492 I llama_new_context_with_model: graph nodes  = 601
0.00.742.493 I llama_new_context_with_model: graph splits = 1
0.00.742.510 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.352.115 I main: llama threadpool init, n_threads = 4
0.01.352.128 I 
0.01.352.236 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.352.236 I 
0.01.352.418 I sampler seed: 2458303011
0.01.352.430 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.352.438 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.352.439 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.352.439 I 
 increasities, and other forms of flattery to obtain special treatment or advance their careers. [end of text]


0.08.935.497 I llama_perf_sampler_print:    sampling time =      27.91 ms /    19 runs   (    1.47 ms per token,   680.81 tokens per second)
0.08.935.522 I llama_perf_context_print:        load time =    1349.16 ms
0.08.935.524 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.935.525 I llama_perf_context_print:        eval time =    7536.55 ms /    18 runs   (  418.70 ms per token,     2.39 tokens per second)
0.08.935.526 I llama_perf_context_print:       total time =    7583.39 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.654 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.882 I main: llama backend init
0.00.002.892 I main: load the model and apply lora adapter, if any
0.00.024.923 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.130 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.219 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.229 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.231 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.235 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.236 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.238 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.239 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.240 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.241 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.248 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.252 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.253 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.254 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.255 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.896 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.803 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.022 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.032 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.033 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.034 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.035 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.036 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.038 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.042 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.044 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.045 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.046 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.269.047 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.056 I llama_model_loader: - type  f32:   37 tensors
0.00.269.060 I llama_model_loader: - type q8_0:  127 tensors
0.00.455.417 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.502.386 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.504.348 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.510.090 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.522.584 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.523.589 I llm_load_vocab: special tokens cache size = 5
0.00.626.859 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.626.933 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.626.934 I llm_load_print_meta: arch             = gemma
0.00.626.935 I llm_load_print_meta: vocab type       = SPM
0.00.626.935 I llm_load_print_meta: n_vocab          = 256000
0.00.626.938 I llm_load_print_meta: n_merges         = 0
0.00.626.938 I llm_load_print_meta: vocab_only       = 0
0.00.626.939 I llm_load_print_meta: n_ctx_train      = 8192
0.00.626.939 I llm_load_print_meta: n_embd           = 2048
0.00.626.939 I llm_load_print_meta: n_layer          = 18
0.00.627.028 I llm_load_print_meta: n_head           = 8
0.00.627.036 I llm_load_print_meta: n_head_kv        = 1
0.00.627.037 I llm_load_print_meta: n_rot            = 256
0.00.627.038 I llm_load_print_meta: n_swa            = 0
0.00.627.038 I llm_load_print_meta: n_embd_head_k    = 256
0.00.627.039 I llm_load_print_meta: n_embd_head_v    = 256
0.00.627.043 I llm_load_print_meta: n_gqa            = 8
0.00.627.052 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.627.060 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.627.061 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.627.062 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.627.063 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.627.063 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.627.065 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.627.070 I llm_load_print_meta: n_ff             = 16384
0.00.627.071 I llm_load_print_meta: n_expert         = 0
0.00.627.072 I llm_load_print_meta: n_expert_used    = 0
0.00.627.072 I llm_load_print_meta: causal attn      = 1
0.00.627.072 I llm_load_print_meta: pooling type     = 0
0.00.627.073 I llm_load_print_meta: rope type        = 2
0.00.627.079 I llm_load_print_meta: rope scaling     = linear
0.00.627.087 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.627.090 I llm_load_print_meta: freq_scale_train = 1
0.00.627.090 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.627.091 I llm_load_print_meta: rope_finetuned   = unknown
0.00.627.091 I llm_load_print_meta: ssm_d_conv       = 0
0.00.627.091 I llm_load_print_meta: ssm_d_inner      = 0
0.00.627.092 I llm_load_print_meta: ssm_d_state      = 0
0.00.627.092 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.627.092 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.627.093 I llm_load_print_meta: model type       = 2B
0.00.627.094 I llm_load_print_meta: model ftype      = Q8_0
0.00.627.095 I llm_load_print_meta: model params     = 2.51 B
0.00.627.095 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.627.097 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.627.098 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.627.098 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.627.099 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.627.100 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.627.100 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.627.101 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.627.109 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.627.110 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.627.111 I llm_load_print_meta: max token length = 93
0.00.627.283 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.698.743 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.698.755 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.704.498 I llama_new_context_with_model: n_ctx      = 8192
0.00.704.507 I llama_new_context_with_model: n_batch    = 2048
0.00.704.507 I llama_new_context_with_model: n_ubatch   = 512
0.00.704.508 I llama_new_context_with_model: flash_attn = 0
0.00.704.511 I llama_new_context_with_model: freq_base  = 10000.0
0.00.704.512 I llama_new_context_with_model: freq_scale = 1
0.00.735.747 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.735.792 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.735.918 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.737.351 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.737.356 I llama_new_context_with_model: graph nodes  = 601
0.00.737.356 I llama_new_context_with_model: graph splits = 1
0.00.737.372 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.348.434 I main: llama threadpool init, n_threads = 4
0.01.348.451 I 
0.01.348.579 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.348.583 I 
0.01.348.776 I sampler seed: 3284082690
0.01.348.787 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.348.794 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.348.798 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.348.798 I 
 increasities, the allure of a beautiful woman, and a yearning for adventure.

These are the ingredients that simmer beneath the surface of my being, fueling my

0.14.839.819 I llama_perf_sampler_print:    sampling time =      49.45 ms /    33 runs   (    1.50 ms per token,   667.27 tokens per second)
0.14.839.822 I llama_perf_context_print:        load time =    1345.45 ms
0.14.839.824 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.839.840 I llama_perf_context_print:        eval time =   13406.98 ms /    32 runs   (  418.97 ms per token,     2.39 tokens per second)
0.14.839.841 I llama_perf_context_print:       total time =   13491.40 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m3.244s
user	3m24.851s
sys	0m9.657s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3941 (06159898)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 197221.29 ms
main:    total time = 197221.29 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.666 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.868 I main: llama backend init
0.00.002.802 I main: load the model and apply lora adapter, if any
0.00.024.870 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.091 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.187 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.200 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.202 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.207 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.211 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.212 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.213 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.214 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.215 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.223 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.224 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.226 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.227 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.228 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.771 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.255.629 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.273.911 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.273.923 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.273.925 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.273.926 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.273.927 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.273.928 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.273.929 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.273.933 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.273.934 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.273.935 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.273.936 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.273.937 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.273.945 I llama_model_loader: - type  f32:   37 tensors
0.00.273.950 I llama_model_loader: - type q4_K:  108 tensors
0.00.273.951 I llama_model_loader: - type q6_K:   19 tensors
0.00.473.631 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.522.544 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.524.700 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.531.296 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.545.542 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.546.593 I llm_load_vocab: special tokens cache size = 5
0.00.656.937 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.657.010 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.657.014 I llm_load_print_meta: arch             = gemma
0.00.657.015 I llm_load_print_meta: vocab type       = SPM
0.00.657.016 I llm_load_print_meta: n_vocab          = 256000
0.00.657.018 I llm_load_print_meta: n_merges         = 0
0.00.657.018 I llm_load_print_meta: vocab_only       = 0
0.00.657.019 I llm_load_print_meta: n_ctx_train      = 8192
0.00.657.019 I llm_load_print_meta: n_embd           = 2048
0.00.657.020 I llm_load_print_meta: n_layer          = 18
0.00.657.082 I llm_load_print_meta: n_head           = 8
0.00.657.092 I llm_load_print_meta: n_head_kv        = 1
0.00.657.092 I llm_load_print_meta: n_rot            = 256
0.00.657.094 I llm_load_print_meta: n_swa            = 0
0.00.657.095 I llm_load_print_meta: n_embd_head_k    = 256
0.00.657.095 I llm_load_print_meta: n_embd_head_v    = 256
0.00.657.099 I llm_load_print_meta: n_gqa            = 8
0.00.657.104 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.657.109 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.657.112 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.657.114 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.657.114 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.657.115 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.657.115 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.657.120 I llm_load_print_meta: n_ff             = 16384
0.00.657.121 I llm_load_print_meta: n_expert         = 0
0.00.657.121 I llm_load_print_meta: n_expert_used    = 0
0.00.657.121 I llm_load_print_meta: causal attn      = 1
0.00.657.122 I llm_load_print_meta: pooling type     = 0
0.00.657.122 I llm_load_print_meta: rope type        = 2
0.00.657.123 I llm_load_print_meta: rope scaling     = linear
0.00.657.124 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.657.124 I llm_load_print_meta: freq_scale_train = 1
0.00.657.125 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.657.125 I llm_load_print_meta: rope_finetuned   = unknown
0.00.657.125 I llm_load_print_meta: ssm_d_conv       = 0
0.00.657.126 I llm_load_print_meta: ssm_d_inner      = 0
0.00.657.138 I llm_load_print_meta: ssm_d_state      = 0
0.00.657.139 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.657.140 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.657.140 I llm_load_print_meta: model type       = 2B
0.00.657.142 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.657.143 I llm_load_print_meta: model params     = 2.51 B
0.00.657.145 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.657.147 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.657.148 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.657.148 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.657.149 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.657.149 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.657.150 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.657.150 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.657.156 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.657.157 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.657.158 I llm_load_print_meta: max token length = 93
0.00.657.323 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.717.788 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.717.800 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.717.800 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.717.801 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.717.802 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.717.802 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.723.491 I llama_new_context_with_model: n_ctx      = 8192
0.00.723.498 I llama_new_context_with_model: n_batch    = 2048
0.00.723.498 I llama_new_context_with_model: n_ubatch   = 512
0.00.723.499 I llama_new_context_with_model: flash_attn = 0
0.00.723.503 I llama_new_context_with_model: freq_base  = 10000.0
0.00.723.504 I llama_new_context_with_model: freq_scale = 1
0.00.753.330 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.753.375 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.753.493 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.754.934 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.754.939 I llama_new_context_with_model: graph nodes  = 601
0.00.754.940 I llama_new_context_with_model: graph splits = 1
0.00.754.956 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.335.342 I main: llama threadpool init, n_threads = 4
0.01.335.353 I 
0.01.335.458 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.335.462 I 
0.01.335.638 I sampler seed: 649729099
0.01.335.649 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.335.656 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.335.658 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.335.658 I 
 fufilling sounds, a rhythmic pulse, and lyrics that capture the essence of human connection.

This soundscape evokes a sense of warmth, belonging, and shared

0.12.287.611 I llama_perf_sampler_print:    sampling time =      49.30 ms /    33 runs   (    1.49 ms per token,   669.38 tokens per second)
0.12.287.613 I llama_perf_context_print:        load time =    1332.44 ms
0.12.287.629 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.287.631 I llama_perf_context_print:        eval time =   10869.44 ms /    32 runs   (  339.67 ms per token,     2.94 tokens per second)
0.12.287.632 I llama_perf_context_print:       total time =   10952.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3941 (06159898)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 197300.64 ms
main:    total time = 197300.64 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.675 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.880 I main: llama backend init
0.00.002.841 I main: load the model and apply lora adapter, if any
0.00.025.348 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.454 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.470 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.472 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.477 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.482 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.483 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.484 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.485 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.486 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.494 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.508 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.510 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.511 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.519 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.426 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.135 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.443 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.453 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.454 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.455 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.456 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.457 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.458 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.462 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.462 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.472 I llama_model_loader: - type  f32:   37 tensors
0.00.268.476 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.477 I llama_model_loader: - type q6_K:   19 tensors
0.00.463.146 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.511.717 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.513.804 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.520.290 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.534.791 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.535.833 I llm_load_vocab: special tokens cache size = 5
0.00.631.990 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.632.061 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.632.063 I llm_load_print_meta: arch             = gemma
0.00.632.063 I llm_load_print_meta: vocab type       = SPM
0.00.632.064 I llm_load_print_meta: n_vocab          = 256000
0.00.632.067 I llm_load_print_meta: n_merges         = 0
0.00.632.067 I llm_load_print_meta: vocab_only       = 0
0.00.632.067 I llm_load_print_meta: n_ctx_train      = 8192
0.00.632.068 I llm_load_print_meta: n_embd           = 2048
0.00.632.068 I llm_load_print_meta: n_layer          = 18
0.00.632.160 I llm_load_print_meta: n_head           = 8
0.00.632.169 I llm_load_print_meta: n_head_kv        = 1
0.00.632.170 I llm_load_print_meta: n_rot            = 256
0.00.632.170 I llm_load_print_meta: n_swa            = 0
0.00.632.171 I llm_load_print_meta: n_embd_head_k    = 256
0.00.632.172 I llm_load_print_meta: n_embd_head_v    = 256
0.00.632.176 I llm_load_print_meta: n_gqa            = 8
0.00.632.181 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.632.187 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.632.192 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.632.202 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.632.204 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.632.204 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.632.205 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.632.210 I llm_load_print_meta: n_ff             = 16384
0.00.632.218 I llm_load_print_meta: n_expert         = 0
0.00.632.218 I llm_load_print_meta: n_expert_used    = 0
0.00.632.226 I llm_load_print_meta: causal attn      = 1
0.00.632.227 I llm_load_print_meta: pooling type     = 0
0.00.632.227 I llm_load_print_meta: rope type        = 2
0.00.632.228 I llm_load_print_meta: rope scaling     = linear
0.00.632.229 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.632.230 I llm_load_print_meta: freq_scale_train = 1
0.00.632.231 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.632.231 I llm_load_print_meta: rope_finetuned   = unknown
0.00.632.231 I llm_load_print_meta: ssm_d_conv       = 0
0.00.632.232 I llm_load_print_meta: ssm_d_inner      = 0
0.00.632.232 I llm_load_print_meta: ssm_d_state      = 0
0.00.632.233 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.632.233 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.632.241 I llm_load_print_meta: model type       = 2B
0.00.632.242 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.632.243 I llm_load_print_meta: model params     = 2.51 B
0.00.632.244 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.632.244 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.632.245 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.632.248 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.632.249 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.632.249 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.632.250 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.632.250 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.632.255 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.632.258 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.632.258 I llm_load_print_meta: max token length = 93
0.00.632.425 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.689.518 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.695.021 I llama_new_context_with_model: n_ctx      = 8192
0.00.695.030 I llama_new_context_with_model: n_batch    = 2048
0.00.695.030 I llama_new_context_with_model: n_ubatch   = 512
0.00.695.031 I llama_new_context_with_model: flash_attn = 0
0.00.695.034 I llama_new_context_with_model: freq_base  = 10000.0
0.00.695.035 I llama_new_context_with_model: freq_scale = 1
0.00.725.813 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.725.859 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.725.974 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.727.341 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.727.347 I llama_new_context_with_model: graph nodes  = 601
0.00.727.347 I llama_new_context_with_model: graph splits = 1
0.00.727.364 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.306.255 I main: llama threadpool init, n_threads = 4
0.01.306.268 I 
0.01.306.377 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.306.381 I 
0.01.306.563 I sampler seed: 3499229538
0.01.306.574 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.306.580 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.306.581 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.306.582 I 
 squared lines. 

This is the first part of a poem about the natural world.

The whispering wind, a restless soul,
Through rustling leaves

0.12.266.284 I llama_perf_sampler_print:    sampling time =      49.25 ms /    33 runs   (    1.49 ms per token,   670.02 tokens per second)
0.12.266.287 I llama_perf_context_print:        load time =    1303.31 ms
0.12.266.289 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.266.291 I llama_perf_context_print:        eval time =   10875.51 ms /    32 runs   (  339.86 ms per token,     2.94 tokens per second)
0.12.266.291 I llama_perf_context_print:       total time =   10960.04 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m2.021s
user	49m54.256s
sys	0m6.360s
