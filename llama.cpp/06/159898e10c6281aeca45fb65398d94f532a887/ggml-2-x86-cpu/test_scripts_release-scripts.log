+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.555 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.859 I main: load the model and apply lora adapter, if any
0.00.022.457 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.508 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.519 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.524 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.528 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.532 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.534 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.534 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.535 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.536 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.537 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.541 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.542 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.542 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.543 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.544 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.503 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.875 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.809 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.816 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.817 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.817 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.818 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.819 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.819 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.822 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.822 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.823 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.823 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.825 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.828 I llama_model_loader: - type  f32:   37 tensors
0.00.133.832 I llama_model_loader: - type q8_0:  127 tensors
0.00.218.716 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.813 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.257.490 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.262.684 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.273.491 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.274.166 I llm_load_vocab: special tokens cache size = 5
0.00.295.370 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.295.390 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.295.391 I llm_load_print_meta: arch             = gemma
0.00.295.391 I llm_load_print_meta: vocab type       = SPM
0.00.295.392 I llm_load_print_meta: n_vocab          = 256000
0.00.295.393 I llm_load_print_meta: n_merges         = 0
0.00.295.393 I llm_load_print_meta: vocab_only       = 0
0.00.295.393 I llm_load_print_meta: n_ctx_train      = 8192
0.00.295.393 I llm_load_print_meta: n_embd           = 2048
0.00.295.394 I llm_load_print_meta: n_layer          = 18
0.00.295.406 I llm_load_print_meta: n_head           = 8
0.00.295.407 I llm_load_print_meta: n_head_kv        = 1
0.00.295.407 I llm_load_print_meta: n_rot            = 256
0.00.295.407 I llm_load_print_meta: n_swa            = 0
0.00.295.408 I llm_load_print_meta: n_embd_head_k    = 256
0.00.295.408 I llm_load_print_meta: n_embd_head_v    = 256
0.00.295.409 I llm_load_print_meta: n_gqa            = 8
0.00.295.410 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.295.411 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.295.412 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.295.413 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.295.413 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.295.414 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.295.414 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.295.415 I llm_load_print_meta: n_ff             = 16384
0.00.295.415 I llm_load_print_meta: n_expert         = 0
0.00.295.416 I llm_load_print_meta: n_expert_used    = 0
0.00.295.416 I llm_load_print_meta: causal attn      = 1
0.00.295.416 I llm_load_print_meta: pooling type     = 0
0.00.295.416 I llm_load_print_meta: rope type        = 2
0.00.295.417 I llm_load_print_meta: rope scaling     = linear
0.00.295.419 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.295.420 I llm_load_print_meta: freq_scale_train = 1
0.00.295.420 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.295.420 I llm_load_print_meta: rope_finetuned   = unknown
0.00.295.420 I llm_load_print_meta: ssm_d_conv       = 0
0.00.295.421 I llm_load_print_meta: ssm_d_inner      = 0
0.00.295.421 I llm_load_print_meta: ssm_d_state      = 0
0.00.295.421 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.295.421 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.295.422 I llm_load_print_meta: model type       = 2B
0.00.295.422 I llm_load_print_meta: model ftype      = Q8_0
0.00.295.423 I llm_load_print_meta: model params     = 2.51 B
0.00.295.424 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.295.424 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.295.425 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.295.425 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.295.426 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.295.426 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.295.426 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.295.427 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.295.427 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.295.427 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.295.428 I llm_load_print_meta: max token length = 93
0.00.295.450 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.393.148 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.393.156 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.393.157 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.393.157 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.393.158 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.393.159 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.398.332 I llama_new_context_with_model: n_ctx      = 8192
0.00.398.339 I llama_new_context_with_model: n_batch    = 2048
0.00.398.339 I llama_new_context_with_model: n_ubatch   = 512
0.00.398.340 I llama_new_context_with_model: flash_attn = 0
0.00.398.343 I llama_new_context_with_model: freq_base  = 10000.0
0.00.398.344 I llama_new_context_with_model: freq_scale = 1
0.00.427.981 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.427.996 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.428.089 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.429.000 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.429.006 I llama_new_context_with_model: graph nodes  = 601
0.00.429.006 I llama_new_context_with_model: graph splits = 1
0.00.429.008 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.523.813 I main: llama threadpool init, n_threads = 4
0.00.523.828 I 
0.00.523.909 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.523.913 I 
0.00.523.953 I sampler seed: 950914095
0.00.523.964 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.523.968 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.523.968 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.523.969 I 
 increasities, the first of its kind in the history of science, to investigate the chemical composition of blood plasma.

**a)** What was the significance of

0.02.868.469 I llama_perf_sampler_print:    sampling time =       5.14 ms /    33 runs   (    0.16 ms per token,  6421.48 tokens per second)
0.02.868.472 I llama_perf_context_print:        load time =     521.93 ms
0.02.868.473 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.868.474 I llama_perf_context_print:        eval time =    2325.72 ms /    32 runs   (   72.68 ms per token,    13.76 tokens per second)
0.02.868.475 I llama_perf_context_print:       total time =    2344.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.558 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.001.927 I main: load the model and apply lora adapter, if any
0.00.022.043 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.058 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.066 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.067 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.072 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.072 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.073 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.073 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.074 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.074 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.080 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.080 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.081 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.082 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.083 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.820 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.231 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.170 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.178 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.179 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.180 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.180 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.181 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.182 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.184 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.185 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.186 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.186 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.134.187 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.191 I llama_model_loader: - type  f32:   37 tensors
0.00.134.193 I llama_model_loader: - type q8_0:  127 tensors
0.00.226.643 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.263.764 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.265.343 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.270.270 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.280.622 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.281.300 I llm_load_vocab: special tokens cache size = 5
0.00.302.408 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.302.427 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.302.427 I llm_load_print_meta: arch             = gemma
0.00.302.428 I llm_load_print_meta: vocab type       = SPM
0.00.302.428 I llm_load_print_meta: n_vocab          = 256000
0.00.302.429 I llm_load_print_meta: n_merges         = 0
0.00.302.429 I llm_load_print_meta: vocab_only       = 0
0.00.302.430 I llm_load_print_meta: n_ctx_train      = 8192
0.00.302.430 I llm_load_print_meta: n_embd           = 2048
0.00.302.430 I llm_load_print_meta: n_layer          = 18
0.00.302.442 I llm_load_print_meta: n_head           = 8
0.00.302.443 I llm_load_print_meta: n_head_kv        = 1
0.00.302.443 I llm_load_print_meta: n_rot            = 256
0.00.302.444 I llm_load_print_meta: n_swa            = 0
0.00.302.444 I llm_load_print_meta: n_embd_head_k    = 256
0.00.302.444 I llm_load_print_meta: n_embd_head_v    = 256
0.00.302.446 I llm_load_print_meta: n_gqa            = 8
0.00.302.447 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.302.448 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.302.448 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.302.450 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.302.450 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.302.450 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.302.450 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.302.451 I llm_load_print_meta: n_ff             = 16384
0.00.302.452 I llm_load_print_meta: n_expert         = 0
0.00.302.452 I llm_load_print_meta: n_expert_used    = 0
0.00.302.452 I llm_load_print_meta: causal attn      = 1
0.00.302.453 I llm_load_print_meta: pooling type     = 0
0.00.302.453 I llm_load_print_meta: rope type        = 2
0.00.302.453 I llm_load_print_meta: rope scaling     = linear
0.00.302.455 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.302.455 I llm_load_print_meta: freq_scale_train = 1
0.00.302.456 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.302.456 I llm_load_print_meta: rope_finetuned   = unknown
0.00.302.456 I llm_load_print_meta: ssm_d_conv       = 0
0.00.302.457 I llm_load_print_meta: ssm_d_inner      = 0
0.00.302.457 I llm_load_print_meta: ssm_d_state      = 0
0.00.302.457 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.302.458 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.302.458 I llm_load_print_meta: model type       = 2B
0.00.302.459 I llm_load_print_meta: model ftype      = Q8_0
0.00.302.460 I llm_load_print_meta: model params     = 2.51 B
0.00.302.461 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.302.461 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.302.461 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.302.462 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.302.462 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.302.462 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.302.462 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.302.463 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.302.463 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.302.463 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.302.464 I llm_load_print_meta: max token length = 93
0.00.302.486 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.396.662 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.401.805 I llama_new_context_with_model: n_ctx      = 8192
0.00.401.810 I llama_new_context_with_model: n_batch    = 2048
0.00.401.810 I llama_new_context_with_model: n_ubatch   = 512
0.00.401.811 I llama_new_context_with_model: flash_attn = 0
0.00.401.814 I llama_new_context_with_model: freq_base  = 10000.0
0.00.401.814 I llama_new_context_with_model: freq_scale = 1
0.00.431.248 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.431.264 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.431.355 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.432.218 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.432.225 I llama_new_context_with_model: graph nodes  = 601
0.00.432.225 I llama_new_context_with_model: graph splits = 1
0.00.432.227 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.524.369 I main: llama threadpool init, n_threads = 4
0.00.524.383 I 
0.00.524.462 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.524.465 I 
0.00.524.506 I sampler seed: 3902405656
0.00.524.516 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.524.524 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.524.526 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.524.526 I 
 increably.

I cannot answer this question because it contains inappropriate and sexually suggestive content. [end of text]


0.01.870.124 I llama_perf_sampler_print:    sampling time =       3.06 ms /    20 runs   (    0.15 ms per token,  6538.08 tokens per second)
0.01.870.127 I llama_perf_context_print:        load time =     522.42 ms
0.01.870.129 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.870.131 I llama_perf_context_print:        eval time =    1333.65 ms /    19 runs   (   70.19 ms per token,    14.25 tokens per second)
0.01.870.131 I llama_perf_context_print:       total time =    1345.76 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.560 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.798 I main: llama backend init
0.00.001.932 I main: load the model and apply lora adapter, if any
0.00.022.112 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.173 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.188 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.195 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.196 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.201 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.202 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.203 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.204 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.204 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.205 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.212 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.214 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.215 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.220 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.221 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.131 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.830 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.782 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.791 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.792 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.792 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.793 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.794 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.794 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.797 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.799 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.799 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.800 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.801 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.805 I llama_model_loader: - type  f32:   37 tensors
0.00.132.809 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.658 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.711 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.247.173 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.252.105 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.262.468 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.263.191 I llm_load_vocab: special tokens cache size = 5
0.00.284.496 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.515 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.516 I llm_load_print_meta: arch             = gemma
0.00.284.517 I llm_load_print_meta: vocab type       = SPM
0.00.284.517 I llm_load_print_meta: n_vocab          = 256000
0.00.284.518 I llm_load_print_meta: n_merges         = 0
0.00.284.519 I llm_load_print_meta: vocab_only       = 0
0.00.284.519 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.519 I llm_load_print_meta: n_embd           = 2048
0.00.284.520 I llm_load_print_meta: n_layer          = 18
0.00.284.531 I llm_load_print_meta: n_head           = 8
0.00.284.532 I llm_load_print_meta: n_head_kv        = 1
0.00.284.533 I llm_load_print_meta: n_rot            = 256
0.00.284.533 I llm_load_print_meta: n_swa            = 0
0.00.284.534 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.534 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.535 I llm_load_print_meta: n_gqa            = 8
0.00.284.536 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.537 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.537 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.539 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.539 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.539 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.540 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.541 I llm_load_print_meta: n_ff             = 16384
0.00.284.541 I llm_load_print_meta: n_expert         = 0
0.00.284.541 I llm_load_print_meta: n_expert_used    = 0
0.00.284.542 I llm_load_print_meta: causal attn      = 1
0.00.284.542 I llm_load_print_meta: pooling type     = 0
0.00.284.542 I llm_load_print_meta: rope type        = 2
0.00.284.543 I llm_load_print_meta: rope scaling     = linear
0.00.284.544 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.545 I llm_load_print_meta: freq_scale_train = 1
0.00.284.545 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.545 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.545 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.546 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.546 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.546 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.546 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.547 I llm_load_print_meta: model type       = 2B
0.00.284.547 I llm_load_print_meta: model ftype      = Q8_0
0.00.284.548 I llm_load_print_meta: model params     = 2.51 B
0.00.284.549 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.284.549 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.550 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.550 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.551 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.551 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.551 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.552 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.552 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.552 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.553 I llm_load_print_meta: max token length = 93
0.00.284.583 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.360.074 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.360.085 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.360.086 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.360.086 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.360.088 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.360.088 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.365.322 I llama_new_context_with_model: n_ctx      = 8192
0.00.365.331 I llama_new_context_with_model: n_batch    = 2048
0.00.365.331 I llama_new_context_with_model: n_ubatch   = 512
0.00.365.332 I llama_new_context_with_model: flash_attn = 0
0.00.365.336 I llama_new_context_with_model: freq_base  = 10000.0
0.00.365.336 I llama_new_context_with_model: freq_scale = 1
0.00.395.317 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.395.334 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.395.445 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.418 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.396.428 I llama_new_context_with_model: graph nodes  = 601
0.00.396.428 I llama_new_context_with_model: graph splits = 1
0.00.396.430 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.502.800 I main: llama threadpool init, n_threads = 4
0.00.502.817 I 
0.00.502.899 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.502.905 I 
0.00.502.944 I sampler seed: 597136905
0.00.502.954 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.502.956 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.502.957 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.502.957 I 
 increasels around a campfire, glowing embers illuminating their faces.

The crackling fire cast warm, flickering shadows on the faces of the group, as they huddled close

0.02.839.971 I llama_perf_sampler_print:    sampling time =       5.30 ms /    33 runs   (    0.16 ms per token,  6224.07 tokens per second)
0.02.839.974 I llama_perf_context_print:        load time =     500.84 ms
0.02.839.975 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.839.976 I llama_perf_context_print:        eval time =    2317.91 ms /    32 runs   (   72.43 ms per token,    13.81 tokens per second)
0.02.839.977 I llama_perf_context_print:       total time =    2337.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.572 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.859 I main: load the model and apply lora adapter, if any
0.00.022.118 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.167 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.178 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.183 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.186 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.191 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.192 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.193 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.193 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.194 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.194 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.199 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.199 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.200 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.200 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.200 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.872 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.832 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.715 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.722 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.723 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.724 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.724 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.725 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.725 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.728 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.729 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.729 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.730 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.731 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.734 I llama_model_loader: - type  f32:   37 tensors
0.00.133.737 I llama_model_loader: - type q8_0:  127 tensors
0.00.221.528 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.439 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.258.878 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.263.549 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.273.585 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.274.259 I llm_load_vocab: special tokens cache size = 5
0.00.295.363 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.295.383 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.295.383 I llm_load_print_meta: arch             = gemma
0.00.295.384 I llm_load_print_meta: vocab type       = SPM
0.00.295.385 I llm_load_print_meta: n_vocab          = 256000
0.00.295.385 I llm_load_print_meta: n_merges         = 0
0.00.295.386 I llm_load_print_meta: vocab_only       = 0
0.00.295.386 I llm_load_print_meta: n_ctx_train      = 8192
0.00.295.386 I llm_load_print_meta: n_embd           = 2048
0.00.295.386 I llm_load_print_meta: n_layer          = 18
0.00.295.398 I llm_load_print_meta: n_head           = 8
0.00.295.399 I llm_load_print_meta: n_head_kv        = 1
0.00.295.400 I llm_load_print_meta: n_rot            = 256
0.00.295.400 I llm_load_print_meta: n_swa            = 0
0.00.295.400 I llm_load_print_meta: n_embd_head_k    = 256
0.00.295.401 I llm_load_print_meta: n_embd_head_v    = 256
0.00.295.401 I llm_load_print_meta: n_gqa            = 8
0.00.295.402 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.295.403 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.295.404 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.295.406 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.295.406 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.295.406 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.295.407 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.295.408 I llm_load_print_meta: n_ff             = 16384
0.00.295.409 I llm_load_print_meta: n_expert         = 0
0.00.295.409 I llm_load_print_meta: n_expert_used    = 0
0.00.295.409 I llm_load_print_meta: causal attn      = 1
0.00.295.409 I llm_load_print_meta: pooling type     = 0
0.00.295.410 I llm_load_print_meta: rope type        = 2
0.00.295.410 I llm_load_print_meta: rope scaling     = linear
0.00.295.411 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.295.412 I llm_load_print_meta: freq_scale_train = 1
0.00.295.412 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.295.413 I llm_load_print_meta: rope_finetuned   = unknown
0.00.295.413 I llm_load_print_meta: ssm_d_conv       = 0
0.00.295.413 I llm_load_print_meta: ssm_d_inner      = 0
0.00.295.413 I llm_load_print_meta: ssm_d_state      = 0
0.00.295.413 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.295.414 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.295.414 I llm_load_print_meta: model type       = 2B
0.00.295.414 I llm_load_print_meta: model ftype      = Q8_0
0.00.295.415 I llm_load_print_meta: model params     = 2.51 B
0.00.295.416 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.295.416 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.295.417 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.295.417 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.295.418 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.295.418 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.295.418 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.295.418 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.295.419 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.295.419 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.295.419 I llm_load_print_meta: max token length = 93
0.00.295.449 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.365.600 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.365.608 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.370.687 I llama_new_context_with_model: n_ctx      = 8192
0.00.370.694 I llama_new_context_with_model: n_batch    = 2048
0.00.370.694 I llama_new_context_with_model: n_ubatch   = 512
0.00.370.695 I llama_new_context_with_model: flash_attn = 0
0.00.370.697 I llama_new_context_with_model: freq_base  = 10000.0
0.00.370.698 I llama_new_context_with_model: freq_scale = 1
0.00.400.267 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.400.284 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.400.382 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.401.243 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.401.251 I llama_new_context_with_model: graph nodes  = 601
0.00.401.252 I llama_new_context_with_model: graph splits = 1
0.00.401.254 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.498.738 I main: llama threadpool init, n_threads = 4
0.00.498.752 I 
0.00.498.829 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.498.833 I 
0.00.498.873 I sampler seed: 2731025460
0.00.498.883 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.886 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.498.887 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.887 I 
 increasements.

I am unable to access the requested content. Please try again later. [end of text]


0.01.979.431 I llama_perf_sampler_print:    sampling time =       3.01 ms /    20 runs   (    0.15 ms per token,  6635.70 tokens per second)
0.01.979.434 I llama_perf_context_print:        load time =     496.86 ms
0.01.979.446 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.979.447 I llama_perf_context_print:        eval time =    1469.12 ms /    19 runs   (   77.32 ms per token,    12.93 tokens per second)
0.01.979.448 I llama_perf_context_print:       total time =    1480.70 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.732s
user	0m33.189s
sys	0m9.647s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3941 (06159898)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32201.76 ms
main:    total time = 32201.76 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.552 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.875 I main: load the model and apply lora adapter, if any
0.00.022.040 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.091 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.103 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.108 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.112 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.117 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.117 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.119 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.119 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.120 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.120 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.125 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.126 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.126 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.127 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.128 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.313 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.709 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.609 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.615 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.616 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.617 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.617 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.618 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.619 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.621 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.621 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.622 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.622 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.623 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.627 I llama_model_loader: - type  f32:   37 tensors
0.00.133.630 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.630 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.483 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.430 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.248.085 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.253.055 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.263.229 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.263.880 I llm_load_vocab: special tokens cache size = 5
0.00.285.060 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.285.081 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.285.082 I llm_load_print_meta: arch             = gemma
0.00.285.083 I llm_load_print_meta: vocab type       = SPM
0.00.285.083 I llm_load_print_meta: n_vocab          = 256000
0.00.285.084 I llm_load_print_meta: n_merges         = 0
0.00.285.084 I llm_load_print_meta: vocab_only       = 0
0.00.285.084 I llm_load_print_meta: n_ctx_train      = 8192
0.00.285.084 I llm_load_print_meta: n_embd           = 2048
0.00.285.085 I llm_load_print_meta: n_layer          = 18
0.00.285.097 I llm_load_print_meta: n_head           = 8
0.00.285.098 I llm_load_print_meta: n_head_kv        = 1
0.00.285.098 I llm_load_print_meta: n_rot            = 256
0.00.285.099 I llm_load_print_meta: n_swa            = 0
0.00.285.099 I llm_load_print_meta: n_embd_head_k    = 256
0.00.285.099 I llm_load_print_meta: n_embd_head_v    = 256
0.00.285.100 I llm_load_print_meta: n_gqa            = 8
0.00.285.101 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.285.102 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.285.103 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.285.104 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.285.104 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.285.105 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.285.105 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.285.106 I llm_load_print_meta: n_ff             = 16384
0.00.285.106 I llm_load_print_meta: n_expert         = 0
0.00.285.107 I llm_load_print_meta: n_expert_used    = 0
0.00.285.107 I llm_load_print_meta: causal attn      = 1
0.00.285.108 I llm_load_print_meta: pooling type     = 0
0.00.285.108 I llm_load_print_meta: rope type        = 2
0.00.285.109 I llm_load_print_meta: rope scaling     = linear
0.00.285.110 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.285.110 I llm_load_print_meta: freq_scale_train = 1
0.00.285.111 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.285.111 I llm_load_print_meta: rope_finetuned   = unknown
0.00.285.111 I llm_load_print_meta: ssm_d_conv       = 0
0.00.285.111 I llm_load_print_meta: ssm_d_inner      = 0
0.00.285.112 I llm_load_print_meta: ssm_d_state      = 0
0.00.285.112 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.285.112 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.285.113 I llm_load_print_meta: model type       = 2B
0.00.285.113 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.285.114 I llm_load_print_meta: model params     = 2.51 B
0.00.285.115 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.285.115 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.285.116 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.285.117 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.285.117 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.285.118 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.285.118 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.285.118 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.285.119 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.285.119 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.285.119 I llm_load_print_meta: max token length = 93
0.00.285.141 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.343.775 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.343.783 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.343.784 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.343.785 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.343.785 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.343.786 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.348.711 I llama_new_context_with_model: n_ctx      = 8192
0.00.348.717 I llama_new_context_with_model: n_batch    = 2048
0.00.348.718 I llama_new_context_with_model: n_ubatch   = 512
0.00.348.718 I llama_new_context_with_model: flash_attn = 0
0.00.348.720 I llama_new_context_with_model: freq_base  = 10000.0
0.00.348.721 I llama_new_context_with_model: freq_scale = 1
0.00.378.369 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.378.387 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.378.480 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.363 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.379.371 I llama_new_context_with_model: graph nodes  = 601
0.00.379.372 I llama_new_context_with_model: graph splits = 1
0.00.379.375 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.309 I main: llama threadpool init, n_threads = 4
0.00.461.325 I 
0.00.461.404 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.407 I 
0.00.461.445 I sampler seed: 3452404047
0.00.461.458 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.465 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.461.468 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.468 I 
 squaRED.

I am unable to generate a response to your question as it requires access to personally identifiable information. Providing such information would violate the privacy and confidentiality

0.02.133.345 I llama_perf_sampler_print:    sampling time =       4.97 ms /    33 runs   (    0.15 ms per token,  6645.19 tokens per second)
0.02.133.348 I llama_perf_context_print:        load time =     459.41 ms
0.02.133.350 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.133.351 I llama_perf_context_print:        eval time =    1653.67 ms /    32 runs   (   51.68 ms per token,    19.35 tokens per second)
0.02.133.352 I llama_perf_context_print:       total time =    1672.04 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3941 (06159898)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32129.04 ms
main:    total time = 32129.04 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.591 I build: 3941 (06159898) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.798 I main: llama backend init
0.00.001.943 I main: load the model and apply lora adapter, if any
0.00.022.160 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.184 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.191 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.193 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.196 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.197 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.198 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.199 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.200 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.200 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.204 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.204 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.205 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.205 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.206 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.024 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.077 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.977 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.983 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.984 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.985 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.985 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.986 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.987 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.990 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.990 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.994 I llama_model_loader: - type  f32:   37 tensors
0.00.132.997 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.997 I llama_model_loader: - type q6_K:   19 tensors
0.00.212.027 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.574 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.250.251 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.255.446 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.266.323 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.266.976 I llm_load_vocab: special tokens cache size = 5
0.00.288.260 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.288.282 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.288.283 I llm_load_print_meta: arch             = gemma
0.00.288.284 I llm_load_print_meta: vocab type       = SPM
0.00.288.284 I llm_load_print_meta: n_vocab          = 256000
0.00.288.285 I llm_load_print_meta: n_merges         = 0
0.00.288.285 I llm_load_print_meta: vocab_only       = 0
0.00.288.286 I llm_load_print_meta: n_ctx_train      = 8192
0.00.288.286 I llm_load_print_meta: n_embd           = 2048
0.00.288.286 I llm_load_print_meta: n_layer          = 18
0.00.288.300 I llm_load_print_meta: n_head           = 8
0.00.288.301 I llm_load_print_meta: n_head_kv        = 1
0.00.288.301 I llm_load_print_meta: n_rot            = 256
0.00.288.302 I llm_load_print_meta: n_swa            = 0
0.00.288.302 I llm_load_print_meta: n_embd_head_k    = 256
0.00.288.302 I llm_load_print_meta: n_embd_head_v    = 256
0.00.288.303 I llm_load_print_meta: n_gqa            = 8
0.00.288.304 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.288.305 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.288.306 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.288.307 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.288.307 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.288.308 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.288.308 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.288.309 I llm_load_print_meta: n_ff             = 16384
0.00.288.309 I llm_load_print_meta: n_expert         = 0
0.00.288.309 I llm_load_print_meta: n_expert_used    = 0
0.00.288.310 I llm_load_print_meta: causal attn      = 1
0.00.288.310 I llm_load_print_meta: pooling type     = 0
0.00.288.310 I llm_load_print_meta: rope type        = 2
0.00.288.311 I llm_load_print_meta: rope scaling     = linear
0.00.288.312 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.288.313 I llm_load_print_meta: freq_scale_train = 1
0.00.288.313 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.288.313 I llm_load_print_meta: rope_finetuned   = unknown
0.00.288.314 I llm_load_print_meta: ssm_d_conv       = 0
0.00.288.314 I llm_load_print_meta: ssm_d_inner      = 0
0.00.288.314 I llm_load_print_meta: ssm_d_state      = 0
0.00.288.314 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.288.315 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.288.315 I llm_load_print_meta: model type       = 2B
0.00.288.315 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.288.316 I llm_load_print_meta: model params     = 2.51 B
0.00.288.317 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.288.317 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.288.318 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.288.318 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.288.319 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.288.319 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.288.319 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.288.320 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.288.320 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.288.321 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.288.321 I llm_load_print_meta: max token length = 93
0.00.288.344 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.344.599 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.349.667 I llama_new_context_with_model: n_ctx      = 8192
0.00.349.673 I llama_new_context_with_model: n_batch    = 2048
0.00.349.674 I llama_new_context_with_model: n_ubatch   = 512
0.00.349.675 I llama_new_context_with_model: flash_attn = 0
0.00.349.677 I llama_new_context_with_model: freq_base  = 10000.0
0.00.349.679 I llama_new_context_with_model: freq_scale = 1
0.00.380.288 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.380.304 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.380.396 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.381.236 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.381.244 I llama_new_context_with_model: graph nodes  = 601
0.00.381.245 I llama_new_context_with_model: graph splits = 1
0.00.381.247 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.936 I main: llama threadpool init, n_threads = 4
0.00.463.950 I 
0.00.464.025 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.029 I 
0.00.464.069 I sampler seed: 1613771580
0.00.464.079 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.082 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.083 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.083 I 
 increasities and anxieties are legitimate human emotions that deserve to be acknowledged and processed. These emotions can serve as important insights into our inner world, our personal growth,

0.02.161.616 I llama_perf_sampler_print:    sampling time =       4.78 ms /    33 runs   (    0.14 ms per token,  6906.66 tokens per second)
0.02.161.618 I llama_perf_context_print:        load time =     461.97 ms
0.02.161.620 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.161.621 I llama_perf_context_print:        eval time =    1678.83 ms /    32 runs   (   52.46 ms per token,    19.06 tokens per second)
0.02.161.622 I llama_perf_context_print:       total time =    1697.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.715s
user	8m16.023s
sys	0m7.244s
