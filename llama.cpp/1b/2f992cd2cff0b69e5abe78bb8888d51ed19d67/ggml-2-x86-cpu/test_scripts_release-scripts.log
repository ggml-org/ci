+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.548 I build: 3837 (1b2f992c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.860 I main: load the model and apply lora adapter, if any
0.00.021.919 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.964 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.974 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.979 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.980 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.982 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.986 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.987 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.988 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.988 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.989 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.992 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.992 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.993 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.993 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.994 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.672 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.819 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.969 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.976 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.976 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.977 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.978 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.979 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.979 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.981 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.982 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.983 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.983 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.984 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.987 I llama_model_loader: - type  f32:   37 tensors
0.00.133.989 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.784 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.878 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.508 I llm_load_vocab: special tokens cache size = 5
0.00.232.843 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.857 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.858 I llm_load_print_meta: arch             = gemma
0.00.232.858 I llm_load_print_meta: vocab type       = SPM
0.00.232.859 I llm_load_print_meta: n_vocab          = 256000
0.00.232.859 I llm_load_print_meta: n_merges         = 0
0.00.232.860 I llm_load_print_meta: vocab_only       = 0
0.00.232.860 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.860 I llm_load_print_meta: n_embd           = 2048
0.00.232.861 I llm_load_print_meta: n_layer          = 18
0.00.232.873 I llm_load_print_meta: n_head           = 8
0.00.232.874 I llm_load_print_meta: n_head_kv        = 1
0.00.232.874 I llm_load_print_meta: n_rot            = 256
0.00.232.874 I llm_load_print_meta: n_swa            = 0
0.00.232.875 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.875 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.876 I llm_load_print_meta: n_gqa            = 8
0.00.232.877 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.878 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.879 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.880 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.881 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.881 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.881 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.882 I llm_load_print_meta: n_ff             = 16384
0.00.232.882 I llm_load_print_meta: n_expert         = 0
0.00.232.882 I llm_load_print_meta: n_expert_used    = 0
0.00.232.883 I llm_load_print_meta: causal attn      = 1
0.00.232.883 I llm_load_print_meta: pooling type     = 0
0.00.232.883 I llm_load_print_meta: rope type        = 2
0.00.232.883 I llm_load_print_meta: rope scaling     = linear
0.00.232.885 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.885 I llm_load_print_meta: freq_scale_train = 1
0.00.232.886 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.886 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.887 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.887 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.887 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.887 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.888 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.888 I llm_load_print_meta: model type       = 2B
0.00.232.889 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.889 I llm_load_print_meta: model params     = 2.51 B
0.00.232.890 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.891 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.891 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.891 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.891 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.892 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.892 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.893 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.893 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.894 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.894 I llm_load_print_meta: max token length = 93
0.00.232.910 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.333.589 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.333.596 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.333.597 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.333.598 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.333.598 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.333.599 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.338.911 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.918 I llama_new_context_with_model: n_batch    = 2048
0.00.338.919 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.919 I llama_new_context_with_model: flash_attn = 0
0.00.338.922 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.922 I llama_new_context_with_model: freq_scale = 1
0.00.369.047 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.061 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.154 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.055 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.062 I llama_new_context_with_model: graph nodes  = 601
0.00.370.063 I llama_new_context_with_model: graph splits = 1
0.00.370.065 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.910 I main: llama threadpool init, n_threads = 4
0.00.463.924 I 
0.00.463.993 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.996 I 
0.00.464.024 I sampler seed: 3347867686
0.00.464.032 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.035 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.464.036 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.036 I 
 increasities in the workplace.

**Discussion Points:**

* **Causes of workplace disrespect:**
    * Power struggles
    * Lack of communication
    

0.02.727.379 I llama_perf_sampler_print:    sampling time =       5.69 ms /    33 runs   (    0.17 ms per token,  5799.65 tokens per second)
0.02.727.381 I llama_perf_context_print:        load time =     462.03 ms
0.02.727.382 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.727.383 I llama_perf_context_print:        eval time =    2243.90 ms /    32 runs   (   70.12 ms per token,    14.26 tokens per second)
0.02.727.385 I llama_perf_context_print:       total time =    2263.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.550 I build: 3837 (1b2f992c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.859 I main: load the model and apply lora adapter, if any
0.00.021.831 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.841 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.848 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.849 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.852 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.853 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.854 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.854 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.856 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.856 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.861 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.861 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.862 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.862 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.863 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.222 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.032 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.887 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.894 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.895 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.895 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.896 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.897 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.898 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.900 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.901 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.902 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.903 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.904 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.908 I llama_model_loader: - type  f32:   37 tensors
0.00.131.913 I llama_model_loader: - type q8_0:  127 tensors
0.00.195.884 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.858 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.209.470 I llm_load_vocab: special tokens cache size = 5
0.00.230.404 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.419 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.419 I llm_load_print_meta: arch             = gemma
0.00.230.420 I llm_load_print_meta: vocab type       = SPM
0.00.230.420 I llm_load_print_meta: n_vocab          = 256000
0.00.230.421 I llm_load_print_meta: n_merges         = 0
0.00.230.421 I llm_load_print_meta: vocab_only       = 0
0.00.230.421 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.421 I llm_load_print_meta: n_embd           = 2048
0.00.230.422 I llm_load_print_meta: n_layer          = 18
0.00.230.434 I llm_load_print_meta: n_head           = 8
0.00.230.435 I llm_load_print_meta: n_head_kv        = 1
0.00.230.435 I llm_load_print_meta: n_rot            = 256
0.00.230.435 I llm_load_print_meta: n_swa            = 0
0.00.230.435 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.436 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.436 I llm_load_print_meta: n_gqa            = 8
0.00.230.437 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.438 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.439 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.441 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.441 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.441 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.442 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.443 I llm_load_print_meta: n_ff             = 16384
0.00.230.443 I llm_load_print_meta: n_expert         = 0
0.00.230.443 I llm_load_print_meta: n_expert_used    = 0
0.00.230.443 I llm_load_print_meta: causal attn      = 1
0.00.230.443 I llm_load_print_meta: pooling type     = 0
0.00.230.444 I llm_load_print_meta: rope type        = 2
0.00.230.444 I llm_load_print_meta: rope scaling     = linear
0.00.230.445 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.446 I llm_load_print_meta: freq_scale_train = 1
0.00.230.446 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.446 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.447 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.447 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.447 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.447 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.448 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.448 I llm_load_print_meta: model type       = 2B
0.00.230.449 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.450 I llm_load_print_meta: model params     = 2.51 B
0.00.230.450 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.451 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.451 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.451 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.452 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.452 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.452 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.453 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.453 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.453 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.454 I llm_load_print_meta: max token length = 93
0.00.230.470 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.129 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.330.166 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.172 I llama_new_context_with_model: n_batch    = 2048
0.00.330.173 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.173 I llama_new_context_with_model: flash_attn = 0
0.00.330.175 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.176 I llama_new_context_with_model: freq_scale = 1
0.00.359.683 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.699 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.791 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.660 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.668 I llama_new_context_with_model: graph nodes  = 601
0.00.360.669 I llama_new_context_with_model: graph splits = 1
0.00.360.670 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.972 I main: llama threadpool init, n_threads = 4
0.00.446.984 I 
0.00.447.055 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.447.058 I 
0.00.447.093 I sampler seed: 467420703
0.00.447.102 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.104 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.447.105 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.105 I 
 increasities in the story?

I am unable to generate responses that contain sexually suggestive or inappropriate content. [end of text]


0.01.934.793 I llama_perf_sampler_print:    sampling time =       3.95 ms /    23 runs   (    0.17 ms per token,  5825.73 tokens per second)
0.01.934.795 I llama_perf_context_print:        load time =     445.10 ms
0.01.934.796 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.934.798 I llama_perf_context_print:        eval time =    1474.48 ms /    22 runs   (   67.02 ms per token,    14.92 tokens per second)
0.01.934.798 I llama_perf_context_print:       total time =    1487.83 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.556 I build: 3837 (1b2f992c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.750 I main: llama backend init
0.00.001.842 I main: load the model and apply lora adapter, if any
0.00.022.166 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.214 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.221 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.226 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.227 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.230 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.231 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.231 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.232 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.233 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.233 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.237 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.237 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.238 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.238 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.239 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.763 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.629 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.139.242 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.139.253 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.139.254 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.139.255 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.139.256 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.139.258 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.139.260 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.139.264 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.139.265 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.139.266 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.139.267 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.139.268 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.139.273 I llama_model_loader: - type  f32:   37 tensors
0.00.139.276 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.337 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.223.018 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.223.765 I llm_load_vocab: special tokens cache size = 5
0.00.245.000 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.245.014 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.245.015 I llm_load_print_meta: arch             = gemma
0.00.245.015 I llm_load_print_meta: vocab type       = SPM
0.00.245.016 I llm_load_print_meta: n_vocab          = 256000
0.00.245.016 I llm_load_print_meta: n_merges         = 0
0.00.245.017 I llm_load_print_meta: vocab_only       = 0
0.00.245.017 I llm_load_print_meta: n_ctx_train      = 8192
0.00.245.017 I llm_load_print_meta: n_embd           = 2048
0.00.245.017 I llm_load_print_meta: n_layer          = 18
0.00.245.030 I llm_load_print_meta: n_head           = 8
0.00.245.031 I llm_load_print_meta: n_head_kv        = 1
0.00.245.031 I llm_load_print_meta: n_rot            = 256
0.00.245.031 I llm_load_print_meta: n_swa            = 0
0.00.245.031 I llm_load_print_meta: n_embd_head_k    = 256
0.00.245.032 I llm_load_print_meta: n_embd_head_v    = 256
0.00.245.032 I llm_load_print_meta: n_gqa            = 8
0.00.245.033 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.245.034 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.245.036 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.245.037 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.245.038 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.245.038 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.245.038 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.245.040 I llm_load_print_meta: n_ff             = 16384
0.00.245.040 I llm_load_print_meta: n_expert         = 0
0.00.245.040 I llm_load_print_meta: n_expert_used    = 0
0.00.245.040 I llm_load_print_meta: causal attn      = 1
0.00.245.040 I llm_load_print_meta: pooling type     = 0
0.00.245.041 I llm_load_print_meta: rope type        = 2
0.00.245.041 I llm_load_print_meta: rope scaling     = linear
0.00.245.042 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.245.043 I llm_load_print_meta: freq_scale_train = 1
0.00.245.043 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.245.043 I llm_load_print_meta: rope_finetuned   = unknown
0.00.245.044 I llm_load_print_meta: ssm_d_conv       = 0
0.00.245.044 I llm_load_print_meta: ssm_d_inner      = 0
0.00.245.044 I llm_load_print_meta: ssm_d_state      = 0
0.00.245.045 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.245.045 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.245.046 I llm_load_print_meta: model type       = 2B
0.00.245.047 I llm_load_print_meta: model ftype      = Q8_0
0.00.245.048 I llm_load_print_meta: model params     = 2.51 B
0.00.245.049 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.245.049 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.245.050 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.245.050 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.245.050 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.245.051 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.245.051 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.245.052 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.245.053 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.245.054 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.245.055 I llm_load_print_meta: max token length = 93
0.00.245.071 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.825 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.325.833 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.325.834 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.325.834 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.325.835 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.325.835 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.330.980 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.986 I llama_new_context_with_model: n_batch    = 2048
0.00.330.986 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.987 I llama_new_context_with_model: flash_attn = 0
0.00.330.989 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.990 I llama_new_context_with_model: freq_scale = 1
0.00.361.520 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.536 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.627 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.482 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.490 I llama_new_context_with_model: graph nodes  = 601
0.00.362.490 I llama_new_context_with_model: graph splits = 1
0.00.362.492 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.754 I main: llama threadpool init, n_threads = 4
0.00.452.765 I 
0.00.452.838 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.841 I 
0.00.452.869 I sampler seed: 4067348984
0.00.452.878 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.881 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.452.882 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.882 I 
 maneuvled.

The provided text is nonsensical and appears to be gibberish. I am unable to extract any meaningful information from it.

Therefore,

0.02.713.224 I llama_perf_sampler_print:    sampling time =       5.41 ms /    33 runs   (    0.16 ms per token,  6100.94 tokens per second)
0.02.713.226 I llama_perf_context_print:        load time =     450.90 ms
0.02.713.227 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.713.229 I llama_perf_context_print:        eval time =    2240.83 ms /    32 runs   (   70.03 ms per token,    14.28 tokens per second)
0.02.713.229 I llama_perf_context_print:       total time =    2260.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.565 I build: 3837 (1b2f992c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.855 I main: load the model and apply lora adapter, if any
0.00.021.853 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.901 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.912 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.917 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.920 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.925 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.926 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.926 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.927 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.928 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.929 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.933 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.933 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.934 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.934 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.936 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.514 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.286 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.183 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.189 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.189 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.190 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.191 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.192 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.193 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.195 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.196 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.197 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.198 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.199 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.203 I llama_model_loader: - type  f32:   37 tensors
0.00.132.205 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.443 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.702 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.401 I llm_load_vocab: special tokens cache size = 5
0.00.232.760 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.776 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.777 I llm_load_print_meta: arch             = gemma
0.00.232.777 I llm_load_print_meta: vocab type       = SPM
0.00.232.778 I llm_load_print_meta: n_vocab          = 256000
0.00.232.778 I llm_load_print_meta: n_merges         = 0
0.00.232.779 I llm_load_print_meta: vocab_only       = 0
0.00.232.779 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.780 I llm_load_print_meta: n_embd           = 2048
0.00.232.780 I llm_load_print_meta: n_layer          = 18
0.00.232.792 I llm_load_print_meta: n_head           = 8
0.00.232.793 I llm_load_print_meta: n_head_kv        = 1
0.00.232.793 I llm_load_print_meta: n_rot            = 256
0.00.232.793 I llm_load_print_meta: n_swa            = 0
0.00.232.793 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.794 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.795 I llm_load_print_meta: n_gqa            = 8
0.00.232.796 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.797 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.797 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.799 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.800 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.800 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.800 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.801 I llm_load_print_meta: n_ff             = 16384
0.00.232.802 I llm_load_print_meta: n_expert         = 0
0.00.232.802 I llm_load_print_meta: n_expert_used    = 0
0.00.232.802 I llm_load_print_meta: causal attn      = 1
0.00.232.802 I llm_load_print_meta: pooling type     = 0
0.00.232.802 I llm_load_print_meta: rope type        = 2
0.00.232.803 I llm_load_print_meta: rope scaling     = linear
0.00.232.804 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.805 I llm_load_print_meta: freq_scale_train = 1
0.00.232.805 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.806 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.806 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.807 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.807 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.807 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.807 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.808 I llm_load_print_meta: model type       = 2B
0.00.232.808 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.809 I llm_load_print_meta: model params     = 2.51 B
0.00.232.810 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.810 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.811 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.811 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.811 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.812 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.812 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.813 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.813 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.813 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.814 I llm_load_print_meta: max token length = 93
0.00.232.838 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.302.990 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.302.998 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.307.937 I llama_new_context_with_model: n_ctx      = 8192
0.00.307.943 I llama_new_context_with_model: n_batch    = 2048
0.00.307.944 I llama_new_context_with_model: n_ubatch   = 512
0.00.307.944 I llama_new_context_with_model: flash_attn = 0
0.00.307.947 I llama_new_context_with_model: freq_base  = 10000.0
0.00.307.948 I llama_new_context_with_model: freq_scale = 1
0.00.336.943 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.336.957 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.337.049 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.337.931 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.337.939 I llama_new_context_with_model: graph nodes  = 601
0.00.337.939 I llama_new_context_with_model: graph splits = 1
0.00.337.941 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.438.495 I main: llama threadpool init, n_threads = 4
0.00.438.508 I 
0.00.438.579 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.438.582 I 
0.00.438.618 I sampler seed: 141136020
0.00.438.627 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.438.632 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.438.632 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.438.633 I 
 increably.

I am unable to generate a response that meets the safety and ethical guidelines. The request contains potentially harmful and inappropriate content. [end of text]


0.02.645.077 I llama_perf_sampler_print:    sampling time =       5.15 ms /    30 runs   (    0.17 ms per token,  5827.51 tokens per second)
0.02.645.080 I llama_perf_context_print:        load time =     436.62 ms
0.02.645.082 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.645.085 I llama_perf_context_print:        eval time =    2189.25 ms /    29 runs   (   75.49 ms per token,    13.25 tokens per second)
0.02.645.086 I llama_perf_context_print:       total time =    2206.59 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.510s
user	0m35.632s
sys	0m9.389s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3837 (1b2f992c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32017.75 ms
main:    total time = 32017.75 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.600 I build: 3837 (1b2f992c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.001.938 I main: load the model and apply lora adapter, if any
0.00.022.124 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.171 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.183 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.187 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.188 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.192 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.196 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.196 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.197 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.198 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.198 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.202 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.203 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.204 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.204 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.205 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.166 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.315 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.227 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.234 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.235 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.236 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.236 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.237 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.238 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.241 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.241 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.242 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.242 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.243 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.247 I llama_model_loader: - type  f32:   37 tensors
0.00.133.249 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.250 I llama_model_loader: - type q6_K:   19 tensors
0.00.198.901 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.448 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.079 I llm_load_vocab: special tokens cache size = 5
0.00.234.249 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.260 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.261 I llm_load_print_meta: arch             = gemma
0.00.234.262 I llm_load_print_meta: vocab type       = SPM
0.00.234.262 I llm_load_print_meta: n_vocab          = 256000
0.00.234.263 I llm_load_print_meta: n_merges         = 0
0.00.234.263 I llm_load_print_meta: vocab_only       = 0
0.00.234.263 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.264 I llm_load_print_meta: n_embd           = 2048
0.00.234.264 I llm_load_print_meta: n_layer          = 18
0.00.234.275 I llm_load_print_meta: n_head           = 8
0.00.234.276 I llm_load_print_meta: n_head_kv        = 1
0.00.234.276 I llm_load_print_meta: n_rot            = 256
0.00.234.277 I llm_load_print_meta: n_swa            = 0
0.00.234.277 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.277 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.278 I llm_load_print_meta: n_gqa            = 8
0.00.234.279 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.280 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.281 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.282 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.282 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.283 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.283 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.284 I llm_load_print_meta: n_ff             = 16384
0.00.234.284 I llm_load_print_meta: n_expert         = 0
0.00.234.284 I llm_load_print_meta: n_expert_used    = 0
0.00.234.285 I llm_load_print_meta: causal attn      = 1
0.00.234.285 I llm_load_print_meta: pooling type     = 0
0.00.234.285 I llm_load_print_meta: rope type        = 2
0.00.234.285 I llm_load_print_meta: rope scaling     = linear
0.00.234.287 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.287 I llm_load_print_meta: freq_scale_train = 1
0.00.234.288 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.288 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.288 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.289 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.289 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.289 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.289 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.290 I llm_load_print_meta: model type       = 2B
0.00.234.290 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.234.291 I llm_load_print_meta: model params     = 2.51 B
0.00.234.292 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.234.292 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.292 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.293 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.293 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.293 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.294 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.294 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.294 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.295 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.295 I llm_load_print_meta: max token length = 93
0.00.234.317 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.853 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.292.860 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.292.861 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.292.861 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.292.862 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.292.863 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.297.895 I llama_new_context_with_model: n_ctx      = 8192
0.00.297.901 I llama_new_context_with_model: n_batch    = 2048
0.00.297.901 I llama_new_context_with_model: n_ubatch   = 512
0.00.297.902 I llama_new_context_with_model: flash_attn = 0
0.00.297.904 I llama_new_context_with_model: freq_base  = 10000.0
0.00.297.905 I llama_new_context_with_model: freq_scale = 1
0.00.326.704 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.326.720 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.326.806 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.327.649 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.327.658 I llama_new_context_with_model: graph nodes  = 601
0.00.327.658 I llama_new_context_with_model: graph splits = 1
0.00.327.660 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.407.886 I main: llama threadpool init, n_threads = 4
0.00.407.898 I 
0.00.407.971 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.407.974 I 
0.00.408.011 I sampler seed: 525120928
0.00.408.020 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.408.023 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.408.024 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.408.024 I 
 seconally.

**Assistant**

I understand. I will ensure to provide you with the necessary information and assistance. [end of text]


0.01.651.517 I llama_perf_sampler_print:    sampling time =       4.24 ms /    26 runs   (    0.16 ms per token,  6134.97 tokens per second)
0.01.651.521 I llama_perf_context_print:        load time =     405.93 ms
0.01.651.522 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.651.524 I llama_perf_context_print:        eval time =    1229.11 ms /    25 runs   (   49.16 ms per token,    20.34 tokens per second)
0.01.651.526 I llama_perf_context_print:       total time =    1243.64 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3837 (1b2f992c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32071.79 ms
main:    total time = 32071.79 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.564 I build: 3837 (1b2f992c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.021.875 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.888 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.895 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.896 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.900 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.901 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.902 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.902 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.903 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.903 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.907 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.908 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.909 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.910 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.911 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.510 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.183 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.017 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.023 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.024 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.024 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.025 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.026 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.026 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.029 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.029 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.034 I llama_model_loader: - type  f32:   37 tensors
0.00.132.036 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.037 I llama_model_loader: - type q6_K:   19 tensors
0.00.199.285 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.283 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.026 I llm_load_vocab: special tokens cache size = 5
0.00.235.297 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.312 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.312 I llm_load_print_meta: arch             = gemma
0.00.235.313 I llm_load_print_meta: vocab type       = SPM
0.00.235.314 I llm_load_print_meta: n_vocab          = 256000
0.00.235.314 I llm_load_print_meta: n_merges         = 0
0.00.235.315 I llm_load_print_meta: vocab_only       = 0
0.00.235.315 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.315 I llm_load_print_meta: n_embd           = 2048
0.00.235.316 I llm_load_print_meta: n_layer          = 18
0.00.235.327 I llm_load_print_meta: n_head           = 8
0.00.235.328 I llm_load_print_meta: n_head_kv        = 1
0.00.235.328 I llm_load_print_meta: n_rot            = 256
0.00.235.329 I llm_load_print_meta: n_swa            = 0
0.00.235.329 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.329 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.330 I llm_load_print_meta: n_gqa            = 8
0.00.235.331 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.332 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.333 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.334 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.335 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.335 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.335 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.336 I llm_load_print_meta: n_ff             = 16384
0.00.235.337 I llm_load_print_meta: n_expert         = 0
0.00.235.337 I llm_load_print_meta: n_expert_used    = 0
0.00.235.337 I llm_load_print_meta: causal attn      = 1
0.00.235.337 I llm_load_print_meta: pooling type     = 0
0.00.235.338 I llm_load_print_meta: rope type        = 2
0.00.235.338 I llm_load_print_meta: rope scaling     = linear
0.00.235.339 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.340 I llm_load_print_meta: freq_scale_train = 1
0.00.235.340 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.340 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.341 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.341 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.341 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.342 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.342 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.343 I llm_load_print_meta: model type       = 2B
0.00.235.343 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.235.344 I llm_load_print_meta: model params     = 2.51 B
0.00.235.344 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.235.345 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.345 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.345 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.346 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.346 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.346 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.347 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.347 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.347 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.348 I llm_load_print_meta: max token length = 93
0.00.235.365 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.293.125 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.297.939 I llama_new_context_with_model: n_ctx      = 8192
0.00.297.945 I llama_new_context_with_model: n_batch    = 2048
0.00.297.946 I llama_new_context_with_model: n_ubatch   = 512
0.00.297.946 I llama_new_context_with_model: flash_attn = 0
0.00.297.949 I llama_new_context_with_model: freq_base  = 10000.0
0.00.297.950 I llama_new_context_with_model: freq_scale = 1
0.00.327.099 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.327.113 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.327.201 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.328.062 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.328.070 I llama_new_context_with_model: graph nodes  = 601
0.00.328.070 I llama_new_context_with_model: graph splits = 1
0.00.328.072 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.408.702 I main: llama threadpool init, n_threads = 4
0.00.408.715 I 
0.00.408.790 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.408.793 I 
0.00.408.823 I sampler seed: 1436597956
0.00.408.833 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.408.835 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.408.836 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.408.836 I 
 strick by the name of the greatest magician of all time.

The magician's name is known for his incredible feats, including creating illusions that seemed impossible and

0.02.030.558 I llama_perf_sampler_print:    sampling time =       5.67 ms /    33 runs   (    0.17 ms per token,  5818.05 tokens per second)
0.02.030.561 I llama_perf_context_print:        load time =     406.82 ms
0.02.030.562 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.030.563 I llama_perf_context_print:        eval time =    1602.71 ms /    32 runs   (   50.08 ms per token,    19.97 tokens per second)
0.02.030.564 I llama_perf_context_print:       total time =    1621.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.610s
user	8m12.838s
sys	0m7.045s
