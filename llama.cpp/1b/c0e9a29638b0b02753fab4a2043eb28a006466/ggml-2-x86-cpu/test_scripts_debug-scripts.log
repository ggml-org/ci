+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.715 I build: 4172 (1bc0e9a2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.915 I main: llama backend init
0.00.000.924 I main: load the model and apply lora adapter, if any
0.00.023.823 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.837 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.936 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.950 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.955 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.963 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.964 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.966 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.968 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.969 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.971 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.978 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.982 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.983 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.984 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.986 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.434 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.106 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.348.946 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.348.954 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.348.955 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.348.956 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.348.957 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.348.959 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.348.960 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.348.964 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.348.966 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.348.967 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.348.968 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.348.970 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.348.979 I llama_model_loader: - type  f32:   37 tensors
0.00.348.981 I llama_model_loader: - type q8_0:  127 tensors
0.00.569.385 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.627.674 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.628.646 I llm_load_vocab: special tokens cache size = 5
0.00.813.933 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.814.011 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.814.015 I llm_load_print_meta: arch             = gemma
0.00.814.016 I llm_load_print_meta: vocab type       = SPM
0.00.814.017 I llm_load_print_meta: n_vocab          = 256000
0.00.814.019 I llm_load_print_meta: n_merges         = 0
0.00.814.020 I llm_load_print_meta: vocab_only       = 0
0.00.814.020 I llm_load_print_meta: n_ctx_train      = 8192
0.00.814.020 I llm_load_print_meta: n_embd           = 2048
0.00.814.021 I llm_load_print_meta: n_layer          = 18
0.00.814.088 I llm_load_print_meta: n_head           = 8
0.00.814.098 I llm_load_print_meta: n_head_kv        = 1
0.00.814.098 I llm_load_print_meta: n_rot            = 256
0.00.814.099 I llm_load_print_meta: n_swa            = 0
0.00.814.100 I llm_load_print_meta: n_embd_head_k    = 256
0.00.814.100 I llm_load_print_meta: n_embd_head_v    = 256
0.00.814.105 I llm_load_print_meta: n_gqa            = 8
0.00.814.110 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.814.115 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.814.117 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.814.118 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.814.119 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.814.119 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.814.120 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.814.125 I llm_load_print_meta: n_ff             = 16384
0.00.814.125 I llm_load_print_meta: n_expert         = 0
0.00.814.126 I llm_load_print_meta: n_expert_used    = 0
0.00.814.128 I llm_load_print_meta: causal attn      = 1
0.00.814.128 I llm_load_print_meta: pooling type     = 0
0.00.814.129 I llm_load_print_meta: rope type        = 2
0.00.814.129 I llm_load_print_meta: rope scaling     = linear
0.00.814.131 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.814.131 I llm_load_print_meta: freq_scale_train = 1
0.00.814.132 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.814.132 I llm_load_print_meta: rope_finetuned   = unknown
0.00.814.141 I llm_load_print_meta: ssm_d_conv       = 0
0.00.814.142 I llm_load_print_meta: ssm_d_inner      = 0
0.00.814.153 I llm_load_print_meta: ssm_d_state      = 0
0.00.814.154 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.814.154 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.814.163 I llm_load_print_meta: model type       = 2B
0.00.814.164 I llm_load_print_meta: model ftype      = Q8_0
0.00.814.165 I llm_load_print_meta: model params     = 2.51 B
0.00.814.173 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.814.175 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.814.175 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.814.176 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.814.184 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.814.184 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.814.185 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.814.186 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.814.192 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.814.193 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.814.194 I llm_load_print_meta: max token length = 93
0.00.952.547 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.952.558 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.952.559 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.952.560 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.952.561 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.952.561 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.958.500 I llama_new_context_with_model: n_seq_max     = 1
0.00.958.507 I llama_new_context_with_model: n_ctx         = 4096
0.00.958.507 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.958.508 I llama_new_context_with_model: n_batch       = 2048
0.00.958.508 I llama_new_context_with_model: n_ubatch      = 512
0.00.958.509 I llama_new_context_with_model: flash_attn    = 0
0.00.958.511 I llama_new_context_with_model: freq_base     = 10000.0
0.00.958.512 I llama_new_context_with_model: freq_scale    = 1
0.00.958.513 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.973.195 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.973.235 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.973.363 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.975.889 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.975.893 I llama_new_context_with_model: graph nodes  = 601
0.00.975.893 I llama_new_context_with_model: graph splits = 1
0.00.975.916 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.597.034 I main: llama threadpool init, n_threads = 4
0.01.597.050 I 
0.01.597.169 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.597.173 I 
0.01.597.412 I sampler seed: 606610601
0.01.597.426 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.597.435 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.597.437 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.597.437 I 
 seconally with the given sentence:

The man was wearing a black coat and a white shirt.

In this sentence, the conjunction used is ______.



0.15.265.809 I llama_perf_sampler_print:    sampling time =      48.96 ms /    33 runs   (    1.48 ms per token,   674.07 tokens per second)
0.15.265.833 I llama_perf_context_print:        load time =    1596.00 ms
0.15.265.835 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.265.836 I llama_perf_context_print:        eval time =   13579.27 ms /    32 runs   (  424.35 ms per token,     2.36 tokens per second)
0.15.265.837 I llama_perf_context_print:       total time =   13668.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.652 I build: 4172 (1bc0e9a2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.863 I main: llama backend init
0.00.000.871 I main: load the model and apply lora adapter, if any
0.00.023.330 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.429 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.444 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.446 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.453 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.459 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.460 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.461 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.463 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.464 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.475 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.477 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.478 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.479 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.480 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.230.998 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.332.984 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.356.884 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.356.893 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.356.895 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.356.896 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.356.897 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.356.910 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.356.916 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.356.922 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.356.923 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.356.925 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.356.926 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.356.928 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.356.936 I llama_model_loader: - type  f32:   37 tensors
0.00.356.940 I llama_model_loader: - type q8_0:  127 tensors
0.00.570.753 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.630.302 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.631.311 I llm_load_vocab: special tokens cache size = 5
0.00.816.247 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.816.321 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.816.325 I llm_load_print_meta: arch             = gemma
0.00.816.326 I llm_load_print_meta: vocab type       = SPM
0.00.816.327 I llm_load_print_meta: n_vocab          = 256000
0.00.816.329 I llm_load_print_meta: n_merges         = 0
0.00.816.329 I llm_load_print_meta: vocab_only       = 0
0.00.816.330 I llm_load_print_meta: n_ctx_train      = 8192
0.00.816.330 I llm_load_print_meta: n_embd           = 2048
0.00.816.331 I llm_load_print_meta: n_layer          = 18
0.00.816.395 I llm_load_print_meta: n_head           = 8
0.00.816.405 I llm_load_print_meta: n_head_kv        = 1
0.00.816.406 I llm_load_print_meta: n_rot            = 256
0.00.816.406 I llm_load_print_meta: n_swa            = 0
0.00.816.407 I llm_load_print_meta: n_embd_head_k    = 256
0.00.816.408 I llm_load_print_meta: n_embd_head_v    = 256
0.00.816.414 I llm_load_print_meta: n_gqa            = 8
0.00.816.418 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.816.423 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.816.427 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.816.429 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.816.429 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.816.430 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.816.430 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.816.435 I llm_load_print_meta: n_ff             = 16384
0.00.816.436 I llm_load_print_meta: n_expert         = 0
0.00.816.436 I llm_load_print_meta: n_expert_used    = 0
0.00.816.436 I llm_load_print_meta: causal attn      = 1
0.00.816.437 I llm_load_print_meta: pooling type     = 0
0.00.816.437 I llm_load_print_meta: rope type        = 2
0.00.816.437 I llm_load_print_meta: rope scaling     = linear
0.00.816.439 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.816.442 I llm_load_print_meta: freq_scale_train = 1
0.00.816.442 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.816.443 I llm_load_print_meta: rope_finetuned   = unknown
0.00.816.443 I llm_load_print_meta: ssm_d_conv       = 0
0.00.816.443 I llm_load_print_meta: ssm_d_inner      = 0
0.00.816.444 I llm_load_print_meta: ssm_d_state      = 0
0.00.816.444 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.816.444 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.816.445 I llm_load_print_meta: model type       = 2B
0.00.816.446 I llm_load_print_meta: model ftype      = Q8_0
0.00.816.446 I llm_load_print_meta: model params     = 2.51 B
0.00.816.455 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.816.455 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.816.457 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.816.457 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.816.458 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.816.466 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.816.467 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.816.468 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.816.474 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.816.476 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.816.476 I llm_load_print_meta: max token length = 93
0.00.912.265 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.918.094 I llama_new_context_with_model: n_seq_max     = 1
0.00.918.101 I llama_new_context_with_model: n_ctx         = 4096
0.00.918.102 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.918.102 I llama_new_context_with_model: n_batch       = 2048
0.00.918.103 I llama_new_context_with_model: n_ubatch      = 512
0.00.918.103 I llama_new_context_with_model: flash_attn    = 0
0.00.918.106 I llama_new_context_with_model: freq_base     = 10000.0
0.00.918.107 I llama_new_context_with_model: freq_scale    = 1
0.00.918.107 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.932.817 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.932.856 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.932.981 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.935.562 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.935.566 I llama_new_context_with_model: graph nodes  = 601
0.00.935.567 I llama_new_context_with_model: graph splits = 1
0.00.935.589 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.547.792 I main: llama threadpool init, n_threads = 4
0.01.547.805 I 
0.01.547.917 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.547.917 I 
0.01.548.159 I sampler seed: 2263542902
0.01.548.175 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.548.184 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.548.187 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.548.188 I 
 increasities in the context of a language model.

**Context:**

A language model is struggling to generate coherent and grammatically correct responses to user queries.

0.15.196.559 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.80 tokens per second)
0.15.196.563 I llama_perf_context_print:        load time =    1546.83 ms
0.15.196.564 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.196.566 I llama_perf_context_print:        eval time =   13559.84 ms /    32 runs   (  423.74 ms per token,     2.36 tokens per second)
0.15.196.566 I llama_perf_context_print:       total time =   13648.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.698 I build: 4172 (1bc0e9a2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.911 I main: llama backend init
0.00.000.919 I main: load the model and apply lora adapter, if any
0.00.023.302 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.313 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.402 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.414 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.416 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.423 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.428 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.429 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.430 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.431 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.433 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.440 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.441 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.450 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.453 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.454 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.241.086 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.342.509 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.366.316 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.366.324 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.366.326 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.366.327 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.366.328 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.366.330 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.366.331 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.366.335 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.366.336 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.366.338 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.366.339 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.366.341 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.366.348 I llama_model_loader: - type  f32:   37 tensors
0.00.366.350 I llama_model_loader: - type q8_0:  127 tensors
0.00.590.118 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.656.524 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.657.536 I llm_load_vocab: special tokens cache size = 5
0.00.856.271 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.856.343 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.856.344 I llm_load_print_meta: arch             = gemma
0.00.856.344 I llm_load_print_meta: vocab type       = SPM
0.00.856.345 I llm_load_print_meta: n_vocab          = 256000
0.00.856.347 I llm_load_print_meta: n_merges         = 0
0.00.856.348 I llm_load_print_meta: vocab_only       = 0
0.00.856.348 I llm_load_print_meta: n_ctx_train      = 8192
0.00.856.348 I llm_load_print_meta: n_embd           = 2048
0.00.856.349 I llm_load_print_meta: n_layer          = 18
0.00.856.411 I llm_load_print_meta: n_head           = 8
0.00.856.418 I llm_load_print_meta: n_head_kv        = 1
0.00.856.419 I llm_load_print_meta: n_rot            = 256
0.00.856.419 I llm_load_print_meta: n_swa            = 0
0.00.856.420 I llm_load_print_meta: n_embd_head_k    = 256
0.00.856.420 I llm_load_print_meta: n_embd_head_v    = 256
0.00.856.424 I llm_load_print_meta: n_gqa            = 8
0.00.856.431 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.856.436 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.856.437 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.856.438 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.856.439 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.856.439 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.856.440 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.856.445 I llm_load_print_meta: n_ff             = 16384
0.00.856.445 I llm_load_print_meta: n_expert         = 0
0.00.856.446 I llm_load_print_meta: n_expert_used    = 0
0.00.856.446 I llm_load_print_meta: causal attn      = 1
0.00.856.446 I llm_load_print_meta: pooling type     = 0
0.00.856.447 I llm_load_print_meta: rope type        = 2
0.00.856.447 I llm_load_print_meta: rope scaling     = linear
0.00.856.449 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.856.449 I llm_load_print_meta: freq_scale_train = 1
0.00.856.450 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.856.450 I llm_load_print_meta: rope_finetuned   = unknown
0.00.856.461 I llm_load_print_meta: ssm_d_conv       = 0
0.00.856.472 I llm_load_print_meta: ssm_d_inner      = 0
0.00.856.473 I llm_load_print_meta: ssm_d_state      = 0
0.00.856.474 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.856.474 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.856.476 I llm_load_print_meta: model type       = 2B
0.00.856.477 I llm_load_print_meta: model ftype      = Q8_0
0.00.856.478 I llm_load_print_meta: model params     = 2.51 B
0.00.856.489 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.856.489 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.856.490 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.856.490 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.856.491 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.856.491 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.856.493 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.856.493 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.856.500 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.856.504 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.856.504 I llm_load_print_meta: max token length = 93
0.00.932.110 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.932.120 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.932.121 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.932.122 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.932.122 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.932.123 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.937.948 I llama_new_context_with_model: n_seq_max     = 1
0.00.937.955 I llama_new_context_with_model: n_ctx         = 4096
0.00.937.956 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.937.956 I llama_new_context_with_model: n_batch       = 2048
0.00.937.957 I llama_new_context_with_model: n_ubatch      = 512
0.00.937.957 I llama_new_context_with_model: flash_attn    = 0
0.00.937.960 I llama_new_context_with_model: freq_base     = 10000.0
0.00.937.960 I llama_new_context_with_model: freq_scale    = 1
0.00.937.963 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.952.930 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.952.973 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.953.103 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.955.617 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.955.621 I llama_new_context_with_model: graph nodes  = 601
0.00.955.622 I llama_new_context_with_model: graph splits = 1
0.00.955.645 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.565.980 I main: llama threadpool init, n_threads = 4
0.01.565.995 I 
0.01.566.110 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.566.115 I 
0.01.566.355 I sampler seed: 4134788560
0.01.566.369 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.566.379 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.566.380 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.566.380 I 
 increasities to the extent that they become a primary cause of morbidity and mortality.

**Answer:** Infectious diseases [end of text]


0.11.394.267 I llama_perf_sampler_print:    sampling time =      35.38 ms /    24 runs   (    1.47 ms per token,   678.25 tokens per second)
0.11.394.270 I llama_perf_context_print:        load time =    1564.97 ms
0.11.394.272 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.394.286 I llama_perf_context_print:        eval time =    9763.51 ms /    23 runs   (  424.50 ms per token,     2.36 tokens per second)
0.11.394.288 I llama_perf_context_print:       total time =    9828.30 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.638 I build: 4172 (1bc0e9a2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.837 I main: llama backend init
0.00.000.854 I main: load the model and apply lora adapter, if any
0.00.023.342 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.353 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.444 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.456 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.458 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.464 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.471 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.472 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.474 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.475 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.477 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.487 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.488 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.489 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.491 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.492 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.233.939 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.343.888 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.371.678 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.371.690 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.371.691 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.371.693 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.371.694 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.371.695 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.371.697 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.371.703 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.371.705 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.371.707 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.371.708 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.371.709 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.371.719 I llama_model_loader: - type  f32:   37 tensors
0.00.371.721 I llama_model_loader: - type q8_0:  127 tensors
0.00.600.238 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.660.458 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.661.450 I llm_load_vocab: special tokens cache size = 5
0.00.850.955 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.851.029 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.851.034 I llm_load_print_meta: arch             = gemma
0.00.851.035 I llm_load_print_meta: vocab type       = SPM
0.00.851.036 I llm_load_print_meta: n_vocab          = 256000
0.00.851.039 I llm_load_print_meta: n_merges         = 0
0.00.851.039 I llm_load_print_meta: vocab_only       = 0
0.00.851.040 I llm_load_print_meta: n_ctx_train      = 8192
0.00.851.041 I llm_load_print_meta: n_embd           = 2048
0.00.851.042 I llm_load_print_meta: n_layer          = 18
0.00.851.114 I llm_load_print_meta: n_head           = 8
0.00.851.125 I llm_load_print_meta: n_head_kv        = 1
0.00.851.125 I llm_load_print_meta: n_rot            = 256
0.00.851.126 I llm_load_print_meta: n_swa            = 0
0.00.851.126 I llm_load_print_meta: n_embd_head_k    = 256
0.00.851.127 I llm_load_print_meta: n_embd_head_v    = 256
0.00.851.131 I llm_load_print_meta: n_gqa            = 8
0.00.851.136 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.851.142 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.851.147 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.851.149 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.851.150 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.851.151 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.851.152 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.851.159 I llm_load_print_meta: n_ff             = 16384
0.00.851.161 I llm_load_print_meta: n_expert         = 0
0.00.851.161 I llm_load_print_meta: n_expert_used    = 0
0.00.851.162 I llm_load_print_meta: causal attn      = 1
0.00.851.163 I llm_load_print_meta: pooling type     = 0
0.00.851.163 I llm_load_print_meta: rope type        = 2
0.00.851.165 I llm_load_print_meta: rope scaling     = linear
0.00.851.167 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.851.168 I llm_load_print_meta: freq_scale_train = 1
0.00.851.169 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.851.170 I llm_load_print_meta: rope_finetuned   = unknown
0.00.851.171 I llm_load_print_meta: ssm_d_conv       = 0
0.00.851.172 I llm_load_print_meta: ssm_d_inner      = 0
0.00.851.172 I llm_load_print_meta: ssm_d_state      = 0
0.00.851.174 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.851.174 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.851.175 I llm_load_print_meta: model type       = 2B
0.00.851.177 I llm_load_print_meta: model ftype      = Q8_0
0.00.851.178 I llm_load_print_meta: model params     = 2.51 B
0.00.851.188 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.851.189 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.851.190 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.851.191 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.851.192 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.851.192 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.851.193 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.851.194 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.851.202 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.851.203 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.851.204 I llm_load_print_meta: max token length = 93
0.00.924.746 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.924.757 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.930.922 I llama_new_context_with_model: n_seq_max     = 1
0.00.930.930 I llama_new_context_with_model: n_ctx         = 4096
0.00.930.930 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.930.931 I llama_new_context_with_model: n_batch       = 2048
0.00.930.931 I llama_new_context_with_model: n_ubatch      = 512
0.00.930.932 I llama_new_context_with_model: flash_attn    = 0
0.00.930.934 I llama_new_context_with_model: freq_base     = 10000.0
0.00.930.935 I llama_new_context_with_model: freq_scale    = 1
0.00.930.935 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.945.786 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.945.827 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.945.958 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.948.597 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.948.602 I llama_new_context_with_model: graph nodes  = 601
0.00.948.602 I llama_new_context_with_model: graph splits = 1
0.00.948.627 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.585.761 I main: llama threadpool init, n_threads = 4
0.01.585.777 I 
0.01.585.901 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.585.902 I 
0.01.586.164 I sampler seed: 1335355289
0.01.586.180 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.586.193 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.586.193 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.586.194 I 
 increasities, and other forms of sexual harassment can have devastating effects on victims, including physical and emotional harm, loss of self-esteem, difficulty with work and

0.15.196.460 I llama_perf_sampler_print:    sampling time =      48.99 ms /    33 runs   (    1.48 ms per token,   673.63 tokens per second)
0.15.196.463 I llama_perf_context_print:        load time =    1584.81 ms
0.15.196.464 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.196.466 I llama_perf_context_print:        eval time =   13521.72 ms /    32 runs   (  422.55 ms per token,     2.37 tokens per second)
0.15.196.490 I llama_perf_context_print:       total time =   13610.71 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m6.582s
user	3m36.768s
sys	0m9.333s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4172 (1bc0e9a2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186661.70 ms
main:    total time = 186661.70 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.648 I build: 4172 (1bc0e9a2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.850 I main: llama backend init
0.00.000.858 I main: load the model and apply lora adapter, if any
0.00.023.573 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.597 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.699 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.712 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.714 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.722 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.725 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.727 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.729 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.738 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.740 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.752 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.756 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.757 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.758 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.760 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.245 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.187 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.172 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.183 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.185 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.186 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.187 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.189 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.190 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.195 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.197 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.198 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.200 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.349.201 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.211 I llama_model_loader: - type  f32:   37 tensors
0.00.349.213 I llama_model_loader: - type q4_K:  108 tensors
0.00.349.214 I llama_model_loader: - type q6_K:   19 tensors
0.00.584.102 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.647.911 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.648.867 I llm_load_vocab: special tokens cache size = 5
0.00.839.253 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.839.322 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.839.326 I llm_load_print_meta: arch             = gemma
0.00.839.327 I llm_load_print_meta: vocab type       = SPM
0.00.839.328 I llm_load_print_meta: n_vocab          = 256000
0.00.839.330 I llm_load_print_meta: n_merges         = 0
0.00.839.331 I llm_load_print_meta: vocab_only       = 0
0.00.839.331 I llm_load_print_meta: n_ctx_train      = 8192
0.00.839.331 I llm_load_print_meta: n_embd           = 2048
0.00.839.333 I llm_load_print_meta: n_layer          = 18
0.00.839.400 I llm_load_print_meta: n_head           = 8
0.00.839.410 I llm_load_print_meta: n_head_kv        = 1
0.00.839.410 I llm_load_print_meta: n_rot            = 256
0.00.839.411 I llm_load_print_meta: n_swa            = 0
0.00.839.411 I llm_load_print_meta: n_embd_head_k    = 256
0.00.839.412 I llm_load_print_meta: n_embd_head_v    = 256
0.00.839.416 I llm_load_print_meta: n_gqa            = 8
0.00.839.421 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.839.426 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.839.430 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.839.432 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.839.432 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.839.432 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.839.433 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.839.438 I llm_load_print_meta: n_ff             = 16384
0.00.839.438 I llm_load_print_meta: n_expert         = 0
0.00.839.439 I llm_load_print_meta: n_expert_used    = 0
0.00.839.439 I llm_load_print_meta: causal attn      = 1
0.00.839.440 I llm_load_print_meta: pooling type     = 0
0.00.839.440 I llm_load_print_meta: rope type        = 2
0.00.839.441 I llm_load_print_meta: rope scaling     = linear
0.00.839.442 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.839.451 I llm_load_print_meta: freq_scale_train = 1
0.00.839.452 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.839.465 I llm_load_print_meta: rope_finetuned   = unknown
0.00.839.466 I llm_load_print_meta: ssm_d_conv       = 0
0.00.839.466 I llm_load_print_meta: ssm_d_inner      = 0
0.00.839.467 I llm_load_print_meta: ssm_d_state      = 0
0.00.839.467 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.839.468 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.839.468 I llm_load_print_meta: model type       = 2B
0.00.839.470 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.839.470 I llm_load_print_meta: model params     = 2.51 B
0.00.839.478 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.839.478 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.839.481 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.839.482 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.839.483 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.839.483 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.839.483 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.839.484 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.839.490 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.839.492 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.839.492 I llm_load_print_meta: max token length = 93
0.00.902.427 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.902.437 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.902.438 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.902.438 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.902.439 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.902.440 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.908.161 I llama_new_context_with_model: n_seq_max     = 1
0.00.908.167 I llama_new_context_with_model: n_ctx         = 4096
0.00.908.168 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.908.168 I llama_new_context_with_model: n_batch       = 2048
0.00.908.168 I llama_new_context_with_model: n_ubatch      = 512
0.00.908.169 I llama_new_context_with_model: flash_attn    = 0
0.00.908.171 I llama_new_context_with_model: freq_base     = 10000.0
0.00.908.172 I llama_new_context_with_model: freq_scale    = 1
0.00.908.173 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.922.756 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.922.793 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.922.918 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.925.443 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.925.447 I llama_new_context_with_model: graph nodes  = 601
0.00.925.448 I llama_new_context_with_model: graph splits = 1
0.00.925.471 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.510.180 I main: llama threadpool init, n_threads = 4
0.01.510.197 I 
0.01.510.316 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.510.321 I 
0.01.510.560 I sampler seed: 2995799135
0.01.510.574 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.510.584 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.510.586 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.510.586 I 
 seconded from the following text:

a) From the text, "a strange event occurred to a man who was walking in the forest."
b)

0.12.643.483 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.77 tokens per second)
0.12.643.487 I llama_perf_context_print:        load time =    1509.22 ms
0.12.643.489 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.643.492 I llama_perf_context_print:        eval time =   11044.48 ms /    32 runs   (  345.14 ms per token,     2.90 tokens per second)
0.12.643.493 I llama_perf_context_print:       total time =   11133.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4172 (1bc0e9a2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186586.39 ms
main:    total time = 186586.39 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.631 I build: 4172 (1bc0e9a2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.874 I main: llama backend init
0.00.000.882 I main: load the model and apply lora adapter, if any
0.00.023.323 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.430 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.446 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.451 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.458 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.461 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.466 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.469 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.471 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.473 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.482 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.486 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.488 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.490 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.492 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.225.504 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.327.278 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.351.207 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.351.217 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.351.218 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.351.220 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.351.222 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.351.224 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.351.225 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.351.230 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.351.232 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.351.250 I llama_model_loader: - type  f32:   37 tensors
0.00.351.254 I llama_model_loader: - type q4_K:  108 tensors
0.00.351.255 I llama_model_loader: - type q6_K:   19 tensors
0.00.580.569 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.640.395 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.641.353 I llm_load_vocab: special tokens cache size = 5
0.00.845.116 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.845.190 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.845.191 I llm_load_print_meta: arch             = gemma
0.00.845.192 I llm_load_print_meta: vocab type       = SPM
0.00.845.193 I llm_load_print_meta: n_vocab          = 256000
0.00.845.195 I llm_load_print_meta: n_merges         = 0
0.00.845.196 I llm_load_print_meta: vocab_only       = 0
0.00.845.196 I llm_load_print_meta: n_ctx_train      = 8192
0.00.845.196 I llm_load_print_meta: n_embd           = 2048
0.00.845.197 I llm_load_print_meta: n_layer          = 18
0.00.845.262 I llm_load_print_meta: n_head           = 8
0.00.845.269 I llm_load_print_meta: n_head_kv        = 1
0.00.845.270 I llm_load_print_meta: n_rot            = 256
0.00.845.270 I llm_load_print_meta: n_swa            = 0
0.00.845.270 I llm_load_print_meta: n_embd_head_k    = 256
0.00.845.271 I llm_load_print_meta: n_embd_head_v    = 256
0.00.845.275 I llm_load_print_meta: n_gqa            = 8
0.00.845.280 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.845.285 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.845.286 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.845.307 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.845.308 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.845.308 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.845.309 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.845.314 I llm_load_print_meta: n_ff             = 16384
0.00.845.315 I llm_load_print_meta: n_expert         = 0
0.00.845.315 I llm_load_print_meta: n_expert_used    = 0
0.00.845.315 I llm_load_print_meta: causal attn      = 1
0.00.845.316 I llm_load_print_meta: pooling type     = 0
0.00.845.316 I llm_load_print_meta: rope type        = 2
0.00.845.324 I llm_load_print_meta: rope scaling     = linear
0.00.845.326 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.845.327 I llm_load_print_meta: freq_scale_train = 1
0.00.845.327 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.845.335 I llm_load_print_meta: rope_finetuned   = unknown
0.00.845.342 I llm_load_print_meta: ssm_d_conv       = 0
0.00.845.347 I llm_load_print_meta: ssm_d_inner      = 0
0.00.845.347 I llm_load_print_meta: ssm_d_state      = 0
0.00.845.347 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.845.348 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.845.348 I llm_load_print_meta: model type       = 2B
0.00.845.349 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.845.350 I llm_load_print_meta: model params     = 2.51 B
0.00.845.359 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.845.360 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.845.361 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.845.362 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.845.362 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.845.363 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.845.363 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.845.367 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.845.373 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.845.374 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.845.374 I llm_load_print_meta: max token length = 93
0.00.903.949 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.910.044 I llama_new_context_with_model: n_seq_max     = 1
0.00.910.051 I llama_new_context_with_model: n_ctx         = 4096
0.00.910.052 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.910.052 I llama_new_context_with_model: n_batch       = 2048
0.00.910.052 I llama_new_context_with_model: n_ubatch      = 512
0.00.910.053 I llama_new_context_with_model: flash_attn    = 0
0.00.910.056 I llama_new_context_with_model: freq_base     = 10000.0
0.00.910.056 I llama_new_context_with_model: freq_scale    = 1
0.00.910.057 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.924.912 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.924.954 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.925.078 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.927.661 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.927.665 I llama_new_context_with_model: graph nodes  = 601
0.00.927.665 I llama_new_context_with_model: graph splits = 1
0.00.927.689 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.512.733 I main: llama threadpool init, n_threads = 4
0.01.512.761 I 
0.01.512.892 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.512.896 I 
0.01.513.143 I sampler seed: 372794889
0.01.513.159 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.513.169 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.513.174 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.513.174 I 
 increasities, and other forms of flattery.

**Answer:**

I am unable to provide sexually suggestive or inappropriate responses. My purpose is to assist with tasks

0.12.633.526 I llama_perf_sampler_print:    sampling time =      49.03 ms /    33 runs   (    1.49 ms per token,   673.08 tokens per second)
0.12.633.529 I llama_perf_context_print:        load time =    1511.75 ms
0.12.633.530 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.633.545 I llama_perf_context_print:        eval time =   11031.82 ms /    32 runs   (  344.74 ms per token,     2.90 tokens per second)
0.12.633.546 I llama_perf_context_print:       total time =   11120.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m41.399s
user	46m45.149s
sys	0m6.353s
