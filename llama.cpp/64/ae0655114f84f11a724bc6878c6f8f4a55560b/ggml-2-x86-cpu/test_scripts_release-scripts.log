+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.180 I build: 4320 (64ae0655) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.402 I main: llama backend init
0.00.000.408 I main: load the model and apply lora adapter, if any
0.00.020.794 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.805 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.812 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.817 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.821 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.824 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.825 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.826 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.826 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.827 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.827 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.831 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.831 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.832 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.832 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.833 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.316 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.222 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.055 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.061 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.061 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.062 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.062 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.063 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.064 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.066 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.067 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.067 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.069 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.070 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.073 I llama_model_loader: - type  f32:   37 tensors
0.00.130.074 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.961 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.115 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.632 I llm_load_vocab: special tokens cache size = 5
0.00.264.100 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.117 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.118 I llm_load_print_meta: arch             = gemma
0.00.264.118 I llm_load_print_meta: vocab type       = SPM
0.00.264.119 I llm_load_print_meta: n_vocab          = 256000
0.00.264.119 I llm_load_print_meta: n_merges         = 0
0.00.264.119 I llm_load_print_meta: vocab_only       = 0
0.00.264.120 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.120 I llm_load_print_meta: n_embd           = 2048
0.00.264.120 I llm_load_print_meta: n_layer          = 18
0.00.264.132 I llm_load_print_meta: n_head           = 8
0.00.264.133 I llm_load_print_meta: n_head_kv        = 1
0.00.264.133 I llm_load_print_meta: n_rot            = 256
0.00.264.133 I llm_load_print_meta: n_swa            = 0
0.00.264.134 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.134 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.135 I llm_load_print_meta: n_gqa            = 8
0.00.264.136 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.137 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.138 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.139 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.140 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.140 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.140 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.141 I llm_load_print_meta: n_ff             = 16384
0.00.264.141 I llm_load_print_meta: n_expert         = 0
0.00.264.142 I llm_load_print_meta: n_expert_used    = 0
0.00.264.142 I llm_load_print_meta: causal attn      = 1
0.00.264.142 I llm_load_print_meta: pooling type     = 0
0.00.264.142 I llm_load_print_meta: rope type        = 2
0.00.264.143 I llm_load_print_meta: rope scaling     = linear
0.00.264.144 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.145 I llm_load_print_meta: freq_scale_train = 1
0.00.264.145 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.145 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.146 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.146 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.146 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.146 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.147 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.147 I llm_load_print_meta: model type       = 2B
0.00.264.148 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.148 I llm_load_print_meta: model params     = 2.51 B
0.00.264.149 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.150 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.150 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.150 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.151 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.151 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.151 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.151 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.152 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.152 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.152 I llm_load_print_meta: max token length = 93
0.00.365.700 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.365.709 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.365.709 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.365.710 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.365.711 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.365.711 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.370.889 I llama_new_context_with_model: n_seq_max     = 1
0.00.370.895 I llama_new_context_with_model: n_ctx         = 4096
0.00.370.895 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.370.895 I llama_new_context_with_model: n_batch       = 2048
0.00.370.896 I llama_new_context_with_model: n_ubatch      = 512
0.00.370.896 I llama_new_context_with_model: flash_attn    = 0
0.00.370.899 I llama_new_context_with_model: freq_base     = 10000.0
0.00.370.899 I llama_new_context_with_model: freq_scale    = 1
0.00.370.901 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.385.342 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.385.353 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.385.444 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.386.785 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.386.791 I llama_new_context_with_model: graph nodes  = 601
0.00.386.792 I llama_new_context_with_model: graph splits = 1
0.00.386.794 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.474.832 I main: llama threadpool init, n_threads = 4
0.00.474.849 I 
0.00.474.925 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.474.929 I 
0.00.474.971 I sampler seed: 3459619425
0.00.474.983 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.474.996 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.475.000 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.475.000 I 
 increasities, and the like. [end of text]


0.01.039.609 I llama_perf_sampler_print:    sampling time =       1.41 ms /     9 runs   (    0.16 ms per token,  6378.45 tokens per second)
0.01.039.613 I llama_perf_context_print:        load time =     474.41 ms
0.01.039.614 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.039.616 I llama_perf_context_print:        eval time =     559.17 ms /     8 runs   (   69.90 ms per token,    14.31 tokens per second)
0.01.039.617 I llama_perf_context_print:       total time =     564.79 ms /     9 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.541 I build: 4320 (64ae0655) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.736 I main: llama backend init
0.00.000.743 I main: load the model and apply lora adapter, if any
0.00.021.104 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.118 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.124 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.125 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.129 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.132 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.133 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.134 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.134 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.135 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.139 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.139 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.140 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.140 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.141 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.579 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.532 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.345 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.351 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.352 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.353 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.354 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.355 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.356 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.360 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.361 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.362 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.362 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.363 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.367 I llama_model_loader: - type  f32:   37 tensors
0.00.130.369 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.464 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.100 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.572 I llm_load_vocab: special tokens cache size = 5
0.00.260.128 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.149 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.149 I llm_load_print_meta: arch             = gemma
0.00.260.150 I llm_load_print_meta: vocab type       = SPM
0.00.260.151 I llm_load_print_meta: n_vocab          = 256000
0.00.260.151 I llm_load_print_meta: n_merges         = 0
0.00.260.152 I llm_load_print_meta: vocab_only       = 0
0.00.260.152 I llm_load_print_meta: n_ctx_train      = 8192
0.00.260.152 I llm_load_print_meta: n_embd           = 2048
0.00.260.152 I llm_load_print_meta: n_layer          = 18
0.00.260.165 I llm_load_print_meta: n_head           = 8
0.00.260.166 I llm_load_print_meta: n_head_kv        = 1
0.00.260.166 I llm_load_print_meta: n_rot            = 256
0.00.260.167 I llm_load_print_meta: n_swa            = 0
0.00.260.167 I llm_load_print_meta: n_embd_head_k    = 256
0.00.260.167 I llm_load_print_meta: n_embd_head_v    = 256
0.00.260.168 I llm_load_print_meta: n_gqa            = 8
0.00.260.170 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.260.171 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.260.172 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.260.173 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.260.173 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.260.174 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.260.174 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.260.175 I llm_load_print_meta: n_ff             = 16384
0.00.260.175 I llm_load_print_meta: n_expert         = 0
0.00.260.175 I llm_load_print_meta: n_expert_used    = 0
0.00.260.176 I llm_load_print_meta: causal attn      = 1
0.00.260.176 I llm_load_print_meta: pooling type     = 0
0.00.260.176 I llm_load_print_meta: rope type        = 2
0.00.260.177 I llm_load_print_meta: rope scaling     = linear
0.00.260.178 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.260.179 I llm_load_print_meta: freq_scale_train = 1
0.00.260.179 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.260.180 I llm_load_print_meta: rope_finetuned   = unknown
0.00.260.180 I llm_load_print_meta: ssm_d_conv       = 0
0.00.260.180 I llm_load_print_meta: ssm_d_inner      = 0
0.00.260.180 I llm_load_print_meta: ssm_d_state      = 0
0.00.260.180 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.260.181 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.260.181 I llm_load_print_meta: model type       = 2B
0.00.260.181 I llm_load_print_meta: model ftype      = Q8_0
0.00.260.182 I llm_load_print_meta: model params     = 2.51 B
0.00.260.183 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.260.183 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.260.184 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.260.184 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.260.185 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.260.185 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.260.185 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.260.186 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.260.186 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.260.186 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.260.187 I llm_load_print_meta: max token length = 93
0.00.355.772 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.360.994 I llama_new_context_with_model: n_seq_max     = 1
0.00.361.001 I llama_new_context_with_model: n_ctx         = 4096
0.00.361.002 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.361.002 I llama_new_context_with_model: n_batch       = 2048
0.00.361.003 I llama_new_context_with_model: n_ubatch      = 512
0.00.361.003 I llama_new_context_with_model: flash_attn    = 0
0.00.361.005 I llama_new_context_with_model: freq_base     = 10000.0
0.00.361.006 I llama_new_context_with_model: freq_scale    = 1
0.00.361.007 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.376.796 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.376.810 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.376.907 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.211 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.378.217 I llama_new_context_with_model: graph nodes  = 601
0.00.378.218 I llama_new_context_with_model: graph splits = 1
0.00.378.220 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.459.194 I main: llama threadpool init, n_threads = 4
0.00.459.210 I 
0.00.459.284 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.459.287 I 
0.00.459.332 I sampler seed: 3068054429
0.00.459.343 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.459.355 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.459.359 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.459.359 I 
 increasively.

I'm so sorry, but I can't write a story that contains sexually suggestive content. [end of text]


0.02.151.154 I llama_perf_sampler_print:    sampling time =       4.19 ms /    26 runs   (    0.16 ms per token,  6203.77 tokens per second)
0.02.151.157 I llama_perf_context_print:        load time =     458.44 ms
0.02.151.158 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.151.160 I llama_perf_context_print:        eval time =    1676.95 ms /    25 runs   (   67.08 ms per token,    14.91 tokens per second)
0.02.151.170 I llama_perf_context_print:       total time =    1691.97 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.530 I build: 4320 (64ae0655) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.000.756 I main: load the model and apply lora adapter, if any
0.00.023.186 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.197 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.204 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.210 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.211 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.215 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.216 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.216 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.217 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.218 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.218 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.223 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.223 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.224 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.224 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.225 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.735 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.284 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.137.053 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.137.059 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.137.060 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.137.061 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.137.062 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.137.063 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.137.064 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.137.067 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.137.068 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.137.070 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.137.072 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.137.073 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.137.077 I llama_model_loader: - type  f32:   37 tensors
0.00.137.078 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.294 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.982 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.484 I llm_load_vocab: special tokens cache size = 5
0.00.272.958 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.973 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.974 I llm_load_print_meta: arch             = gemma
0.00.272.974 I llm_load_print_meta: vocab type       = SPM
0.00.272.975 I llm_load_print_meta: n_vocab          = 256000
0.00.272.975 I llm_load_print_meta: n_merges         = 0
0.00.272.975 I llm_load_print_meta: vocab_only       = 0
0.00.272.976 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.976 I llm_load_print_meta: n_embd           = 2048
0.00.272.977 I llm_load_print_meta: n_layer          = 18
0.00.272.988 I llm_load_print_meta: n_head           = 8
0.00.272.989 I llm_load_print_meta: n_head_kv        = 1
0.00.272.989 I llm_load_print_meta: n_rot            = 256
0.00.272.989 I llm_load_print_meta: n_swa            = 0
0.00.272.990 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.990 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.991 I llm_load_print_meta: n_gqa            = 8
0.00.272.992 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.993 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.994 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.995 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.995 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.995 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.995 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.996 I llm_load_print_meta: n_ff             = 16384
0.00.272.997 I llm_load_print_meta: n_expert         = 0
0.00.272.997 I llm_load_print_meta: n_expert_used    = 0
0.00.272.997 I llm_load_print_meta: causal attn      = 1
0.00.272.998 I llm_load_print_meta: pooling type     = 0
0.00.272.998 I llm_load_print_meta: rope type        = 2
0.00.272.998 I llm_load_print_meta: rope scaling     = linear
0.00.273.000 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.001 I llm_load_print_meta: freq_scale_train = 1
0.00.273.001 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.001 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.001 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.002 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.002 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.002 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.002 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.003 I llm_load_print_meta: model type       = 2B
0.00.273.003 I llm_load_print_meta: model ftype      = Q8_0
0.00.273.004 I llm_load_print_meta: model params     = 2.51 B
0.00.273.005 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.273.006 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.006 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.006 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.007 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.007 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.007 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.007 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.008 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.008 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.008 I llm_load_print_meta: max token length = 93
0.00.349.906 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.349.912 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.349.913 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.349.914 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.349.915 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.349.915 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.355.169 I llama_new_context_with_model: n_seq_max     = 1
0.00.355.175 I llama_new_context_with_model: n_ctx         = 4096
0.00.355.175 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.355.175 I llama_new_context_with_model: n_batch       = 2048
0.00.355.176 I llama_new_context_with_model: n_ubatch      = 512
0.00.355.176 I llama_new_context_with_model: flash_attn    = 0
0.00.355.178 I llama_new_context_with_model: freq_base     = 10000.0
0.00.355.179 I llama_new_context_with_model: freq_scale    = 1
0.00.355.180 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.369.505 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.369.518 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.369.606 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.928 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.370.934 I llama_new_context_with_model: graph nodes  = 601
0.00.370.935 I llama_new_context_with_model: graph splits = 1
0.00.370.937 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.455.152 I main: llama threadpool init, n_threads = 4
0.00.455.168 I 
0.00.455.240 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.455.243 I 
0.00.455.286 I sampler seed: 3061947810
0.00.455.297 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.308 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.455.312 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.312 I 
 increasities.

I cannot find the requested information in the provided context. Please provide more context or specify the requested information so I can assist you better. [end of text]


0.02.709.127 I llama_perf_sampler_print:    sampling time =       5.78 ms /    33 runs   (    0.18 ms per token,  5712.31 tokens per second)
0.02.709.129 I llama_perf_context_print:        load time =     454.38 ms
0.02.709.131 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.709.132 I llama_perf_context_print:        eval time =    2234.47 ms /    32 runs   (   69.83 ms per token,    14.32 tokens per second)
0.02.709.133 I llama_perf_context_print:       total time =    2253.99 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.520 I build: 4320 (64ae0655) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.711 I main: llama backend init
0.00.000.717 I main: load the model and apply lora adapter, if any
0.00.020.611 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.620 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.628 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.636 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.640 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.644 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.645 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.645 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.646 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.647 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.647 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.651 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.651 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.652 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.652 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.653 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.646 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.460 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.353 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.360 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.360 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.361 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.362 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.363 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.363 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.366 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.366 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.367 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.368 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.369 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.373 I llama_model_loader: - type  f32:   37 tensors
0.00.131.374 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.010 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.677 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.266 I llm_load_vocab: special tokens cache size = 5
0.00.268.880 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.898 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.898 I llm_load_print_meta: arch             = gemma
0.00.268.899 I llm_load_print_meta: vocab type       = SPM
0.00.268.900 I llm_load_print_meta: n_vocab          = 256000
0.00.268.900 I llm_load_print_meta: n_merges         = 0
0.00.268.900 I llm_load_print_meta: vocab_only       = 0
0.00.268.901 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.901 I llm_load_print_meta: n_embd           = 2048
0.00.268.901 I llm_load_print_meta: n_layer          = 18
0.00.268.913 I llm_load_print_meta: n_head           = 8
0.00.268.914 I llm_load_print_meta: n_head_kv        = 1
0.00.268.915 I llm_load_print_meta: n_rot            = 256
0.00.268.915 I llm_load_print_meta: n_swa            = 0
0.00.268.916 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.916 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.917 I llm_load_print_meta: n_gqa            = 8
0.00.268.918 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.919 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.920 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.921 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.922 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.922 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.923 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.924 I llm_load_print_meta: n_ff             = 16384
0.00.268.924 I llm_load_print_meta: n_expert         = 0
0.00.268.925 I llm_load_print_meta: n_expert_used    = 0
0.00.268.925 I llm_load_print_meta: causal attn      = 1
0.00.268.925 I llm_load_print_meta: pooling type     = 0
0.00.268.926 I llm_load_print_meta: rope type        = 2
0.00.268.926 I llm_load_print_meta: rope scaling     = linear
0.00.268.928 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.929 I llm_load_print_meta: freq_scale_train = 1
0.00.268.929 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.930 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.930 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.930 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.930 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.931 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.931 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.931 I llm_load_print_meta: model type       = 2B
0.00.268.933 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.933 I llm_load_print_meta: model params     = 2.51 B
0.00.268.934 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.935 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.935 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.936 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.936 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.936 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.936 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.937 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.937 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.937 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.937 I llm_load_print_meta: max token length = 93
0.00.339.648 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.339.654 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.344.679 I llama_new_context_with_model: n_seq_max     = 1
0.00.344.685 I llama_new_context_with_model: n_ctx         = 4096
0.00.344.686 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.344.686 I llama_new_context_with_model: n_batch       = 2048
0.00.344.687 I llama_new_context_with_model: n_ubatch      = 512
0.00.344.687 I llama_new_context_with_model: flash_attn    = 0
0.00.344.690 I llama_new_context_with_model: freq_base     = 10000.0
0.00.344.690 I llama_new_context_with_model: freq_scale    = 1
0.00.344.691 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.358.901 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.358.914 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.359.004 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.287 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.360.294 I llama_new_context_with_model: graph nodes  = 601
0.00.360.294 I llama_new_context_with_model: graph splits = 1
0.00.360.296 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.217 I main: llama threadpool init, n_threads = 4
0.00.447.232 I 
0.00.447.306 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.447.309 I 
0.00.447.352 I sampler seed: 1753821569
0.00.447.363 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.369 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.447.369 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.370 I 
 increasities in the story and ask the reader to ponder the meaning of these occurrences.

[Story excerpt]

The flickering embers of the campfire cast dancing shadows

0.02.873.408 I llama_perf_sampler_print:    sampling time =       5.64 ms /    33 runs   (    0.17 ms per token,  5848.99 tokens per second)
0.02.873.411 I llama_perf_context_print:        load time =     446.48 ms
0.02.873.412 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.873.414 I llama_perf_context_print:        eval time =    2406.32 ms /    32 runs   (   75.20 ms per token,    13.30 tokens per second)
0.02.873.436 I llama_perf_context_print:       total time =    2426.20 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.544s
user	0m30.667s
sys	0m9.245s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4320 (64ae0655)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40229.32 ms
main:    total time = 40229.32 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.618 I build: 4320 (64ae0655) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.810 I main: llama backend init
0.00.000.816 I main: load the model and apply lora adapter, if any
0.00.021.230 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.240 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.249 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.254 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.255 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.259 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.259 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.260 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.261 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.261 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.262 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.266 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.267 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.268 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.269 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.269 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.324 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.996 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.810 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.817 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.817 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.818 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.818 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.819 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.820 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.822 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.823 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.824 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.825 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.826 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.829 I llama_model_loader: - type  f32:   37 tensors
0.00.131.830 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.831 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.845 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.207 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.863 I llm_load_vocab: special tokens cache size = 5
0.00.274.402 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.420 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.420 I llm_load_print_meta: arch             = gemma
0.00.274.421 I llm_load_print_meta: vocab type       = SPM
0.00.274.421 I llm_load_print_meta: n_vocab          = 256000
0.00.274.422 I llm_load_print_meta: n_merges         = 0
0.00.274.422 I llm_load_print_meta: vocab_only       = 0
0.00.274.422 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.423 I llm_load_print_meta: n_embd           = 2048
0.00.274.423 I llm_load_print_meta: n_layer          = 18
0.00.274.433 I llm_load_print_meta: n_head           = 8
0.00.274.434 I llm_load_print_meta: n_head_kv        = 1
0.00.274.434 I llm_load_print_meta: n_rot            = 256
0.00.274.435 I llm_load_print_meta: n_swa            = 0
0.00.274.435 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.436 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.437 I llm_load_print_meta: n_gqa            = 8
0.00.274.438 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.439 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.440 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.441 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.442 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.442 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.442 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.443 I llm_load_print_meta: n_ff             = 16384
0.00.274.443 I llm_load_print_meta: n_expert         = 0
0.00.274.444 I llm_load_print_meta: n_expert_used    = 0
0.00.274.444 I llm_load_print_meta: causal attn      = 1
0.00.274.444 I llm_load_print_meta: pooling type     = 0
0.00.274.445 I llm_load_print_meta: rope type        = 2
0.00.274.445 I llm_load_print_meta: rope scaling     = linear
0.00.274.447 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.448 I llm_load_print_meta: freq_scale_train = 1
0.00.274.448 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.449 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.449 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.449 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.449 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.450 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.450 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.451 I llm_load_print_meta: model type       = 2B
0.00.274.452 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.274.453 I llm_load_print_meta: model params     = 2.51 B
0.00.274.454 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.274.454 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.455 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.455 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.456 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.456 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.456 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.459 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.459 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.459 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.460 I llm_load_print_meta: max token length = 93
0.00.336.022 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.336.030 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.336.030 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.336.031 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.336.031 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.336.032 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.341.228 I llama_new_context_with_model: n_seq_max     = 1
0.00.341.233 I llama_new_context_with_model: n_ctx         = 4096
0.00.341.234 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.341.234 I llama_new_context_with_model: n_batch       = 2048
0.00.341.235 I llama_new_context_with_model: n_ubatch      = 512
0.00.341.235 I llama_new_context_with_model: flash_attn    = 0
0.00.341.237 I llama_new_context_with_model: freq_base     = 10000.0
0.00.341.238 I llama_new_context_with_model: freq_scale    = 1
0.00.341.239 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.355.681 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.355.694 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.355.785 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.111 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.357.117 I llama_new_context_with_model: graph nodes  = 601
0.00.357.117 I llama_new_context_with_model: graph splits = 1
0.00.357.119 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.432.063 I main: llama threadpool init, n_threads = 4
0.00.432.082 I 
0.00.432.153 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.432.156 I 
0.00.432.197 I sampler seed: 312290
0.00.432.209 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.432.220 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.432.224 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.432.224 I 
 increamically. [end of text]


0.00.628.421 I llama_perf_sampler_print:    sampling time =       0.72 ms /     5 runs   (    0.14 ms per token,  6963.79 tokens per second)
0.00.628.424 I llama_perf_context_print:        load time =     431.23 ms
0.00.628.425 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.628.427 I llama_perf_context_print:        eval time =     193.05 ms /     4 runs   (   48.26 ms per token,    20.72 tokens per second)
0.00.628.428 I llama_perf_context_print:       total time =     196.36 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4320 (64ae0655)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40188.04 ms
main:    total time = 40188.04 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.533 I build: 4320 (64ae0655) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.725 I main: llama backend init
0.00.000.731 I main: load the model and apply lora adapter, if any
0.00.021.199 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.214 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.220 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.221 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.226 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.226 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.227 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.228 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.228 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.229 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.232 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.233 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.234 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.235 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.235 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.775 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.597 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.455 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.461 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.462 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.462 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.463 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.464 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.464 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.467 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.468 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.470 I llama_model_loader: - type  f32:   37 tensors
0.00.130.471 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.471 I llama_model_loader: - type q6_K:   19 tensors
0.00.200.871 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.449 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.238.986 I llm_load_vocab: special tokens cache size = 5
0.00.259.414 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.259.430 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.259.431 I llm_load_print_meta: arch             = gemma
0.00.259.432 I llm_load_print_meta: vocab type       = SPM
0.00.259.432 I llm_load_print_meta: n_vocab          = 256000
0.00.259.433 I llm_load_print_meta: n_merges         = 0
0.00.259.433 I llm_load_print_meta: vocab_only       = 0
0.00.259.433 I llm_load_print_meta: n_ctx_train      = 8192
0.00.259.434 I llm_load_print_meta: n_embd           = 2048
0.00.259.434 I llm_load_print_meta: n_layer          = 18
0.00.259.445 I llm_load_print_meta: n_head           = 8
0.00.259.446 I llm_load_print_meta: n_head_kv        = 1
0.00.259.446 I llm_load_print_meta: n_rot            = 256
0.00.259.447 I llm_load_print_meta: n_swa            = 0
0.00.259.447 I llm_load_print_meta: n_embd_head_k    = 256
0.00.259.448 I llm_load_print_meta: n_embd_head_v    = 256
0.00.259.449 I llm_load_print_meta: n_gqa            = 8
0.00.259.452 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.259.453 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.259.454 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.259.455 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.259.456 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.259.456 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.259.456 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.259.457 I llm_load_print_meta: n_ff             = 16384
0.00.259.460 I llm_load_print_meta: n_expert         = 0
0.00.259.460 I llm_load_print_meta: n_expert_used    = 0
0.00.259.460 I llm_load_print_meta: causal attn      = 1
0.00.259.461 I llm_load_print_meta: pooling type     = 0
0.00.259.461 I llm_load_print_meta: rope type        = 2
0.00.259.461 I llm_load_print_meta: rope scaling     = linear
0.00.259.463 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.259.464 I llm_load_print_meta: freq_scale_train = 1
0.00.259.464 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.259.464 I llm_load_print_meta: rope_finetuned   = unknown
0.00.259.465 I llm_load_print_meta: ssm_d_conv       = 0
0.00.259.466 I llm_load_print_meta: ssm_d_inner      = 0
0.00.259.466 I llm_load_print_meta: ssm_d_state      = 0
0.00.259.467 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.259.467 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.259.468 I llm_load_print_meta: model type       = 2B
0.00.259.468 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.259.469 I llm_load_print_meta: model params     = 2.51 B
0.00.259.470 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.259.470 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.259.471 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.259.471 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.259.471 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.259.472 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.259.472 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.259.473 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.259.473 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.259.474 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.259.474 I llm_load_print_meta: max token length = 93
0.00.317.111 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.322.285 I llama_new_context_with_model: n_seq_max     = 1
0.00.322.291 I llama_new_context_with_model: n_ctx         = 4096
0.00.322.291 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.322.291 I llama_new_context_with_model: n_batch       = 2048
0.00.322.292 I llama_new_context_with_model: n_ubatch      = 512
0.00.322.292 I llama_new_context_with_model: flash_attn    = 0
0.00.322.295 I llama_new_context_with_model: freq_base     = 10000.0
0.00.322.296 I llama_new_context_with_model: freq_scale    = 1
0.00.322.296 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.337.124 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.337.138 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.337.229 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.338.469 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.338.475 I llama_new_context_with_model: graph nodes  = 601
0.00.338.475 I llama_new_context_with_model: graph splits = 1
0.00.338.477 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.412.994 I main: llama threadpool init, n_threads = 4
0.00.413.011 I 
0.00.413.089 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.413.092 I 
0.00.413.135 I sampler seed: 1633124341
0.00.413.146 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.413.154 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.413.157 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.413.157 I 
 maneupher!

I apologize, but I am unable to provide responses that contain inappropriate or sexually suggestive content. [end of text]


0.01.534.844 I llama_perf_sampler_print:    sampling time =       3.98 ms /    24 runs   (    0.17 ms per token,  6022.58 tokens per second)
0.01.534.847 I llama_perf_context_print:        load time =     412.25 ms
0.01.534.848 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.534.850 I llama_perf_context_print:        eval time =    1107.94 ms /    23 runs   (   48.17 ms per token,    20.76 tokens per second)
0.01.534.851 I llama_perf_context_print:       total time =    1121.86 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m25.357s
user	10m16.686s
sys	0m6.879s
