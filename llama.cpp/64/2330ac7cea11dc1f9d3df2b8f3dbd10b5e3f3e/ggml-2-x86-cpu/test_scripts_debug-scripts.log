+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.704 I build: 4242 (642330ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.904 I main: llama backend init
0.00.000.912 I main: load the model and apply lora adapter, if any
0.00.023.943 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.954 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.056 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.071 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.076 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.085 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.086 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.088 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.089 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.091 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.092 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.104 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.108 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.109 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.111 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.113 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.225.842 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.328.374 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.351.608 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.351.619 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.351.620 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.351.621 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.351.623 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.351.624 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.351.625 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.351.630 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.351.631 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.351.632 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.351.634 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.351.636 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.351.644 I llama_model_loader: - type  f32:   37 tensors
0.00.351.647 I llama_model_loader: - type q8_0:  127 tensors
0.00.645.962 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.777.993 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.779.044 I llm_load_vocab: special tokens cache size = 5
0.00.975.394 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.975.473 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.975.474 I llm_load_print_meta: arch             = gemma
0.00.975.475 I llm_load_print_meta: vocab type       = SPM
0.00.975.476 I llm_load_print_meta: n_vocab          = 256000
0.00.975.479 I llm_load_print_meta: n_merges         = 0
0.00.975.479 I llm_load_print_meta: vocab_only       = 0
0.00.975.480 I llm_load_print_meta: n_ctx_train      = 8192
0.00.975.480 I llm_load_print_meta: n_embd           = 2048
0.00.975.480 I llm_load_print_meta: n_layer          = 18
0.00.975.554 I llm_load_print_meta: n_head           = 8
0.00.975.562 I llm_load_print_meta: n_head_kv        = 1
0.00.975.562 I llm_load_print_meta: n_rot            = 256
0.00.975.563 I llm_load_print_meta: n_swa            = 0
0.00.975.563 I llm_load_print_meta: n_embd_head_k    = 256
0.00.975.564 I llm_load_print_meta: n_embd_head_v    = 256
0.00.975.569 I llm_load_print_meta: n_gqa            = 8
0.00.975.574 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.975.579 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.975.581 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.975.583 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.975.584 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.975.584 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.975.585 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.975.590 I llm_load_print_meta: n_ff             = 16384
0.00.975.591 I llm_load_print_meta: n_expert         = 0
0.00.975.603 I llm_load_print_meta: n_expert_used    = 0
0.00.975.604 I llm_load_print_meta: causal attn      = 1
0.00.975.604 I llm_load_print_meta: pooling type     = 0
0.00.975.604 I llm_load_print_meta: rope type        = 2
0.00.975.605 I llm_load_print_meta: rope scaling     = linear
0.00.975.606 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.975.607 I llm_load_print_meta: freq_scale_train = 1
0.00.975.612 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.975.612 I llm_load_print_meta: rope_finetuned   = unknown
0.00.975.612 I llm_load_print_meta: ssm_d_conv       = 0
0.00.975.613 I llm_load_print_meta: ssm_d_inner      = 0
0.00.975.613 I llm_load_print_meta: ssm_d_state      = 0
0.00.975.613 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.975.614 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.975.632 I llm_load_print_meta: model type       = 2B
0.00.975.633 I llm_load_print_meta: model ftype      = Q8_0
0.00.975.634 I llm_load_print_meta: model params     = 2.51 B
0.00.975.639 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.975.640 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.975.645 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.975.646 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.975.647 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.975.654 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.975.658 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.975.658 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.975.665 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.975.666 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.975.674 I llm_load_print_meta: max token length = 93
0.01.078.465 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.01.078.477 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.01.078.478 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.01.078.479 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.01.078.479 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.01.078.480 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.01.084.546 I llama_new_context_with_model: n_seq_max     = 1
0.01.084.554 I llama_new_context_with_model: n_ctx         = 4096
0.01.084.554 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.084.555 I llama_new_context_with_model: n_batch       = 2048
0.01.084.555 I llama_new_context_with_model: n_ubatch      = 512
0.01.084.555 I llama_new_context_with_model: flash_attn    = 0
0.01.084.559 I llama_new_context_with_model: freq_base     = 10000.0
0.01.084.560 I llama_new_context_with_model: freq_scale    = 1
0.01.084.561 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.099.877 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.099.922 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.100.045 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.102.616 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.102.620 I llama_new_context_with_model: graph nodes  = 601
0.01.102.621 I llama_new_context_with_model: graph splits = 1
0.01.102.646 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.712.128 I main: llama threadpool init, n_threads = 4
0.01.712.145 I 
0.01.712.269 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.712.273 I 
0.01.712.517 I sampler seed: 793689774
0.01.712.531 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.712.554 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.712.558 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.712.558 I 
 increasels. 

A circus performer performs a routine that includes juggling and acrobatics. During one of his acts, he throws a frisbee horizontally into the

0.15.394.795 I llama_perf_sampler_print:    sampling time =      49.29 ms /    33 runs   (    1.49 ms per token,   669.45 tokens per second)
0.15.394.798 I llama_perf_context_print:        load time =    1711.10 ms
0.15.394.813 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.394.816 I llama_perf_context_print:        eval time =   13591.16 ms /    32 runs   (  424.72 ms per token,     2.35 tokens per second)
0.15.394.817 I llama_perf_context_print:       total time =   13682.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.724 I build: 4242 (642330ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.967 I main: llama backend init
0.00.000.986 I main: load the model and apply lora adapter, if any
0.00.023.807 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.929 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.947 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.952 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.963 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.970 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.972 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.975 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.983 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.989 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.007 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.013 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.015 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.017 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.020 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.233.103 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.339.072 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.362.305 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.362.319 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.362.320 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.362.322 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.362.323 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.362.324 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.362.326 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.362.330 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.362.332 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.362.333 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.362.334 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.362.336 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.362.346 I llama_model_loader: - type  f32:   37 tensors
0.00.362.349 I llama_model_loader: - type q8_0:  127 tensors
0.00.676.212 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.808.922 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.810.102 I llm_load_vocab: special tokens cache size = 5
0.01.014.823 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.01.014.896 I llm_load_print_meta: format           = GGUF V3 (latest)
0.01.014.897 I llm_load_print_meta: arch             = gemma
0.01.014.897 I llm_load_print_meta: vocab type       = SPM
0.01.014.898 I llm_load_print_meta: n_vocab          = 256000
0.01.014.901 I llm_load_print_meta: n_merges         = 0
0.01.014.901 I llm_load_print_meta: vocab_only       = 0
0.01.014.902 I llm_load_print_meta: n_ctx_train      = 8192
0.01.014.902 I llm_load_print_meta: n_embd           = 2048
0.01.014.902 I llm_load_print_meta: n_layer          = 18
0.01.014.967 I llm_load_print_meta: n_head           = 8
0.01.014.974 I llm_load_print_meta: n_head_kv        = 1
0.01.014.974 I llm_load_print_meta: n_rot            = 256
0.01.014.975 I llm_load_print_meta: n_swa            = 0
0.01.014.975 I llm_load_print_meta: n_embd_head_k    = 256
0.01.014.976 I llm_load_print_meta: n_embd_head_v    = 256
0.01.014.980 I llm_load_print_meta: n_gqa            = 8
0.01.014.985 I llm_load_print_meta: n_embd_k_gqa     = 256
0.01.014.990 I llm_load_print_meta: n_embd_v_gqa     = 256
0.01.014.991 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.01.014.993 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.01.014.993 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.01.014.993 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.01.014.994 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.01.014.999 I llm_load_print_meta: n_ff             = 16384
0.01.014.999 I llm_load_print_meta: n_expert         = 0
0.01.015.000 I llm_load_print_meta: n_expert_used    = 0
0.01.015.000 I llm_load_print_meta: causal attn      = 1
0.01.015.000 I llm_load_print_meta: pooling type     = 0
0.01.015.001 I llm_load_print_meta: rope type        = 2
0.01.015.001 I llm_load_print_meta: rope scaling     = linear
0.01.015.002 I llm_load_print_meta: freq_base_train  = 10000.0
0.01.015.003 I llm_load_print_meta: freq_scale_train = 1
0.01.015.003 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.01.015.004 I llm_load_print_meta: rope_finetuned   = unknown
0.01.015.004 I llm_load_print_meta: ssm_d_conv       = 0
0.01.015.004 I llm_load_print_meta: ssm_d_inner      = 0
0.01.015.005 I llm_load_print_meta: ssm_d_state      = 0
0.01.015.005 I llm_load_print_meta: ssm_dt_rank      = 0
0.01.015.005 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.01.015.006 I llm_load_print_meta: model type       = 2B
0.01.015.007 I llm_load_print_meta: model ftype      = Q8_0
0.01.015.008 I llm_load_print_meta: model params     = 2.51 B
0.01.015.009 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.01.015.009 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.01.015.010 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.01.015.010 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.01.015.011 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.01.015.011 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.01.015.012 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.01.015.012 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.01.015.019 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.01.015.020 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.01.015.021 I llm_load_print_meta: max token length = 93
0.01.112.212 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.01.118.839 I llama_new_context_with_model: n_seq_max     = 1
0.01.118.847 I llama_new_context_with_model: n_ctx         = 4096
0.01.118.847 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.118.848 I llama_new_context_with_model: n_batch       = 2048
0.01.118.848 I llama_new_context_with_model: n_ubatch      = 512
0.01.118.849 I llama_new_context_with_model: flash_attn    = 0
0.01.118.851 I llama_new_context_with_model: freq_base     = 10000.0
0.01.118.852 I llama_new_context_with_model: freq_scale    = 1
0.01.118.853 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.134.968 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.135.013 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.135.139 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.137.781 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.137.785 I llama_new_context_with_model: graph nodes  = 601
0.01.137.785 I llama_new_context_with_model: graph splits = 1
0.01.137.809 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.764.584 I main: llama threadpool init, n_threads = 4
0.01.764.600 I 
0.01.764.741 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.764.746 I 
0.01.765.003 I sampler seed: 2222209489
0.01.765.019 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.765.035 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.765.036 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.765.037 I 
 seconary, 2005

**Exploring the Role of Media in Shaping Identity**

**Introduction**

The media plays a pervasive role in shaping

0.15.345.594 I llama_perf_sampler_print:    sampling time =      49.25 ms /    33 runs   (    1.49 ms per token,   670.06 tokens per second)
0.15.345.598 I llama_perf_context_print:        load time =    1763.46 ms
0.15.345.611 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.345.614 I llama_perf_context_print:        eval time =   13491.05 ms /    32 runs   (  421.60 ms per token,     2.37 tokens per second)
0.15.345.616 I llama_perf_context_print:       total time =   13581.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.685 I build: 4242 (642330ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.898 I main: llama backend init
0.00.000.908 I main: load the model and apply lora adapter, if any
0.00.023.530 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.544 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.650 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.664 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.666 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.673 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.679 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.681 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.683 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.686 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.688 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.696 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.701 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.703 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.706 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.709 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.225.405 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.327.627 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.351.132 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.351.145 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.351.146 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.351.147 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.351.149 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.351.150 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.351.152 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.351.156 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.351.157 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.351.158 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.351.159 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.351.161 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.351.171 I llama_model_loader: - type  f32:   37 tensors
0.00.351.174 I llama_model_loader: - type q8_0:  127 tensors
0.00.626.842 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.755.475 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.756.503 I llm_load_vocab: special tokens cache size = 5
0.00.952.481 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.952.558 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.952.559 I llm_load_print_meta: arch             = gemma
0.00.952.560 I llm_load_print_meta: vocab type       = SPM
0.00.952.561 I llm_load_print_meta: n_vocab          = 256000
0.00.952.563 I llm_load_print_meta: n_merges         = 0
0.00.952.564 I llm_load_print_meta: vocab_only       = 0
0.00.952.564 I llm_load_print_meta: n_ctx_train      = 8192
0.00.952.564 I llm_load_print_meta: n_embd           = 2048
0.00.952.565 I llm_load_print_meta: n_layer          = 18
0.00.952.630 I llm_load_print_meta: n_head           = 8
0.00.952.637 I llm_load_print_meta: n_head_kv        = 1
0.00.952.638 I llm_load_print_meta: n_rot            = 256
0.00.952.638 I llm_load_print_meta: n_swa            = 0
0.00.952.639 I llm_load_print_meta: n_embd_head_k    = 256
0.00.952.639 I llm_load_print_meta: n_embd_head_v    = 256
0.00.952.644 I llm_load_print_meta: n_gqa            = 8
0.00.952.649 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.952.654 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.952.657 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.952.659 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.952.659 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.952.660 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.952.672 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.952.677 I llm_load_print_meta: n_ff             = 16384
0.00.952.678 I llm_load_print_meta: n_expert         = 0
0.00.952.678 I llm_load_print_meta: n_expert_used    = 0
0.00.952.679 I llm_load_print_meta: causal attn      = 1
0.00.952.683 I llm_load_print_meta: pooling type     = 0
0.00.952.684 I llm_load_print_meta: rope type        = 2
0.00.952.684 I llm_load_print_meta: rope scaling     = linear
0.00.952.685 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.952.687 I llm_load_print_meta: freq_scale_train = 1
0.00.952.687 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.952.687 I llm_load_print_meta: rope_finetuned   = unknown
0.00.952.688 I llm_load_print_meta: ssm_d_conv       = 0
0.00.952.688 I llm_load_print_meta: ssm_d_inner      = 0
0.00.952.706 I llm_load_print_meta: ssm_d_state      = 0
0.00.952.709 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.952.710 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.952.711 I llm_load_print_meta: model type       = 2B
0.00.952.712 I llm_load_print_meta: model ftype      = Q8_0
0.00.952.713 I llm_load_print_meta: model params     = 2.51 B
0.00.952.714 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.952.714 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.952.716 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.952.716 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.952.717 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.952.718 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.952.718 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.952.719 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.952.725 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.952.727 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.952.727 I llm_load_print_meta: max token length = 93
0.01.029.961 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.01.029.975 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.01.029.975 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.01.029.976 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.01.029.977 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.01.029.977 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.01.036.355 I llama_new_context_with_model: n_seq_max     = 1
0.01.036.365 I llama_new_context_with_model: n_ctx         = 4096
0.01.036.365 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.036.365 I llama_new_context_with_model: n_batch       = 2048
0.01.036.366 I llama_new_context_with_model: n_ubatch      = 512
0.01.036.366 I llama_new_context_with_model: flash_attn    = 0
0.01.036.371 I llama_new_context_with_model: freq_base     = 10000.0
0.01.036.371 I llama_new_context_with_model: freq_scale    = 1
0.01.036.372 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.051.323 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.051.364 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.051.490 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.054.136 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.054.141 I llama_new_context_with_model: graph nodes  = 601
0.01.054.141 I llama_new_context_with_model: graph splits = 1
0.01.054.164 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.663.688 I main: llama threadpool init, n_threads = 4
0.01.663.707 I 
0.01.663.844 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.663.849 I 
0.01.664.099 I sampler seed: 3172360320
0.01.664.113 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.664.143 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.664.149 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.664.149 I 
 increably. 

**Assistant**

I understand. I will assist you with the request. [end of text]


0.10.601.130 I llama_perf_sampler_print:    sampling time =      32.35 ms /    22 runs   (    1.47 ms per token,   680.00 tokens per second)
0.10.601.133 I llama_perf_context_print:        load time =    1662.65 ms
0.10.601.145 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.601.147 I llama_perf_context_print:        eval time =    8877.35 ms /    21 runs   (  422.73 ms per token,     2.37 tokens per second)
0.10.601.149 I llama_perf_context_print:       total time =    8937.45 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.659 I build: 4242 (642330ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.870 I main: llama backend init
0.00.000.878 I main: load the model and apply lora adapter, if any
0.00.023.573 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.583 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.686 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.699 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.701 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.708 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.709 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.710 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.712 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.713 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.715 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.728 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.731 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.733 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.735 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.737 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.225.109 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.328.056 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.351.320 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.351.332 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.351.333 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.351.334 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.351.336 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.351.338 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.351.339 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.351.357 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.351.363 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.351.364 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.351.366 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.351.368 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.351.379 I llama_model_loader: - type  f32:   37 tensors
0.00.351.383 I llama_model_loader: - type q8_0:  127 tensors
0.00.646.654 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.778.002 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.779.116 I llm_load_vocab: special tokens cache size = 5
0.00.966.558 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.966.635 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.966.636 I llm_load_print_meta: arch             = gemma
0.00.966.637 I llm_load_print_meta: vocab type       = SPM
0.00.966.638 I llm_load_print_meta: n_vocab          = 256000
0.00.966.641 I llm_load_print_meta: n_merges         = 0
0.00.966.641 I llm_load_print_meta: vocab_only       = 0
0.00.966.641 I llm_load_print_meta: n_ctx_train      = 8192
0.00.966.642 I llm_load_print_meta: n_embd           = 2048
0.00.966.642 I llm_load_print_meta: n_layer          = 18
0.00.966.718 I llm_load_print_meta: n_head           = 8
0.00.966.726 I llm_load_print_meta: n_head_kv        = 1
0.00.966.726 I llm_load_print_meta: n_rot            = 256
0.00.966.727 I llm_load_print_meta: n_swa            = 0
0.00.966.728 I llm_load_print_meta: n_embd_head_k    = 256
0.00.966.728 I llm_load_print_meta: n_embd_head_v    = 256
0.00.966.733 I llm_load_print_meta: n_gqa            = 8
0.00.966.738 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.966.744 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.966.746 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.966.748 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.966.749 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.966.755 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.966.756 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.966.763 I llm_load_print_meta: n_ff             = 16384
0.00.966.764 I llm_load_print_meta: n_expert         = 0
0.00.966.764 I llm_load_print_meta: n_expert_used    = 0
0.00.966.766 I llm_load_print_meta: causal attn      = 1
0.00.966.767 I llm_load_print_meta: pooling type     = 0
0.00.966.768 I llm_load_print_meta: rope type        = 2
0.00.966.768 I llm_load_print_meta: rope scaling     = linear
0.00.966.771 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.966.772 I llm_load_print_meta: freq_scale_train = 1
0.00.966.772 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.966.773 I llm_load_print_meta: rope_finetuned   = unknown
0.00.966.774 I llm_load_print_meta: ssm_d_conv       = 0
0.00.966.775 I llm_load_print_meta: ssm_d_inner      = 0
0.00.966.775 I llm_load_print_meta: ssm_d_state      = 0
0.00.966.776 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.966.777 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.966.788 I llm_load_print_meta: model type       = 2B
0.00.966.790 I llm_load_print_meta: model ftype      = Q8_0
0.00.966.791 I llm_load_print_meta: model params     = 2.51 B
0.00.966.793 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.966.794 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.966.795 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.966.797 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.966.798 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.966.799 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.966.813 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.966.815 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.966.823 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.966.825 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.966.826 I llm_load_print_meta: max token length = 93
0.01.040.128 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.01.040.139 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.01.046.215 I llama_new_context_with_model: n_seq_max     = 1
0.01.046.223 I llama_new_context_with_model: n_ctx         = 4096
0.01.046.223 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.046.224 I llama_new_context_with_model: n_batch       = 2048
0.01.046.224 I llama_new_context_with_model: n_ubatch      = 512
0.01.046.225 I llama_new_context_with_model: flash_attn    = 0
0.01.046.227 I llama_new_context_with_model: freq_base     = 10000.0
0.01.046.228 I llama_new_context_with_model: freq_scale    = 1
0.01.046.229 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.061.409 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.061.451 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.061.578 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.064.201 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.064.205 I llama_new_context_with_model: graph nodes  = 601
0.01.064.205 I llama_new_context_with_model: graph splits = 1
0.01.064.231 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.673.215 I main: llama threadpool init, n_threads = 4
0.01.673.231 I 
0.01.673.368 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.673.373 I 
0.01.673.619 I sampler seed: 1301112962
0.01.673.634 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.673.645 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.673.646 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.673.668 I 
 maneurors and other small boats.

The sea around the Isle of Skye is teeming with wildlife, from majestic whales and dolphins to playful seals and seabirds.

0.15.387.684 I llama_perf_sampler_print:    sampling time =      49.47 ms /    33 runs   (    1.50 ms per token,   667.03 tokens per second)
0.15.387.688 I llama_perf_context_print:        load time =    1672.23 ms
0.15.387.689 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.387.691 I llama_perf_context_print:        eval time =   13624.20 ms /    32 runs   (  425.76 ms per token,     2.35 tokens per second)
0.15.387.693 I llama_perf_context_print:       total time =   13714.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m6.581s
user	3m33.913s
sys	0m9.591s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4242 (642330ac)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186934.56 ms
main:    total time = 186934.56 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.679 I build: 4242 (642330ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.877 I main: llama backend init
0.00.000.885 I main: load the model and apply lora adapter, if any
0.00.023.751 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.761 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.865 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.880 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.885 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.893 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.897 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.898 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.900 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.901 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.902 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.914 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.915 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.917 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.918 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.920 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.227.347 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.330.282 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.353.477 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.353.491 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.353.493 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.353.494 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.353.495 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.353.497 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.353.498 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.353.502 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.353.504 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.353.505 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.353.506 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.353.508 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.353.517 I llama_model_loader: - type  f32:   37 tensors
0.00.353.520 I llama_model_loader: - type q4_K:  108 tensors
0.00.353.521 I llama_model_loader: - type q6_K:   19 tensors
0.00.646.343 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.777.951 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.779.052 I llm_load_vocab: special tokens cache size = 5
0.00.976.025 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.976.098 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.976.099 I llm_load_print_meta: arch             = gemma
0.00.976.100 I llm_load_print_meta: vocab type       = SPM
0.00.976.100 I llm_load_print_meta: n_vocab          = 256000
0.00.976.103 I llm_load_print_meta: n_merges         = 0
0.00.976.103 I llm_load_print_meta: vocab_only       = 0
0.00.976.104 I llm_load_print_meta: n_ctx_train      = 8192
0.00.976.104 I llm_load_print_meta: n_embd           = 2048
0.00.976.105 I llm_load_print_meta: n_layer          = 18
0.00.976.168 I llm_load_print_meta: n_head           = 8
0.00.976.175 I llm_load_print_meta: n_head_kv        = 1
0.00.976.176 I llm_load_print_meta: n_rot            = 256
0.00.976.176 I llm_load_print_meta: n_swa            = 0
0.00.976.177 I llm_load_print_meta: n_embd_head_k    = 256
0.00.976.178 I llm_load_print_meta: n_embd_head_v    = 256
0.00.976.182 I llm_load_print_meta: n_gqa            = 8
0.00.976.187 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.976.193 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.976.195 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.976.197 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.976.197 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.976.198 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.976.209 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.976.220 I llm_load_print_meta: n_ff             = 16384
0.00.976.224 I llm_load_print_meta: n_expert         = 0
0.00.976.224 I llm_load_print_meta: n_expert_used    = 0
0.00.976.225 I llm_load_print_meta: causal attn      = 1
0.00.976.225 I llm_load_print_meta: pooling type     = 0
0.00.976.225 I llm_load_print_meta: rope type        = 2
0.00.976.226 I llm_load_print_meta: rope scaling     = linear
0.00.976.227 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.976.228 I llm_load_print_meta: freq_scale_train = 1
0.00.976.228 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.976.228 I llm_load_print_meta: rope_finetuned   = unknown
0.00.976.229 I llm_load_print_meta: ssm_d_conv       = 0
0.00.976.229 I llm_load_print_meta: ssm_d_inner      = 0
0.00.976.229 I llm_load_print_meta: ssm_d_state      = 0
0.00.976.229 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.976.230 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.976.230 I llm_load_print_meta: model type       = 2B
0.00.976.232 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.976.232 I llm_load_print_meta: model params     = 2.51 B
0.00.976.233 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.976.234 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.976.235 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.976.235 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.976.236 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.976.246 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.976.247 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.976.248 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.976.254 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.976.256 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.976.256 I llm_load_print_meta: max token length = 93
0.01.037.197 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.01.037.208 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.01.037.209 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.01.037.209 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.01.037.210 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.01.037.211 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.01.042.989 I llama_new_context_with_model: n_seq_max     = 1
0.01.042.996 I llama_new_context_with_model: n_ctx         = 4096
0.01.042.996 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.042.997 I llama_new_context_with_model: n_batch       = 2048
0.01.042.997 I llama_new_context_with_model: n_ubatch      = 512
0.01.042.998 I llama_new_context_with_model: flash_attn    = 0
0.01.043.001 I llama_new_context_with_model: freq_base     = 10000.0
0.01.043.002 I llama_new_context_with_model: freq_scale    = 1
0.01.043.002 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.057.937 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.057.978 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.058.098 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.060.646 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.060.650 I llama_new_context_with_model: graph nodes  = 601
0.01.060.651 I llama_new_context_with_model: graph splits = 1
0.01.060.672 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.649.549 I main: llama threadpool init, n_threads = 4
0.01.649.565 I 
0.01.649.688 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.649.693 I 
0.01.649.933 I sampler seed: 2392163630
0.01.649.947 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.649.958 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.649.959 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.649.960 I 
 increasities:

* "I am the one who has not yet begun to live."
* "I am the one who is about to begin to live

0.12.800.389 I llama_perf_sampler_print:    sampling time =      49.13 ms /    33 runs   (    1.49 ms per token,   671.69 tokens per second)
0.12.800.392 I llama_perf_context_print:        load time =    1648.55 ms
0.12.800.393 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.800.395 I llama_perf_context_print:        eval time =   11061.26 ms /    32 runs   (  345.66 ms per token,     2.89 tokens per second)
0.12.800.409 I llama_perf_context_print:       total time =   11150.85 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4242 (642330ac)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 187186.13 ms
main:    total time = 187186.13 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.646 I build: 4242 (642330ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.842 I main: llama backend init
0.00.000.850 I main: load the model and apply lora adapter, if any
0.00.023.335 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.439 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.452 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.457 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.463 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.466 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.468 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.469 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.471 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.472 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.479 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.480 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.481 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.482 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.484 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.228.687 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.331.324 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.354.441 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.354.451 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.354.453 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.354.454 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.354.456 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.354.457 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.354.459 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.354.463 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.354.465 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.354.472 I llama_model_loader: - type  f32:   37 tensors
0.00.354.475 I llama_model_loader: - type q4_K:  108 tensors
0.00.354.475 I llama_model_loader: - type q6_K:   19 tensors
0.00.639.668 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.767.289 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.768.236 I llm_load_vocab: special tokens cache size = 5
0.00.965.465 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.965.538 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.965.540 I llm_load_print_meta: arch             = gemma
0.00.965.540 I llm_load_print_meta: vocab type       = SPM
0.00.965.542 I llm_load_print_meta: n_vocab          = 256000
0.00.965.544 I llm_load_print_meta: n_merges         = 0
0.00.965.544 I llm_load_print_meta: vocab_only       = 0
0.00.965.545 I llm_load_print_meta: n_ctx_train      = 8192
0.00.965.545 I llm_load_print_meta: n_embd           = 2048
0.00.965.545 I llm_load_print_meta: n_layer          = 18
0.00.965.608 I llm_load_print_meta: n_head           = 8
0.00.965.616 I llm_load_print_meta: n_head_kv        = 1
0.00.965.616 I llm_load_print_meta: n_rot            = 256
0.00.965.617 I llm_load_print_meta: n_swa            = 0
0.00.965.617 I llm_load_print_meta: n_embd_head_k    = 256
0.00.965.617 I llm_load_print_meta: n_embd_head_v    = 256
0.00.965.622 I llm_load_print_meta: n_gqa            = 8
0.00.965.628 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.965.632 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.965.634 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.965.635 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.965.636 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.965.636 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.965.636 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.965.641 I llm_load_print_meta: n_ff             = 16384
0.00.965.642 I llm_load_print_meta: n_expert         = 0
0.00.965.642 I llm_load_print_meta: n_expert_used    = 0
0.00.965.642 I llm_load_print_meta: causal attn      = 1
0.00.965.643 I llm_load_print_meta: pooling type     = 0
0.00.965.643 I llm_load_print_meta: rope type        = 2
0.00.965.643 I llm_load_print_meta: rope scaling     = linear
0.00.965.645 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.965.645 I llm_load_print_meta: freq_scale_train = 1
0.00.965.646 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.965.646 I llm_load_print_meta: rope_finetuned   = unknown
0.00.965.646 I llm_load_print_meta: ssm_d_conv       = 0
0.00.965.647 I llm_load_print_meta: ssm_d_inner      = 0
0.00.965.647 I llm_load_print_meta: ssm_d_state      = 0
0.00.965.647 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.965.648 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.965.649 I llm_load_print_meta: model type       = 2B
0.00.965.649 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.965.651 I llm_load_print_meta: model params     = 2.51 B
0.00.965.652 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.965.652 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.965.653 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.965.654 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.965.654 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.965.655 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.965.655 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.965.656 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.965.665 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.965.677 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.965.678 I llm_load_print_meta: max token length = 93
0.01.023.572 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.01.029.374 I llama_new_context_with_model: n_seq_max     = 1
0.01.029.382 I llama_new_context_with_model: n_ctx         = 4096
0.01.029.382 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.029.383 I llama_new_context_with_model: n_batch       = 2048
0.01.029.383 I llama_new_context_with_model: n_ubatch      = 512
0.01.029.384 I llama_new_context_with_model: flash_attn    = 0
0.01.029.387 I llama_new_context_with_model: freq_base     = 10000.0
0.01.029.387 I llama_new_context_with_model: freq_scale    = 1
0.01.029.388 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.044.420 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.044.462 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.044.581 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.047.053 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.047.058 I llama_new_context_with_model: graph nodes  = 601
0.01.047.059 I llama_new_context_with_model: graph splits = 1
0.01.047.082 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.633.010 I main: llama threadpool init, n_threads = 4
0.01.633.026 I 
0.01.633.146 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.633.150 I 
0.01.633.388 I sampler seed: 1142552236
0.01.633.402 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.633.412 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.633.413 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.633.414 I 
 seconded arms around the shoulders of a seated woman. Her face was a mask of concentration, her brow furrowed in frustration. The scene was one of a long

0.12.774.968 I llama_perf_sampler_print:    sampling time =      49.34 ms /    33 runs   (    1.50 ms per token,   668.83 tokens per second)
0.12.774.985 I llama_perf_context_print:        load time =    1632.06 ms
0.12.774.987 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.774.988 I llama_perf_context_print:        eval time =   11053.35 ms /    32 runs   (  345.42 ms per token,     2.90 tokens per second)
0.12.774.989 I llama_perf_context_print:       total time =   11141.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m42.643s
user	46m50.450s
sys	0m6.385s
