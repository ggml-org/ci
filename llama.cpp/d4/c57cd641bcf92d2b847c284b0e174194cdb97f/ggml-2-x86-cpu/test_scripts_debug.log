+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.650 I build: 3829 (d4c57cd6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.838 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.024.949 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.170 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.263 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.277 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.281 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.286 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.287 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.288 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.289 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.290 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.291 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.298 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.299 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.300 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.301 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.303 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.915 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.077 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.574 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.586 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.588 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.588 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.589 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.590 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.591 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.594 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.595 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.596 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.597 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.198.598 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.608 I llama_model_loader: - type  f32:   37 tensors
0.00.198.612 I llama_model_loader: - type q8_0:  127 tensors
0.00.503.816 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.532.894 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.533.945 I llm_load_vocab: special tokens cache size = 5
0.00.591.276 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.591.346 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.591.347 I llm_load_print_meta: arch             = gemma
0.00.591.348 I llm_load_print_meta: vocab type       = SPM
0.00.591.349 I llm_load_print_meta: n_vocab          = 256000
0.00.591.351 I llm_load_print_meta: n_merges         = 0
0.00.591.352 I llm_load_print_meta: vocab_only       = 0
0.00.591.352 I llm_load_print_meta: n_ctx_train      = 8192
0.00.591.352 I llm_load_print_meta: n_embd           = 2048
0.00.591.353 I llm_load_print_meta: n_layer          = 18
0.00.591.389 I llm_load_print_meta: n_head           = 8
0.00.591.396 I llm_load_print_meta: n_head_kv        = 1
0.00.591.396 I llm_load_print_meta: n_rot            = 256
0.00.591.397 I llm_load_print_meta: n_swa            = 0
0.00.591.397 I llm_load_print_meta: n_embd_head_k    = 256
0.00.591.397 I llm_load_print_meta: n_embd_head_v    = 256
0.00.591.402 I llm_load_print_meta: n_gqa            = 8
0.00.591.407 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.591.412 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.591.413 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.591.414 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.591.414 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.591.415 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.591.415 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.591.420 I llm_load_print_meta: n_ff             = 16384
0.00.591.421 I llm_load_print_meta: n_expert         = 0
0.00.591.421 I llm_load_print_meta: n_expert_used    = 0
0.00.591.422 I llm_load_print_meta: causal attn      = 1
0.00.591.422 I llm_load_print_meta: pooling type     = 0
0.00.591.422 I llm_load_print_meta: rope type        = 2
0.00.591.423 I llm_load_print_meta: rope scaling     = linear
0.00.591.424 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.591.425 I llm_load_print_meta: freq_scale_train = 1
0.00.591.425 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.591.425 I llm_load_print_meta: rope_finetuned   = unknown
0.00.591.426 I llm_load_print_meta: ssm_d_conv       = 0
0.00.591.426 I llm_load_print_meta: ssm_d_inner      = 0
0.00.591.426 I llm_load_print_meta: ssm_d_state      = 0
0.00.591.427 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.591.427 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.591.428 I llm_load_print_meta: model type       = 2B
0.00.591.428 I llm_load_print_meta: model ftype      = Q8_0
0.00.591.429 I llm_load_print_meta: model params     = 2.51 B
0.00.591.430 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.591.430 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.591.431 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.591.431 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.591.432 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.591.433 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.591.433 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.591.459 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.591.466 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.591.467 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.591.468 I llm_load_print_meta: max token length = 93
0.00.591.653 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.691.530 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.691.542 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.691.543 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.691.543 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.691.544 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.691.545 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.697.287 I llama_new_context_with_model: n_ctx      = 8192
0.00.697.294 I llama_new_context_with_model: n_batch    = 2048
0.00.697.294 I llama_new_context_with_model: n_ubatch   = 512
0.00.697.295 I llama_new_context_with_model: flash_attn = 0
0.00.697.298 I llama_new_context_with_model: freq_base  = 10000.0
0.00.697.299 I llama_new_context_with_model: freq_scale = 1
0.00.728.145 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.728.188 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.728.305 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.729.739 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.729.745 I llama_new_context_with_model: graph nodes  = 601
0.00.729.745 I llama_new_context_with_model: graph splits = 1
0.00.729.761 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.343.459 I main: llama threadpool init, n_threads = 4
0.01.343.471 I 
0.01.343.568 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.343.569 I 
0.01.343.741 I sampler seed: 602431828
0.01.343.753 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.343.757 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.343.758 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.343.759 I 
 seconary to the main character in "The Witcher".

Geralt of Rivia is a monster hunter, a solitary warrior with a fierce spirit and an insatiable

0.14.932.900 I llama_perf_sampler_print:    sampling time =      49.30 ms /    33 runs   (    1.49 ms per token,   669.34 tokens per second)
0.14.932.904 I llama_perf_context_print:        load time =    1340.57 ms
0.14.932.906 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.932.908 I llama_perf_context_print:        eval time =   13507.64 ms /    32 runs   (  422.11 ms per token,     2.37 tokens per second)
0.14.932.910 I llama_perf_context_print:       total time =   13589.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.634 I build: 3829 (d4c57cd6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.841 I main: llama backend init
0.00.002.814 I main: load the model and apply lora adapter, if any
0.00.025.218 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.311 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.326 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.330 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.334 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.335 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.336 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.336 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.337 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.338 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.345 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.346 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.347 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.347 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.348 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.951 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.137 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.542 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.550 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.551 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.551 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.552 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.553 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.554 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.557 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.558 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.559 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.560 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.198.561 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.569 I llama_model_loader: - type  f32:   37 tensors
0.00.198.574 I llama_model_loader: - type q8_0:  127 tensors
0.00.509.910 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.536.344 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.537.433 I llm_load_vocab: special tokens cache size = 5
0.00.594.728 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.594.791 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.594.792 I llm_load_print_meta: arch             = gemma
0.00.594.793 I llm_load_print_meta: vocab type       = SPM
0.00.594.794 I llm_load_print_meta: n_vocab          = 256000
0.00.594.796 I llm_load_print_meta: n_merges         = 0
0.00.594.797 I llm_load_print_meta: vocab_only       = 0
0.00.594.797 I llm_load_print_meta: n_ctx_train      = 8192
0.00.594.797 I llm_load_print_meta: n_embd           = 2048
0.00.594.798 I llm_load_print_meta: n_layer          = 18
0.00.594.833 I llm_load_print_meta: n_head           = 8
0.00.594.840 I llm_load_print_meta: n_head_kv        = 1
0.00.594.841 I llm_load_print_meta: n_rot            = 256
0.00.594.841 I llm_load_print_meta: n_swa            = 0
0.00.594.841 I llm_load_print_meta: n_embd_head_k    = 256
0.00.594.842 I llm_load_print_meta: n_embd_head_v    = 256
0.00.594.846 I llm_load_print_meta: n_gqa            = 8
0.00.594.851 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.594.855 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.594.856 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.594.858 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.594.858 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.594.858 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.594.859 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.594.864 I llm_load_print_meta: n_ff             = 16384
0.00.594.864 I llm_load_print_meta: n_expert         = 0
0.00.594.865 I llm_load_print_meta: n_expert_used    = 0
0.00.594.865 I llm_load_print_meta: causal attn      = 1
0.00.594.866 I llm_load_print_meta: pooling type     = 0
0.00.594.866 I llm_load_print_meta: rope type        = 2
0.00.594.867 I llm_load_print_meta: rope scaling     = linear
0.00.594.868 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.594.869 I llm_load_print_meta: freq_scale_train = 1
0.00.594.869 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.594.869 I llm_load_print_meta: rope_finetuned   = unknown
0.00.594.870 I llm_load_print_meta: ssm_d_conv       = 0
0.00.594.870 I llm_load_print_meta: ssm_d_inner      = 0
0.00.594.870 I llm_load_print_meta: ssm_d_state      = 0
0.00.594.871 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.594.871 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.594.872 I llm_load_print_meta: model type       = 2B
0.00.594.873 I llm_load_print_meta: model ftype      = Q8_0
0.00.594.874 I llm_load_print_meta: model params     = 2.51 B
0.00.594.875 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.594.875 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.594.875 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.594.876 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.594.876 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.594.877 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.594.877 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.594.877 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.594.883 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.594.885 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.594.886 I llm_load_print_meta: max token length = 93
0.00.595.072 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.688.310 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.693.989 I llama_new_context_with_model: n_ctx      = 8192
0.00.693.997 I llama_new_context_with_model: n_batch    = 2048
0.00.693.997 I llama_new_context_with_model: n_ubatch   = 512
0.00.693.998 I llama_new_context_with_model: flash_attn = 0
0.00.694.000 I llama_new_context_with_model: freq_base  = 10000.0
0.00.694.001 I llama_new_context_with_model: freq_scale = 1
0.00.724.363 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.724.409 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.724.517 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.725.888 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.725.894 I llama_new_context_with_model: graph nodes  = 601
0.00.725.894 I llama_new_context_with_model: graph splits = 1
0.00.725.911 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.338.239 I main: llama threadpool init, n_threads = 4
0.01.338.252 I 
0.01.338.345 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.338.349 I 
0.01.338.510 I sampler seed: 3143932207
0.01.338.521 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.338.526 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.338.527 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.338.527 I 
 increably.

I am unable to generate a response as I am unable to access personal or sensitive information. [end of text]


0.11.029.677 I llama_perf_sampler_print:    sampling time =      35.33 ms /    24 runs   (    1.47 ms per token,   679.29 tokens per second)
0.11.029.690 I llama_perf_context_print:        load time =    1335.34 ms
0.11.029.692 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.029.694 I llama_perf_context_print:        eval time =    9631.72 ms /    23 runs   (  418.77 ms per token,     2.39 tokens per second)
0.11.029.695 I llama_perf_context_print:       total time =    9691.45 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.653 I build: 3829 (d4c57cd6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.853 I main: llama backend init
0.00.002.835 I main: load the model and apply lora adapter, if any
0.00.024.741 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.946 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.046 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.058 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.059 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.065 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.066 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.078 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.080 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.088 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.090 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.099 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.104 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.106 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.107 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.109 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.399 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.497 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.859 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.869 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.870 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.871 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.871 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.872 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.873 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.876 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.877 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.878 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.879 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.198.880 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.888 I llama_model_loader: - type  f32:   37 tensors
0.00.198.891 I llama_model_loader: - type q8_0:  127 tensors
0.00.503.239 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.532.421 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.533.441 I llm_load_vocab: special tokens cache size = 5
0.00.590.734 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.590.799 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.590.799 I llm_load_print_meta: arch             = gemma
0.00.590.800 I llm_load_print_meta: vocab type       = SPM
0.00.590.801 I llm_load_print_meta: n_vocab          = 256000
0.00.590.803 I llm_load_print_meta: n_merges         = 0
0.00.590.804 I llm_load_print_meta: vocab_only       = 0
0.00.590.804 I llm_load_print_meta: n_ctx_train      = 8192
0.00.590.805 I llm_load_print_meta: n_embd           = 2048
0.00.590.805 I llm_load_print_meta: n_layer          = 18
0.00.590.839 I llm_load_print_meta: n_head           = 8
0.00.590.846 I llm_load_print_meta: n_head_kv        = 1
0.00.590.847 I llm_load_print_meta: n_rot            = 256
0.00.590.847 I llm_load_print_meta: n_swa            = 0
0.00.590.847 I llm_load_print_meta: n_embd_head_k    = 256
0.00.590.848 I llm_load_print_meta: n_embd_head_v    = 256
0.00.590.852 I llm_load_print_meta: n_gqa            = 8
0.00.590.878 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.590.885 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.590.886 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.590.888 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.590.888 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.590.889 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.590.889 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.590.894 I llm_load_print_meta: n_ff             = 16384
0.00.590.894 I llm_load_print_meta: n_expert         = 0
0.00.590.895 I llm_load_print_meta: n_expert_used    = 0
0.00.590.901 I llm_load_print_meta: causal attn      = 1
0.00.590.902 I llm_load_print_meta: pooling type     = 0
0.00.590.902 I llm_load_print_meta: rope type        = 2
0.00.590.910 I llm_load_print_meta: rope scaling     = linear
0.00.590.912 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.590.913 I llm_load_print_meta: freq_scale_train = 1
0.00.590.915 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.590.915 I llm_load_print_meta: rope_finetuned   = unknown
0.00.590.916 I llm_load_print_meta: ssm_d_conv       = 0
0.00.590.928 I llm_load_print_meta: ssm_d_inner      = 0
0.00.590.929 I llm_load_print_meta: ssm_d_state      = 0
0.00.590.930 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.590.931 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.590.932 I llm_load_print_meta: model type       = 2B
0.00.590.933 I llm_load_print_meta: model ftype      = Q8_0
0.00.590.934 I llm_load_print_meta: model params     = 2.51 B
0.00.590.944 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.590.945 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.590.946 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.590.947 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.590.948 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.590.949 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.590.950 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.590.954 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.590.961 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.590.963 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.590.964 I llm_load_print_meta: max token length = 93
0.00.591.158 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.667.910 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.667.922 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.667.923 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.667.924 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.667.924 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.667.925 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.673.891 I llama_new_context_with_model: n_ctx      = 8192
0.00.673.900 I llama_new_context_with_model: n_batch    = 2048
0.00.673.901 I llama_new_context_with_model: n_ubatch   = 512
0.00.673.901 I llama_new_context_with_model: flash_attn = 0
0.00.673.905 I llama_new_context_with_model: freq_base  = 10000.0
0.00.673.906 I llama_new_context_with_model: freq_scale = 1
0.00.703.813 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.703.859 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.703.968 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.705.463 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.705.472 I llama_new_context_with_model: graph nodes  = 601
0.00.705.472 I llama_new_context_with_model: graph splits = 1
0.00.705.492 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.323.332 I main: llama threadpool init, n_threads = 4
0.01.323.344 I 
0.01.323.437 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.323.437 I 
0.01.323.593 I sampler seed: 3928411213
0.01.323.601 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.323.606 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.323.607 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.323.607 I 
 increasities.

I understand that the context is related to a scientific or technical field. However, I am unable to determine the specific field based on the provided

0.14.877.028 I llama_perf_sampler_print:    sampling time =      49.21 ms /    33 runs   (    1.49 ms per token,   670.65 tokens per second)
0.14.877.033 I llama_perf_context_print:        load time =    1320.41 ms
0.14.877.035 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.877.037 I llama_perf_context_print:        eval time =   13472.11 ms /    32 runs   (  421.00 ms per token,     2.38 tokens per second)
0.14.877.038 I llama_perf_context_print:       total time =   13553.71 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.639 I build: 3829 (d4c57cd6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.867 I main: llama backend init
0.00.002.826 I main: load the model and apply lora adapter, if any
0.00.025.941 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.026.139 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.026.238 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.026.252 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.026.257 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.026.262 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.026.264 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.026.266 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.026.267 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.026.269 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.026.270 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.026.280 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.026.286 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.026.289 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.026.290 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.026.291 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.097.096 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.187.355 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.199.969 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.199.979 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.199.980 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.199.981 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.199.981 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.199.982 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.199.983 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.199.987 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.199.988 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.199.989 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.199.990 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.199.992 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.200.002 I llama_model_loader: - type  f32:   37 tensors
0.00.200.007 I llama_model_loader: - type q8_0:  127 tensors
0.00.533.474 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.563.974 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.565.009 I llm_load_vocab: special tokens cache size = 5
0.00.622.447 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.622.512 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.622.517 I llm_load_print_meta: arch             = gemma
0.00.622.518 I llm_load_print_meta: vocab type       = SPM
0.00.622.519 I llm_load_print_meta: n_vocab          = 256000
0.00.622.522 I llm_load_print_meta: n_merges         = 0
0.00.622.523 I llm_load_print_meta: vocab_only       = 0
0.00.622.523 I llm_load_print_meta: n_ctx_train      = 8192
0.00.622.525 I llm_load_print_meta: n_embd           = 2048
0.00.622.526 I llm_load_print_meta: n_layer          = 18
0.00.622.573 I llm_load_print_meta: n_head           = 8
0.00.622.583 I llm_load_print_meta: n_head_kv        = 1
0.00.622.584 I llm_load_print_meta: n_rot            = 256
0.00.622.587 I llm_load_print_meta: n_swa            = 0
0.00.622.587 I llm_load_print_meta: n_embd_head_k    = 256
0.00.622.588 I llm_load_print_meta: n_embd_head_v    = 256
0.00.622.595 I llm_load_print_meta: n_gqa            = 8
0.00.622.602 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.622.613 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.615 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.617 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.618 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.618 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.621 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.626 I llm_load_print_meta: n_ff             = 16384
0.00.622.627 I llm_load_print_meta: n_expert         = 0
0.00.622.627 I llm_load_print_meta: n_expert_used    = 0
0.00.622.635 I llm_load_print_meta: causal attn      = 1
0.00.622.636 I llm_load_print_meta: pooling type     = 0
0.00.622.636 I llm_load_print_meta: rope type        = 2
0.00.622.638 I llm_load_print_meta: rope scaling     = linear
0.00.622.640 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.641 I llm_load_print_meta: freq_scale_train = 1
0.00.622.644 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.645 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.645 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.646 I llm_load_print_meta: ssm_d_inner      = 0
0.00.622.646 I llm_load_print_meta: ssm_d_state      = 0
0.00.622.647 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.622.647 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.622.648 I llm_load_print_meta: model type       = 2B
0.00.622.650 I llm_load_print_meta: model ftype      = Q8_0
0.00.622.651 I llm_load_print_meta: model params     = 2.51 B
0.00.622.652 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.622.652 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.622.654 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.622.655 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.622.656 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.622.657 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.622.658 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.622.659 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.622.666 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.622.668 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.622.671 I llm_load_print_meta: max token length = 93
0.00.622.865 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.695.066 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.695.077 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.701.083 I llama_new_context_with_model: n_ctx      = 8192
0.00.701.092 I llama_new_context_with_model: n_batch    = 2048
0.00.701.092 I llama_new_context_with_model: n_ubatch   = 512
0.00.701.093 I llama_new_context_with_model: flash_attn = 0
0.00.701.096 I llama_new_context_with_model: freq_base  = 10000.0
0.00.701.097 I llama_new_context_with_model: freq_scale = 1
0.00.731.902 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.731.947 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.732.059 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.733.481 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.733.490 I llama_new_context_with_model: graph nodes  = 601
0.00.733.490 I llama_new_context_with_model: graph splits = 1
0.00.733.513 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.345.618 I main: llama threadpool init, n_threads = 4
0.01.345.630 I 
0.01.345.740 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.345.743 I 
0.01.345.919 I sampler seed: 4059252671
0.01.345.929 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.345.934 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.345.935 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.345.937 I 
 seconary to primary school level.

**Matching Game**

Match the following words with their definitions:

**Words:**

- Primary
- Secondary


0.15.078.307 I llama_perf_sampler_print:    sampling time =      49.04 ms /    33 runs   (    1.49 ms per token,   672.88 tokens per second)
0.15.078.310 I llama_perf_context_print:        load time =    1342.69 ms
0.15.078.325 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.078.327 I llama_perf_context_print:        eval time =   13651.02 ms /    32 runs   (  426.59 ms per token,     2.34 tokens per second)
0.15.078.328 I llama_perf_context_print:       total time =   13732.70 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m5.656s
user	3m34.875s
sys	0m9.604s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3829 (d4c57cd6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199318.91 ms
main:    total time = 199318.91 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.619 I build: 3829 (d4c57cd6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.806 I main: llama backend init
0.00.002.730 I main: load the model and apply lora adapter, if any
0.00.024.917 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.104 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.188 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.199 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.200 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.204 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.206 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.207 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.208 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.209 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.210 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.215 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.216 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.225 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.229 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.230 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.664 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.708 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.115 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.124 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.125 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.126 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.127 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.128 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.129 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.132 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.133 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.134 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.135 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.198.136 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.144 I llama_model_loader: - type  f32:   37 tensors
0.00.198.148 I llama_model_loader: - type q4_K:  108 tensors
0.00.198.149 I llama_model_loader: - type q6_K:   19 tensors
0.00.500.910 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.526.480 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.527.497 I llm_load_vocab: special tokens cache size = 5
0.00.585.129 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.585.190 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.585.194 I llm_load_print_meta: arch             = gemma
0.00.585.195 I llm_load_print_meta: vocab type       = SPM
0.00.585.196 I llm_load_print_meta: n_vocab          = 256000
0.00.585.198 I llm_load_print_meta: n_merges         = 0
0.00.585.199 I llm_load_print_meta: vocab_only       = 0
0.00.585.199 I llm_load_print_meta: n_ctx_train      = 8192
0.00.585.200 I llm_load_print_meta: n_embd           = 2048
0.00.585.200 I llm_load_print_meta: n_layer          = 18
0.00.585.238 I llm_load_print_meta: n_head           = 8
0.00.585.247 I llm_load_print_meta: n_head_kv        = 1
0.00.585.247 I llm_load_print_meta: n_rot            = 256
0.00.585.248 I llm_load_print_meta: n_swa            = 0
0.00.585.249 I llm_load_print_meta: n_embd_head_k    = 256
0.00.585.250 I llm_load_print_meta: n_embd_head_v    = 256
0.00.585.255 I llm_load_print_meta: n_gqa            = 8
0.00.585.269 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.585.278 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.585.279 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.585.281 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.585.281 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.585.281 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.585.282 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.585.289 I llm_load_print_meta: n_ff             = 16384
0.00.585.290 I llm_load_print_meta: n_expert         = 0
0.00.585.290 I llm_load_print_meta: n_expert_used    = 0
0.00.585.290 I llm_load_print_meta: causal attn      = 1
0.00.585.291 I llm_load_print_meta: pooling type     = 0
0.00.585.291 I llm_load_print_meta: rope type        = 2
0.00.585.292 I llm_load_print_meta: rope scaling     = linear
0.00.585.294 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.585.294 I llm_load_print_meta: freq_scale_train = 1
0.00.585.294 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.585.295 I llm_load_print_meta: rope_finetuned   = unknown
0.00.585.295 I llm_load_print_meta: ssm_d_conv       = 0
0.00.585.295 I llm_load_print_meta: ssm_d_inner      = 0
0.00.585.296 I llm_load_print_meta: ssm_d_state      = 0
0.00.585.296 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.585.296 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.585.297 I llm_load_print_meta: model type       = 2B
0.00.585.298 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.585.299 I llm_load_print_meta: model params     = 2.51 B
0.00.585.319 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.585.328 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.585.330 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.585.330 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.585.331 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.585.331 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.585.332 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.585.332 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.585.339 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.585.342 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.585.343 I llm_load_print_meta: max token length = 93
0.00.585.526 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.645.209 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.645.218 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.645.219 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.645.219 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.645.220 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.645.220 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.650.908 I llama_new_context_with_model: n_ctx      = 8192
0.00.650.915 I llama_new_context_with_model: n_batch    = 2048
0.00.650.915 I llama_new_context_with_model: n_ubatch   = 512
0.00.650.916 I llama_new_context_with_model: flash_attn = 0
0.00.650.918 I llama_new_context_with_model: freq_base  = 10000.0
0.00.650.919 I llama_new_context_with_model: freq_scale = 1
0.00.679.703 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.679.744 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.679.855 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.681.198 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.681.205 I llama_new_context_with_model: graph nodes  = 601
0.00.681.205 I llama_new_context_with_model: graph splits = 1
0.00.681.221 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.262.030 I main: llama threadpool init, n_threads = 4
0.01.262.041 I 
0.01.262.132 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.262.136 I 
0.01.262.296 I sampler seed: 2151328121
0.01.262.308 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.262.314 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.262.315 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.262.315 I 
 seconally.

Answer: I am not able to generate responses that are sexually suggestive in nature. [end of text]


0.08.523.470 I llama_perf_sampler_print:    sampling time =      32.19 ms /    22 runs   (    1.46 ms per token,   683.51 tokens per second)
0.08.523.484 I llama_perf_context_print:        load time =    1259.21 ms
0.08.523.486 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.523.489 I llama_perf_context_print:        eval time =    7207.56 ms /    21 runs   (  343.22 ms per token,     2.91 tokens per second)
0.08.523.490 I llama_perf_context_print:       total time =    7261.45 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3829 (d4c57cd6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199262.99 ms
main:    total time = 199262.99 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.645 I build: 3829 (d4c57cd6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.792 I main: load the model and apply lora adapter, if any
0.00.024.743 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.843 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.860 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.864 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.869 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.870 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.872 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.873 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.873 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.874 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.881 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.883 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.897 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.901 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.902 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.454 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.532 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.014 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.023 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.024 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.025 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.026 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.027 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.028 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.032 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.033 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.042 I llama_model_loader: - type  f32:   37 tensors
0.00.198.046 I llama_model_loader: - type q4_K:  108 tensors
0.00.198.047 I llama_model_loader: - type q6_K:   19 tensors
0.00.501.043 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.530.785 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.531.819 I llm_load_vocab: special tokens cache size = 5
0.00.589.265 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.589.326 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.589.327 I llm_load_print_meta: arch             = gemma
0.00.589.328 I llm_load_print_meta: vocab type       = SPM
0.00.589.329 I llm_load_print_meta: n_vocab          = 256000
0.00.589.331 I llm_load_print_meta: n_merges         = 0
0.00.589.332 I llm_load_print_meta: vocab_only       = 0
0.00.589.332 I llm_load_print_meta: n_ctx_train      = 8192
0.00.589.332 I llm_load_print_meta: n_embd           = 2048
0.00.589.333 I llm_load_print_meta: n_layer          = 18
0.00.589.368 I llm_load_print_meta: n_head           = 8
0.00.589.375 I llm_load_print_meta: n_head_kv        = 1
0.00.589.376 I llm_load_print_meta: n_rot            = 256
0.00.589.376 I llm_load_print_meta: n_swa            = 0
0.00.589.377 I llm_load_print_meta: n_embd_head_k    = 256
0.00.589.377 I llm_load_print_meta: n_embd_head_v    = 256
0.00.589.382 I llm_load_print_meta: n_gqa            = 8
0.00.589.387 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.589.391 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.589.408 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.589.410 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.589.411 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.589.411 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.589.412 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.589.418 I llm_load_print_meta: n_ff             = 16384
0.00.589.418 I llm_load_print_meta: n_expert         = 0
0.00.589.418 I llm_load_print_meta: n_expert_used    = 0
0.00.589.419 I llm_load_print_meta: causal attn      = 1
0.00.589.419 I llm_load_print_meta: pooling type     = 0
0.00.589.420 I llm_load_print_meta: rope type        = 2
0.00.589.420 I llm_load_print_meta: rope scaling     = linear
0.00.589.422 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.589.423 I llm_load_print_meta: freq_scale_train = 1
0.00.589.424 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.589.424 I llm_load_print_meta: rope_finetuned   = unknown
0.00.589.424 I llm_load_print_meta: ssm_d_conv       = 0
0.00.589.425 I llm_load_print_meta: ssm_d_inner      = 0
0.00.589.425 I llm_load_print_meta: ssm_d_state      = 0
0.00.589.437 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.589.438 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.589.439 I llm_load_print_meta: model type       = 2B
0.00.589.440 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.589.442 I llm_load_print_meta: model params     = 2.51 B
0.00.589.442 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.589.443 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.589.444 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.589.444 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.589.444 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.589.445 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.589.454 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.589.455 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.589.461 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.589.462 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.589.463 I llm_load_print_meta: max token length = 93
0.00.589.643 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.647.394 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.653.113 I llama_new_context_with_model: n_ctx      = 8192
0.00.653.121 I llama_new_context_with_model: n_batch    = 2048
0.00.653.121 I llama_new_context_with_model: n_ubatch   = 512
0.00.653.122 I llama_new_context_with_model: flash_attn = 0
0.00.653.124 I llama_new_context_with_model: freq_base  = 10000.0
0.00.653.125 I llama_new_context_with_model: freq_scale = 1
0.00.682.891 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.682.934 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.683.046 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.684.448 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.684.455 I llama_new_context_with_model: graph nodes  = 601
0.00.684.455 I llama_new_context_with_model: graph splits = 1
0.00.684.471 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.265.042 I main: llama threadpool init, n_threads = 4
0.01.265.055 I 
0.01.265.146 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.265.149 I 
0.01.265.308 I sampler seed: 555948201
0.01.265.319 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.265.324 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.265.324 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.265.325 I 
 seconded with an inscription on the back: "To my dearest friend, whose laughter echoed through the years. Your kindness and generosity knew no bounds."

The

0.12.212.895 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.85 tokens per second)
0.12.212.899 I llama_perf_context_print:        load time =    1262.16 ms
0.12.212.901 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.212.915 I llama_perf_context_print:        eval time =   10865.98 ms /    32 runs   (  339.56 ms per token,     2.94 tokens per second)
0.12.212.917 I llama_perf_context_print:       total time =   10947.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m2.244s
user	50m4.398s
sys	0m6.505s
