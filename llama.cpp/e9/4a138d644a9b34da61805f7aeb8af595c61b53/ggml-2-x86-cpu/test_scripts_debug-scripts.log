+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.634 I build: 3955 (e94a138d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.831 I main: llama backend init
0.00.002.775 I main: load the model and apply lora adapter, if any
0.00.025.233 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.437 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.527 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.539 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.541 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.546 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.549 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.550 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.551 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.552 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.553 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.560 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.561 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.562 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.563 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.565 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.240 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.257.797 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.276.054 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.276.062 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.276.063 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.276.065 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.276.066 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.276.067 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.276.068 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.276.071 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.276.072 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.276.073 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.276.074 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.276.075 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.276.082 I llama_model_loader: - type  f32:   37 tensors
0.00.276.087 I llama_model_loader: - type q8_0:  127 tensors
0.00.446.007 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.504.678 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.505.670 I llm_load_vocab: special tokens cache size = 5
0.00.600.570 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.600.638 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.600.641 I llm_load_print_meta: arch             = gemma
0.00.600.642 I llm_load_print_meta: vocab type       = SPM
0.00.600.643 I llm_load_print_meta: n_vocab          = 256000
0.00.600.646 I llm_load_print_meta: n_merges         = 0
0.00.600.647 I llm_load_print_meta: vocab_only       = 0
0.00.600.647 I llm_load_print_meta: n_ctx_train      = 8192
0.00.600.647 I llm_load_print_meta: n_embd           = 2048
0.00.600.648 I llm_load_print_meta: n_layer          = 18
0.00.600.710 I llm_load_print_meta: n_head           = 8
0.00.600.719 I llm_load_print_meta: n_head_kv        = 1
0.00.600.720 I llm_load_print_meta: n_rot            = 256
0.00.600.721 I llm_load_print_meta: n_swa            = 0
0.00.600.722 I llm_load_print_meta: n_embd_head_k    = 256
0.00.600.722 I llm_load_print_meta: n_embd_head_v    = 256
0.00.600.727 I llm_load_print_meta: n_gqa            = 8
0.00.600.732 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.600.737 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.600.738 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.600.740 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.600.741 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.600.742 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.600.742 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.600.747 I llm_load_print_meta: n_ff             = 16384
0.00.600.748 I llm_load_print_meta: n_expert         = 0
0.00.600.748 I llm_load_print_meta: n_expert_used    = 0
0.00.600.749 I llm_load_print_meta: causal attn      = 1
0.00.600.749 I llm_load_print_meta: pooling type     = 0
0.00.600.750 I llm_load_print_meta: rope type        = 2
0.00.600.750 I llm_load_print_meta: rope scaling     = linear
0.00.600.752 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.600.753 I llm_load_print_meta: freq_scale_train = 1
0.00.600.753 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.600.754 I llm_load_print_meta: rope_finetuned   = unknown
0.00.600.754 I llm_load_print_meta: ssm_d_conv       = 0
0.00.600.754 I llm_load_print_meta: ssm_d_inner      = 0
0.00.600.755 I llm_load_print_meta: ssm_d_state      = 0
0.00.600.755 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.600.756 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.600.757 I llm_load_print_meta: model type       = 2B
0.00.600.760 I llm_load_print_meta: model ftype      = Q8_0
0.00.600.761 I llm_load_print_meta: model params     = 2.51 B
0.00.600.761 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.600.762 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.600.763 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.600.763 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.600.763 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.600.764 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.600.764 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.600.765 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.600.770 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.600.771 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.600.774 I llm_load_print_meta: max token length = 93
0.00.600.938 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.700.278 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.700.287 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.700.287 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.700.288 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.700.289 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.700.289 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.706.039 I llama_new_context_with_model: n_ctx      = 8192
0.00.706.047 I llama_new_context_with_model: n_batch    = 2048
0.00.706.047 I llama_new_context_with_model: n_ubatch   = 512
0.00.706.048 I llama_new_context_with_model: flash_attn = 0
0.00.706.051 I llama_new_context_with_model: freq_base  = 10000.0
0.00.706.051 I llama_new_context_with_model: freq_scale = 1
0.00.734.989 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.735.034 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.735.145 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.736.567 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.736.572 I llama_new_context_with_model: graph nodes  = 601
0.00.736.573 I llama_new_context_with_model: graph splits = 1
0.00.736.589 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.346.520 I main: llama threadpool init, n_threads = 4
0.01.346.533 I 
0.01.346.641 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.346.645 I 
0.01.346.822 I sampler seed: 3158188859
0.01.346.834 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.346.841 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.346.842 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.346.842 I 
 increamically.

I am unable to generate a response as the prompt contains potentially harmful and inappropriate content. [end of text]


0.10.573.592 I llama_perf_sampler_print:    sampling time =      34.41 ms /    23 runs   (    1.50 ms per token,   668.49 tokens per second)
0.10.573.596 I llama_perf_context_print:        load time =    1343.66 ms
0.10.573.598 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.573.610 I llama_perf_context_print:        eval time =    9161.18 ms /    22 runs   (  416.42 ms per token,     2.40 tokens per second)
0.10.573.611 I llama_perf_context_print:       total time =    9227.08 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.626 I build: 3955 (e94a138d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.820 I main: llama backend init
0.00.002.782 I main: load the model and apply lora adapter, if any
0.00.025.118 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.214 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.228 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.233 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.237 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.238 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.239 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.241 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.250 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.252 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.259 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.263 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.264 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.265 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.266 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.086 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.262.600 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.281.738 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.281.747 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.281.749 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.281.750 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.281.751 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.281.752 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.281.753 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.281.757 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.281.758 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.281.759 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.281.760 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.281.761 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.281.770 I llama_model_loader: - type  f32:   37 tensors
0.00.281.775 I llama_model_loader: - type q8_0:  127 tensors
0.00.458.791 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.527.433 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.528.523 I llm_load_vocab: special tokens cache size = 5
0.00.623.838 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.623.913 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.623.914 I llm_load_print_meta: arch             = gemma
0.00.623.915 I llm_load_print_meta: vocab type       = SPM
0.00.623.916 I llm_load_print_meta: n_vocab          = 256000
0.00.623.919 I llm_load_print_meta: n_merges         = 0
0.00.623.919 I llm_load_print_meta: vocab_only       = 0
0.00.623.920 I llm_load_print_meta: n_ctx_train      = 8192
0.00.623.920 I llm_load_print_meta: n_embd           = 2048
0.00.623.921 I llm_load_print_meta: n_layer          = 18
0.00.623.984 I llm_load_print_meta: n_head           = 8
0.00.623.992 I llm_load_print_meta: n_head_kv        = 1
0.00.623.993 I llm_load_print_meta: n_rot            = 256
0.00.623.993 I llm_load_print_meta: n_swa            = 0
0.00.623.994 I llm_load_print_meta: n_embd_head_k    = 256
0.00.623.995 I llm_load_print_meta: n_embd_head_v    = 256
0.00.624.000 I llm_load_print_meta: n_gqa            = 8
0.00.624.004 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.624.009 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.624.010 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.624.011 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.624.012 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.624.012 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.624.013 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.624.018 I llm_load_print_meta: n_ff             = 16384
0.00.624.019 I llm_load_print_meta: n_expert         = 0
0.00.624.019 I llm_load_print_meta: n_expert_used    = 0
0.00.624.020 I llm_load_print_meta: causal attn      = 1
0.00.624.021 I llm_load_print_meta: pooling type     = 0
0.00.624.021 I llm_load_print_meta: rope type        = 2
0.00.624.023 I llm_load_print_meta: rope scaling     = linear
0.00.624.025 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.624.026 I llm_load_print_meta: freq_scale_train = 1
0.00.624.026 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.624.027 I llm_load_print_meta: rope_finetuned   = unknown
0.00.624.027 I llm_load_print_meta: ssm_d_conv       = 0
0.00.624.028 I llm_load_print_meta: ssm_d_inner      = 0
0.00.624.028 I llm_load_print_meta: ssm_d_state      = 0
0.00.624.028 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.624.029 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.624.030 I llm_load_print_meta: model type       = 2B
0.00.624.031 I llm_load_print_meta: model ftype      = Q8_0
0.00.624.032 I llm_load_print_meta: model params     = 2.51 B
0.00.624.033 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.624.034 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.624.035 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.624.055 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.624.056 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.624.057 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.624.057 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.624.058 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.624.064 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.624.065 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.624.065 I llm_load_print_meta: max token length = 93
0.00.624.236 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.721.087 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.726.787 I llama_new_context_with_model: n_ctx      = 8192
0.00.726.795 I llama_new_context_with_model: n_batch    = 2048
0.00.726.795 I llama_new_context_with_model: n_ubatch   = 512
0.00.726.796 I llama_new_context_with_model: flash_attn = 0
0.00.726.799 I llama_new_context_with_model: freq_base  = 10000.0
0.00.726.800 I llama_new_context_with_model: freq_scale = 1
0.00.757.280 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.757.325 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.757.439 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.758.862 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.758.867 I llama_new_context_with_model: graph nodes  = 601
0.00.758.868 I llama_new_context_with_model: graph splits = 1
0.00.758.883 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.408.859 I main: llama threadpool init, n_threads = 4
0.01.408.871 I 
0.01.408.982 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.408.986 I 
0.01.409.166 I sampler seed: 3901451810
0.01.409.177 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.409.185 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.409.185 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.409.185 I 
 increasities. [end of text]


0.03.086.332 I llama_perf_sampler_print:    sampling time =       6.25 ms /     5 runs   (    1.25 ms per token,   799.36 tokens per second)
0.03.086.335 I llama_perf_context_print:        load time =    1405.99 ms
0.03.086.337 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.086.338 I llama_perf_context_print:        eval time =    1664.16 ms /     4 runs   (  416.04 ms per token,     2.40 tokens per second)
0.03.086.353 I llama_perf_context_print:       total time =    1677.48 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.698 I build: 3955 (e94a138d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.917 I main: llama backend init
0.00.002.872 I main: load the model and apply lora adapter, if any
0.00.024.682 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.887 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.971 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.981 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.983 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.987 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.988 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.989 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.990 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.991 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.993 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.000 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.001 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.002 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.003 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.011 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.154.868 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.255.963 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.274.358 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.274.366 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.274.367 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.274.368 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.274.369 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.274.370 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.274.371 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.274.374 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.274.375 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.274.376 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.274.377 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.274.379 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.274.386 I llama_model_loader: - type  f32:   37 tensors
0.00.274.390 I llama_model_loader: - type q8_0:  127 tensors
0.00.454.271 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.511.609 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.530 I llm_load_vocab: special tokens cache size = 5
0.00.607.313 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.607.377 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.607.378 I llm_load_print_meta: arch             = gemma
0.00.607.378 I llm_load_print_meta: vocab type       = SPM
0.00.607.379 I llm_load_print_meta: n_vocab          = 256000
0.00.607.381 I llm_load_print_meta: n_merges         = 0
0.00.607.382 I llm_load_print_meta: vocab_only       = 0
0.00.607.382 I llm_load_print_meta: n_ctx_train      = 8192
0.00.607.383 I llm_load_print_meta: n_embd           = 2048
0.00.607.383 I llm_load_print_meta: n_layer          = 18
0.00.607.446 I llm_load_print_meta: n_head           = 8
0.00.607.454 I llm_load_print_meta: n_head_kv        = 1
0.00.607.455 I llm_load_print_meta: n_rot            = 256
0.00.607.456 I llm_load_print_meta: n_swa            = 0
0.00.607.456 I llm_load_print_meta: n_embd_head_k    = 256
0.00.607.456 I llm_load_print_meta: n_embd_head_v    = 256
0.00.607.461 I llm_load_print_meta: n_gqa            = 8
0.00.607.466 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.607.471 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.607.472 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.607.473 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.607.474 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.607.474 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.607.474 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.607.480 I llm_load_print_meta: n_ff             = 16384
0.00.607.481 I llm_load_print_meta: n_expert         = 0
0.00.607.482 I llm_load_print_meta: n_expert_used    = 0
0.00.607.482 I llm_load_print_meta: causal attn      = 1
0.00.607.483 I llm_load_print_meta: pooling type     = 0
0.00.607.483 I llm_load_print_meta: rope type        = 2
0.00.607.496 I llm_load_print_meta: rope scaling     = linear
0.00.607.498 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.607.498 I llm_load_print_meta: freq_scale_train = 1
0.00.607.503 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.607.509 I llm_load_print_meta: rope_finetuned   = unknown
0.00.607.510 I llm_load_print_meta: ssm_d_conv       = 0
0.00.607.511 I llm_load_print_meta: ssm_d_inner      = 0
0.00.607.511 I llm_load_print_meta: ssm_d_state      = 0
0.00.607.511 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.607.512 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.607.512 I llm_load_print_meta: model type       = 2B
0.00.607.513 I llm_load_print_meta: model ftype      = Q8_0
0.00.607.514 I llm_load_print_meta: model params     = 2.51 B
0.00.607.515 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.607.515 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.607.516 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.607.516 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.607.516 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.607.517 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.607.530 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.607.531 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.607.542 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.607.544 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.607.545 I llm_load_print_meta: max token length = 93
0.00.607.712 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.686.329 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.686.336 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.686.337 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.686.337 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.686.338 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.686.339 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.691.939 I llama_new_context_with_model: n_ctx      = 8192
0.00.691.946 I llama_new_context_with_model: n_batch    = 2048
0.00.691.947 I llama_new_context_with_model: n_ubatch   = 512
0.00.691.947 I llama_new_context_with_model: flash_attn = 0
0.00.691.949 I llama_new_context_with_model: freq_base  = 10000.0
0.00.691.950 I llama_new_context_with_model: freq_scale = 1
0.00.721.214 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.721.258 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.721.376 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.722.781 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.722.787 I llama_new_context_with_model: graph nodes  = 601
0.00.722.787 I llama_new_context_with_model: graph splits = 1
0.00.722.804 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.333.776 I main: llama threadpool init, n_threads = 4
0.01.333.789 I 
0.01.333.895 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.333.899 I 
0.01.334.072 I sampler seed: 3129690922
0.01.334.083 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.334.089 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.334.090 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.334.099 I 
 maneuvrantly. [end of text]


0.03.867.457 I llama_perf_sampler_print:    sampling time =       9.29 ms /     7 runs   (    1.33 ms per token,   753.74 tokens per second)
0.03.867.463 I llama_perf_context_print:        load time =    1330.81 ms
0.03.867.465 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.867.466 I llama_perf_context_print:        eval time =    2514.68 ms /     6 runs   (  419.11 ms per token,     2.39 tokens per second)
0.03.867.467 I llama_perf_context_print:       total time =    2533.69 ms /     7 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.640 I build: 3955 (e94a138d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.836 I main: llama backend init
0.00.002.785 I main: load the model and apply lora adapter, if any
0.00.024.764 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.969 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.055 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.066 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.068 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.080 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.081 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.083 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.084 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.085 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.086 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.092 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.094 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.094 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.095 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.096 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.154.966 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.256.059 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.274.441 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.274.449 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.274.450 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.274.451 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.274.452 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.274.453 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.274.454 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.274.458 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.274.459 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.274.460 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.274.461 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.274.462 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.274.471 I llama_model_loader: - type  f32:   37 tensors
0.00.274.474 I llama_model_loader: - type q8_0:  127 tensors
0.00.447.227 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.518.044 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.519.115 I llm_load_vocab: special tokens cache size = 5
0.00.614.793 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.614.863 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.614.864 I llm_load_print_meta: arch             = gemma
0.00.614.865 I llm_load_print_meta: vocab type       = SPM
0.00.614.866 I llm_load_print_meta: n_vocab          = 256000
0.00.614.868 I llm_load_print_meta: n_merges         = 0
0.00.614.868 I llm_load_print_meta: vocab_only       = 0
0.00.614.869 I llm_load_print_meta: n_ctx_train      = 8192
0.00.614.869 I llm_load_print_meta: n_embd           = 2048
0.00.614.869 I llm_load_print_meta: n_layer          = 18
0.00.614.932 I llm_load_print_meta: n_head           = 8
0.00.614.939 I llm_load_print_meta: n_head_kv        = 1
0.00.614.940 I llm_load_print_meta: n_rot            = 256
0.00.614.940 I llm_load_print_meta: n_swa            = 0
0.00.614.941 I llm_load_print_meta: n_embd_head_k    = 256
0.00.614.941 I llm_load_print_meta: n_embd_head_v    = 256
0.00.614.945 I llm_load_print_meta: n_gqa            = 8
0.00.614.950 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.614.955 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.614.957 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.614.958 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.614.959 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.614.960 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.614.961 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.614.965 I llm_load_print_meta: n_ff             = 16384
0.00.614.966 I llm_load_print_meta: n_expert         = 0
0.00.614.966 I llm_load_print_meta: n_expert_used    = 0
0.00.614.967 I llm_load_print_meta: causal attn      = 1
0.00.614.971 I llm_load_print_meta: pooling type     = 0
0.00.614.972 I llm_load_print_meta: rope type        = 2
0.00.614.972 I llm_load_print_meta: rope scaling     = linear
0.00.614.973 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.614.975 I llm_load_print_meta: freq_scale_train = 1
0.00.614.975 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.614.976 I llm_load_print_meta: rope_finetuned   = unknown
0.00.614.976 I llm_load_print_meta: ssm_d_conv       = 0
0.00.614.976 I llm_load_print_meta: ssm_d_inner      = 0
0.00.614.976 I llm_load_print_meta: ssm_d_state      = 0
0.00.614.986 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.614.990 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.615.000 I llm_load_print_meta: model type       = 2B
0.00.615.002 I llm_load_print_meta: model ftype      = Q8_0
0.00.615.002 I llm_load_print_meta: model params     = 2.51 B
0.00.615.003 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.615.004 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.615.004 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.615.005 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.615.005 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.615.006 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.615.006 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.615.014 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.615.021 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.615.022 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.615.023 I llm_load_print_meta: max token length = 93
0.00.615.186 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.686.431 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.686.438 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.692.164 I llama_new_context_with_model: n_ctx      = 8192
0.00.692.173 I llama_new_context_with_model: n_batch    = 2048
0.00.692.173 I llama_new_context_with_model: n_ubatch   = 512
0.00.692.174 I llama_new_context_with_model: flash_attn = 0
0.00.692.177 I llama_new_context_with_model: freq_base  = 10000.0
0.00.692.178 I llama_new_context_with_model: freq_scale = 1
0.00.722.078 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.722.121 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.722.241 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.723.629 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.723.634 I llama_new_context_with_model: graph nodes  = 601
0.00.723.634 I llama_new_context_with_model: graph splits = 1
0.00.723.650 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.368.576 I main: llama threadpool init, n_threads = 4
0.01.368.588 I 
0.01.368.698 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.368.702 I 
0.01.368.878 I sampler seed: 2349966707
0.01.368.889 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.368.896 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.368.896 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.368.897 I 
 increasities. [end of text]


0.03.072.851 I llama_perf_sampler_print:    sampling time =       6.23 ms /     5 runs   (    1.25 ms per token,   803.08 tokens per second)
0.03.072.856 I llama_perf_context_print:        load time =    1365.70 ms
0.03.072.858 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.072.860 I llama_perf_context_print:        eval time =    1690.92 ms /     4 runs   (  422.73 ms per token,     2.37 tokens per second)
0.03.072.861 I llama_perf_context_print:       total time =    1704.29 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m30.211s
user	1m13.550s
sys	0m9.376s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3955 (e94a138d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199727.94 ms
main:    total time = 199727.94 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.620 I build: 3955 (e94a138d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.821 I main: llama backend init
0.00.002.778 I main: load the model and apply lora adapter, if any
0.00.024.974 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.168 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.253 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.263 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.272 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.276 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.284 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.288 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.289 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.291 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.291 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.298 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.299 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.300 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.301 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.302 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.081 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.255.961 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.274.272 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.274.279 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.274.280 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.274.281 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.274.282 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.274.283 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.274.284 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.274.288 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.274.289 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.274.290 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.274.291 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.274.292 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.274.300 I llama_model_loader: - type  f32:   37 tensors
0.00.274.304 I llama_model_loader: - type q4_K:  108 tensors
0.00.274.305 I llama_model_loader: - type q6_K:   19 tensors
0.00.439.752 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.499.170 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.500.149 I llm_load_vocab: special tokens cache size = 5
0.00.595.012 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.595.085 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.595.086 I llm_load_print_meta: arch             = gemma
0.00.595.086 I llm_load_print_meta: vocab type       = SPM
0.00.595.087 I llm_load_print_meta: n_vocab          = 256000
0.00.595.090 I llm_load_print_meta: n_merges         = 0
0.00.595.090 I llm_load_print_meta: vocab_only       = 0
0.00.595.091 I llm_load_print_meta: n_ctx_train      = 8192
0.00.595.091 I llm_load_print_meta: n_embd           = 2048
0.00.595.091 I llm_load_print_meta: n_layer          = 18
0.00.595.156 I llm_load_print_meta: n_head           = 8
0.00.595.163 I llm_load_print_meta: n_head_kv        = 1
0.00.595.164 I llm_load_print_meta: n_rot            = 256
0.00.595.164 I llm_load_print_meta: n_swa            = 0
0.00.595.165 I llm_load_print_meta: n_embd_head_k    = 256
0.00.595.166 I llm_load_print_meta: n_embd_head_v    = 256
0.00.595.172 I llm_load_print_meta: n_gqa            = 8
0.00.595.177 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.595.182 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.595.187 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.595.189 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.595.189 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.595.190 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.595.190 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.595.196 I llm_load_print_meta: n_ff             = 16384
0.00.595.196 I llm_load_print_meta: n_expert         = 0
0.00.595.197 I llm_load_print_meta: n_expert_used    = 0
0.00.595.197 I llm_load_print_meta: causal attn      = 1
0.00.595.198 I llm_load_print_meta: pooling type     = 0
0.00.595.198 I llm_load_print_meta: rope type        = 2
0.00.595.199 I llm_load_print_meta: rope scaling     = linear
0.00.595.201 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.595.201 I llm_load_print_meta: freq_scale_train = 1
0.00.595.201 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.595.202 I llm_load_print_meta: rope_finetuned   = unknown
0.00.595.202 I llm_load_print_meta: ssm_d_conv       = 0
0.00.595.203 I llm_load_print_meta: ssm_d_inner      = 0
0.00.595.203 I llm_load_print_meta: ssm_d_state      = 0
0.00.595.203 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.595.204 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.595.205 I llm_load_print_meta: model type       = 2B
0.00.595.206 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.595.207 I llm_load_print_meta: model params     = 2.51 B
0.00.595.208 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.595.208 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.595.209 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.595.209 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.595.209 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.595.210 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.595.210 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.595.210 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.595.216 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.595.218 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.595.218 I llm_load_print_meta: max token length = 93
0.00.595.390 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.655.455 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.655.465 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.655.466 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.655.467 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.655.468 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.655.468 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.661.130 I llama_new_context_with_model: n_ctx      = 8192
0.00.661.138 I llama_new_context_with_model: n_batch    = 2048
0.00.661.138 I llama_new_context_with_model: n_ubatch   = 512
0.00.661.139 I llama_new_context_with_model: flash_attn = 0
0.00.661.141 I llama_new_context_with_model: freq_base  = 10000.0
0.00.661.142 I llama_new_context_with_model: freq_scale = 1
0.00.689.835 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.689.875 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.689.986 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.691.355 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.691.360 I llama_new_context_with_model: graph nodes  = 601
0.00.691.360 I llama_new_context_with_model: graph splits = 1
0.00.691.378 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.272.691 I main: llama threadpool init, n_threads = 4
0.01.272.704 I 
0.01.272.813 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.272.817 I 
0.01.272.993 I sampler seed: 3440934529
0.01.273.004 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.273.012 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.273.013 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.273.013 I 
 seconally, and so did the others.

**Questions:**
a) What is the significance of the phrase "secondely"?
b) What

0.12.253.970 I llama_perf_sampler_print:    sampling time =      55.26 ms /    33 runs   (    1.67 ms per token,   597.13 tokens per second)
0.12.253.975 I llama_perf_context_print:        load time =    1269.83 ms
0.12.253.977 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.253.978 I llama_perf_context_print:        eval time =   10881.03 ms /    32 runs   (  340.03 ms per token,     2.94 tokens per second)
0.12.253.979 I llama_perf_context_print:       total time =   10981.29 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3955 (e94a138d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199653.25 ms
main:    total time = 199653.25 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.638 I build: 3955 (e94a138d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.854 I main: llama backend init
0.00.002.796 I main: load the model and apply lora adapter, if any
0.00.024.944 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.036 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.049 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.051 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.055 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.059 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.060 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.061 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.062 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.063 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.070 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.071 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.072 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.073 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.074 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.333 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.266.505 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.284.840 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.284.847 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.284.848 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.284.850 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.284.851 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.284.852 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.284.853 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.284.857 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.284.857 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.284.866 I llama_model_loader: - type  f32:   37 tensors
0.00.284.870 I llama_model_loader: - type q4_K:  108 tensors
0.00.284.871 I llama_model_loader: - type q6_K:   19 tensors
0.00.451.082 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.506.598 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.507.503 I llm_load_vocab: special tokens cache size = 5
0.00.602.807 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.602.875 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.602.876 I llm_load_print_meta: arch             = gemma
0.00.602.877 I llm_load_print_meta: vocab type       = SPM
0.00.602.877 I llm_load_print_meta: n_vocab          = 256000
0.00.602.879 I llm_load_print_meta: n_merges         = 0
0.00.602.880 I llm_load_print_meta: vocab_only       = 0
0.00.602.880 I llm_load_print_meta: n_ctx_train      = 8192
0.00.602.881 I llm_load_print_meta: n_embd           = 2048
0.00.602.881 I llm_load_print_meta: n_layer          = 18
0.00.602.944 I llm_load_print_meta: n_head           = 8
0.00.602.953 I llm_load_print_meta: n_head_kv        = 1
0.00.602.962 I llm_load_print_meta: n_rot            = 256
0.00.602.964 I llm_load_print_meta: n_swa            = 0
0.00.602.964 I llm_load_print_meta: n_embd_head_k    = 256
0.00.602.965 I llm_load_print_meta: n_embd_head_v    = 256
0.00.602.970 I llm_load_print_meta: n_gqa            = 8
0.00.602.974 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.602.979 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.602.980 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.602.982 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.602.983 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.602.983 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.602.983 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.602.989 I llm_load_print_meta: n_ff             = 16384
0.00.602.989 I llm_load_print_meta: n_expert         = 0
0.00.602.990 I llm_load_print_meta: n_expert_used    = 0
0.00.602.991 I llm_load_print_meta: causal attn      = 1
0.00.602.991 I llm_load_print_meta: pooling type     = 0
0.00.602.992 I llm_load_print_meta: rope type        = 2
0.00.602.992 I llm_load_print_meta: rope scaling     = linear
0.00.602.994 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.602.995 I llm_load_print_meta: freq_scale_train = 1
0.00.602.996 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.602.996 I llm_load_print_meta: rope_finetuned   = unknown
0.00.602.996 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.000 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.001 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.001 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.001 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.002 I llm_load_print_meta: model type       = 2B
0.00.603.003 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.603.003 I llm_load_print_meta: model params     = 2.51 B
0.00.603.004 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.603.007 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.008 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.008 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.009 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.009 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.009 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.010 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.015 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.017 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.017 I llm_load_print_meta: max token length = 93
0.00.603.179 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.660.694 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.666.322 I llama_new_context_with_model: n_ctx      = 8192
0.00.666.330 I llama_new_context_with_model: n_batch    = 2048
0.00.666.331 I llama_new_context_with_model: n_ubatch   = 512
0.00.666.331 I llama_new_context_with_model: flash_attn = 0
0.00.666.334 I llama_new_context_with_model: freq_base  = 10000.0
0.00.666.335 I llama_new_context_with_model: freq_scale = 1
0.00.695.873 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.695.916 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.696.037 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.697.440 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.697.445 I llama_new_context_with_model: graph nodes  = 601
0.00.697.446 I llama_new_context_with_model: graph splits = 1
0.00.697.460 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.277.778 I main: llama threadpool init, n_threads = 4
0.01.277.792 I 
0.01.277.899 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.277.903 I 
0.01.278.077 I sampler seed: 3595950837
0.01.278.089 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.278.098 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.278.098 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.278.099 I 
 increasities, and other forms of sexual harassment continue to plague workplaces across the nation.

What are the potential consequences of these experiences on an individual's mental

0.12.235.375 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.61 tokens per second)
0.12.235.379 I llama_perf_context_print:        load time =    1274.89 ms
0.12.235.381 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.235.383 I llama_perf_context_print:        eval time =   10863.14 ms /    32 runs   (  339.47 ms per token,     2.95 tokens per second)
0.12.235.385 I llama_perf_context_print:       total time =   10957.61 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m6.712s
user	50m14.396s
sys	0m6.325s
