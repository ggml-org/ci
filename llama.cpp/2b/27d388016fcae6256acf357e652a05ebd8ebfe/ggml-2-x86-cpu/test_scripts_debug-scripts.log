+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.627 I build: 3944 (2b27d388) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.832 I main: llama backend init
0.00.002.762 I main: load the model and apply lora adapter, if any
0.00.024.963 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.166 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.256 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.267 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.269 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.273 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.277 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.278 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.279 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.280 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.281 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.288 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.290 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.291 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.292 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.293 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.551 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.384 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.494 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.501 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.502 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.503 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.504 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.506 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.507 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.511 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.512 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.513 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.514 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.515 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.523 I llama_model_loader: - type  f32:   37 tensors
0.00.268.527 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.853 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.486.496 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.488.154 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.493.023 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.503.341 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.504.236 I llm_load_vocab: special tokens cache size = 5
0.00.600.030 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.600.102 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.600.106 I llm_load_print_meta: arch             = gemma
0.00.600.107 I llm_load_print_meta: vocab type       = SPM
0.00.600.108 I llm_load_print_meta: n_vocab          = 256000
0.00.600.110 I llm_load_print_meta: n_merges         = 0
0.00.600.110 I llm_load_print_meta: vocab_only       = 0
0.00.600.110 I llm_load_print_meta: n_ctx_train      = 8192
0.00.600.111 I llm_load_print_meta: n_embd           = 2048
0.00.600.111 I llm_load_print_meta: n_layer          = 18
0.00.600.172 I llm_load_print_meta: n_head           = 8
0.00.600.182 I llm_load_print_meta: n_head_kv        = 1
0.00.600.182 I llm_load_print_meta: n_rot            = 256
0.00.600.183 I llm_load_print_meta: n_swa            = 0
0.00.600.184 I llm_load_print_meta: n_embd_head_k    = 256
0.00.600.184 I llm_load_print_meta: n_embd_head_v    = 256
0.00.600.192 I llm_load_print_meta: n_gqa            = 8
0.00.600.197 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.600.203 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.600.205 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.600.207 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.600.207 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.600.207 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.600.209 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.600.213 I llm_load_print_meta: n_ff             = 16384
0.00.600.214 I llm_load_print_meta: n_expert         = 0
0.00.600.225 I llm_load_print_meta: n_expert_used    = 0
0.00.600.226 I llm_load_print_meta: causal attn      = 1
0.00.600.227 I llm_load_print_meta: pooling type     = 0
0.00.600.227 I llm_load_print_meta: rope type        = 2
0.00.600.227 I llm_load_print_meta: rope scaling     = linear
0.00.600.229 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.600.230 I llm_load_print_meta: freq_scale_train = 1
0.00.600.233 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.600.234 I llm_load_print_meta: rope_finetuned   = unknown
0.00.600.234 I llm_load_print_meta: ssm_d_conv       = 0
0.00.600.234 I llm_load_print_meta: ssm_d_inner      = 0
0.00.600.234 I llm_load_print_meta: ssm_d_state      = 0
0.00.600.235 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.600.235 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.600.236 I llm_load_print_meta: model type       = 2B
0.00.600.237 I llm_load_print_meta: model ftype      = Q8_0
0.00.600.237 I llm_load_print_meta: model params     = 2.51 B
0.00.600.238 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.600.249 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.600.250 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.600.251 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.600.252 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.600.253 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.600.253 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.600.254 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.600.261 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.600.262 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.600.263 I llm_load_print_meta: max token length = 93
0.00.600.427 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.701.726 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.701.736 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.701.737 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.701.737 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.701.738 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.701.739 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.707.456 I llama_new_context_with_model: n_ctx      = 8192
0.00.707.462 I llama_new_context_with_model: n_batch    = 2048
0.00.707.463 I llama_new_context_with_model: n_ubatch   = 512
0.00.707.463 I llama_new_context_with_model: flash_attn = 0
0.00.707.465 I llama_new_context_with_model: freq_base  = 10000.0
0.00.707.466 I llama_new_context_with_model: freq_scale = 1
0.00.736.071 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.736.133 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.736.249 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.737.616 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.737.621 I llama_new_context_with_model: graph nodes  = 601
0.00.737.622 I llama_new_context_with_model: graph splits = 1
0.00.737.638 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.350.097 I main: llama threadpool init, n_threads = 4
0.01.350.109 I 
0.01.350.218 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.350.221 I 
0.01.350.394 I sampler seed: 1981550569
0.01.350.405 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.350.411 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.350.412 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.350.421 I 
 increasities with their own unique set of challenges and triumphs.

**Answer Key:**

1. Perseverance
2. Resilience
3. Determination
4.

0.14.868.451 I llama_perf_sampler_print:    sampling time =      49.06 ms /    33 runs   (    1.49 ms per token,   672.59 tokens per second)
0.14.868.464 I llama_perf_context_print:        load time =    1347.25 ms
0.14.868.466 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.868.468 I llama_perf_context_print:        eval time =   13436.28 ms /    32 runs   (  419.88 ms per token,     2.38 tokens per second)
0.14.868.470 I llama_perf_context_print:       total time =   13518.36 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.630 I build: 3944 (2b27d388) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.825 I main: llama backend init
0.00.002.791 I main: load the model and apply lora adapter, if any
0.00.024.942 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.044 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.059 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.060 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.064 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.065 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.067 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.068 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.070 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.071 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.079 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.088 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.093 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.095 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.096 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.905 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.907 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.057 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.066 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.067 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.068 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.069 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.070 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.071 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.075 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.076 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.077 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.078 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.079 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.088 I llama_model_loader: - type  f32:   37 tensors
0.00.268.092 I llama_model_loader: - type q8_0:  127 tensors
0.00.440.452 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.481.748 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.483.646 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.489.374 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.501.214 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.502.190 I llm_load_vocab: special tokens cache size = 5
0.00.604.478 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.604.547 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.604.548 I llm_load_print_meta: arch             = gemma
0.00.604.549 I llm_load_print_meta: vocab type       = SPM
0.00.604.550 I llm_load_print_meta: n_vocab          = 256000
0.00.604.552 I llm_load_print_meta: n_merges         = 0
0.00.604.552 I llm_load_print_meta: vocab_only       = 0
0.00.604.553 I llm_load_print_meta: n_ctx_train      = 8192
0.00.604.553 I llm_load_print_meta: n_embd           = 2048
0.00.604.553 I llm_load_print_meta: n_layer          = 18
0.00.604.617 I llm_load_print_meta: n_head           = 8
0.00.604.624 I llm_load_print_meta: n_head_kv        = 1
0.00.604.624 I llm_load_print_meta: n_rot            = 256
0.00.604.625 I llm_load_print_meta: n_swa            = 0
0.00.604.625 I llm_load_print_meta: n_embd_head_k    = 256
0.00.604.626 I llm_load_print_meta: n_embd_head_v    = 256
0.00.604.630 I llm_load_print_meta: n_gqa            = 8
0.00.604.635 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.604.641 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.604.642 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.604.646 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.604.647 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.604.648 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.604.649 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.604.656 I llm_load_print_meta: n_ff             = 16384
0.00.604.657 I llm_load_print_meta: n_expert         = 0
0.00.604.658 I llm_load_print_meta: n_expert_used    = 0
0.00.604.659 I llm_load_print_meta: causal attn      = 1
0.00.604.660 I llm_load_print_meta: pooling type     = 0
0.00.604.661 I llm_load_print_meta: rope type        = 2
0.00.604.662 I llm_load_print_meta: rope scaling     = linear
0.00.604.664 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.604.665 I llm_load_print_meta: freq_scale_train = 1
0.00.604.666 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.604.666 I llm_load_print_meta: rope_finetuned   = unknown
0.00.604.668 I llm_load_print_meta: ssm_d_conv       = 0
0.00.604.668 I llm_load_print_meta: ssm_d_inner      = 0
0.00.604.669 I llm_load_print_meta: ssm_d_state      = 0
0.00.604.670 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.604.671 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.604.681 I llm_load_print_meta: model type       = 2B
0.00.604.683 I llm_load_print_meta: model ftype      = Q8_0
0.00.604.684 I llm_load_print_meta: model params     = 2.51 B
0.00.604.686 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.604.687 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.604.687 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.604.693 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.604.694 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.604.694 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.604.695 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.604.697 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.604.705 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.604.710 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.604.711 I llm_load_print_meta: max token length = 93
0.00.604.897 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.699.633 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.705.520 I llama_new_context_with_model: n_ctx      = 8192
0.00.705.527 I llama_new_context_with_model: n_batch    = 2048
0.00.705.527 I llama_new_context_with_model: n_ubatch   = 512
0.00.705.527 I llama_new_context_with_model: flash_attn = 0
0.00.705.530 I llama_new_context_with_model: freq_base  = 10000.0
0.00.705.530 I llama_new_context_with_model: freq_scale = 1
0.00.734.538 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.734.582 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.734.694 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.736.043 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.736.048 I llama_new_context_with_model: graph nodes  = 601
0.00.736.048 I llama_new_context_with_model: graph splits = 1
0.00.736.064 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.367.607 I main: llama threadpool init, n_threads = 4
0.01.367.618 I 
0.01.367.733 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.367.739 I 
0.01.367.916 I sampler seed: 1863867481
0.01.367.927 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.367.933 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.367.933 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.367.934 I 
 increasively.

I am unable to answer this question as it contains offensive and derogatory language that is inappropriate for me to use. [end of text]


0.12.912.325 I llama_perf_sampler_print:    sampling time =      42.26 ms /    28 runs   (    1.51 ms per token,   662.50 tokens per second)
0.12.912.339 I llama_perf_context_print:        load time =    1364.72 ms
0.12.912.341 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.912.343 I llama_perf_context_print:        eval time =   11472.81 ms /    27 runs   (  424.92 ms per token,     2.35 tokens per second)
0.12.912.345 I llama_perf_context_print:       total time =   11544.73 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.624 I build: 3944 (2b27d388) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.819 I main: llama backend init
0.00.002.764 I main: load the model and apply lora adapter, if any
0.00.025.053 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.265 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.358 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.370 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.372 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.378 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.382 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.383 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.384 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.385 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.385 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.393 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.394 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.395 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.396 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.397 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.770 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.406 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.650 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.657 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.658 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.660 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.660 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.662 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.663 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.666 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.667 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.668 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.669 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.269.670 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.678 I llama_model_loader: - type  f32:   37 tensors
0.00.269.681 I llama_model_loader: - type q8_0:  127 tensors
0.00.438.200 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.485.223 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.487.234 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.493.077 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.505.136 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.506.131 I llm_load_vocab: special tokens cache size = 5
0.00.601.731 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.795 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.796 I llm_load_print_meta: arch             = gemma
0.00.601.797 I llm_load_print_meta: vocab type       = SPM
0.00.601.798 I llm_load_print_meta: n_vocab          = 256000
0.00.601.800 I llm_load_print_meta: n_merges         = 0
0.00.601.800 I llm_load_print_meta: vocab_only       = 0
0.00.601.801 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.801 I llm_load_print_meta: n_embd           = 2048
0.00.601.801 I llm_load_print_meta: n_layer          = 18
0.00.601.871 I llm_load_print_meta: n_head           = 8
0.00.601.878 I llm_load_print_meta: n_head_kv        = 1
0.00.601.879 I llm_load_print_meta: n_rot            = 256
0.00.601.880 I llm_load_print_meta: n_swa            = 0
0.00.601.880 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.881 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.886 I llm_load_print_meta: n_gqa            = 8
0.00.601.891 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.897 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.898 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.900 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.900 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.909 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.910 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.916 I llm_load_print_meta: n_ff             = 16384
0.00.601.917 I llm_load_print_meta: n_expert         = 0
0.00.601.927 I llm_load_print_meta: n_expert_used    = 0
0.00.601.929 I llm_load_print_meta: causal attn      = 1
0.00.601.930 I llm_load_print_meta: pooling type     = 0
0.00.601.930 I llm_load_print_meta: rope type        = 2
0.00.601.930 I llm_load_print_meta: rope scaling     = linear
0.00.601.932 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.932 I llm_load_print_meta: freq_scale_train = 1
0.00.601.933 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.601.933 I llm_load_print_meta: rope_finetuned   = unknown
0.00.601.934 I llm_load_print_meta: ssm_d_conv       = 0
0.00.601.935 I llm_load_print_meta: ssm_d_inner      = 0
0.00.601.935 I llm_load_print_meta: ssm_d_state      = 0
0.00.601.935 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.601.936 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.601.937 I llm_load_print_meta: model type       = 2B
0.00.601.938 I llm_load_print_meta: model ftype      = Q8_0
0.00.601.946 I llm_load_print_meta: model params     = 2.51 B
0.00.601.947 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.601.947 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.601.948 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.601.949 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.601.949 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.601.950 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.601.950 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.601.950 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.601.956 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.601.957 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.601.958 I llm_load_print_meta: max token length = 93
0.00.602.122 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.680.070 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.680.080 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.680.081 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.680.082 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.680.082 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.680.083 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.685.810 I llama_new_context_with_model: n_ctx      = 8192
0.00.685.830 I llama_new_context_with_model: n_batch    = 2048
0.00.685.830 I llama_new_context_with_model: n_ubatch   = 512
0.00.685.831 I llama_new_context_with_model: flash_attn = 0
0.00.685.833 I llama_new_context_with_model: freq_base  = 10000.0
0.00.685.834 I llama_new_context_with_model: freq_scale = 1
0.00.714.096 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.714.138 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.714.251 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.715.591 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.715.596 I llama_new_context_with_model: graph nodes  = 601
0.00.715.597 I llama_new_context_with_model: graph splits = 1
0.00.715.613 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.329.712 I main: llama threadpool init, n_threads = 4
0.01.329.723 I 
0.01.329.841 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.329.844 I 
0.01.330.020 I sampler seed: 1634207019
0.01.330.031 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.330.037 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.330.038 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.330.038 I 
 increasities
I am unable to answer this question as it contains sexually suggestive and inappropriate content. [end of text]


0.09.786.287 I llama_perf_sampler_print:    sampling time =      30.75 ms /    21 runs   (    1.46 ms per token,   682.99 tokens per second)
0.09.786.291 I llama_perf_context_print:        load time =    1326.86 ms
0.09.786.302 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.786.305 I llama_perf_context_print:        eval time =    8404.62 ms /    20 runs   (  420.23 ms per token,     2.38 tokens per second)
0.09.786.306 I llama_perf_context_print:       total time =    8456.59 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.639 I build: 3944 (2b27d388) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.848 I main: llama backend init
0.00.002.800 I main: load the model and apply lora adapter, if any
0.00.027.474 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.027.670 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.027.761 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.772 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.773 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.777 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.778 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.780 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.781 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.783 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.783 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.790 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.794 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.795 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.796 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.797 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.154.365 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.253.920 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.140 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.151 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.152 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.153 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.154 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.156 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.157 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.161 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.163 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.164 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.165 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.272.166 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.175 I llama_model_loader: - type  f32:   37 tensors
0.00.272.180 I llama_model_loader: - type q8_0:  127 tensors
0.00.451.906 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.493.296 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.494.930 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.499.865 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.510.201 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.115 I llm_load_vocab: special tokens cache size = 5
0.00.606.892 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.606.955 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.606.956 I llm_load_print_meta: arch             = gemma
0.00.606.956 I llm_load_print_meta: vocab type       = SPM
0.00.606.957 I llm_load_print_meta: n_vocab          = 256000
0.00.606.959 I llm_load_print_meta: n_merges         = 0
0.00.606.960 I llm_load_print_meta: vocab_only       = 0
0.00.606.960 I llm_load_print_meta: n_ctx_train      = 8192
0.00.606.961 I llm_load_print_meta: n_embd           = 2048
0.00.606.961 I llm_load_print_meta: n_layer          = 18
0.00.607.023 I llm_load_print_meta: n_head           = 8
0.00.607.029 I llm_load_print_meta: n_head_kv        = 1
0.00.607.030 I llm_load_print_meta: n_rot            = 256
0.00.607.030 I llm_load_print_meta: n_swa            = 0
0.00.607.030 I llm_load_print_meta: n_embd_head_k    = 256
0.00.607.032 I llm_load_print_meta: n_embd_head_v    = 256
0.00.607.037 I llm_load_print_meta: n_gqa            = 8
0.00.607.041 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.607.046 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.607.048 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.607.050 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.607.050 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.607.051 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.607.051 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.607.056 I llm_load_print_meta: n_ff             = 16384
0.00.607.057 I llm_load_print_meta: n_expert         = 0
0.00.607.057 I llm_load_print_meta: n_expert_used    = 0
0.00.607.061 I llm_load_print_meta: causal attn      = 1
0.00.607.062 I llm_load_print_meta: pooling type     = 0
0.00.607.062 I llm_load_print_meta: rope type        = 2
0.00.607.062 I llm_load_print_meta: rope scaling     = linear
0.00.607.064 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.607.065 I llm_load_print_meta: freq_scale_train = 1
0.00.607.065 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.607.068 I llm_load_print_meta: rope_finetuned   = unknown
0.00.607.069 I llm_load_print_meta: ssm_d_conv       = 0
0.00.607.069 I llm_load_print_meta: ssm_d_inner      = 0
0.00.607.069 I llm_load_print_meta: ssm_d_state      = 0
0.00.607.070 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.607.070 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.607.071 I llm_load_print_meta: model type       = 2B
0.00.607.072 I llm_load_print_meta: model ftype      = Q8_0
0.00.607.073 I llm_load_print_meta: model params     = 2.51 B
0.00.607.074 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.607.074 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.607.075 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.607.075 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.607.076 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.607.077 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.607.078 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.607.079 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.607.084 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.607.086 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.607.086 I llm_load_print_meta: max token length = 93
0.00.607.247 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.678.101 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.678.108 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.683.629 I llama_new_context_with_model: n_ctx      = 8192
0.00.683.635 I llama_new_context_with_model: n_batch    = 2048
0.00.683.636 I llama_new_context_with_model: n_ubatch   = 512
0.00.683.636 I llama_new_context_with_model: flash_attn = 0
0.00.683.639 I llama_new_context_with_model: freq_base  = 10000.0
0.00.683.639 I llama_new_context_with_model: freq_scale = 1
0.00.713.231 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.713.275 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.713.386 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.714.769 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.714.774 I llama_new_context_with_model: graph nodes  = 601
0.00.714.774 I llama_new_context_with_model: graph splits = 1
0.00.714.791 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.328.432 I main: llama threadpool init, n_threads = 4
0.01.328.445 I 
0.01.328.553 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.328.557 I 
0.01.328.718 I sampler seed: 218558258
0.01.328.729 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.328.735 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.328.736 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.328.736 I 
 increasities, and the impact of media framing on the public's perception of a crisis.

**Answer:**

**1. The Impact of Communication on

0.14.878.306 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.85 tokens per second)
0.14.878.309 I llama_perf_context_print:        load time =    1325.54 ms
0.14.878.322 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.878.325 I llama_perf_context_print:        eval time =   13467.51 ms /    32 runs   (  420.86 ms per token,     2.38 tokens per second)
0.14.878.326 I llama_perf_context_print:       total time =   13549.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m2.128s
user	3m20.967s
sys	0m9.460s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3944 (2b27d388)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198474.34 ms
main:    total time = 198474.34 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.630 I build: 3944 (2b27d388) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.841 I main: llama backend init
0.00.002.791 I main: load the model and apply lora adapter, if any
0.00.027.718 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.027.920 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.028.009 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.028.020 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.028.022 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.028.026 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.028.028 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.028.037 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.028.040 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.028.041 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.028.042 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.028.048 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.028.049 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.028.050 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.028.051 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.028.052 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.959 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.253.720 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.954 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.963 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.964 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.966 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.967 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.968 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.969 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.972 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.973 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.974 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.975 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.976 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.985 I llama_model_loader: - type  f32:   37 tensors
0.00.271.989 I llama_model_loader: - type q4_K:  108 tensors
0.00.271.989 I llama_model_loader: - type q6_K:   19 tensors
0.00.448.343 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.489.178 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.490.870 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.495.941 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.506.595 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.507.459 I llm_load_vocab: special tokens cache size = 5
0.00.603.048 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.114 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.115 I llm_load_print_meta: arch             = gemma
0.00.603.116 I llm_load_print_meta: vocab type       = SPM
0.00.603.117 I llm_load_print_meta: n_vocab          = 256000
0.00.603.119 I llm_load_print_meta: n_merges         = 0
0.00.603.119 I llm_load_print_meta: vocab_only       = 0
0.00.603.120 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.120 I llm_load_print_meta: n_embd           = 2048
0.00.603.120 I llm_load_print_meta: n_layer          = 18
0.00.603.182 I llm_load_print_meta: n_head           = 8
0.00.603.189 I llm_load_print_meta: n_head_kv        = 1
0.00.603.190 I llm_load_print_meta: n_rot            = 256
0.00.603.191 I llm_load_print_meta: n_swa            = 0
0.00.603.192 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.202 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.208 I llm_load_print_meta: n_gqa            = 8
0.00.603.213 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.218 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.219 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.221 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.221 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.222 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.222 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.228 I llm_load_print_meta: n_ff             = 16384
0.00.603.228 I llm_load_print_meta: n_expert         = 0
0.00.603.229 I llm_load_print_meta: n_expert_used    = 0
0.00.603.230 I llm_load_print_meta: causal attn      = 1
0.00.603.230 I llm_load_print_meta: pooling type     = 0
0.00.603.231 I llm_load_print_meta: rope type        = 2
0.00.603.232 I llm_load_print_meta: rope scaling     = linear
0.00.603.233 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.234 I llm_load_print_meta: freq_scale_train = 1
0.00.603.234 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.235 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.235 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.236 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.236 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.236 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.237 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.238 I llm_load_print_meta: model type       = 2B
0.00.603.239 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.603.240 I llm_load_print_meta: model params     = 2.51 B
0.00.603.241 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.603.241 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.242 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.243 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.243 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.244 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.244 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.247 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.253 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.254 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.255 I llm_load_print_meta: max token length = 93
0.00.603.421 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.663.706 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.663.715 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.663.716 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.663.716 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.663.717 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.663.718 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.669.288 I llama_new_context_with_model: n_ctx      = 8192
0.00.669.294 I llama_new_context_with_model: n_batch    = 2048
0.00.669.294 I llama_new_context_with_model: n_ubatch   = 512
0.00.669.295 I llama_new_context_with_model: flash_attn = 0
0.00.669.298 I llama_new_context_with_model: freq_base  = 10000.0
0.00.669.298 I llama_new_context_with_model: freq_scale = 1
0.00.698.764 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.698.808 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.698.903 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.700.076 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.700.080 I llama_new_context_with_model: graph nodes  = 601
0.00.700.081 I llama_new_context_with_model: graph splits = 1
0.00.700.095 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.290.452 I main: llama threadpool init, n_threads = 4
0.01.290.463 I 
0.01.290.570 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.290.574 I 
0.01.290.741 I sampler seed: 2122199680
0.01.290.751 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.290.758 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.290.758 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.290.768 I 
 encompases the vast array of the world's languages, encompassing over 7,000 distinct languages.

**a) How many distinct languages are

0.12.190.817 I llama_perf_sampler_print:    sampling time =      50.22 ms /    33 runs   (    1.52 ms per token,   657.07 tokens per second)
0.12.190.833 I llama_perf_context_print:        load time =    1287.57 ms
0.12.190.835 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.190.836 I llama_perf_context_print:        eval time =   10815.97 ms /    32 runs   (  338.00 ms per token,     2.96 tokens per second)
0.12.190.837 I llama_perf_context_print:       total time =   10900.38 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3944 (2b27d388)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198427.94 ms
main:    total time = 198427.94 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.619 I build: 3944 (2b27d388) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.821 I main: llama backend init
0.00.002.778 I main: load the model and apply lora adapter, if any
0.00.024.575 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.662 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.675 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.677 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.681 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.685 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.686 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.687 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.688 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.688 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.694 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.695 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.696 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.697 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.699 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.874 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.266 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.241 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.248 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.249 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.250 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.251 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.252 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.253 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.257 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.258 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.267 I llama_model_loader: - type  f32:   37 tensors
0.00.268.271 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.271 I llama_model_loader: - type q6_K:   19 tensors
0.00.444.924 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.486.914 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.488.560 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.493.499 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.503.932 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.504.826 I llm_load_vocab: special tokens cache size = 5
0.00.601.001 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.067 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.071 I llm_load_print_meta: arch             = gemma
0.00.601.072 I llm_load_print_meta: vocab type       = SPM
0.00.601.073 I llm_load_print_meta: n_vocab          = 256000
0.00.601.075 I llm_load_print_meta: n_merges         = 0
0.00.601.075 I llm_load_print_meta: vocab_only       = 0
0.00.601.076 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.076 I llm_load_print_meta: n_embd           = 2048
0.00.601.077 I llm_load_print_meta: n_layer          = 18
0.00.601.141 I llm_load_print_meta: n_head           = 8
0.00.601.151 I llm_load_print_meta: n_head_kv        = 1
0.00.601.152 I llm_load_print_meta: n_rot            = 256
0.00.601.153 I llm_load_print_meta: n_swa            = 0
0.00.601.154 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.155 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.160 I llm_load_print_meta: n_gqa            = 8
0.00.601.165 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.172 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.173 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.174 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.175 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.175 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.176 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.181 I llm_load_print_meta: n_ff             = 16384
0.00.601.182 I llm_load_print_meta: n_expert         = 0
0.00.601.182 I llm_load_print_meta: n_expert_used    = 0
0.00.601.183 I llm_load_print_meta: causal attn      = 1
0.00.601.183 I llm_load_print_meta: pooling type     = 0
0.00.601.183 I llm_load_print_meta: rope type        = 2
0.00.601.184 I llm_load_print_meta: rope scaling     = linear
0.00.601.188 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.189 I llm_load_print_meta: freq_scale_train = 1
0.00.601.189 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.601.190 I llm_load_print_meta: rope_finetuned   = unknown
0.00.601.190 I llm_load_print_meta: ssm_d_conv       = 0
0.00.601.190 I llm_load_print_meta: ssm_d_inner      = 0
0.00.601.190 I llm_load_print_meta: ssm_d_state      = 0
0.00.601.191 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.601.191 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.601.192 I llm_load_print_meta: model type       = 2B
0.00.601.193 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.601.194 I llm_load_print_meta: model params     = 2.51 B
0.00.601.196 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.601.197 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.601.198 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.601.198 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.601.199 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.601.200 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.601.200 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.601.200 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.601.206 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.601.207 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.601.208 I llm_load_print_meta: max token length = 93
0.00.601.376 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.659.816 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.665.338 I llama_new_context_with_model: n_ctx      = 8192
0.00.665.345 I llama_new_context_with_model: n_batch    = 2048
0.00.665.346 I llama_new_context_with_model: n_ubatch   = 512
0.00.665.346 I llama_new_context_with_model: flash_attn = 0
0.00.665.348 I llama_new_context_with_model: freq_base  = 10000.0
0.00.665.349 I llama_new_context_with_model: freq_scale = 1
0.00.693.996 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.694.038 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.694.150 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.695.471 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.695.476 I llama_new_context_with_model: graph nodes  = 601
0.00.695.476 I llama_new_context_with_model: graph splits = 1
0.00.695.492 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.273.128 I main: llama threadpool init, n_threads = 4
0.01.273.140 I 
0.01.273.246 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.273.250 I 
0.01.273.419 I sampler seed: 2635931392
0.01.273.430 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.273.435 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.273.436 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.273.436 I 
 encompsively:

**1. Introduction:**
- The essay will discuss the significance of storytelling in preserving cultural heritage.
- Storytelling is a powerful tool for

0.12.316.291 I llama_perf_sampler_print:    sampling time =      49.09 ms /    33 runs   (    1.49 ms per token,   672.18 tokens per second)
0.12.316.295 I llama_perf_context_print:        load time =    1270.27 ms
0.12.316.309 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.316.311 I llama_perf_context_print:        eval time =   10961.57 ms /    32 runs   (  342.55 ms per token,     2.92 tokens per second)
0.12.316.313 I llama_perf_context_print:       total time =   11043.17 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m4.257s
user	50m6.283s
sys	0m6.249s
