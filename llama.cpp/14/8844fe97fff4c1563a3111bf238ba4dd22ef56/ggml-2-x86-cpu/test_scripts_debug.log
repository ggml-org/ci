+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.637 I build: 3863 (148844fe) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.840 I main: llama backend init
0.00.002.775 I main: load the model and apply lora adapter, if any
0.00.024.995 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.189 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.284 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.296 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.298 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.302 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.303 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.304 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.305 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.306 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.306 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.314 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.315 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.315 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.316 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.317 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.018 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.760 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.802 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.810 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.811 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.812 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.813 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.814 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.815 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.818 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.819 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.820 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.193.821 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.193.822 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.193.830 I llama_model_loader: - type  f32:   37 tensors
0.00.193.835 I llama_model_loader: - type q8_0:  127 tensors
0.00.339.508 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.363.318 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.364.344 I llm_load_vocab: special tokens cache size = 5
0.00.422.032 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.422.089 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.422.093 I llm_load_print_meta: arch             = gemma
0.00.422.094 I llm_load_print_meta: vocab type       = SPM
0.00.422.095 I llm_load_print_meta: n_vocab          = 256000
0.00.422.097 I llm_load_print_meta: n_merges         = 0
0.00.422.098 I llm_load_print_meta: vocab_only       = 0
0.00.422.098 I llm_load_print_meta: n_ctx_train      = 8192
0.00.422.099 I llm_load_print_meta: n_embd           = 2048
0.00.422.100 I llm_load_print_meta: n_layer          = 18
0.00.422.162 I llm_load_print_meta: n_head           = 8
0.00.422.172 I llm_load_print_meta: n_head_kv        = 1
0.00.422.172 I llm_load_print_meta: n_rot            = 256
0.00.422.172 I llm_load_print_meta: n_swa            = 0
0.00.422.174 I llm_load_print_meta: n_embd_head_k    = 256
0.00.422.174 I llm_load_print_meta: n_embd_head_v    = 256
0.00.422.179 I llm_load_print_meta: n_gqa            = 8
0.00.422.183 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.422.188 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.422.192 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.422.194 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.422.194 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.422.194 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.422.195 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.422.200 I llm_load_print_meta: n_ff             = 16384
0.00.422.200 I llm_load_print_meta: n_expert         = 0
0.00.422.201 I llm_load_print_meta: n_expert_used    = 0
0.00.422.201 I llm_load_print_meta: causal attn      = 1
0.00.422.202 I llm_load_print_meta: pooling type     = 0
0.00.422.202 I llm_load_print_meta: rope type        = 2
0.00.422.224 I llm_load_print_meta: rope scaling     = linear
0.00.422.226 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.422.227 I llm_load_print_meta: freq_scale_train = 1
0.00.422.228 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.422.228 I llm_load_print_meta: rope_finetuned   = unknown
0.00.422.228 I llm_load_print_meta: ssm_d_conv       = 0
0.00.422.229 I llm_load_print_meta: ssm_d_inner      = 0
0.00.422.232 I llm_load_print_meta: ssm_d_state      = 0
0.00.422.232 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.422.233 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.422.233 I llm_load_print_meta: model type       = 2B
0.00.422.235 I llm_load_print_meta: model ftype      = Q8_0
0.00.422.235 I llm_load_print_meta: model params     = 2.51 B
0.00.422.236 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.422.236 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.422.237 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.422.237 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.422.245 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.422.246 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.422.247 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.422.248 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.422.254 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.422.256 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.422.256 I llm_load_print_meta: max token length = 93
0.00.422.434 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.520.686 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.520.696 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.520.697 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.520.697 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.520.698 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.520.699 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.526.357 I llama_new_context_with_model: n_ctx      = 8192
0.00.526.365 I llama_new_context_with_model: n_batch    = 2048
0.00.526.365 I llama_new_context_with_model: n_ubatch   = 512
0.00.526.366 I llama_new_context_with_model: flash_attn = 0
0.00.526.369 I llama_new_context_with_model: freq_base  = 10000.0
0.00.526.370 I llama_new_context_with_model: freq_scale = 1
0.00.555.579 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.555.620 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.555.744 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.557.154 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.557.159 I llama_new_context_with_model: graph nodes  = 601
0.00.557.160 I llama_new_context_with_model: graph splits = 1
0.00.557.175 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.168.599 I main: llama threadpool init, n_threads = 4
0.01.168.611 I 
0.01.168.707 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.168.710 I 
0.01.168.891 I sampler seed: 856179440
0.01.168.901 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.168.906 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.168.906 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.168.907 I 
 increasities and contradictions in the claim: "The stock market is a self-regulating system."

**Counterargument:**

The stock market is not a

0.14.627.199 I llama_perf_sampler_print:    sampling time =      49.29 ms /    33 runs   (    1.49 ms per token,   669.48 tokens per second)
0.14.627.203 I llama_perf_context_print:        load time =    1165.74 ms
0.14.627.217 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.627.219 I llama_perf_context_print:        eval time =   13376.34 ms /    32 runs   (  418.01 ms per token,     2.39 tokens per second)
0.14.627.220 I llama_perf_context_print:       total time =   13458.61 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.659 I build: 3863 (148844fe) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.859 I main: llama backend init
0.00.002.825 I main: load the model and apply lora adapter, if any
0.00.025.038 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.133 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.149 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.153 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.157 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.158 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.159 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.160 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.161 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.162 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.169 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.169 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.170 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.171 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.172 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.000 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.745 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.876 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.886 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.887 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.888 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.889 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.890 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.891 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.895 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.895 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.896 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.193.897 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.193.898 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.193.908 I llama_model_loader: - type  f32:   37 tensors
0.00.193.912 I llama_model_loader: - type q8_0:  127 tensors
0.00.346.036 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.370.214 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.371.227 I llm_load_vocab: special tokens cache size = 5
0.00.428.962 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.429.022 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.429.026 I llm_load_print_meta: arch             = gemma
0.00.429.027 I llm_load_print_meta: vocab type       = SPM
0.00.429.028 I llm_load_print_meta: n_vocab          = 256000
0.00.429.031 I llm_load_print_meta: n_merges         = 0
0.00.429.032 I llm_load_print_meta: vocab_only       = 0
0.00.429.032 I llm_load_print_meta: n_ctx_train      = 8192
0.00.429.033 I llm_load_print_meta: n_embd           = 2048
0.00.429.033 I llm_load_print_meta: n_layer          = 18
0.00.429.094 I llm_load_print_meta: n_head           = 8
0.00.429.103 I llm_load_print_meta: n_head_kv        = 1
0.00.429.103 I llm_load_print_meta: n_rot            = 256
0.00.429.104 I llm_load_print_meta: n_swa            = 0
0.00.429.104 I llm_load_print_meta: n_embd_head_k    = 256
0.00.429.104 I llm_load_print_meta: n_embd_head_v    = 256
0.00.429.109 I llm_load_print_meta: n_gqa            = 8
0.00.429.114 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.429.119 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.429.122 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.429.123 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.429.123 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.429.124 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.429.124 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.429.130 I llm_load_print_meta: n_ff             = 16384
0.00.429.130 I llm_load_print_meta: n_expert         = 0
0.00.429.130 I llm_load_print_meta: n_expert_used    = 0
0.00.429.131 I llm_load_print_meta: causal attn      = 1
0.00.429.131 I llm_load_print_meta: pooling type     = 0
0.00.429.132 I llm_load_print_meta: rope type        = 2
0.00.429.132 I llm_load_print_meta: rope scaling     = linear
0.00.429.134 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.429.134 I llm_load_print_meta: freq_scale_train = 1
0.00.429.135 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.429.136 I llm_load_print_meta: rope_finetuned   = unknown
0.00.429.136 I llm_load_print_meta: ssm_d_conv       = 0
0.00.429.136 I llm_load_print_meta: ssm_d_inner      = 0
0.00.429.138 I llm_load_print_meta: ssm_d_state      = 0
0.00.429.139 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.429.139 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.429.142 I llm_load_print_meta: model type       = 2B
0.00.429.143 I llm_load_print_meta: model ftype      = Q8_0
0.00.429.144 I llm_load_print_meta: model params     = 2.51 B
0.00.429.145 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.429.145 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.429.146 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.429.146 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.429.147 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.429.147 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.429.148 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.429.149 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.429.155 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.429.156 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.429.157 I llm_load_print_meta: max token length = 93
0.00.429.328 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.524.370 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.530.864 I llama_new_context_with_model: n_ctx      = 8192
0.00.530.872 I llama_new_context_with_model: n_batch    = 2048
0.00.530.872 I llama_new_context_with_model: n_ubatch   = 512
0.00.530.872 I llama_new_context_with_model: flash_attn = 0
0.00.530.875 I llama_new_context_with_model: freq_base  = 10000.0
0.00.530.876 I llama_new_context_with_model: freq_scale = 1
0.00.562.428 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.562.474 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.562.586 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.564.010 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.564.016 I llama_new_context_with_model: graph nodes  = 601
0.00.564.017 I llama_new_context_with_model: graph splits = 1
0.00.564.032 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.177.230 I main: llama threadpool init, n_threads = 4
0.01.177.242 I 
0.01.177.332 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.177.336 I 
0.01.177.529 I sampler seed: 3316877657
0.01.177.539 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.177.546 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.177.547 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.177.547 I 
 increably! [end of text]


0.02.899.636 I llama_perf_sampler_print:    sampling time =       6.25 ms /     5 runs   (    1.25 ms per token,   799.49 tokens per second)
0.02.899.640 I llama_perf_context_print:        load time =    1174.32 ms
0.02.899.642 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.899.644 I llama_perf_context_print:        eval time =    1710.61 ms /     4 runs   (  427.65 ms per token,     2.34 tokens per second)
0.02.899.645 I llama_perf_context_print:       total time =    1722.42 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.649 I build: 3863 (148844fe) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.794 I main: load the model and apply lora adapter, if any
0.00.024.833 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.030 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.122 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.133 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.135 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.139 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.140 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.142 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.143 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.144 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.145 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.152 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.153 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.153 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.155 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.156 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.711 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.182.184 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.194.271 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.194.279 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.194.280 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.194.281 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.194.281 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.194.282 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.194.283 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.194.287 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.194.287 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.194.288 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.194.289 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.194.290 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.194.298 I llama_model_loader: - type  f32:   37 tensors
0.00.194.303 I llama_model_loader: - type q8_0:  127 tensors
0.00.344.800 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.370.186 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.371.206 I llm_load_vocab: special tokens cache size = 5
0.00.428.792 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.428.852 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.428.854 I llm_load_print_meta: arch             = gemma
0.00.428.854 I llm_load_print_meta: vocab type       = SPM
0.00.428.855 I llm_load_print_meta: n_vocab          = 256000
0.00.428.858 I llm_load_print_meta: n_merges         = 0
0.00.428.858 I llm_load_print_meta: vocab_only       = 0
0.00.428.859 I llm_load_print_meta: n_ctx_train      = 8192
0.00.428.859 I llm_load_print_meta: n_embd           = 2048
0.00.428.860 I llm_load_print_meta: n_layer          = 18
0.00.428.925 I llm_load_print_meta: n_head           = 8
0.00.428.932 I llm_load_print_meta: n_head_kv        = 1
0.00.428.932 I llm_load_print_meta: n_rot            = 256
0.00.428.933 I llm_load_print_meta: n_swa            = 0
0.00.428.933 I llm_load_print_meta: n_embd_head_k    = 256
0.00.428.934 I llm_load_print_meta: n_embd_head_v    = 256
0.00.428.938 I llm_load_print_meta: n_gqa            = 8
0.00.428.965 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.428.971 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.428.972 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.428.973 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.428.974 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.428.974 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.428.975 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.428.980 I llm_load_print_meta: n_ff             = 16384
0.00.428.981 I llm_load_print_meta: n_expert         = 0
0.00.428.981 I llm_load_print_meta: n_expert_used    = 0
0.00.428.981 I llm_load_print_meta: causal attn      = 1
0.00.428.982 I llm_load_print_meta: pooling type     = 0
0.00.428.990 I llm_load_print_meta: rope type        = 2
0.00.428.991 I llm_load_print_meta: rope scaling     = linear
0.00.429.001 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.429.002 I llm_load_print_meta: freq_scale_train = 1
0.00.429.002 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.429.003 I llm_load_print_meta: rope_finetuned   = unknown
0.00.429.003 I llm_load_print_meta: ssm_d_conv       = 0
0.00.429.010 I llm_load_print_meta: ssm_d_inner      = 0
0.00.429.011 I llm_load_print_meta: ssm_d_state      = 0
0.00.429.019 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.429.020 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.429.020 I llm_load_print_meta: model type       = 2B
0.00.429.021 I llm_load_print_meta: model ftype      = Q8_0
0.00.429.022 I llm_load_print_meta: model params     = 2.51 B
0.00.429.022 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.429.023 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.429.030 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.429.031 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.429.032 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.429.032 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.429.040 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.429.041 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.429.047 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.429.048 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.429.049 I llm_load_print_meta: max token length = 93
0.00.429.227 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.504.708 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.504.718 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.504.719 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.504.719 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.504.720 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.504.721 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.510.375 I llama_new_context_with_model: n_ctx      = 8192
0.00.510.383 I llama_new_context_with_model: n_batch    = 2048
0.00.510.383 I llama_new_context_with_model: n_ubatch   = 512
0.00.510.384 I llama_new_context_with_model: flash_attn = 0
0.00.510.386 I llama_new_context_with_model: freq_base  = 10000.0
0.00.510.387 I llama_new_context_with_model: freq_scale = 1
0.00.540.285 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.540.331 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.540.446 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.541.847 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.541.854 I llama_new_context_with_model: graph nodes  = 601
0.00.541.854 I llama_new_context_with_model: graph splits = 1
0.00.541.872 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.152.690 I main: llama threadpool init, n_threads = 4
0.01.152.703 I 
0.01.152.794 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.152.798 I 
0.01.152.967 I sampler seed: 88590575
0.01.152.979 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.152.984 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.152.985 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.152.986 I 
 increasities and how they can be resolved.

**1. Defining the Issue:**

- Identifying the specific communication breakdowns or misunderstandings.
- Understanding the

0.14.480.232 I llama_perf_sampler_print:    sampling time =      49.27 ms /    33 runs   (    1.49 ms per token,   669.74 tokens per second)
0.14.480.236 I llama_perf_context_print:        load time =    1149.82 ms
0.14.480.238 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.480.240 I llama_perf_context_print:        eval time =   13245.13 ms /    32 runs   (  413.91 ms per token,     2.42 tokens per second)
0.14.480.241 I llama_perf_context_print:       total time =   13327.55 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.644 I build: 3863 (148844fe) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.871 I main: llama backend init
0.00.002.821 I main: load the model and apply lora adapter, if any
0.00.025.297 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.491 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.582 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.595 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.596 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.601 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.605 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.606 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.607 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.608 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.608 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.616 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.617 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.618 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.618 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.619 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.100.229 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.195.022 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.207.310 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.207.320 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.207.321 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.207.322 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.207.323 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.207.324 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.207.325 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.207.328 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.207.329 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.207.330 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.207.330 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.207.331 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.207.339 I llama_model_loader: - type  f32:   37 tensors
0.00.207.343 I llama_model_loader: - type q8_0:  127 tensors
0.00.360.307 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.387.579 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.388.615 I llm_load_vocab: special tokens cache size = 5
0.00.446.720 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.446.785 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.446.786 I llm_load_print_meta: arch             = gemma
0.00.446.787 I llm_load_print_meta: vocab type       = SPM
0.00.446.787 I llm_load_print_meta: n_vocab          = 256000
0.00.446.790 I llm_load_print_meta: n_merges         = 0
0.00.446.790 I llm_load_print_meta: vocab_only       = 0
0.00.446.791 I llm_load_print_meta: n_ctx_train      = 8192
0.00.446.791 I llm_load_print_meta: n_embd           = 2048
0.00.446.791 I llm_load_print_meta: n_layer          = 18
0.00.446.855 I llm_load_print_meta: n_head           = 8
0.00.446.862 I llm_load_print_meta: n_head_kv        = 1
0.00.446.862 I llm_load_print_meta: n_rot            = 256
0.00.446.863 I llm_load_print_meta: n_swa            = 0
0.00.446.863 I llm_load_print_meta: n_embd_head_k    = 256
0.00.446.863 I llm_load_print_meta: n_embd_head_v    = 256
0.00.446.868 I llm_load_print_meta: n_gqa            = 8
0.00.446.872 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.446.877 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.446.878 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.446.879 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.446.880 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.446.880 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.446.881 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.446.886 I llm_load_print_meta: n_ff             = 16384
0.00.446.887 I llm_load_print_meta: n_expert         = 0
0.00.446.888 I llm_load_print_meta: n_expert_used    = 0
0.00.446.889 I llm_load_print_meta: causal attn      = 1
0.00.446.889 I llm_load_print_meta: pooling type     = 0
0.00.446.889 I llm_load_print_meta: rope type        = 2
0.00.446.902 I llm_load_print_meta: rope scaling     = linear
0.00.446.904 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.446.905 I llm_load_print_meta: freq_scale_train = 1
0.00.446.906 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.446.906 I llm_load_print_meta: rope_finetuned   = unknown
0.00.446.907 I llm_load_print_meta: ssm_d_conv       = 0
0.00.446.907 I llm_load_print_meta: ssm_d_inner      = 0
0.00.446.922 I llm_load_print_meta: ssm_d_state      = 0
0.00.446.923 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.446.927 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.446.928 I llm_load_print_meta: model type       = 2B
0.00.446.938 I llm_load_print_meta: model ftype      = Q8_0
0.00.446.939 I llm_load_print_meta: model params     = 2.51 B
0.00.446.940 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.446.940 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.446.942 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.446.942 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.446.943 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.446.950 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.446.951 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.446.952 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.446.958 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.446.962 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.446.963 I llm_load_print_meta: max token length = 93
0.00.447.140 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.518.933 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.518.945 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.524.713 I llama_new_context_with_model: n_ctx      = 8192
0.00.524.720 I llama_new_context_with_model: n_batch    = 2048
0.00.524.720 I llama_new_context_with_model: n_ubatch   = 512
0.00.524.721 I llama_new_context_with_model: flash_attn = 0
0.00.524.724 I llama_new_context_with_model: freq_base  = 10000.0
0.00.524.724 I llama_new_context_with_model: freq_scale = 1
0.00.554.535 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.554.581 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.554.701 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.556.166 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.556.173 I llama_new_context_with_model: graph nodes  = 601
0.00.556.173 I llama_new_context_with_model: graph splits = 1
0.00.556.188 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.172.389 I main: llama threadpool init, n_threads = 4
0.01.172.400 I 
0.01.172.489 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.172.493 I 
0.01.172.665 I sampler seed: 1268817373
0.01.172.676 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.172.680 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.172.681 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.172.681 I 
 increasities to the Supreme Court of the United States.

**Issue Presented:**

Whether the Supreme Court of the United States has the authority to review the executive

0.14.734.477 I llama_perf_sampler_print:    sampling time =      49.46 ms /    33 runs   (    1.50 ms per token,   667.22 tokens per second)
0.14.734.480 I llama_perf_context_print:        load time =    1169.48 ms
0.14.734.481 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.734.483 I llama_perf_context_print:        eval time =   13479.38 ms /    32 runs   (  421.23 ms per token,     2.37 tokens per second)
0.14.734.508 I llama_perf_context_print:       total time =   13562.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m56.443s
user	3m0.229s
sys	0m9.400s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3863 (148844fe)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199106.52 ms
main:    total time = 199106.52 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.626 I build: 3863 (148844fe) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.824 I main: llama backend init
0.00.002.777 I main: load the model and apply lora adapter, if any
0.00.024.689 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.873 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.963 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.975 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.977 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.984 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.985 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.987 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.988 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.989 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.990 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.996 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.997 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.997 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.998 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.999 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.706 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.151 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.214 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.221 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.222 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.223 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.224 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.225 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.226 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.229 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.230 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.231 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.192.232 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.192.233 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.192.241 I llama_model_loader: - type  f32:   37 tensors
0.00.192.244 I llama_model_loader: - type q4_K:  108 tensors
0.00.192.245 I llama_model_loader: - type q6_K:   19 tensors
0.00.348.849 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.377.835 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.378.897 I llm_load_vocab: special tokens cache size = 5
0.00.436.596 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.436.657 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.436.658 I llm_load_print_meta: arch             = gemma
0.00.436.659 I llm_load_print_meta: vocab type       = SPM
0.00.436.660 I llm_load_print_meta: n_vocab          = 256000
0.00.436.663 I llm_load_print_meta: n_merges         = 0
0.00.436.664 I llm_load_print_meta: vocab_only       = 0
0.00.436.664 I llm_load_print_meta: n_ctx_train      = 8192
0.00.436.665 I llm_load_print_meta: n_embd           = 2048
0.00.436.665 I llm_load_print_meta: n_layer          = 18
0.00.436.729 I llm_load_print_meta: n_head           = 8
0.00.436.735 I llm_load_print_meta: n_head_kv        = 1
0.00.436.736 I llm_load_print_meta: n_rot            = 256
0.00.436.736 I llm_load_print_meta: n_swa            = 0
0.00.436.737 I llm_load_print_meta: n_embd_head_k    = 256
0.00.436.737 I llm_load_print_meta: n_embd_head_v    = 256
0.00.436.741 I llm_load_print_meta: n_gqa            = 8
0.00.436.746 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.436.752 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.436.753 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.436.754 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.436.756 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.436.756 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.436.756 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.436.761 I llm_load_print_meta: n_ff             = 16384
0.00.436.762 I llm_load_print_meta: n_expert         = 0
0.00.436.762 I llm_load_print_meta: n_expert_used    = 0
0.00.436.762 I llm_load_print_meta: causal attn      = 1
0.00.436.762 I llm_load_print_meta: pooling type     = 0
0.00.436.764 I llm_load_print_meta: rope type        = 2
0.00.436.764 I llm_load_print_meta: rope scaling     = linear
0.00.436.766 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.436.768 I llm_load_print_meta: freq_scale_train = 1
0.00.436.768 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.436.769 I llm_load_print_meta: rope_finetuned   = unknown
0.00.436.769 I llm_load_print_meta: ssm_d_conv       = 0
0.00.436.770 I llm_load_print_meta: ssm_d_inner      = 0
0.00.436.770 I llm_load_print_meta: ssm_d_state      = 0
0.00.436.771 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.436.771 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.436.772 I llm_load_print_meta: model type       = 2B
0.00.436.773 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.436.773 I llm_load_print_meta: model params     = 2.51 B
0.00.436.774 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.436.774 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.436.776 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.436.776 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.436.777 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.436.790 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.436.795 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.436.796 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.436.802 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.436.803 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.436.804 I llm_load_print_meta: max token length = 93
0.00.436.985 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.495.831 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.495.844 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.495.845 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.495.845 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.495.846 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.495.847 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.501.507 I llama_new_context_with_model: n_ctx      = 8192
0.00.501.515 I llama_new_context_with_model: n_batch    = 2048
0.00.501.515 I llama_new_context_with_model: n_ubatch   = 512
0.00.501.516 I llama_new_context_with_model: flash_attn = 0
0.00.501.519 I llama_new_context_with_model: freq_base  = 10000.0
0.00.501.520 I llama_new_context_with_model: freq_scale = 1
0.00.531.466 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.531.507 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.531.617 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.532.990 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.532.996 I llama_new_context_with_model: graph nodes  = 601
0.00.532.996 I llama_new_context_with_model: graph splits = 1
0.00.533.011 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.113.721 I main: llama threadpool init, n_threads = 4
0.01.113.733 I 
0.01.113.824 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.113.827 I 
0.01.113.999 I sampler seed: 4258702821
0.01.114.010 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.114.016 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.114.017 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.114.017 I 
 seconal 2019 was a turning point for the global economy, with the world experiencing unprecedented economic growth. This growth was driven by various factors,

0.12.045.926 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.83 tokens per second)
0.12.045.929 I llama_perf_context_print:        load time =    1110.87 ms
0.12.045.931 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.045.932 I llama_perf_context_print:        eval time =   10850.05 ms /    32 runs   (  339.06 ms per token,     2.95 tokens per second)
0.12.045.956 I llama_perf_context_print:       total time =   10932.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3863 (148844fe)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199513.08 ms
main:    total time = 199513.08 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.630 I build: 3863 (148844fe) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.808 I main: load the model and apply lora adapter, if any
0.00.027.220 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.027.321 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.337 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.342 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.347 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.350 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.352 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.354 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.356 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.358 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.365 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.370 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.371 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.372 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.027.376 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.156 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.096 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.191 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.199 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.200 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.201 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.201 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.203 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.203 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.207 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.208 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.217 I llama_model_loader: - type  f32:   37 tensors
0.00.195.221 I llama_model_loader: - type q4_K:  108 tensors
0.00.195.226 I llama_model_loader: - type q6_K:   19 tensors
0.00.339.873 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.364.472 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.365.495 I llm_load_vocab: special tokens cache size = 5
0.00.434.290 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.434.353 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.434.354 I llm_load_print_meta: arch             = gemma
0.00.434.355 I llm_load_print_meta: vocab type       = SPM
0.00.434.356 I llm_load_print_meta: n_vocab          = 256000
0.00.434.358 I llm_load_print_meta: n_merges         = 0
0.00.434.358 I llm_load_print_meta: vocab_only       = 0
0.00.434.359 I llm_load_print_meta: n_ctx_train      = 8192
0.00.434.359 I llm_load_print_meta: n_embd           = 2048
0.00.434.360 I llm_load_print_meta: n_layer          = 18
0.00.434.421 I llm_load_print_meta: n_head           = 8
0.00.434.433 I llm_load_print_meta: n_head_kv        = 1
0.00.434.434 I llm_load_print_meta: n_rot            = 256
0.00.434.436 I llm_load_print_meta: n_swa            = 0
0.00.434.436 I llm_load_print_meta: n_embd_head_k    = 256
0.00.434.437 I llm_load_print_meta: n_embd_head_v    = 256
0.00.434.444 I llm_load_print_meta: n_gqa            = 8
0.00.434.450 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.434.457 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.434.458 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.434.460 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.434.461 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.434.461 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.434.462 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.434.469 I llm_load_print_meta: n_ff             = 16384
0.00.434.474 I llm_load_print_meta: n_expert         = 0
0.00.434.474 I llm_load_print_meta: n_expert_used    = 0
0.00.434.475 I llm_load_print_meta: causal attn      = 1
0.00.434.475 I llm_load_print_meta: pooling type     = 0
0.00.434.479 I llm_load_print_meta: rope type        = 2
0.00.434.479 I llm_load_print_meta: rope scaling     = linear
0.00.434.481 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.434.482 I llm_load_print_meta: freq_scale_train = 1
0.00.434.483 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.434.484 I llm_load_print_meta: rope_finetuned   = unknown
0.00.434.484 I llm_load_print_meta: ssm_d_conv       = 0
0.00.434.484 I llm_load_print_meta: ssm_d_inner      = 0
0.00.434.485 I llm_load_print_meta: ssm_d_state      = 0
0.00.434.485 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.434.486 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.434.487 I llm_load_print_meta: model type       = 2B
0.00.434.489 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.434.490 I llm_load_print_meta: model params     = 2.51 B
0.00.434.491 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.434.492 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.434.494 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.434.494 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.434.496 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.434.497 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.434.501 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.434.501 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.434.508 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.434.510 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.434.511 I llm_load_print_meta: max token length = 93
0.00.434.697 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.492.966 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.498.535 I llama_new_context_with_model: n_ctx      = 8192
0.00.498.541 I llama_new_context_with_model: n_batch    = 2048
0.00.498.541 I llama_new_context_with_model: n_ubatch   = 512
0.00.498.542 I llama_new_context_with_model: flash_attn = 0
0.00.498.544 I llama_new_context_with_model: freq_base  = 10000.0
0.00.498.545 I llama_new_context_with_model: freq_scale = 1
0.00.528.994 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.529.042 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.529.165 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.530.542 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.530.549 I llama_new_context_with_model: graph nodes  = 601
0.00.530.550 I llama_new_context_with_model: graph splits = 1
0.00.530.568 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.113.874 I main: llama threadpool init, n_threads = 4
0.01.113.886 I 
0.01.113.992 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.113.996 I 
0.01.114.172 I sampler seed: 1143901038
0.01.114.184 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.114.189 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.114.190 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.114.190 I 
 increasively!

I am so happy to finally be back in my home country! I missed my family and friends dearly. I am so grateful for the opportunity

0.12.151.686 I llama_perf_sampler_print:    sampling time =      49.09 ms /    33 runs   (    1.49 ms per token,   672.21 tokens per second)
0.12.151.689 I llama_perf_context_print:        load time =    1110.98 ms
0.12.151.690 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.151.692 I llama_perf_context_print:        eval time =   10956.21 ms /    32 runs   (  342.38 ms per token,     2.92 tokens per second)
0.12.151.693 I llama_perf_context_print:       total time =   11037.82 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m5.730s
user	50m14.801s
sys	0m6.227s
