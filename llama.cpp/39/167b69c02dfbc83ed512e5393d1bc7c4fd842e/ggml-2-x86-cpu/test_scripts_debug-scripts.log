+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.651 I build: 3849 (39167b69) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.842 I main: llama backend init
0.00.002.772 I main: load the model and apply lora adapter, if any
0.00.024.837 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.021 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.108 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.119 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.120 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.124 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.125 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.126 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.126 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.127 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.129 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.135 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.136 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.137 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.139 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.140 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.899 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.979 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.090 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.098 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.099 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.100 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.101 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.102 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.103 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.106 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.107 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.108 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.109 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.197.110 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.117 I llama_model_loader: - type  f32:   37 tensors
0.00.197.122 I llama_model_loader: - type q8_0:  127 tensors
0.00.330.820 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.354.931 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.356.043 I llm_load_vocab: special tokens cache size = 5
0.00.412.646 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.412.709 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.412.710 I llm_load_print_meta: arch             = gemma
0.00.412.711 I llm_load_print_meta: vocab type       = SPM
0.00.412.712 I llm_load_print_meta: n_vocab          = 256000
0.00.412.714 I llm_load_print_meta: n_merges         = 0
0.00.412.715 I llm_load_print_meta: vocab_only       = 0
0.00.412.715 I llm_load_print_meta: n_ctx_train      = 8192
0.00.412.715 I llm_load_print_meta: n_embd           = 2048
0.00.412.716 I llm_load_print_meta: n_layer          = 18
0.00.412.779 I llm_load_print_meta: n_head           = 8
0.00.412.786 I llm_load_print_meta: n_head_kv        = 1
0.00.412.787 I llm_load_print_meta: n_rot            = 256
0.00.412.788 I llm_load_print_meta: n_swa            = 0
0.00.412.789 I llm_load_print_meta: n_embd_head_k    = 256
0.00.412.789 I llm_load_print_meta: n_embd_head_v    = 256
0.00.412.794 I llm_load_print_meta: n_gqa            = 8
0.00.412.799 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.412.803 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.412.804 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.412.806 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.412.807 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.412.808 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.412.808 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.412.813 I llm_load_print_meta: n_ff             = 16384
0.00.412.815 I llm_load_print_meta: n_expert         = 0
0.00.412.815 I llm_load_print_meta: n_expert_used    = 0
0.00.412.816 I llm_load_print_meta: causal attn      = 1
0.00.412.826 I llm_load_print_meta: pooling type     = 0
0.00.412.830 I llm_load_print_meta: rope type        = 2
0.00.412.831 I llm_load_print_meta: rope scaling     = linear
0.00.412.833 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.412.833 I llm_load_print_meta: freq_scale_train = 1
0.00.412.834 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.412.846 I llm_load_print_meta: rope_finetuned   = unknown
0.00.412.847 I llm_load_print_meta: ssm_d_conv       = 0
0.00.412.847 I llm_load_print_meta: ssm_d_inner      = 0
0.00.412.847 I llm_load_print_meta: ssm_d_state      = 0
0.00.412.851 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.412.851 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.412.852 I llm_load_print_meta: model type       = 2B
0.00.412.853 I llm_load_print_meta: model ftype      = Q8_0
0.00.412.854 I llm_load_print_meta: model params     = 2.51 B
0.00.412.855 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.412.855 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.412.856 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.412.856 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.412.856 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.412.858 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.412.858 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.412.859 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.412.865 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.412.866 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.412.867 I llm_load_print_meta: max token length = 93
0.00.413.048 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.511.659 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.511.670 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.511.671 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.511.672 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.511.673 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.511.673 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.517.298 I llama_new_context_with_model: n_ctx      = 8192
0.00.517.305 I llama_new_context_with_model: n_batch    = 2048
0.00.517.306 I llama_new_context_with_model: n_ubatch   = 512
0.00.517.307 I llama_new_context_with_model: flash_attn = 0
0.00.517.309 I llama_new_context_with_model: freq_base  = 10000.0
0.00.517.310 I llama_new_context_with_model: freq_scale = 1
0.00.546.483 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.546.529 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.546.643 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.548.025 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.548.031 I llama_new_context_with_model: graph nodes  = 601
0.00.548.032 I llama_new_context_with_model: graph splits = 1
0.00.548.048 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.159.283 I main: llama threadpool init, n_threads = 4
0.01.159.294 I 
0.01.159.387 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.159.390 I 
0.01.159.555 I sampler seed: 1455896151
0.01.159.565 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.159.570 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.159.571 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.159.571 I 
 increasities in a professional setting, such as a hospital or clinic, are a serious concern.

**Measures to mitigate the risk of narcissistic behavior and other forms

0.14.781.591 I llama_perf_sampler_print:    sampling time =      49.29 ms /    33 runs   (    1.49 ms per token,   669.55 tokens per second)
0.14.781.607 I llama_perf_context_print:        load time =    1156.42 ms
0.14.781.609 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.781.610 I llama_perf_context_print:        eval time =   13540.45 ms /    32 runs   (  423.14 ms per token,     2.36 tokens per second)
0.14.781.611 I llama_perf_context_print:       total time =   13622.32 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.637 I build: 3849 (39167b69) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.831 I main: llama backend init
0.00.002.765 I main: load the model and apply lora adapter, if any
0.00.025.032 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.121 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.135 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.139 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.143 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.144 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.146 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.147 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.155 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.156 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.163 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.164 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.165 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.166 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.167 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.594 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.434 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.442 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.448 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.449 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.450 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.451 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.452 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.453 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.456 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.457 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.458 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.196.459 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.196.460 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.196.467 I llama_model_loader: - type  f32:   37 tensors
0.00.196.470 I llama_model_loader: - type q8_0:  127 tensors
0.00.331.478 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.354.033 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.355.036 I llm_load_vocab: special tokens cache size = 5
0.00.411.349 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.411.421 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.411.423 I llm_load_print_meta: arch             = gemma
0.00.411.424 I llm_load_print_meta: vocab type       = SPM
0.00.411.425 I llm_load_print_meta: n_vocab          = 256000
0.00.411.427 I llm_load_print_meta: n_merges         = 0
0.00.411.428 I llm_load_print_meta: vocab_only       = 0
0.00.411.429 I llm_load_print_meta: n_ctx_train      = 8192
0.00.411.429 I llm_load_print_meta: n_embd           = 2048
0.00.411.430 I llm_load_print_meta: n_layer          = 18
0.00.411.496 I llm_load_print_meta: n_head           = 8
0.00.411.507 I llm_load_print_meta: n_head_kv        = 1
0.00.411.508 I llm_load_print_meta: n_rot            = 256
0.00.411.508 I llm_load_print_meta: n_swa            = 0
0.00.411.508 I llm_load_print_meta: n_embd_head_k    = 256
0.00.411.509 I llm_load_print_meta: n_embd_head_v    = 256
0.00.411.513 I llm_load_print_meta: n_gqa            = 8
0.00.411.518 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.411.523 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.411.526 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.411.527 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.411.528 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.411.529 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.411.530 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.411.535 I llm_load_print_meta: n_ff             = 16384
0.00.411.536 I llm_load_print_meta: n_expert         = 0
0.00.411.537 I llm_load_print_meta: n_expert_used    = 0
0.00.411.538 I llm_load_print_meta: causal attn      = 1
0.00.411.538 I llm_load_print_meta: pooling type     = 0
0.00.411.538 I llm_load_print_meta: rope type        = 2
0.00.411.553 I llm_load_print_meta: rope scaling     = linear
0.00.411.557 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.411.558 I llm_load_print_meta: freq_scale_train = 1
0.00.411.559 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.411.560 I llm_load_print_meta: rope_finetuned   = unknown
0.00.411.560 I llm_load_print_meta: ssm_d_conv       = 0
0.00.411.561 I llm_load_print_meta: ssm_d_inner      = 0
0.00.411.561 I llm_load_print_meta: ssm_d_state      = 0
0.00.411.562 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.411.562 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.411.563 I llm_load_print_meta: model type       = 2B
0.00.411.575 I llm_load_print_meta: model ftype      = Q8_0
0.00.411.576 I llm_load_print_meta: model params     = 2.51 B
0.00.411.577 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.411.577 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.411.586 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.411.587 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.411.590 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.411.590 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.411.591 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.411.591 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.411.597 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.411.607 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.411.608 I llm_load_print_meta: max token length = 93
0.00.411.782 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.506.050 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.511.731 I llama_new_context_with_model: n_ctx      = 8192
0.00.511.737 I llama_new_context_with_model: n_batch    = 2048
0.00.511.738 I llama_new_context_with_model: n_ubatch   = 512
0.00.511.738 I llama_new_context_with_model: flash_attn = 0
0.00.511.740 I llama_new_context_with_model: freq_base  = 10000.0
0.00.511.741 I llama_new_context_with_model: freq_scale = 1
0.00.540.842 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.540.889 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.541.007 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.542.427 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.542.433 I llama_new_context_with_model: graph nodes  = 601
0.00.542.433 I llama_new_context_with_model: graph splits = 1
0.00.542.450 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.154.489 I main: llama threadpool init, n_threads = 4
0.01.154.500 I 
0.01.154.595 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.154.598 I 
0.01.154.765 I sampler seed: 2559727732
0.01.154.775 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.154.780 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.154.781 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.154.782 I 
 increasels!

I'm not sure what you're trying to say. Can you please rephrase your question? [end of text]


0.12.296.236 I llama_perf_sampler_print:    sampling time =      40.24 ms /    27 runs   (    1.49 ms per token,   670.96 tokens per second)
0.12.296.239 I llama_perf_context_print:        load time =    1151.64 ms
0.12.296.240 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.296.256 I llama_perf_context_print:        eval time =   11074.45 ms /    26 runs   (  425.94 ms per token,     2.35 tokens per second)
0.12.296.257 I llama_perf_context_print:       total time =   11141.76 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.620 I build: 3849 (39167b69) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.812 I main: llama backend init
0.00.002.741 I main: load the model and apply lora adapter, if any
0.00.024.547 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.722 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.805 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.815 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.817 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.820 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.821 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.822 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.823 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.824 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.825 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.830 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.831 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.832 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.835 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.836 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.135 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.417 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.623 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.631 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.632 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.633 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.634 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.635 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.636 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.639 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.640 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.641 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.641 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.197.642 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.651 I llama_model_loader: - type  f32:   37 tensors
0.00.197.655 I llama_model_loader: - type q8_0:  127 tensors
0.00.337.073 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.360.713 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.361.805 I llm_load_vocab: special tokens cache size = 5
0.00.418.195 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.418.251 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.418.255 I llm_load_print_meta: arch             = gemma
0.00.418.256 I llm_load_print_meta: vocab type       = SPM
0.00.418.257 I llm_load_print_meta: n_vocab          = 256000
0.00.418.259 I llm_load_print_meta: n_merges         = 0
0.00.418.259 I llm_load_print_meta: vocab_only       = 0
0.00.418.260 I llm_load_print_meta: n_ctx_train      = 8192
0.00.418.260 I llm_load_print_meta: n_embd           = 2048
0.00.418.260 I llm_load_print_meta: n_layer          = 18
0.00.418.324 I llm_load_print_meta: n_head           = 8
0.00.418.334 I llm_load_print_meta: n_head_kv        = 1
0.00.418.336 I llm_load_print_meta: n_rot            = 256
0.00.418.337 I llm_load_print_meta: n_swa            = 0
0.00.418.348 I llm_load_print_meta: n_embd_head_k    = 256
0.00.418.351 I llm_load_print_meta: n_embd_head_v    = 256
0.00.418.357 I llm_load_print_meta: n_gqa            = 8
0.00.418.362 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.418.366 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.418.370 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.418.371 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.418.372 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.418.372 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.418.373 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.418.378 I llm_load_print_meta: n_ff             = 16384
0.00.418.378 I llm_load_print_meta: n_expert         = 0
0.00.418.379 I llm_load_print_meta: n_expert_used    = 0
0.00.418.380 I llm_load_print_meta: causal attn      = 1
0.00.418.380 I llm_load_print_meta: pooling type     = 0
0.00.418.380 I llm_load_print_meta: rope type        = 2
0.00.418.382 I llm_load_print_meta: rope scaling     = linear
0.00.418.384 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.418.384 I llm_load_print_meta: freq_scale_train = 1
0.00.418.385 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.418.385 I llm_load_print_meta: rope_finetuned   = unknown
0.00.418.386 I llm_load_print_meta: ssm_d_conv       = 0
0.00.418.386 I llm_load_print_meta: ssm_d_inner      = 0
0.00.418.387 I llm_load_print_meta: ssm_d_state      = 0
0.00.418.387 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.418.390 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.418.391 I llm_load_print_meta: model type       = 2B
0.00.418.392 I llm_load_print_meta: model ftype      = Q8_0
0.00.418.392 I llm_load_print_meta: model params     = 2.51 B
0.00.418.393 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.418.393 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.418.394 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.418.395 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.418.395 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.418.395 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.418.396 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.418.396 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.418.402 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.418.404 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.418.417 I llm_load_print_meta: max token length = 93
0.00.418.596 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.495.264 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.495.275 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.495.276 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.495.276 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.495.277 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.495.278 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.500.904 I llama_new_context_with_model: n_ctx      = 8192
0.00.500.911 I llama_new_context_with_model: n_batch    = 2048
0.00.500.912 I llama_new_context_with_model: n_ubatch   = 512
0.00.500.913 I llama_new_context_with_model: flash_attn = 0
0.00.500.916 I llama_new_context_with_model: freq_base  = 10000.0
0.00.500.917 I llama_new_context_with_model: freq_scale = 1
0.00.531.035 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.531.079 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.531.196 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.532.612 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.532.620 I llama_new_context_with_model: graph nodes  = 601
0.00.532.620 I llama_new_context_with_model: graph splits = 1
0.00.532.637 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.146.711 I main: llama threadpool init, n_threads = 4
0.01.146.722 I 
0.01.146.814 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.146.818 I 
0.01.146.983 I sampler seed: 2341294123
0.01.146.995 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.147.000 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.147.002 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.147.002 I 
 increasities and other forms of sexual harassment. [end of text]


0.05.396.529 I llama_perf_sampler_print:    sampling time =      15.48 ms /    11 runs   (    1.41 ms per token,   710.55 tokens per second)
0.05.396.533 I llama_perf_context_print:        load time =    1143.88 ms
0.05.396.535 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.396.558 I llama_perf_context_print:        eval time =    4222.49 ms /    10 runs   (  422.25 ms per token,     2.37 tokens per second)
0.05.396.560 I llama_perf_context_print:       total time =    4249.83 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.623 I build: 3849 (39167b69) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.818 I main: llama backend init
0.00.002.751 I main: load the model and apply lora adapter, if any
0.00.024.505 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.698 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.784 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.795 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.796 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.800 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.803 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.804 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.805 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.806 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.807 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.814 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.815 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.816 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.817 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.818 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.995 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.056 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.054 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.061 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.062 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.063 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.064 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.065 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.066 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.069 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.070 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.071 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.072 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.197.073 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.080 I llama_model_loader: - type  f32:   37 tensors
0.00.197.084 I llama_model_loader: - type q8_0:  127 tensors
0.00.330.531 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.352.916 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.354.003 I llm_load_vocab: special tokens cache size = 5
0.00.410.254 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.410.309 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.410.310 I llm_load_print_meta: arch             = gemma
0.00.410.311 I llm_load_print_meta: vocab type       = SPM
0.00.410.312 I llm_load_print_meta: n_vocab          = 256000
0.00.410.314 I llm_load_print_meta: n_merges         = 0
0.00.410.315 I llm_load_print_meta: vocab_only       = 0
0.00.410.315 I llm_load_print_meta: n_ctx_train      = 8192
0.00.410.315 I llm_load_print_meta: n_embd           = 2048
0.00.410.316 I llm_load_print_meta: n_layer          = 18
0.00.410.377 I llm_load_print_meta: n_head           = 8
0.00.410.384 I llm_load_print_meta: n_head_kv        = 1
0.00.410.385 I llm_load_print_meta: n_rot            = 256
0.00.410.385 I llm_load_print_meta: n_swa            = 0
0.00.410.385 I llm_load_print_meta: n_embd_head_k    = 256
0.00.410.386 I llm_load_print_meta: n_embd_head_v    = 256
0.00.410.390 I llm_load_print_meta: n_gqa            = 8
0.00.410.394 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.410.399 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.410.402 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.410.403 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.410.404 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.410.404 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.410.415 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.410.421 I llm_load_print_meta: n_ff             = 16384
0.00.410.422 I llm_load_print_meta: n_expert         = 0
0.00.410.423 I llm_load_print_meta: n_expert_used    = 0
0.00.410.423 I llm_load_print_meta: causal attn      = 1
0.00.410.424 I llm_load_print_meta: pooling type     = 0
0.00.410.424 I llm_load_print_meta: rope type        = 2
0.00.410.424 I llm_load_print_meta: rope scaling     = linear
0.00.410.426 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.410.427 I llm_load_print_meta: freq_scale_train = 1
0.00.410.431 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.410.432 I llm_load_print_meta: rope_finetuned   = unknown
0.00.410.432 I llm_load_print_meta: ssm_d_conv       = 0
0.00.410.433 I llm_load_print_meta: ssm_d_inner      = 0
0.00.410.433 I llm_load_print_meta: ssm_d_state      = 0
0.00.410.446 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.410.455 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.410.456 I llm_load_print_meta: model type       = 2B
0.00.410.457 I llm_load_print_meta: model ftype      = Q8_0
0.00.410.458 I llm_load_print_meta: model params     = 2.51 B
0.00.410.460 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.410.461 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.410.462 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.410.462 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.410.463 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.410.463 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.410.464 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.410.464 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.410.470 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.410.472 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.410.472 I llm_load_print_meta: max token length = 93
0.00.410.639 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.481.898 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.481.909 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.487.422 I llama_new_context_with_model: n_ctx      = 8192
0.00.487.429 I llama_new_context_with_model: n_batch    = 2048
0.00.487.430 I llama_new_context_with_model: n_ubatch   = 512
0.00.487.430 I llama_new_context_with_model: flash_attn = 0
0.00.487.432 I llama_new_context_with_model: freq_base  = 10000.0
0.00.487.433 I llama_new_context_with_model: freq_scale = 1
0.00.516.348 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.516.388 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.516.505 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.517.899 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.517.905 I llama_new_context_with_model: graph nodes  = 601
0.00.517.905 I llama_new_context_with_model: graph splits = 1
0.00.517.921 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.132.192 I main: llama threadpool init, n_threads = 4
0.01.132.203 I 
0.01.132.295 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.132.299 I 
0.01.132.464 I sampler seed: 2650545341
0.01.132.475 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.132.479 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.132.480 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.132.481 I 
 increasities and anxieties, and a fear of the unknown.

**Answer:** The given text suggests a range of psychological and emotional challenges that individuals may face.

0.14.696.774 I llama_perf_sampler_print:    sampling time =      49.23 ms /    33 runs   (    1.49 ms per token,   670.30 tokens per second)
0.14.696.788 I llama_perf_context_print:        load time =    1129.35 ms
0.14.696.790 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.696.792 I llama_perf_context_print:        eval time =   13482.44 ms /    32 runs   (  421.33 ms per token,     2.37 tokens per second)
0.14.696.793 I llama_perf_context_print:       total time =   13564.59 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m56.722s
user	3m2.125s
sys	0m9.403s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3849 (39167b69)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200329.37 ms
main:    total time = 200329.37 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.620 I build: 3849 (39167b69) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.820 I main: llama backend init
0.00.002.791 I main: load the model and apply lora adapter, if any
0.00.024.559 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.757 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.854 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.867 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.869 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.875 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.878 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.879 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.880 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.881 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.882 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.889 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.890 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.892 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.893 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.895 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.041 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.691 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.662 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.670 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.671 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.672 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.672 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.673 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.674 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.677 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.678 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.679 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.196.680 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.196.681 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.196.689 I llama_model_loader: - type  f32:   37 tensors
0.00.196.693 I llama_model_loader: - type q4_K:  108 tensors
0.00.196.693 I llama_model_loader: - type q6_K:   19 tensors
0.00.336.749 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.359.547 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.360.544 I llm_load_vocab: special tokens cache size = 5
0.00.416.776 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.416.829 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.416.830 I llm_load_print_meta: arch             = gemma
0.00.416.831 I llm_load_print_meta: vocab type       = SPM
0.00.416.832 I llm_load_print_meta: n_vocab          = 256000
0.00.416.834 I llm_load_print_meta: n_merges         = 0
0.00.416.834 I llm_load_print_meta: vocab_only       = 0
0.00.416.835 I llm_load_print_meta: n_ctx_train      = 8192
0.00.416.835 I llm_load_print_meta: n_embd           = 2048
0.00.416.835 I llm_load_print_meta: n_layer          = 18
0.00.416.895 I llm_load_print_meta: n_head           = 8
0.00.416.902 I llm_load_print_meta: n_head_kv        = 1
0.00.416.903 I llm_load_print_meta: n_rot            = 256
0.00.416.904 I llm_load_print_meta: n_swa            = 0
0.00.416.905 I llm_load_print_meta: n_embd_head_k    = 256
0.00.416.905 I llm_load_print_meta: n_embd_head_v    = 256
0.00.416.910 I llm_load_print_meta: n_gqa            = 8
0.00.416.916 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.416.921 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.416.922 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.416.923 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.416.924 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.416.925 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.416.926 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.416.930 I llm_load_print_meta: n_ff             = 16384
0.00.416.931 I llm_load_print_meta: n_expert         = 0
0.00.416.932 I llm_load_print_meta: n_expert_used    = 0
0.00.416.932 I llm_load_print_meta: causal attn      = 1
0.00.416.932 I llm_load_print_meta: pooling type     = 0
0.00.416.933 I llm_load_print_meta: rope type        = 2
0.00.416.934 I llm_load_print_meta: rope scaling     = linear
0.00.416.935 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.416.936 I llm_load_print_meta: freq_scale_train = 1
0.00.416.936 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.416.937 I llm_load_print_meta: rope_finetuned   = unknown
0.00.416.937 I llm_load_print_meta: ssm_d_conv       = 0
0.00.416.938 I llm_load_print_meta: ssm_d_inner      = 0
0.00.416.938 I llm_load_print_meta: ssm_d_state      = 0
0.00.416.939 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.416.939 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.416.940 I llm_load_print_meta: model type       = 2B
0.00.416.941 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.416.942 I llm_load_print_meta: model params     = 2.51 B
0.00.416.943 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.416.943 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.416.944 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.416.945 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.416.945 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.416.945 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.416.946 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.416.947 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.416.952 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.416.954 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.416.954 I llm_load_print_meta: max token length = 93
0.00.417.126 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.476.658 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.476.667 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.476.668 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.476.668 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.476.669 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.476.669 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.482.123 I llama_new_context_with_model: n_ctx      = 8192
0.00.482.130 I llama_new_context_with_model: n_batch    = 2048
0.00.482.131 I llama_new_context_with_model: n_ubatch   = 512
0.00.482.131 I llama_new_context_with_model: flash_attn = 0
0.00.482.134 I llama_new_context_with_model: freq_base  = 10000.0
0.00.482.135 I llama_new_context_with_model: freq_scale = 1
0.00.512.062 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.512.120 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.512.245 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.513.728 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.513.735 I llama_new_context_with_model: graph nodes  = 601
0.00.513.735 I llama_new_context_with_model: graph splits = 1
0.00.513.752 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.102.358 I main: llama threadpool init, n_threads = 4
0.01.102.369 I 
0.01.102.460 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.102.464 I 
0.01.102.628 I sampler seed: 838741262
0.01.102.639 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.102.643 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.102.644 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.102.644 I 
 seconally.

I am unable to generate the requested text because it requires access to personal information. [end of text]


0.08.285.341 I llama_perf_sampler_print:    sampling time =      32.25 ms /    22 runs   (    1.47 ms per token,   682.19 tokens per second)
0.08.285.345 I llama_perf_context_print:        load time =    1099.48 ms
0.08.285.347 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.285.359 I llama_perf_context_print:        eval time =    7128.90 ms /    21 runs   (  339.47 ms per token,     2.95 tokens per second)
0.08.285.360 I llama_perf_context_print:       total time =    7182.99 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3849 (39167b69)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200269.92 ms
main:    total time = 200269.92 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.636 I build: 3849 (39167b69) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.831 I main: llama backend init
0.00.002.766 I main: load the model and apply lora adapter, if any
0.00.025.804 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.896 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.911 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.912 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.916 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.917 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.919 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.920 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.920 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.921 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.927 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.928 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.928 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.929 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.930 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.827 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.800 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.879 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.886 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.887 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.888 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.889 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.890 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.891 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.894 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.895 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.901 I llama_model_loader: - type  f32:   37 tensors
0.00.197.905 I llama_model_loader: - type q4_K:  108 tensors
0.00.197.905 I llama_model_loader: - type q6_K:   19 tensors
0.00.335.200 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.359.758 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.360.747 I llm_load_vocab: special tokens cache size = 5
0.00.417.068 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.417.124 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.417.125 I llm_load_print_meta: arch             = gemma
0.00.417.126 I llm_load_print_meta: vocab type       = SPM
0.00.417.127 I llm_load_print_meta: n_vocab          = 256000
0.00.417.129 I llm_load_print_meta: n_merges         = 0
0.00.417.130 I llm_load_print_meta: vocab_only       = 0
0.00.417.131 I llm_load_print_meta: n_ctx_train      = 8192
0.00.417.131 I llm_load_print_meta: n_embd           = 2048
0.00.417.131 I llm_load_print_meta: n_layer          = 18
0.00.417.195 I llm_load_print_meta: n_head           = 8
0.00.417.202 I llm_load_print_meta: n_head_kv        = 1
0.00.417.203 I llm_load_print_meta: n_rot            = 256
0.00.417.203 I llm_load_print_meta: n_swa            = 0
0.00.417.204 I llm_load_print_meta: n_embd_head_k    = 256
0.00.417.204 I llm_load_print_meta: n_embd_head_v    = 256
0.00.417.208 I llm_load_print_meta: n_gqa            = 8
0.00.417.213 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.417.217 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.417.218 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.417.219 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.417.220 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.417.220 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.417.221 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.417.225 I llm_load_print_meta: n_ff             = 16384
0.00.417.226 I llm_load_print_meta: n_expert         = 0
0.00.417.226 I llm_load_print_meta: n_expert_used    = 0
0.00.417.227 I llm_load_print_meta: causal attn      = 1
0.00.417.227 I llm_load_print_meta: pooling type     = 0
0.00.417.227 I llm_load_print_meta: rope type        = 2
0.00.417.228 I llm_load_print_meta: rope scaling     = linear
0.00.417.229 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.417.230 I llm_load_print_meta: freq_scale_train = 1
0.00.417.230 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.417.231 I llm_load_print_meta: rope_finetuned   = unknown
0.00.417.231 I llm_load_print_meta: ssm_d_conv       = 0
0.00.417.231 I llm_load_print_meta: ssm_d_inner      = 0
0.00.417.231 I llm_load_print_meta: ssm_d_state      = 0
0.00.417.232 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.417.232 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.417.233 I llm_load_print_meta: model type       = 2B
0.00.417.234 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.417.234 I llm_load_print_meta: model params     = 2.51 B
0.00.417.235 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.417.235 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.417.236 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.417.236 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.417.237 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.417.237 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.417.237 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.417.238 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.417.243 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.417.244 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.417.244 I llm_load_print_meta: max token length = 93
0.00.417.421 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.475.281 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.480.775 I llama_new_context_with_model: n_ctx      = 8192
0.00.480.782 I llama_new_context_with_model: n_batch    = 2048
0.00.480.782 I llama_new_context_with_model: n_ubatch   = 512
0.00.480.783 I llama_new_context_with_model: flash_attn = 0
0.00.480.785 I llama_new_context_with_model: freq_base  = 10000.0
0.00.480.786 I llama_new_context_with_model: freq_scale = 1
0.00.510.656 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.510.702 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.510.818 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.512.156 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.512.162 I llama_new_context_with_model: graph nodes  = 601
0.00.512.162 I llama_new_context_with_model: graph splits = 1
0.00.512.178 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.091.656 I main: llama threadpool init, n_threads = 4
0.01.091.667 I 
0.01.091.760 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.091.764 I 
0.01.091.928 I sampler seed: 2991124020
0.01.091.938 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.091.942 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.091.943 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.091.943 I 
 squaRED, a vibrant and diverse community in South Central Los Angeles, has always nurtured a spirit of inclusivity and collaboration.

**Qusreen, a

0.12.075.157 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.56 tokens per second)
0.12.075.171 I llama_perf_context_print:        load time =    1088.81 ms
0.12.075.173 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.075.176 I llama_perf_context_print:        eval time =   10900.45 ms /    32 runs   (  340.64 ms per token,     2.94 tokens per second)
0.12.075.177 I llama_perf_context_print:       total time =   10983.51 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m3.766s
user	50m4.369s
sys	0m6.243s
