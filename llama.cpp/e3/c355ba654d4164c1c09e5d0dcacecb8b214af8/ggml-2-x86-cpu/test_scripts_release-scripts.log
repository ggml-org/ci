+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.525 I build: 3871 (e3c355ba) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.877 I main: load the model and apply lora adapter, if any
0.00.021.819 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.862 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.866 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.871 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.872 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.876 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.876 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.877 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.877 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.878 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.878 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.883 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.883 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.884 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.884 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.885 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.812 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.403 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.254 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.261 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.262 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.262 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.263 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.264 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.265 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.268 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.268 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.270 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.270 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.271 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.275 I llama_model_loader: - type  f32:   37 tensors
0.00.131.278 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.824 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.562 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.260 I llm_load_vocab: special tokens cache size = 5
0.00.223.252 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.265 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.266 I llm_load_print_meta: arch             = gemma
0.00.223.266 I llm_load_print_meta: vocab type       = SPM
0.00.223.267 I llm_load_print_meta: n_vocab          = 256000
0.00.223.267 I llm_load_print_meta: n_merges         = 0
0.00.223.268 I llm_load_print_meta: vocab_only       = 0
0.00.223.268 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.269 I llm_load_print_meta: n_embd           = 2048
0.00.223.269 I llm_load_print_meta: n_layer          = 18
0.00.223.282 I llm_load_print_meta: n_head           = 8
0.00.223.283 I llm_load_print_meta: n_head_kv        = 1
0.00.223.284 I llm_load_print_meta: n_rot            = 256
0.00.223.284 I llm_load_print_meta: n_swa            = 0
0.00.223.284 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.284 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.285 I llm_load_print_meta: n_gqa            = 8
0.00.223.286 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.287 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.288 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.289 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.290 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.290 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.291 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.292 I llm_load_print_meta: n_ff             = 16384
0.00.223.292 I llm_load_print_meta: n_expert         = 0
0.00.223.292 I llm_load_print_meta: n_expert_used    = 0
0.00.223.292 I llm_load_print_meta: causal attn      = 1
0.00.223.293 I llm_load_print_meta: pooling type     = 0
0.00.223.293 I llm_load_print_meta: rope type        = 2
0.00.223.293 I llm_load_print_meta: rope scaling     = linear
0.00.223.295 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.295 I llm_load_print_meta: freq_scale_train = 1
0.00.223.296 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.296 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.296 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.296 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.297 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.297 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.298 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.298 I llm_load_print_meta: model type       = 2B
0.00.223.299 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.299 I llm_load_print_meta: model params     = 2.51 B
0.00.223.300 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.301 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.301 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.301 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.301 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.302 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.302 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.303 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.303 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.304 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.304 I llm_load_print_meta: max token length = 93
0.00.223.325 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.322.400 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.322.408 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.322.408 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.322.409 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.322.410 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.322.410 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.327.405 I llama_new_context_with_model: n_ctx      = 8192
0.00.327.412 I llama_new_context_with_model: n_batch    = 2048
0.00.327.413 I llama_new_context_with_model: n_ubatch   = 512
0.00.327.413 I llama_new_context_with_model: flash_attn = 0
0.00.327.415 I llama_new_context_with_model: freq_base  = 10000.0
0.00.327.416 I llama_new_context_with_model: freq_scale = 1
0.00.356.544 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.356.561 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.356.655 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.524 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.357.531 I llama_new_context_with_model: graph nodes  = 601
0.00.357.532 I llama_new_context_with_model: graph splits = 1
0.00.357.534 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.335 I main: llama threadpool init, n_threads = 4
0.00.451.346 I 
0.00.451.420 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.424 I 
0.00.451.459 I sampler seed: 2344172961
0.00.451.468 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.470 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.471 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.471 I 
 maneupher.

I am unable to access the internet to retrieve the necessary data. Please provide me with the information I need to access the requested data. [end of text]


0.02.747.066 I llama_perf_sampler_print:    sampling time =       5.09 ms /    33 runs   (    0.15 ms per token,  6488.40 tokens per second)
0.02.747.069 I llama_perf_context_print:        load time =     449.43 ms
0.02.747.071 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.747.073 I llama_perf_context_print:        eval time =    2277.13 ms /    32 runs   (   71.16 ms per token,    14.05 tokens per second)
0.02.747.074 I llama_perf_context_print:       total time =    2295.74 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.551 I build: 3871 (e3c355ba) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.846 I main: load the model and apply lora adapter, if any
0.00.022.024 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.037 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.045 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.045 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.050 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.050 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.051 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.052 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.052 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.053 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.058 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.060 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.060 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.061 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.061 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.067 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.481 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.416 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.423 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.424 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.424 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.425 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.426 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.426 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.429 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.430 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.431 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.432 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.433 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.437 I llama_model_loader: - type  f32:   37 tensors
0.00.132.439 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.843 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.532 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.267 I llm_load_vocab: special tokens cache size = 5
0.00.227.395 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.409 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.409 I llm_load_print_meta: arch             = gemma
0.00.227.410 I llm_load_print_meta: vocab type       = SPM
0.00.227.411 I llm_load_print_meta: n_vocab          = 256000
0.00.227.411 I llm_load_print_meta: n_merges         = 0
0.00.227.412 I llm_load_print_meta: vocab_only       = 0
0.00.227.412 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.412 I llm_load_print_meta: n_embd           = 2048
0.00.227.412 I llm_load_print_meta: n_layer          = 18
0.00.227.425 I llm_load_print_meta: n_head           = 8
0.00.227.425 I llm_load_print_meta: n_head_kv        = 1
0.00.227.426 I llm_load_print_meta: n_rot            = 256
0.00.227.426 I llm_load_print_meta: n_swa            = 0
0.00.227.426 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.426 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.428 I llm_load_print_meta: n_gqa            = 8
0.00.227.429 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.430 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.431 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.432 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.432 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.433 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.433 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.434 I llm_load_print_meta: n_ff             = 16384
0.00.227.434 I llm_load_print_meta: n_expert         = 0
0.00.227.434 I llm_load_print_meta: n_expert_used    = 0
0.00.227.435 I llm_load_print_meta: causal attn      = 1
0.00.227.435 I llm_load_print_meta: pooling type     = 0
0.00.227.435 I llm_load_print_meta: rope type        = 2
0.00.227.436 I llm_load_print_meta: rope scaling     = linear
0.00.227.437 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.437 I llm_load_print_meta: freq_scale_train = 1
0.00.227.438 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.438 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.438 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.439 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.439 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.439 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.439 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.440 I llm_load_print_meta: model type       = 2B
0.00.227.441 I llm_load_print_meta: model ftype      = Q8_0
0.00.227.441 I llm_load_print_meta: model params     = 2.51 B
0.00.227.442 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.227.442 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.443 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.443 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.443 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.444 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.444 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.444 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.445 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.445 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.446 I llm_load_print_meta: max token length = 93
0.00.227.471 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.603 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.324.725 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.732 I llama_new_context_with_model: n_batch    = 2048
0.00.324.732 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.733 I llama_new_context_with_model: flash_attn = 0
0.00.324.736 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.737 I llama_new_context_with_model: freq_scale = 1
0.00.355.526 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.355.542 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.355.634 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.485 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.493 I llama_new_context_with_model: graph nodes  = 601
0.00.356.493 I llama_new_context_with_model: graph splits = 1
0.00.356.495 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.892 I main: llama threadpool init, n_threads = 4
0.00.446.905 I 
0.00.446.979 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.983 I 
0.00.447.020 I sampler seed: 2392963506
0.00.447.029 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.031 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.447.032 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.032 I 
 increasities. [end of text]


0.00.729.010 I llama_perf_sampler_print:    sampling time =       0.60 ms /     5 runs   (    0.12 ms per token,  8291.87 tokens per second)
0.00.729.012 I llama_perf_context_print:        load time =     445.02 ms
0.00.729.013 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.729.015 I llama_perf_context_print:        eval time =     279.02 ms /     4 runs   (   69.75 ms per token,    14.34 tokens per second)
0.00.729.015 I llama_perf_context_print:       total time =     282.13 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.555 I build: 3871 (e3c355ba) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.001.836 I main: load the model and apply lora adapter, if any
0.00.022.369 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.419 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.434 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.439 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.440 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.444 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.446 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.447 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.447 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.449 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.449 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.455 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.455 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.456 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.456 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.457 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.150 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.978 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.957 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.966 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.967 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.968 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.969 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.970 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.970 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.974 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.975 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.975 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.976 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.978 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.982 I llama_model_loader: - type  f32:   37 tensors
0.00.132.984 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.147 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.232.354 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.233.160 I llm_load_vocab: special tokens cache size = 5
0.00.254.450 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.254.468 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.254.469 I llm_load_print_meta: arch             = gemma
0.00.254.469 I llm_load_print_meta: vocab type       = SPM
0.00.254.470 I llm_load_print_meta: n_vocab          = 256000
0.00.254.470 I llm_load_print_meta: n_merges         = 0
0.00.254.471 I llm_load_print_meta: vocab_only       = 0
0.00.254.471 I llm_load_print_meta: n_ctx_train      = 8192
0.00.254.471 I llm_load_print_meta: n_embd           = 2048
0.00.254.472 I llm_load_print_meta: n_layer          = 18
0.00.254.487 I llm_load_print_meta: n_head           = 8
0.00.254.487 I llm_load_print_meta: n_head_kv        = 1
0.00.254.488 I llm_load_print_meta: n_rot            = 256
0.00.254.501 I llm_load_print_meta: n_swa            = 0
0.00.254.502 I llm_load_print_meta: n_embd_head_k    = 256
0.00.254.502 I llm_load_print_meta: n_embd_head_v    = 256
0.00.254.503 I llm_load_print_meta: n_gqa            = 8
0.00.254.504 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.254.506 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.254.506 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.254.508 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.254.508 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.254.509 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.254.509 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.254.510 I llm_load_print_meta: n_ff             = 16384
0.00.254.510 I llm_load_print_meta: n_expert         = 0
0.00.254.511 I llm_load_print_meta: n_expert_used    = 0
0.00.254.511 I llm_load_print_meta: causal attn      = 1
0.00.254.511 I llm_load_print_meta: pooling type     = 0
0.00.254.512 I llm_load_print_meta: rope type        = 2
0.00.254.512 I llm_load_print_meta: rope scaling     = linear
0.00.254.513 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.254.514 I llm_load_print_meta: freq_scale_train = 1
0.00.254.514 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.254.515 I llm_load_print_meta: rope_finetuned   = unknown
0.00.254.515 I llm_load_print_meta: ssm_d_conv       = 0
0.00.254.516 I llm_load_print_meta: ssm_d_inner      = 0
0.00.254.517 I llm_load_print_meta: ssm_d_state      = 0
0.00.254.517 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.254.517 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.254.518 I llm_load_print_meta: model type       = 2B
0.00.254.519 I llm_load_print_meta: model ftype      = Q8_0
0.00.254.520 I llm_load_print_meta: model params     = 2.51 B
0.00.254.521 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.254.521 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.254.522 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.254.522 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.254.522 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.254.523 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.254.528 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.254.528 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.254.529 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.254.529 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.254.530 I llm_load_print_meta: max token length = 93
0.00.254.560 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.689 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.329.699 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.329.699 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.329.700 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.329.700 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.329.701 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.334.831 I llama_new_context_with_model: n_ctx      = 8192
0.00.334.838 I llama_new_context_with_model: n_batch    = 2048
0.00.334.838 I llama_new_context_with_model: n_ubatch   = 512
0.00.334.839 I llama_new_context_with_model: flash_attn = 0
0.00.334.842 I llama_new_context_with_model: freq_base  = 10000.0
0.00.334.843 I llama_new_context_with_model: freq_scale = 1
0.00.365.608 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.365.625 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.365.723 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.366.598 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.366.606 I llama_new_context_with_model: graph nodes  = 601
0.00.366.606 I llama_new_context_with_model: graph splits = 1
0.00.366.608 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.467.253 I main: llama threadpool init, n_threads = 4
0.00.467.267 I 
0.00.467.344 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.467.347 I 
0.00.467.389 I sampler seed: 3826112653
0.00.467.399 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.402 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.467.402 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.403 I 
 increasively.

I was never one to follow rules,
I always did what I wanted.
I broke every rule in sight,
And I never

0.02.856.495 I llama_perf_sampler_print:    sampling time =       5.02 ms /    33 runs   (    0.15 ms per token,  6576.33 tokens per second)
0.02.856.497 I llama_perf_context_print:        load time =     465.39 ms
0.02.856.498 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.856.499 I llama_perf_context_print:        eval time =    2370.23 ms /    32 runs   (   74.07 ms per token,    13.50 tokens per second)
0.02.856.500 I llama_perf_context_print:       total time =    2389.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.590 I build: 3871 (e3c355ba) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.810 I main: llama backend init
0.00.001.944 I main: load the model and apply lora adapter, if any
0.00.022.278 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.330 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.341 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.348 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.352 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.357 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.358 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.359 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.361 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.362 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.364 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.370 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.372 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.373 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.373 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.374 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.640 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.126 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.999 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.006 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.007 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.008 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.008 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.010 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.011 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.015 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.015 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.016 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.017 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.018 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.022 I llama_model_loader: - type  f32:   37 tensors
0.00.132.025 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.736 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.571 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.204.295 I llm_load_vocab: special tokens cache size = 5
0.00.225.288 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.303 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.303 I llm_load_print_meta: arch             = gemma
0.00.225.304 I llm_load_print_meta: vocab type       = SPM
0.00.225.304 I llm_load_print_meta: n_vocab          = 256000
0.00.225.305 I llm_load_print_meta: n_merges         = 0
0.00.225.305 I llm_load_print_meta: vocab_only       = 0
0.00.225.306 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.306 I llm_load_print_meta: n_embd           = 2048
0.00.225.306 I llm_load_print_meta: n_layer          = 18
0.00.225.319 I llm_load_print_meta: n_head           = 8
0.00.225.320 I llm_load_print_meta: n_head_kv        = 1
0.00.225.320 I llm_load_print_meta: n_rot            = 256
0.00.225.320 I llm_load_print_meta: n_swa            = 0
0.00.225.321 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.321 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.322 I llm_load_print_meta: n_gqa            = 8
0.00.225.323 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.324 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.325 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.327 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.327 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.327 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.328 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.329 I llm_load_print_meta: n_ff             = 16384
0.00.225.329 I llm_load_print_meta: n_expert         = 0
0.00.225.329 I llm_load_print_meta: n_expert_used    = 0
0.00.225.329 I llm_load_print_meta: causal attn      = 1
0.00.225.330 I llm_load_print_meta: pooling type     = 0
0.00.225.330 I llm_load_print_meta: rope type        = 2
0.00.225.330 I llm_load_print_meta: rope scaling     = linear
0.00.225.331 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.332 I llm_load_print_meta: freq_scale_train = 1
0.00.225.332 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.333 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.333 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.333 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.333 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.334 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.334 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.335 I llm_load_print_meta: model type       = 2B
0.00.225.336 I llm_load_print_meta: model ftype      = Q8_0
0.00.225.337 I llm_load_print_meta: model params     = 2.51 B
0.00.225.338 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.225.338 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.338 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.339 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.339 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.339 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.340 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.340 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.340 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.341 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.341 I llm_load_print_meta: max token length = 93
0.00.225.369 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.295.591 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.295.600 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.300.690 I llama_new_context_with_model: n_ctx      = 8192
0.00.300.698 I llama_new_context_with_model: n_batch    = 2048
0.00.300.698 I llama_new_context_with_model: n_ubatch   = 512
0.00.300.699 I llama_new_context_with_model: flash_attn = 0
0.00.300.701 I llama_new_context_with_model: freq_base  = 10000.0
0.00.300.702 I llama_new_context_with_model: freq_scale = 1
0.00.330.660 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.330.675 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.330.768 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.331.647 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.331.655 I llama_new_context_with_model: graph nodes  = 601
0.00.331.656 I llama_new_context_with_model: graph splits = 1
0.00.331.657 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.426.261 I main: llama threadpool init, n_threads = 4
0.00.426.273 I 
0.00.426.354 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.426.358 I 
0.00.426.404 I sampler seed: 1750341042
0.00.426.413 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.426.416 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.426.417 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.426.417 I 
 secon.

I am unable to access the requested file. The requested file is either non-existent or corrupted.

I apologize for any inconvenience this may cause

0.02.911.280 I llama_perf_sampler_print:    sampling time =       4.90 ms /    33 runs   (    0.15 ms per token,  6741.57 tokens per second)
0.02.911.283 I llama_perf_context_print:        load time =     424.29 ms
0.02.911.285 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.911.286 I llama_perf_context_print:        eval time =    2466.36 ms /    32 runs   (   77.07 ms per token,    12.97 tokens per second)
0.02.911.289 I llama_perf_context_print:       total time =    2485.03 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.907s
user	0m32.565s
sys	0m9.613s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3871 (e3c355ba)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32088.40 ms
main:    total time = 32088.40 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.549 I build: 3871 (e3c355ba) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.829 I main: load the model and apply lora adapter, if any
0.00.022.368 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.417 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.431 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.438 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.439 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.447 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.447 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.448 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.449 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.449 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.450 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.454 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.455 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.455 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.456 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.457 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.757 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.709 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.616 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.625 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.626 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.627 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.627 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.629 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.630 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.634 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.635 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.636 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.637 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.136.639 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.642 I llama_model_loader: - type  f32:   37 tensors
0.00.136.645 I llama_model_loader: - type q4_K:  108 tensors
0.00.136.646 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.113 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.227.744 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.228.540 I llm_load_vocab: special tokens cache size = 5
0.00.249.975 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.249.991 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.249.992 I llm_load_print_meta: arch             = gemma
0.00.249.992 I llm_load_print_meta: vocab type       = SPM
0.00.249.993 I llm_load_print_meta: n_vocab          = 256000
0.00.249.993 I llm_load_print_meta: n_merges         = 0
0.00.249.994 I llm_load_print_meta: vocab_only       = 0
0.00.249.994 I llm_load_print_meta: n_ctx_train      = 8192
0.00.249.994 I llm_load_print_meta: n_embd           = 2048
0.00.249.995 I llm_load_print_meta: n_layer          = 18
0.00.250.010 I llm_load_print_meta: n_head           = 8
0.00.250.011 I llm_load_print_meta: n_head_kv        = 1
0.00.250.011 I llm_load_print_meta: n_rot            = 256
0.00.250.012 I llm_load_print_meta: n_swa            = 0
0.00.250.012 I llm_load_print_meta: n_embd_head_k    = 256
0.00.250.012 I llm_load_print_meta: n_embd_head_v    = 256
0.00.250.013 I llm_load_print_meta: n_gqa            = 8
0.00.250.014 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.250.015 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.250.016 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.250.017 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.250.018 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.250.018 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.250.018 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.250.020 I llm_load_print_meta: n_ff             = 16384
0.00.250.020 I llm_load_print_meta: n_expert         = 0
0.00.250.020 I llm_load_print_meta: n_expert_used    = 0
0.00.250.021 I llm_load_print_meta: causal attn      = 1
0.00.250.021 I llm_load_print_meta: pooling type     = 0
0.00.250.021 I llm_load_print_meta: rope type        = 2
0.00.250.021 I llm_load_print_meta: rope scaling     = linear
0.00.250.022 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.250.023 I llm_load_print_meta: freq_scale_train = 1
0.00.250.023 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.250.024 I llm_load_print_meta: rope_finetuned   = unknown
0.00.250.024 I llm_load_print_meta: ssm_d_conv       = 0
0.00.250.024 I llm_load_print_meta: ssm_d_inner      = 0
0.00.250.025 I llm_load_print_meta: ssm_d_state      = 0
0.00.250.025 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.250.025 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.250.026 I llm_load_print_meta: model type       = 2B
0.00.250.026 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.250.027 I llm_load_print_meta: model params     = 2.51 B
0.00.250.028 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.250.028 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.250.029 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.250.029 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.250.029 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.250.030 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.250.030 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.250.030 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.250.031 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.250.031 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.250.032 I llm_load_print_meta: max token length = 93
0.00.250.066 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.309.348 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.309.357 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.309.358 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.309.359 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.309.359 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.309.360 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.314.571 I llama_new_context_with_model: n_ctx      = 8192
0.00.314.578 I llama_new_context_with_model: n_batch    = 2048
0.00.314.579 I llama_new_context_with_model: n_ubatch   = 512
0.00.314.580 I llama_new_context_with_model: flash_attn = 0
0.00.314.583 I llama_new_context_with_model: freq_base  = 10000.0
0.00.314.584 I llama_new_context_with_model: freq_scale = 1
0.00.345.381 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.345.397 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.345.488 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.346.341 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.346.350 I llama_new_context_with_model: graph nodes  = 601
0.00.346.350 I llama_new_context_with_model: graph splits = 1
0.00.346.352 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.432.279 I main: llama threadpool init, n_threads = 4
0.00.432.292 I 
0.00.432.370 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.432.373 I 
0.00.432.413 I sampler seed: 1610903761
0.00.432.423 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.432.427 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.432.428 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.432.429 I 
 seconded
## Why is this sentence grammatically incorrect?

"The woman with the green dress" is grammatically incorrect because it lacks a definite article.

0.02.146.495 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6556.73 tokens per second)
0.02.146.498 I llama_perf_context_print:        load time =     430.42 ms
0.02.146.499 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.146.500 I llama_perf_context_print:        eval time =    1695.14 ms /    32 runs   (   52.97 ms per token,    18.88 tokens per second)
0.02.146.501 I llama_perf_context_print:       total time =    1714.23 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3871 (e3c355ba)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32136.99 ms
main:    total time = 32136.99 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.550 I build: 3871 (e3c355ba) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.870 I main: load the model and apply lora adapter, if any
0.00.022.119 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.136 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.145 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.146 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.151 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.151 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.152 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.152 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.153 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.153 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.159 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.160 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.160 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.161 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.161 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.627 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.205 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.066 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.074 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.075 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.075 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.076 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.077 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.078 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.082 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.083 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.087 I llama_model_loader: - type  f32:   37 tensors
0.00.132.089 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.090 I llama_model_loader: - type q6_K:   19 tensors
0.00.190.172 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.533 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.326 I llm_load_vocab: special tokens cache size = 5
0.00.226.448 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.464 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.464 I llm_load_print_meta: arch             = gemma
0.00.226.465 I llm_load_print_meta: vocab type       = SPM
0.00.226.466 I llm_load_print_meta: n_vocab          = 256000
0.00.226.466 I llm_load_print_meta: n_merges         = 0
0.00.226.467 I llm_load_print_meta: vocab_only       = 0
0.00.226.467 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.467 I llm_load_print_meta: n_embd           = 2048
0.00.226.468 I llm_load_print_meta: n_layer          = 18
0.00.226.481 I llm_load_print_meta: n_head           = 8
0.00.226.483 I llm_load_print_meta: n_head_kv        = 1
0.00.226.483 I llm_load_print_meta: n_rot            = 256
0.00.226.483 I llm_load_print_meta: n_swa            = 0
0.00.226.484 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.484 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.485 I llm_load_print_meta: n_gqa            = 8
0.00.226.486 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.487 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.487 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.489 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.489 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.489 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.490 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.491 I llm_load_print_meta: n_ff             = 16384
0.00.226.491 I llm_load_print_meta: n_expert         = 0
0.00.226.492 I llm_load_print_meta: n_expert_used    = 0
0.00.226.492 I llm_load_print_meta: causal attn      = 1
0.00.226.492 I llm_load_print_meta: pooling type     = 0
0.00.226.493 I llm_load_print_meta: rope type        = 2
0.00.226.493 I llm_load_print_meta: rope scaling     = linear
0.00.226.494 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.495 I llm_load_print_meta: freq_scale_train = 1
0.00.226.495 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.495 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.495 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.496 I llm_load_print_meta: ssm_d_inner      = 0
0.00.226.496 I llm_load_print_meta: ssm_d_state      = 0
0.00.226.496 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.226.497 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.226.497 I llm_load_print_meta: model type       = 2B
0.00.226.498 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.226.499 I llm_load_print_meta: model params     = 2.51 B
0.00.226.499 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.226.500 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.226.500 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.226.501 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.226.501 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.226.501 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.226.501 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.226.502 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.226.502 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.226.502 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.226.503 I llm_load_print_meta: max token length = 93
0.00.226.532 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.284.068 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.289.166 I llama_new_context_with_model: n_ctx      = 8192
0.00.289.174 I llama_new_context_with_model: n_batch    = 2048
0.00.289.174 I llama_new_context_with_model: n_ubatch   = 512
0.00.289.175 I llama_new_context_with_model: flash_attn = 0
0.00.289.178 I llama_new_context_with_model: freq_base  = 10000.0
0.00.289.179 I llama_new_context_with_model: freq_scale = 1
0.00.319.186 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.319.202 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.319.291 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.320.144 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.320.152 I llama_new_context_with_model: graph nodes  = 601
0.00.320.152 I llama_new_context_with_model: graph splits = 1
0.00.320.155 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.402.711 I main: llama threadpool init, n_threads = 4
0.00.402.725 I 
0.00.402.803 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.402.807 I 
0.00.402.845 I sampler seed: 58971529
0.00.402.854 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.402.857 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.402.857 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.402.857 I 
 squaRED.

**Answer:**

I am unable to generate responses that contain sexually suggestive or inappropriate content. My purpose is to assist with tasks and provide information

0.02.097.884 I llama_perf_sampler_print:    sampling time =       4.67 ms /    33 runs   (    0.14 ms per token,  7061.84 tokens per second)
0.02.097.886 I llama_perf_context_print:        load time =     400.82 ms
0.02.097.887 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.097.888 I llama_perf_context_print:        eval time =    1677.07 ms /    32 runs   (   52.41 ms per token,    19.08 tokens per second)
0.02.097.889 I llama_perf_context_print:       total time =    1695.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.322s
user	8m15.535s
sys	0m7.288s
