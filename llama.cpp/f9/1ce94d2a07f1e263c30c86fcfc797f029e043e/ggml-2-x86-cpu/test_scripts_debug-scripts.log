+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.641 I build: 3920 (f91ce94d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.835 I main: llama backend init
0.00.002.794 I main: load the model and apply lora adapter, if any
0.00.024.902 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.112 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.203 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.216 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.217 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.221 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.223 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.224 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.225 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.227 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.228 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.235 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.237 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.238 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.239 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.240 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.271 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.253.335 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.453 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.463 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.464 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.465 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.466 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.467 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.470 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.474 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.474 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.475 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.476 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.477 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.486 I llama_model_loader: - type  f32:   37 tensors
0.00.271.491 I llama_model_loader: - type q8_0:  127 tensors
0.00.452.565 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.500.049 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.502.237 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.508.910 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.523.243 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.524.294 I llm_load_vocab: special tokens cache size = 5
0.00.620.190 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.620.258 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.620.259 I llm_load_print_meta: arch             = gemma
0.00.620.260 I llm_load_print_meta: vocab type       = SPM
0.00.620.261 I llm_load_print_meta: n_vocab          = 256000
0.00.620.263 I llm_load_print_meta: n_merges         = 0
0.00.620.264 I llm_load_print_meta: vocab_only       = 0
0.00.620.265 I llm_load_print_meta: n_ctx_train      = 8192
0.00.620.265 I llm_load_print_meta: n_embd           = 2048
0.00.620.265 I llm_load_print_meta: n_layer          = 18
0.00.620.328 I llm_load_print_meta: n_head           = 8
0.00.620.335 I llm_load_print_meta: n_head_kv        = 1
0.00.620.335 I llm_load_print_meta: n_rot            = 256
0.00.620.336 I llm_load_print_meta: n_swa            = 0
0.00.620.336 I llm_load_print_meta: n_embd_head_k    = 256
0.00.620.336 I llm_load_print_meta: n_embd_head_v    = 256
0.00.620.341 I llm_load_print_meta: n_gqa            = 8
0.00.620.345 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.620.350 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.620.352 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.620.354 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.620.355 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.620.355 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.620.356 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.620.375 I llm_load_print_meta: n_ff             = 16384
0.00.620.377 I llm_load_print_meta: n_expert         = 0
0.00.620.377 I llm_load_print_meta: n_expert_used    = 0
0.00.620.378 I llm_load_print_meta: causal attn      = 1
0.00.620.378 I llm_load_print_meta: pooling type     = 0
0.00.620.379 I llm_load_print_meta: rope type        = 2
0.00.620.379 I llm_load_print_meta: rope scaling     = linear
0.00.620.381 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.620.382 I llm_load_print_meta: freq_scale_train = 1
0.00.620.383 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.620.384 I llm_load_print_meta: rope_finetuned   = unknown
0.00.620.384 I llm_load_print_meta: ssm_d_conv       = 0
0.00.620.384 I llm_load_print_meta: ssm_d_inner      = 0
0.00.620.385 I llm_load_print_meta: ssm_d_state      = 0
0.00.620.386 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.620.386 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.620.386 I llm_load_print_meta: model type       = 2B
0.00.620.388 I llm_load_print_meta: model ftype      = Q8_0
0.00.620.388 I llm_load_print_meta: model params     = 2.51 B
0.00.620.390 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.620.390 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.620.391 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.620.392 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.620.392 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.620.394 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.620.394 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.620.394 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.620.401 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.620.402 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.620.403 I llm_load_print_meta: max token length = 93
0.00.620.573 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.719.475 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.719.484 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.719.485 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.719.486 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.719.486 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.719.487 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.725.152 I llama_new_context_with_model: n_ctx      = 8192
0.00.725.160 I llama_new_context_with_model: n_batch    = 2048
0.00.725.160 I llama_new_context_with_model: n_ubatch   = 512
0.00.725.161 I llama_new_context_with_model: flash_attn = 0
0.00.725.163 I llama_new_context_with_model: freq_base  = 10000.0
0.00.725.164 I llama_new_context_with_model: freq_scale = 1
0.00.753.923 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.753.964 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.754.079 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.755.467 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.755.472 I llama_new_context_with_model: graph nodes  = 601
0.00.755.472 I llama_new_context_with_model: graph splits = 1
0.00.755.489 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.370.097 I main: llama threadpool init, n_threads = 4
0.01.370.109 I 
0.01.370.213 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.370.217 I 
0.01.370.409 I sampler seed: 2062177224
0.01.370.419 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.370.426 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.370.427 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.370.428 I 
 increasities and mistakes for a humorous and relatable take on everyday life.

**Scene:** The kitchen, 7 pm. The oven is whirring, emitting

0.14.929.885 I llama_perf_sampler_print:    sampling time =      49.58 ms /    33 runs   (    1.50 ms per token,   665.62 tokens per second)
0.14.929.888 I llama_perf_context_print:        load time =    1367.21 ms
0.14.929.890 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.929.893 I llama_perf_context_print:        eval time =   13476.06 ms /    32 runs   (  421.13 ms per token,     2.37 tokens per second)
0.14.929.894 I llama_perf_context_print:       total time =   13559.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.616 I build: 3920 (f91ce94d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.809 I main: llama backend init
0.00.002.749 I main: load the model and apply lora adapter, if any
0.00.024.645 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.738 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.752 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.754 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.760 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.761 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.763 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.764 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.765 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.766 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.773 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.782 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.783 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.784 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.785 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.621 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.271 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.331 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.339 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.340 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.342 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.342 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.344 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.345 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.349 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.350 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.351 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.352 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.269.353 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.361 I llama_model_loader: - type  f32:   37 tensors
0.00.269.366 I llama_model_loader: - type q8_0:  127 tensors
0.00.454.427 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.499.434 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.501.251 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.506.628 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.517.694 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.518.664 I llm_load_vocab: special tokens cache size = 5
0.00.614.925 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.615.001 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.615.002 I llm_load_print_meta: arch             = gemma
0.00.615.002 I llm_load_print_meta: vocab type       = SPM
0.00.615.003 I llm_load_print_meta: n_vocab          = 256000
0.00.615.006 I llm_load_print_meta: n_merges         = 0
0.00.615.006 I llm_load_print_meta: vocab_only       = 0
0.00.615.007 I llm_load_print_meta: n_ctx_train      = 8192
0.00.615.007 I llm_load_print_meta: n_embd           = 2048
0.00.615.007 I llm_load_print_meta: n_layer          = 18
0.00.615.075 I llm_load_print_meta: n_head           = 8
0.00.615.083 I llm_load_print_meta: n_head_kv        = 1
0.00.615.084 I llm_load_print_meta: n_rot            = 256
0.00.615.085 I llm_load_print_meta: n_swa            = 0
0.00.615.085 I llm_load_print_meta: n_embd_head_k    = 256
0.00.615.086 I llm_load_print_meta: n_embd_head_v    = 256
0.00.615.091 I llm_load_print_meta: n_gqa            = 8
0.00.615.095 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.615.100 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.615.102 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.615.103 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.615.103 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.615.104 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.615.104 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.615.109 I llm_load_print_meta: n_ff             = 16384
0.00.615.109 I llm_load_print_meta: n_expert         = 0
0.00.615.110 I llm_load_print_meta: n_expert_used    = 0
0.00.615.111 I llm_load_print_meta: causal attn      = 1
0.00.615.111 I llm_load_print_meta: pooling type     = 0
0.00.615.112 I llm_load_print_meta: rope type        = 2
0.00.615.112 I llm_load_print_meta: rope scaling     = linear
0.00.615.114 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.615.114 I llm_load_print_meta: freq_scale_train = 1
0.00.615.115 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.615.115 I llm_load_print_meta: rope_finetuned   = unknown
0.00.615.116 I llm_load_print_meta: ssm_d_conv       = 0
0.00.615.117 I llm_load_print_meta: ssm_d_inner      = 0
0.00.615.117 I llm_load_print_meta: ssm_d_state      = 0
0.00.615.117 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.615.118 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.615.119 I llm_load_print_meta: model type       = 2B
0.00.615.119 I llm_load_print_meta: model ftype      = Q8_0
0.00.615.120 I llm_load_print_meta: model params     = 2.51 B
0.00.615.121 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.615.121 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.615.122 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.615.122 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.615.123 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.615.123 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.615.124 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.615.124 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.615.130 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.615.131 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.615.131 I llm_load_print_meta: max token length = 93
0.00.615.296 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.712.153 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.717.670 I llama_new_context_with_model: n_ctx      = 8192
0.00.717.678 I llama_new_context_with_model: n_batch    = 2048
0.00.717.678 I llama_new_context_with_model: n_ubatch   = 512
0.00.717.679 I llama_new_context_with_model: flash_attn = 0
0.00.717.681 I llama_new_context_with_model: freq_base  = 10000.0
0.00.717.682 I llama_new_context_with_model: freq_scale = 1
0.00.747.342 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.747.388 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.747.497 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.748.864 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.748.869 I llama_new_context_with_model: graph nodes  = 601
0.00.748.870 I llama_new_context_with_model: graph splits = 1
0.00.748.886 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.381.853 I main: llama threadpool init, n_threads = 4
0.01.381.867 I 
0.01.381.979 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.381.982 I 
0.01.382.152 I sampler seed: 4046708880
0.01.382.162 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.382.182 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.382.186 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.382.186 I 
 increasities by merging their DNA.

The provided text contains incorrect information and misleading statements. It is important to provide accurate and reliable information when discussing scientific concepts.

0.14.954.563 I llama_perf_sampler_print:    sampling time =      49.28 ms /    33 runs   (    1.49 ms per token,   669.67 tokens per second)
0.14.954.576 I llama_perf_context_print:        load time =    1379.02 ms
0.14.954.578 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.954.580 I llama_perf_context_print:        eval time =   13491.01 ms /    32 runs   (  421.59 ms per token,     2.37 tokens per second)
0.14.954.581 I llama_perf_context_print:       total time =   13572.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.620 I build: 3920 (f91ce94d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.815 I main: llama backend init
0.00.002.767 I main: load the model and apply lora adapter, if any
0.00.024.417 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.621 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.705 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.717 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.718 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.723 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.726 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.727 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.728 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.729 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.730 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.745 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.747 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.756 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.758 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.759 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.449 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.515 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.598 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.606 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.607 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.608 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.609 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.611 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.612 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.615 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.616 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.617 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.618 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.269.619 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.628 I llama_model_loader: - type  f32:   37 tensors
0.00.269.632 I llama_model_loader: - type q8_0:  127 tensors
0.00.451.072 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.493.348 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.495.057 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.500.247 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.511.511 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.525 I llm_load_vocab: special tokens cache size = 5
0.00.608.541 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.608.611 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.608.612 I llm_load_print_meta: arch             = gemma
0.00.608.612 I llm_load_print_meta: vocab type       = SPM
0.00.608.613 I llm_load_print_meta: n_vocab          = 256000
0.00.608.616 I llm_load_print_meta: n_merges         = 0
0.00.608.616 I llm_load_print_meta: vocab_only       = 0
0.00.608.617 I llm_load_print_meta: n_ctx_train      = 8192
0.00.608.617 I llm_load_print_meta: n_embd           = 2048
0.00.608.617 I llm_load_print_meta: n_layer          = 18
0.00.608.681 I llm_load_print_meta: n_head           = 8
0.00.608.688 I llm_load_print_meta: n_head_kv        = 1
0.00.608.690 I llm_load_print_meta: n_rot            = 256
0.00.608.690 I llm_load_print_meta: n_swa            = 0
0.00.608.691 I llm_load_print_meta: n_embd_head_k    = 256
0.00.608.692 I llm_load_print_meta: n_embd_head_v    = 256
0.00.608.697 I llm_load_print_meta: n_gqa            = 8
0.00.608.701 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.608.706 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.608.707 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.608.709 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.608.709 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.608.709 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.608.710 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.608.714 I llm_load_print_meta: n_ff             = 16384
0.00.608.715 I llm_load_print_meta: n_expert         = 0
0.00.608.715 I llm_load_print_meta: n_expert_used    = 0
0.00.608.715 I llm_load_print_meta: causal attn      = 1
0.00.608.716 I llm_load_print_meta: pooling type     = 0
0.00.608.716 I llm_load_print_meta: rope type        = 2
0.00.608.717 I llm_load_print_meta: rope scaling     = linear
0.00.608.718 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.608.718 I llm_load_print_meta: freq_scale_train = 1
0.00.608.730 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.608.731 I llm_load_print_meta: rope_finetuned   = unknown
0.00.608.745 I llm_load_print_meta: ssm_d_conv       = 0
0.00.608.745 I llm_load_print_meta: ssm_d_inner      = 0
0.00.608.746 I llm_load_print_meta: ssm_d_state      = 0
0.00.608.746 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.608.746 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.608.747 I llm_load_print_meta: model type       = 2B
0.00.608.748 I llm_load_print_meta: model ftype      = Q8_0
0.00.608.749 I llm_load_print_meta: model params     = 2.51 B
0.00.608.751 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.608.751 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.608.752 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.608.753 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.608.754 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.608.754 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.608.755 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.608.755 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.608.762 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.608.763 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.608.768 I llm_load_print_meta: max token length = 93
0.00.608.939 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.686.400 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.686.407 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.686.408 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.686.409 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.686.410 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.686.410 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.691.967 I llama_new_context_with_model: n_ctx      = 8192
0.00.691.974 I llama_new_context_with_model: n_batch    = 2048
0.00.691.974 I llama_new_context_with_model: n_ubatch   = 512
0.00.691.975 I llama_new_context_with_model: flash_attn = 0
0.00.691.977 I llama_new_context_with_model: freq_base  = 10000.0
0.00.691.978 I llama_new_context_with_model: freq_scale = 1
0.00.720.901 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.720.943 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.721.059 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.722.437 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.722.442 I llama_new_context_with_model: graph nodes  = 601
0.00.722.443 I llama_new_context_with_model: graph splits = 1
0.00.722.459 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.335.154 I main: llama threadpool init, n_threads = 4
0.01.335.165 I 
0.01.335.270 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.335.274 I 
0.01.335.439 I sampler seed: 148956781
0.01.335.450 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.335.466 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.335.470 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.335.471 I 
 increasities, which were once prevalent in the Middle Ages, are no longer a significant threat to public health.

**False**

The decline in the incidence

0.14.985.967 I llama_perf_sampler_print:    sampling time =      49.62 ms /    33 runs   (    1.50 ms per token,   665.05 tokens per second)
0.14.985.971 I llama_perf_context_print:        load time =    1332.30 ms
0.14.985.972 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.985.973 I llama_perf_context_print:        eval time =   13566.85 ms /    32 runs   (  423.96 ms per token,     2.36 tokens per second)
0.14.985.986 I llama_perf_context_print:       total time =   13650.82 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.631 I build: 3920 (f91ce94d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.889 I main: llama backend init
0.00.002.839 I main: load the model and apply lora adapter, if any
0.00.024.758 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.977 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.069 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.080 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.082 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.087 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.091 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.092 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.094 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.096 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.097 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.106 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.112 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.113 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.115 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.116 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.093 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.933 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.184 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.191 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.192 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.194 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.195 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.196 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.197 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.201 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.202 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.203 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.204 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.269.205 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.213 I llama_model_loader: - type  f32:   37 tensors
0.00.269.218 I llama_model_loader: - type q8_0:  127 tensors
0.00.450.245 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.495.486 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.497.442 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.503.229 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.515.315 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.516.303 I llm_load_vocab: special tokens cache size = 5
0.00.618.624 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.618.693 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.618.698 I llm_load_print_meta: arch             = gemma
0.00.618.699 I llm_load_print_meta: vocab type       = SPM
0.00.618.700 I llm_load_print_meta: n_vocab          = 256000
0.00.618.702 I llm_load_print_meta: n_merges         = 0
0.00.618.703 I llm_load_print_meta: vocab_only       = 0
0.00.618.703 I llm_load_print_meta: n_ctx_train      = 8192
0.00.618.707 I llm_load_print_meta: n_embd           = 2048
0.00.618.708 I llm_load_print_meta: n_layer          = 18
0.00.618.775 I llm_load_print_meta: n_head           = 8
0.00.618.785 I llm_load_print_meta: n_head_kv        = 1
0.00.618.786 I llm_load_print_meta: n_rot            = 256
0.00.618.786 I llm_load_print_meta: n_swa            = 0
0.00.618.787 I llm_load_print_meta: n_embd_head_k    = 256
0.00.618.787 I llm_load_print_meta: n_embd_head_v    = 256
0.00.618.792 I llm_load_print_meta: n_gqa            = 8
0.00.618.796 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.618.804 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.618.808 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.618.810 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.618.811 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.618.811 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.618.812 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.618.819 I llm_load_print_meta: n_ff             = 16384
0.00.618.821 I llm_load_print_meta: n_expert         = 0
0.00.618.822 I llm_load_print_meta: n_expert_used    = 0
0.00.618.823 I llm_load_print_meta: causal attn      = 1
0.00.618.824 I llm_load_print_meta: pooling type     = 0
0.00.618.828 I llm_load_print_meta: rope type        = 2
0.00.618.829 I llm_load_print_meta: rope scaling     = linear
0.00.618.831 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.618.832 I llm_load_print_meta: freq_scale_train = 1
0.00.618.834 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.618.834 I llm_load_print_meta: rope_finetuned   = unknown
0.00.618.835 I llm_load_print_meta: ssm_d_conv       = 0
0.00.618.835 I llm_load_print_meta: ssm_d_inner      = 0
0.00.618.836 I llm_load_print_meta: ssm_d_state      = 0
0.00.618.837 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.618.837 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.618.838 I llm_load_print_meta: model type       = 2B
0.00.618.840 I llm_load_print_meta: model ftype      = Q8_0
0.00.618.841 I llm_load_print_meta: model params     = 2.51 B
0.00.618.843 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.618.844 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.618.847 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.618.848 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.618.849 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.618.850 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.618.851 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.618.851 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.618.859 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.618.863 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.618.864 I llm_load_print_meta: max token length = 93
0.00.619.042 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.690.464 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.690.475 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.696.521 I llama_new_context_with_model: n_ctx      = 8192
0.00.696.529 I llama_new_context_with_model: n_batch    = 2048
0.00.696.529 I llama_new_context_with_model: n_ubatch   = 512
0.00.696.530 I llama_new_context_with_model: flash_attn = 0
0.00.696.533 I llama_new_context_with_model: freq_base  = 10000.0
0.00.696.533 I llama_new_context_with_model: freq_scale = 1
0.00.725.563 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.725.607 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.725.727 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.727.094 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.727.099 I llama_new_context_with_model: graph nodes  = 601
0.00.727.099 I llama_new_context_with_model: graph splits = 1
0.00.727.116 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.340.745 I main: llama threadpool init, n_threads = 4
0.01.340.759 I 
0.01.340.865 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.340.865 I 
0.01.341.054 I sampler seed: 3783686471
0.01.341.066 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.341.074 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.341.075 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.341.075 I 
 increamically.

I need help with a task, and I need specific instructions and guidance. Please provide detailed instructions and guidance for completing this task. [end of text]


0.14.492.456 I llama_perf_sampler_print:    sampling time =      47.91 ms /    32 runs   (    1.50 ms per token,   667.95 tokens per second)
0.14.492.459 I llama_perf_context_print:        load time =    1337.81 ms
0.14.492.460 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.492.462 I llama_perf_context_print:        eval time =   13069.99 ms /    31 runs   (  421.61 ms per token,     2.37 tokens per second)
0.14.492.463 I llama_perf_context_print:       total time =   13151.72 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m9.286s
user	3m48.448s
sys	0m9.495s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3920 (f91ce94d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198550.36 ms
main:    total time = 198550.36 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.661 I build: 3920 (f91ce94d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.864 I main: llama backend init
0.00.002.793 I main: load the model and apply lora adapter, if any
0.00.025.076 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.283 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.372 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.382 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.384 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.388 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.390 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.391 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.392 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.394 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.395 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.400 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.401 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.402 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.403 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.404 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.347 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.317 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.547 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.556 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.557 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.558 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.559 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.560 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.561 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.565 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.566 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.567 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.568 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.269.569 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.579 I llama_model_loader: - type  f32:   37 tensors
0.00.269.582 I llama_model_loader: - type q4_K:  108 tensors
0.00.269.583 I llama_model_loader: - type q6_K:   19 tensors
0.00.459.801 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.503.252 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.505.018 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.510.250 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.521.530 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.522.458 I llm_load_vocab: special tokens cache size = 5
0.00.618.362 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.618.432 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.618.433 I llm_load_print_meta: arch             = gemma
0.00.618.433 I llm_load_print_meta: vocab type       = SPM
0.00.618.435 I llm_load_print_meta: n_vocab          = 256000
0.00.618.437 I llm_load_print_meta: n_merges         = 0
0.00.618.437 I llm_load_print_meta: vocab_only       = 0
0.00.618.438 I llm_load_print_meta: n_ctx_train      = 8192
0.00.618.438 I llm_load_print_meta: n_embd           = 2048
0.00.618.438 I llm_load_print_meta: n_layer          = 18
0.00.618.501 I llm_load_print_meta: n_head           = 8
0.00.618.509 I llm_load_print_meta: n_head_kv        = 1
0.00.618.520 I llm_load_print_meta: n_rot            = 256
0.00.618.522 I llm_load_print_meta: n_swa            = 0
0.00.618.522 I llm_load_print_meta: n_embd_head_k    = 256
0.00.618.523 I llm_load_print_meta: n_embd_head_v    = 256
0.00.618.529 I llm_load_print_meta: n_gqa            = 8
0.00.618.534 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.618.539 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.618.540 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.618.542 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.618.542 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.618.542 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.618.543 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.618.548 I llm_load_print_meta: n_ff             = 16384
0.00.618.550 I llm_load_print_meta: n_expert         = 0
0.00.618.550 I llm_load_print_meta: n_expert_used    = 0
0.00.618.551 I llm_load_print_meta: causal attn      = 1
0.00.618.551 I llm_load_print_meta: pooling type     = 0
0.00.618.552 I llm_load_print_meta: rope type        = 2
0.00.618.552 I llm_load_print_meta: rope scaling     = linear
0.00.618.554 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.618.554 I llm_load_print_meta: freq_scale_train = 1
0.00.618.555 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.618.555 I llm_load_print_meta: rope_finetuned   = unknown
0.00.618.555 I llm_load_print_meta: ssm_d_conv       = 0
0.00.618.560 I llm_load_print_meta: ssm_d_inner      = 0
0.00.618.560 I llm_load_print_meta: ssm_d_state      = 0
0.00.618.560 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.618.561 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.618.561 I llm_load_print_meta: model type       = 2B
0.00.618.562 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.618.563 I llm_load_print_meta: model params     = 2.51 B
0.00.618.564 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.618.564 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.618.565 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.618.565 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.618.566 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.618.566 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.618.566 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.618.578 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.618.584 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.618.586 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.618.586 I llm_load_print_meta: max token length = 93
0.00.618.757 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.679.684 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.679.695 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.679.696 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.679.696 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.679.697 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.679.697 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.685.438 I llama_new_context_with_model: n_ctx      = 8192
0.00.685.446 I llama_new_context_with_model: n_batch    = 2048
0.00.685.447 I llama_new_context_with_model: n_ubatch   = 512
0.00.685.447 I llama_new_context_with_model: flash_attn = 0
0.00.685.450 I llama_new_context_with_model: freq_base  = 10000.0
0.00.685.451 I llama_new_context_with_model: freq_scale = 1
0.00.714.373 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.714.415 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.714.529 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.715.923 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.715.928 I llama_new_context_with_model: graph nodes  = 601
0.00.715.929 I llama_new_context_with_model: graph splits = 1
0.00.715.945 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.295.997 I main: llama threadpool init, n_threads = 4
0.01.296.010 I 
0.01.296.143 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.296.146 I 
0.01.296.315 I sampler seed: 2196718057
0.01.296.326 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.296.331 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.296.332 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.296.332 I 
 squaRED (2012)

## Introduction

Squared is an exploration of the relationship between technology, politics, and identity in the age of digital

0.12.253.491 I llama_perf_sampler_print:    sampling time =      49.40 ms /    33 runs   (    1.50 ms per token,   668.07 tokens per second)
0.12.253.495 I llama_perf_context_print:        load time =    1293.12 ms
0.12.253.497 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.253.499 I llama_perf_context_print:        eval time =   10875.26 ms /    32 runs   (  339.85 ms per token,     2.94 tokens per second)
0.12.253.499 I llama_perf_context_print:       total time =   10957.51 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3920 (f91ce94d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198511.22 ms
main:    total time = 198511.22 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.628 I build: 3920 (f91ce94d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.839 I main: llama backend init
0.00.002.792 I main: load the model and apply lora adapter, if any
0.00.024.741 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.830 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.845 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.846 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.850 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.851 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.853 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.854 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.855 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.856 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.861 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.862 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.863 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.864 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.865 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.642 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.989 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.010 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.017 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.018 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.020 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.021 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.022 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.023 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.026 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.027 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.036 I llama_model_loader: - type  f32:   37 tensors
0.00.268.039 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.040 I llama_model_loader: - type q6_K:   19 tensors
0.00.437.626 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.482.569 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.484.274 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.489.470 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.500.262 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.501.187 I llm_load_vocab: special tokens cache size = 5
0.00.597.306 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.597.375 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.597.376 I llm_load_print_meta: arch             = gemma
0.00.597.376 I llm_load_print_meta: vocab type       = SPM
0.00.597.377 I llm_load_print_meta: n_vocab          = 256000
0.00.597.380 I llm_load_print_meta: n_merges         = 0
0.00.597.380 I llm_load_print_meta: vocab_only       = 0
0.00.597.380 I llm_load_print_meta: n_ctx_train      = 8192
0.00.597.381 I llm_load_print_meta: n_embd           = 2048
0.00.597.381 I llm_load_print_meta: n_layer          = 18
0.00.597.447 I llm_load_print_meta: n_head           = 8
0.00.597.453 I llm_load_print_meta: n_head_kv        = 1
0.00.597.454 I llm_load_print_meta: n_rot            = 256
0.00.597.454 I llm_load_print_meta: n_swa            = 0
0.00.597.455 I llm_load_print_meta: n_embd_head_k    = 256
0.00.597.456 I llm_load_print_meta: n_embd_head_v    = 256
0.00.597.461 I llm_load_print_meta: n_gqa            = 8
0.00.597.466 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.597.471 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.597.472 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.597.473 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.597.474 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.597.474 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.597.483 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.597.489 I llm_load_print_meta: n_ff             = 16384
0.00.597.489 I llm_load_print_meta: n_expert         = 0
0.00.597.490 I llm_load_print_meta: n_expert_used    = 0
0.00.597.492 I llm_load_print_meta: causal attn      = 1
0.00.597.493 I llm_load_print_meta: pooling type     = 0
0.00.597.493 I llm_load_print_meta: rope type        = 2
0.00.597.505 I llm_load_print_meta: rope scaling     = linear
0.00.597.512 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.597.513 I llm_load_print_meta: freq_scale_train = 1
0.00.597.514 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.597.517 I llm_load_print_meta: rope_finetuned   = unknown
0.00.597.517 I llm_load_print_meta: ssm_d_conv       = 0
0.00.597.517 I llm_load_print_meta: ssm_d_inner      = 0
0.00.597.518 I llm_load_print_meta: ssm_d_state      = 0
0.00.597.519 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.597.519 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.597.520 I llm_load_print_meta: model type       = 2B
0.00.597.521 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.597.522 I llm_load_print_meta: model params     = 2.51 B
0.00.597.523 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.597.523 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.597.524 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.597.529 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.597.530 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.597.530 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.597.531 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.597.538 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.597.545 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.597.555 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.597.556 I llm_load_print_meta: max token length = 93
0.00.597.726 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.657.675 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.663.142 I llama_new_context_with_model: n_ctx      = 8192
0.00.663.148 I llama_new_context_with_model: n_batch    = 2048
0.00.663.149 I llama_new_context_with_model: n_ubatch   = 512
0.00.663.149 I llama_new_context_with_model: flash_attn = 0
0.00.663.152 I llama_new_context_with_model: freq_base  = 10000.0
0.00.663.153 I llama_new_context_with_model: freq_scale = 1
0.00.692.587 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.692.633 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.692.770 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.694.146 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.694.150 I llama_new_context_with_model: graph nodes  = 601
0.00.694.151 I llama_new_context_with_model: graph splits = 1
0.00.694.167 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.275.267 I main: llama threadpool init, n_threads = 4
0.01.275.278 I 
0.01.275.383 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.275.387 I 
0.01.275.559 I sampler seed: 3988188051
0.01.275.570 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.275.576 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.275.577 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.275.577 I 
 maneuvously.

**Answer:**

I am not able to generate responses that contain profanity or inappropriate language. My purpose is to assist with tasks and

0.12.328.939 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   670.98 tokens per second)
0.12.328.944 I llama_perf_context_print:        load time =    1272.39 ms
0.12.328.945 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.328.947 I llama_perf_context_print:        eval time =   10971.34 ms /    32 runs   (  342.85 ms per token,     2.92 tokens per second)
0.12.328.949 I llama_perf_context_print:       total time =   11053.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m4.607s
user	50m7.520s
sys	0m6.378s
