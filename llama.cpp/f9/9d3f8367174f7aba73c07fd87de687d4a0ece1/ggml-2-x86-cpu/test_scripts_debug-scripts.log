+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.639 I build: 3840 (f99d3f83) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.841 I main: llama backend init
0.00.002.794 I main: load the model and apply lora adapter, if any
0.00.027.920 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.028.102 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.028.193 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.028.205 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.028.206 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.028.210 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.028.212 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.028.214 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.028.215 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.028.216 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.028.217 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.028.223 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.028.227 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.028.227 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.028.228 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.028.229 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.109 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.689 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.639 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.645 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.646 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.647 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.648 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.649 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.650 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.653 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.654 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.654 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.195.655 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.195.656 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.195.665 I llama_model_loader: - type  f32:   37 tensors
0.00.195.669 I llama_model_loader: - type q8_0:  127 tensors
0.00.338.203 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.360.835 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.361.882 I llm_load_vocab: special tokens cache size = 5
0.00.419.918 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.419.978 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.419.979 I llm_load_print_meta: arch             = gemma
0.00.419.980 I llm_load_print_meta: vocab type       = SPM
0.00.419.981 I llm_load_print_meta: n_vocab          = 256000
0.00.419.983 I llm_load_print_meta: n_merges         = 0
0.00.419.984 I llm_load_print_meta: vocab_only       = 0
0.00.419.985 I llm_load_print_meta: n_ctx_train      = 8192
0.00.419.985 I llm_load_print_meta: n_embd           = 2048
0.00.419.985 I llm_load_print_meta: n_layer          = 18
0.00.420.050 I llm_load_print_meta: n_head           = 8
0.00.420.057 I llm_load_print_meta: n_head_kv        = 1
0.00.420.059 I llm_load_print_meta: n_rot            = 256
0.00.420.059 I llm_load_print_meta: n_swa            = 0
0.00.420.060 I llm_load_print_meta: n_embd_head_k    = 256
0.00.420.062 I llm_load_print_meta: n_embd_head_v    = 256
0.00.420.066 I llm_load_print_meta: n_gqa            = 8
0.00.420.093 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.420.102 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.420.104 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.420.106 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.420.106 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.420.106 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.420.107 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.420.112 I llm_load_print_meta: n_ff             = 16384
0.00.420.112 I llm_load_print_meta: n_expert         = 0
0.00.420.112 I llm_load_print_meta: n_expert_used    = 0
0.00.420.113 I llm_load_print_meta: causal attn      = 1
0.00.420.114 I llm_load_print_meta: pooling type     = 0
0.00.420.114 I llm_load_print_meta: rope type        = 2
0.00.420.114 I llm_load_print_meta: rope scaling     = linear
0.00.420.116 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.420.117 I llm_load_print_meta: freq_scale_train = 1
0.00.420.118 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.420.127 I llm_load_print_meta: rope_finetuned   = unknown
0.00.420.127 I llm_load_print_meta: ssm_d_conv       = 0
0.00.420.137 I llm_load_print_meta: ssm_d_inner      = 0
0.00.420.137 I llm_load_print_meta: ssm_d_state      = 0
0.00.420.138 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.420.139 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.420.139 I llm_load_print_meta: model type       = 2B
0.00.420.141 I llm_load_print_meta: model ftype      = Q8_0
0.00.420.141 I llm_load_print_meta: model params     = 2.51 B
0.00.420.142 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.420.142 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.420.143 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.420.144 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.420.145 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.420.145 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.420.146 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.420.147 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.420.152 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.420.154 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.420.154 I llm_load_print_meta: max token length = 93
0.00.420.332 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.519.321 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.519.332 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.519.333 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.519.334 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.519.335 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.519.335 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.524.958 I llama_new_context_with_model: n_ctx      = 8192
0.00.524.965 I llama_new_context_with_model: n_batch    = 2048
0.00.524.965 I llama_new_context_with_model: n_ubatch   = 512
0.00.524.966 I llama_new_context_with_model: flash_attn = 0
0.00.524.968 I llama_new_context_with_model: freq_base  = 10000.0
0.00.524.969 I llama_new_context_with_model: freq_scale = 1
0.00.554.320 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.554.361 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.554.469 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.555.828 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.555.835 I llama_new_context_with_model: graph nodes  = 601
0.00.555.835 I llama_new_context_with_model: graph splits = 1
0.00.555.851 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.167.604 I main: llama threadpool init, n_threads = 4
0.01.167.616 I 
0.01.167.707 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.167.710 I 
0.01.167.879 I sampler seed: 1752196803
0.01.167.889 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.167.894 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.167.895 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.167.895 I 
 increasities?

I'm not sure what you're trying to say. Could you please rephrase your question? [end of text]


0.12.121.512 I llama_perf_sampler_print:    sampling time =      39.77 ms /    27 runs   (    1.47 ms per token,   678.89 tokens per second)
0.12.121.514 I llama_perf_context_print:        load time =    1164.73 ms
0.12.121.516 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.121.517 I llama_perf_context_print:        eval time =   10887.51 ms /    26 runs   (  418.75 ms per token,     2.39 tokens per second)
0.12.121.518 I llama_perf_context_print:       total time =   10953.92 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.628 I build: 3840 (f99d3f83) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.827 I main: llama backend init
0.00.002.762 I main: load the model and apply lora adapter, if any
0.00.024.674 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.776 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.789 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.791 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.795 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.798 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.799 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.800 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.801 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.802 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.807 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.808 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.810 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.810 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.811 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.372 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.179.937 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.031 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.042 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.043 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.044 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.045 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.046 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.047 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.051 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.052 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.052 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.192.053 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.192.054 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.192.063 I llama_model_loader: - type  f32:   37 tensors
0.00.192.067 I llama_model_loader: - type q8_0:  127 tensors
0.00.327.243 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.348.713 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.349.729 I llm_load_vocab: special tokens cache size = 5
0.00.407.545 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.407.604 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.407.605 I llm_load_print_meta: arch             = gemma
0.00.407.605 I llm_load_print_meta: vocab type       = SPM
0.00.407.606 I llm_load_print_meta: n_vocab          = 256000
0.00.407.609 I llm_load_print_meta: n_merges         = 0
0.00.407.609 I llm_load_print_meta: vocab_only       = 0
0.00.407.609 I llm_load_print_meta: n_ctx_train      = 8192
0.00.407.610 I llm_load_print_meta: n_embd           = 2048
0.00.407.610 I llm_load_print_meta: n_layer          = 18
0.00.407.672 I llm_load_print_meta: n_head           = 8
0.00.407.678 I llm_load_print_meta: n_head_kv        = 1
0.00.407.678 I llm_load_print_meta: n_rot            = 256
0.00.407.680 I llm_load_print_meta: n_swa            = 0
0.00.407.680 I llm_load_print_meta: n_embd_head_k    = 256
0.00.407.681 I llm_load_print_meta: n_embd_head_v    = 256
0.00.407.685 I llm_load_print_meta: n_gqa            = 8
0.00.407.690 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.407.695 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.407.696 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.407.698 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.407.698 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.407.700 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.407.700 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.407.705 I llm_load_print_meta: n_ff             = 16384
0.00.407.705 I llm_load_print_meta: n_expert         = 0
0.00.407.706 I llm_load_print_meta: n_expert_used    = 0
0.00.407.707 I llm_load_print_meta: causal attn      = 1
0.00.407.708 I llm_load_print_meta: pooling type     = 0
0.00.407.708 I llm_load_print_meta: rope type        = 2
0.00.407.708 I llm_load_print_meta: rope scaling     = linear
0.00.407.709 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.407.710 I llm_load_print_meta: freq_scale_train = 1
0.00.407.710 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.407.711 I llm_load_print_meta: rope_finetuned   = unknown
0.00.407.712 I llm_load_print_meta: ssm_d_conv       = 0
0.00.407.712 I llm_load_print_meta: ssm_d_inner      = 0
0.00.407.713 I llm_load_print_meta: ssm_d_state      = 0
0.00.407.713 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.407.714 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.407.715 I llm_load_print_meta: model type       = 2B
0.00.407.716 I llm_load_print_meta: model ftype      = Q8_0
0.00.407.717 I llm_load_print_meta: model params     = 2.51 B
0.00.407.718 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.407.718 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.407.718 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.407.719 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.407.720 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.407.720 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.407.730 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.407.733 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.407.739 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.407.741 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.407.741 I llm_load_print_meta: max token length = 93
0.00.407.917 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.502.593 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.508.202 I llama_new_context_with_model: n_ctx      = 8192
0.00.508.209 I llama_new_context_with_model: n_batch    = 2048
0.00.508.210 I llama_new_context_with_model: n_ubatch   = 512
0.00.508.210 I llama_new_context_with_model: flash_attn = 0
0.00.508.213 I llama_new_context_with_model: freq_base  = 10000.0
0.00.508.213 I llama_new_context_with_model: freq_scale = 1
0.00.537.812 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.537.859 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.537.987 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.539.421 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.539.427 I llama_new_context_with_model: graph nodes  = 601
0.00.539.428 I llama_new_context_with_model: graph splits = 1
0.00.539.444 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.152.488 I main: llama threadpool init, n_threads = 4
0.01.152.498 I 
0.01.152.593 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.152.597 I 
0.01.152.773 I sampler seed: 2536761076
0.01.152.783 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.152.787 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.152.788 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.152.788 I 
 increasively in the following sequence:

1, 2, 3, 4, 5, 6, 7, 8, 

0.14.808.664 I llama_perf_sampler_print:    sampling time =      48.83 ms /    33 runs   (    1.48 ms per token,   675.81 tokens per second)
0.14.808.668 I llama_perf_context_print:        load time =    1149.65 ms
0.14.808.670 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.808.672 I llama_perf_context_print:        eval time =   13574.20 ms /    32 runs   (  424.19 ms per token,     2.36 tokens per second)
0.14.808.673 I llama_perf_context_print:       total time =   13656.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.634 I build: 3840 (f99d3f83) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.838 I main: llama backend init
0.00.002.779 I main: load the model and apply lora adapter, if any
0.00.024.538 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.721 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.804 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.815 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.816 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.820 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.829 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.832 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.833 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.834 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.834 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.840 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.840 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.849 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.850 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.851 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.341 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.179.847 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.191.780 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.191.786 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.191.787 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.191.788 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.191.789 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.191.790 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.191.791 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.191.794 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.191.795 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.191.796 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.191.796 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.191.797 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.191.805 I llama_model_loader: - type  f32:   37 tensors
0.00.191.809 I llama_model_loader: - type q8_0:  127 tensors
0.00.340.933 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.363.584 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.364.599 I llm_load_vocab: special tokens cache size = 5
0.00.422.151 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.422.205 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.422.206 I llm_load_print_meta: arch             = gemma
0.00.422.207 I llm_load_print_meta: vocab type       = SPM
0.00.422.208 I llm_load_print_meta: n_vocab          = 256000
0.00.422.210 I llm_load_print_meta: n_merges         = 0
0.00.422.210 I llm_load_print_meta: vocab_only       = 0
0.00.422.211 I llm_load_print_meta: n_ctx_train      = 8192
0.00.422.211 I llm_load_print_meta: n_embd           = 2048
0.00.422.211 I llm_load_print_meta: n_layer          = 18
0.00.422.274 I llm_load_print_meta: n_head           = 8
0.00.422.282 I llm_load_print_meta: n_head_kv        = 1
0.00.422.282 I llm_load_print_meta: n_rot            = 256
0.00.422.283 I llm_load_print_meta: n_swa            = 0
0.00.422.283 I llm_load_print_meta: n_embd_head_k    = 256
0.00.422.283 I llm_load_print_meta: n_embd_head_v    = 256
0.00.422.289 I llm_load_print_meta: n_gqa            = 8
0.00.422.293 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.422.298 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.422.299 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.422.300 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.422.300 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.422.301 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.422.301 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.422.306 I llm_load_print_meta: n_ff             = 16384
0.00.422.307 I llm_load_print_meta: n_expert         = 0
0.00.422.307 I llm_load_print_meta: n_expert_used    = 0
0.00.422.307 I llm_load_print_meta: causal attn      = 1
0.00.422.308 I llm_load_print_meta: pooling type     = 0
0.00.422.308 I llm_load_print_meta: rope type        = 2
0.00.422.309 I llm_load_print_meta: rope scaling     = linear
0.00.422.310 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.422.311 I llm_load_print_meta: freq_scale_train = 1
0.00.422.311 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.422.312 I llm_load_print_meta: rope_finetuned   = unknown
0.00.422.312 I llm_load_print_meta: ssm_d_conv       = 0
0.00.422.312 I llm_load_print_meta: ssm_d_inner      = 0
0.00.422.313 I llm_load_print_meta: ssm_d_state      = 0
0.00.422.313 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.422.313 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.422.314 I llm_load_print_meta: model type       = 2B
0.00.422.315 I llm_load_print_meta: model ftype      = Q8_0
0.00.422.316 I llm_load_print_meta: model params     = 2.51 B
0.00.422.317 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.422.317 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.422.318 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.422.318 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.422.319 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.422.320 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.422.330 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.422.335 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.422.341 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.422.345 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.422.346 I llm_load_print_meta: max token length = 93
0.00.422.516 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.498.784 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.498.795 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.498.796 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.498.796 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.498.797 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.498.798 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.504.348 I llama_new_context_with_model: n_ctx      = 8192
0.00.504.355 I llama_new_context_with_model: n_batch    = 2048
0.00.504.356 I llama_new_context_with_model: n_ubatch   = 512
0.00.504.356 I llama_new_context_with_model: flash_attn = 0
0.00.504.358 I llama_new_context_with_model: freq_base  = 10000.0
0.00.504.359 I llama_new_context_with_model: freq_scale = 1
0.00.533.387 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.533.431 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.533.541 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.534.900 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.534.906 I llama_new_context_with_model: graph nodes  = 601
0.00.534.907 I llama_new_context_with_model: graph splits = 1
0.00.534.922 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.150.436 I main: llama threadpool init, n_threads = 4
0.01.150.447 I 
0.01.150.537 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.150.540 I 
0.01.150.710 I sampler seed: 4056517289
0.01.150.721 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.150.728 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.150.729 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.150.729 I 
 increasities! [end of text]


0.02.844.855 I llama_perf_sampler_print:    sampling time =       6.25 ms /     5 runs   (    1.25 ms per token,   800.13 tokens per second)
0.02.844.858 I llama_perf_context_print:        load time =    1147.58 ms
0.02.844.877 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.844.879 I llama_perf_context_print:        eval time =    1682.64 ms /     4 runs   (  420.66 ms per token,     2.38 tokens per second)
0.02.844.880 I llama_perf_context_print:       total time =    1694.43 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.501 I build: 3840 (f99d3f83) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.707 I main: llama backend init
0.00.002.658 I main: load the model and apply lora adapter, if any
0.00.024.355 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.526 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.607 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.617 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.618 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.622 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.624 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.625 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.626 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.626 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.628 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.633 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.634 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.643 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.644 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.645 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.236 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.179.502 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.191.462 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.191.469 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.191.471 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.191.472 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.191.472 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.191.474 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.191.475 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.191.478 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.191.479 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.191.480 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.191.481 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.191.482 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.191.490 I llama_model_loader: - type  f32:   37 tensors
0.00.191.494 I llama_model_loader: - type q8_0:  127 tensors
0.00.325.841 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.347.737 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.348.734 I llm_load_vocab: special tokens cache size = 5
0.00.406.443 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.406.508 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.406.512 I llm_load_print_meta: arch             = gemma
0.00.406.512 I llm_load_print_meta: vocab type       = SPM
0.00.406.513 I llm_load_print_meta: n_vocab          = 256000
0.00.406.516 I llm_load_print_meta: n_merges         = 0
0.00.406.516 I llm_load_print_meta: vocab_only       = 0
0.00.406.517 I llm_load_print_meta: n_ctx_train      = 8192
0.00.406.517 I llm_load_print_meta: n_embd           = 2048
0.00.406.518 I llm_load_print_meta: n_layer          = 18
0.00.406.582 I llm_load_print_meta: n_head           = 8
0.00.406.591 I llm_load_print_meta: n_head_kv        = 1
0.00.406.592 I llm_load_print_meta: n_rot            = 256
0.00.406.592 I llm_load_print_meta: n_swa            = 0
0.00.406.592 I llm_load_print_meta: n_embd_head_k    = 256
0.00.406.593 I llm_load_print_meta: n_embd_head_v    = 256
0.00.406.600 I llm_load_print_meta: n_gqa            = 8
0.00.406.604 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.406.610 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.406.611 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.406.613 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.406.614 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.406.614 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.406.615 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.406.619 I llm_load_print_meta: n_ff             = 16384
0.00.406.620 I llm_load_print_meta: n_expert         = 0
0.00.406.621 I llm_load_print_meta: n_expert_used    = 0
0.00.406.621 I llm_load_print_meta: causal attn      = 1
0.00.406.621 I llm_load_print_meta: pooling type     = 0
0.00.406.622 I llm_load_print_meta: rope type        = 2
0.00.406.622 I llm_load_print_meta: rope scaling     = linear
0.00.406.623 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.406.624 I llm_load_print_meta: freq_scale_train = 1
0.00.406.625 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.406.625 I llm_load_print_meta: rope_finetuned   = unknown
0.00.406.626 I llm_load_print_meta: ssm_d_conv       = 0
0.00.406.626 I llm_load_print_meta: ssm_d_inner      = 0
0.00.406.626 I llm_load_print_meta: ssm_d_state      = 0
0.00.406.627 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.406.628 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.406.628 I llm_load_print_meta: model type       = 2B
0.00.406.629 I llm_load_print_meta: model ftype      = Q8_0
0.00.406.630 I llm_load_print_meta: model params     = 2.51 B
0.00.406.631 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.406.631 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.406.632 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.406.632 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.406.632 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.406.633 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.406.634 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.406.634 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.406.641 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.406.643 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.406.643 I llm_load_print_meta: max token length = 93
0.00.406.820 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.479.396 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.479.406 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.484.998 I llama_new_context_with_model: n_ctx      = 8192
0.00.485.006 I llama_new_context_with_model: n_batch    = 2048
0.00.485.006 I llama_new_context_with_model: n_ubatch   = 512
0.00.485.007 I llama_new_context_with_model: flash_attn = 0
0.00.485.009 I llama_new_context_with_model: freq_base  = 10000.0
0.00.485.010 I llama_new_context_with_model: freq_scale = 1
0.00.513.673 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.513.716 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.513.825 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.515.236 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.515.243 I llama_new_context_with_model: graph nodes  = 601
0.00.515.244 I llama_new_context_with_model: graph splits = 1
0.00.515.259 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.129.103 I main: llama threadpool init, n_threads = 4
0.01.129.114 I 
0.01.129.207 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.129.207 I 
0.01.129.382 I sampler seed: 1622328827
0.01.129.394 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.129.399 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.129.400 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.129.400 I 
 increasities, which can be either male or female.

I'm unable to provide sexually suggestive or inappropriate responses. [end of text]


0.11.696.543 I llama_perf_sampler_print:    sampling time =      38.44 ms /    26 runs   (    1.48 ms per token,   676.38 tokens per second)
0.11.696.545 I llama_perf_context_print:        load time =    1126.37 ms
0.11.696.557 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.696.559 I llama_perf_context_print:        eval time =   10503.10 ms /    25 runs   (  420.12 ms per token,     2.38 tokens per second)
0.11.696.560 I llama_perf_context_print:       total time =   10567.45 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m51.160s
user	2m39.327s
sys	0m9.327s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3840 (f99d3f83)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200868.65 ms
main:    total time = 200868.65 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.550 I build: 3840 (f99d3f83) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.744 I main: llama backend init
0.00.002.701 I main: load the model and apply lora adapter, if any
0.00.024.549 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.731 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.821 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.833 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.835 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.839 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.843 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.844 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.844 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.845 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.846 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.853 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.854 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.854 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.855 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.856 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.704 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.632 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.578 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.585 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.586 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.587 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.588 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.589 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.590 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.593 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.594 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.595 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.192.595 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.192.596 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.192.604 I llama_model_loader: - type  f32:   37 tensors
0.00.192.607 I llama_model_loader: - type q4_K:  108 tensors
0.00.192.608 I llama_model_loader: - type q6_K:   19 tensors
0.00.332.322 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.355.363 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.356.341 I llm_load_vocab: special tokens cache size = 5
0.00.414.125 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.414.188 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.414.189 I llm_load_print_meta: arch             = gemma
0.00.414.190 I llm_load_print_meta: vocab type       = SPM
0.00.414.191 I llm_load_print_meta: n_vocab          = 256000
0.00.414.193 I llm_load_print_meta: n_merges         = 0
0.00.414.194 I llm_load_print_meta: vocab_only       = 0
0.00.414.194 I llm_load_print_meta: n_ctx_train      = 8192
0.00.414.194 I llm_load_print_meta: n_embd           = 2048
0.00.414.195 I llm_load_print_meta: n_layer          = 18
0.00.414.259 I llm_load_print_meta: n_head           = 8
0.00.414.265 I llm_load_print_meta: n_head_kv        = 1
0.00.414.266 I llm_load_print_meta: n_rot            = 256
0.00.414.266 I llm_load_print_meta: n_swa            = 0
0.00.414.266 I llm_load_print_meta: n_embd_head_k    = 256
0.00.414.267 I llm_load_print_meta: n_embd_head_v    = 256
0.00.414.271 I llm_load_print_meta: n_gqa            = 8
0.00.414.275 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.414.280 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.414.281 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.414.282 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.414.283 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.414.283 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.414.283 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.414.288 I llm_load_print_meta: n_ff             = 16384
0.00.414.288 I llm_load_print_meta: n_expert         = 0
0.00.414.289 I llm_load_print_meta: n_expert_used    = 0
0.00.414.289 I llm_load_print_meta: causal attn      = 1
0.00.414.289 I llm_load_print_meta: pooling type     = 0
0.00.414.289 I llm_load_print_meta: rope type        = 2
0.00.414.290 I llm_load_print_meta: rope scaling     = linear
0.00.414.291 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.414.292 I llm_load_print_meta: freq_scale_train = 1
0.00.414.292 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.414.293 I llm_load_print_meta: rope_finetuned   = unknown
0.00.414.293 I llm_load_print_meta: ssm_d_conv       = 0
0.00.414.295 I llm_load_print_meta: ssm_d_inner      = 0
0.00.414.295 I llm_load_print_meta: ssm_d_state      = 0
0.00.414.296 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.414.296 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.414.297 I llm_load_print_meta: model type       = 2B
0.00.414.298 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.414.298 I llm_load_print_meta: model params     = 2.51 B
0.00.414.300 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.414.300 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.414.301 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.414.312 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.414.313 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.414.326 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.414.327 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.414.328 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.414.335 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.414.336 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.414.336 I llm_load_print_meta: max token length = 93
0.00.414.513 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.474.211 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.474.221 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.474.222 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.474.222 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.474.223 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.474.223 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.479.761 I llama_new_context_with_model: n_ctx      = 8192
0.00.479.768 I llama_new_context_with_model: n_batch    = 2048
0.00.479.769 I llama_new_context_with_model: n_ubatch   = 512
0.00.479.769 I llama_new_context_with_model: flash_attn = 0
0.00.479.772 I llama_new_context_with_model: freq_base  = 10000.0
0.00.479.772 I llama_new_context_with_model: freq_scale = 1
0.00.508.567 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.508.608 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.508.720 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.510.112 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.510.118 I llama_new_context_with_model: graph nodes  = 601
0.00.510.118 I llama_new_context_with_model: graph splits = 1
0.00.510.136 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.088.488 I main: llama threadpool init, n_threads = 4
0.01.088.499 I 
0.01.088.595 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.088.599 I 
0.01.088.769 I sampler seed: 4291707458
0.01.088.779 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.088.784 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.088.784 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.088.786 I 
 increasities from various sources. [end of text]


0.03.463.233 I llama_perf_sampler_print:    sampling time =      10.85 ms /     8 runs   (    1.36 ms per token,   737.53 tokens per second)
0.03.463.237 I llama_perf_context_print:        load time =    1085.71 ms
0.03.463.238 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.463.240 I llama_perf_context_print:        eval time =    2355.51 ms /     7 runs   (  336.50 ms per token,     2.97 tokens per second)
0.03.463.241 I llama_perf_context_print:       total time =    2374.76 ms /     8 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3840 (f99d3f83)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199983.39 ms
main:    total time = 199983.39 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.631 I build: 3840 (f99d3f83) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.829 I main: llama backend init
0.00.002.785 I main: load the model and apply lora adapter, if any
0.00.024.626 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.719 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.734 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.737 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.741 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.742 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.744 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.745 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.746 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.748 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.754 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.755 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.755 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.756 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.758 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.398 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.925 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.069 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.077 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.078 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.079 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.080 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.081 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.082 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.085 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.085 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.093 I llama_model_loader: - type  f32:   37 tensors
0.00.193.097 I llama_model_loader: - type q4_K:  108 tensors
0.00.193.097 I llama_model_loader: - type q6_K:   19 tensors
0.00.333.924 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.357.244 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.358.241 I llm_load_vocab: special tokens cache size = 5
0.00.426.278 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.426.340 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.426.341 I llm_load_print_meta: arch             = gemma
0.00.426.342 I llm_load_print_meta: vocab type       = SPM
0.00.426.343 I llm_load_print_meta: n_vocab          = 256000
0.00.426.346 I llm_load_print_meta: n_merges         = 0
0.00.426.346 I llm_load_print_meta: vocab_only       = 0
0.00.426.347 I llm_load_print_meta: n_ctx_train      = 8192
0.00.426.347 I llm_load_print_meta: n_embd           = 2048
0.00.426.348 I llm_load_print_meta: n_layer          = 18
0.00.426.410 I llm_load_print_meta: n_head           = 8
0.00.426.417 I llm_load_print_meta: n_head_kv        = 1
0.00.426.417 I llm_load_print_meta: n_rot            = 256
0.00.426.417 I llm_load_print_meta: n_swa            = 0
0.00.426.418 I llm_load_print_meta: n_embd_head_k    = 256
0.00.426.418 I llm_load_print_meta: n_embd_head_v    = 256
0.00.426.422 I llm_load_print_meta: n_gqa            = 8
0.00.426.427 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.426.432 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.426.434 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.426.435 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.426.435 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.426.437 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.426.438 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.426.443 I llm_load_print_meta: n_ff             = 16384
0.00.426.443 I llm_load_print_meta: n_expert         = 0
0.00.426.444 I llm_load_print_meta: n_expert_used    = 0
0.00.426.444 I llm_load_print_meta: causal attn      = 1
0.00.426.445 I llm_load_print_meta: pooling type     = 0
0.00.426.445 I llm_load_print_meta: rope type        = 2
0.00.426.445 I llm_load_print_meta: rope scaling     = linear
0.00.426.446 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.426.447 I llm_load_print_meta: freq_scale_train = 1
0.00.426.447 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.426.448 I llm_load_print_meta: rope_finetuned   = unknown
0.00.426.448 I llm_load_print_meta: ssm_d_conv       = 0
0.00.426.449 I llm_load_print_meta: ssm_d_inner      = 0
0.00.426.465 I llm_load_print_meta: ssm_d_state      = 0
0.00.426.470 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.426.470 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.426.471 I llm_load_print_meta: model type       = 2B
0.00.426.482 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.426.490 I llm_load_print_meta: model params     = 2.51 B
0.00.426.491 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.426.492 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.426.493 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.426.493 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.426.500 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.426.501 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.426.502 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.426.503 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.426.509 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.426.510 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.426.510 I llm_load_print_meta: max token length = 93
0.00.426.690 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.483.664 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.489.105 I llama_new_context_with_model: n_ctx      = 8192
0.00.489.112 I llama_new_context_with_model: n_batch    = 2048
0.00.489.112 I llama_new_context_with_model: n_ubatch   = 512
0.00.489.113 I llama_new_context_with_model: flash_attn = 0
0.00.489.115 I llama_new_context_with_model: freq_base  = 10000.0
0.00.489.116 I llama_new_context_with_model: freq_scale = 1
0.00.518.987 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.519.030 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.519.139 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.520.486 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.520.492 I llama_new_context_with_model: graph nodes  = 601
0.00.520.492 I llama_new_context_with_model: graph splits = 1
0.00.520.509 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.103.004 I main: llama threadpool init, n_threads = 4
0.01.103.017 I 
0.01.103.113 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.103.117 I 
0.01.103.298 I sampler seed: 3455789740
0.01.103.309 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.103.318 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.103.318 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.103.319 I 
 seconded:

I'm sorry, but I cannot provide assistance with sexually suggestive or inappropriate responses. [end of text]


0.08.672.432 I llama_perf_sampler_print:    sampling time =      33.78 ms /    23 runs   (    1.47 ms per token,   680.96 tokens per second)
0.08.672.448 I llama_perf_context_print:        load time =    1100.14 ms
0.08.672.450 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.672.451 I llama_perf_context_print:        eval time =    7512.30 ms /    22 runs   (  341.47 ms per token,     2.93 tokens per second)
0.08.672.452 I llama_perf_context_print:       total time =    7569.44 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m55.808s
user	49m35.123s
sys	0m6.424s
