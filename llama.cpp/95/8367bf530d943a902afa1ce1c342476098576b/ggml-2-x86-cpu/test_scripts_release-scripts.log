+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.564 I build: 3974 (958367bf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.001.882 I main: load the model and apply lora adapter, if any
0.00.022.487 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.537 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.548 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.553 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.556 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.559 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.561 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.562 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.563 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.563 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.564 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.568 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.569 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.569 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.570 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.570 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.961 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.873 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.788 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.795 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.795 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.796 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.797 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.797 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.798 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.800 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.801 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.801 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.802 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.803 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.806 I llama_model_loader: - type  f32:   37 tensors
0.00.132.809 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.099 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.671 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.303 I llm_load_vocab: special tokens cache size = 5
0.00.277.667 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.686 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.686 I llm_load_print_meta: arch             = gemma
0.00.277.687 I llm_load_print_meta: vocab type       = SPM
0.00.277.688 I llm_load_print_meta: n_vocab          = 256000
0.00.277.688 I llm_load_print_meta: n_merges         = 0
0.00.277.688 I llm_load_print_meta: vocab_only       = 0
0.00.277.689 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.689 I llm_load_print_meta: n_embd           = 2048
0.00.277.689 I llm_load_print_meta: n_layer          = 18
0.00.277.702 I llm_load_print_meta: n_head           = 8
0.00.277.703 I llm_load_print_meta: n_head_kv        = 1
0.00.277.703 I llm_load_print_meta: n_rot            = 256
0.00.277.703 I llm_load_print_meta: n_swa            = 0
0.00.277.704 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.704 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.705 I llm_load_print_meta: n_gqa            = 8
0.00.277.706 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.707 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.708 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.709 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.709 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.710 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.710 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.711 I llm_load_print_meta: n_ff             = 16384
0.00.277.711 I llm_load_print_meta: n_expert         = 0
0.00.277.712 I llm_load_print_meta: n_expert_used    = 0
0.00.277.712 I llm_load_print_meta: causal attn      = 1
0.00.277.712 I llm_load_print_meta: pooling type     = 0
0.00.277.713 I llm_load_print_meta: rope type        = 2
0.00.277.713 I llm_load_print_meta: rope scaling     = linear
0.00.277.714 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.715 I llm_load_print_meta: freq_scale_train = 1
0.00.277.715 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.715 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.715 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.716 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.716 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.716 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.716 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.717 I llm_load_print_meta: model type       = 2B
0.00.277.718 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.719 I llm_load_print_meta: model params     = 2.51 B
0.00.277.720 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.720 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.720 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.721 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.721 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.721 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.722 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.722 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.722 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.723 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.723 I llm_load_print_meta: max token length = 93
0.00.277.746 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.376.139 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.376.147 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.376.148 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.376.148 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.376.150 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.376.150 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.382.480 I llama_new_context_with_model: n_ctx      = 8192
0.00.382.487 I llama_new_context_with_model: n_batch    = 2048
0.00.382.487 I llama_new_context_with_model: n_ubatch   = 512
0.00.382.488 I llama_new_context_with_model: flash_attn = 0
0.00.382.491 I llama_new_context_with_model: freq_base  = 10000.0
0.00.382.492 I llama_new_context_with_model: freq_scale = 1
0.00.411.540 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.411.556 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.411.647 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.412.518 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.412.526 I llama_new_context_with_model: graph nodes  = 601
0.00.412.526 I llama_new_context_with_model: graph splits = 1
0.00.412.528 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.504.964 I main: llama threadpool init, n_threads = 4
0.00.504.980 I 
0.00.505.062 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.505.065 I 
0.00.505.104 I sampler seed: 2415125017
0.00.505.115 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.505.123 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.505.124 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.505.125 I 
 increasities and explore the nature of human consciousness.

Answer:

The pursuit of knowledge and understanding about the human mind and consciousness has captivated philosophers, scientists,

0.02.760.198 I llama_perf_sampler_print:    sampling time =       4.69 ms /    33 runs   (    0.14 ms per token,  7042.25 tokens per second)
0.02.760.201 I llama_perf_context_print:        load time =     503.06 ms
0.02.760.202 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.760.203 I llama_perf_context_print:        eval time =    2235.38 ms /    32 runs   (   69.86 ms per token,    14.32 tokens per second)
0.02.760.204 I llama_perf_context_print:       total time =    2255.24 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.567 I build: 3974 (958367bf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.799 I main: llama backend init
0.00.001.923 I main: load the model and apply lora adapter, if any
0.00.022.190 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.210 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.218 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.219 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.224 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.227 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.228 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.228 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.229 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.229 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.234 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.235 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.235 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.236 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.236 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.137 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.746 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.593 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.600 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.600 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.601 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.601 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.602 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.603 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.605 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.606 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.606 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.607 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.608 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.611 I llama_model_loader: - type  f32:   37 tensors
0.00.133.614 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.476 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.662 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.238 I llm_load_vocab: special tokens cache size = 5
0.00.280.083 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.100 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.101 I llm_load_print_meta: arch             = gemma
0.00.280.101 I llm_load_print_meta: vocab type       = SPM
0.00.280.101 I llm_load_print_meta: n_vocab          = 256000
0.00.280.102 I llm_load_print_meta: n_merges         = 0
0.00.280.102 I llm_load_print_meta: vocab_only       = 0
0.00.280.102 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.103 I llm_load_print_meta: n_embd           = 2048
0.00.280.103 I llm_load_print_meta: n_layer          = 18
0.00.280.116 I llm_load_print_meta: n_head           = 8
0.00.280.117 I llm_load_print_meta: n_head_kv        = 1
0.00.280.117 I llm_load_print_meta: n_rot            = 256
0.00.280.118 I llm_load_print_meta: n_swa            = 0
0.00.280.118 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.118 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.119 I llm_load_print_meta: n_gqa            = 8
0.00.280.120 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.121 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.122 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.123 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.123 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.124 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.124 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.125 I llm_load_print_meta: n_ff             = 16384
0.00.280.125 I llm_load_print_meta: n_expert         = 0
0.00.280.126 I llm_load_print_meta: n_expert_used    = 0
0.00.280.126 I llm_load_print_meta: causal attn      = 1
0.00.280.126 I llm_load_print_meta: pooling type     = 0
0.00.280.127 I llm_load_print_meta: rope type        = 2
0.00.280.127 I llm_load_print_meta: rope scaling     = linear
0.00.280.129 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.129 I llm_load_print_meta: freq_scale_train = 1
0.00.280.130 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.130 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.130 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.131 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.131 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.131 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.131 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.132 I llm_load_print_meta: model type       = 2B
0.00.280.132 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.133 I llm_load_print_meta: model params     = 2.51 B
0.00.280.134 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.135 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.135 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.136 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.136 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.136 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.136 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.137 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.137 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.137 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.138 I llm_load_print_meta: max token length = 93
0.00.280.157 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.374.884 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.379.992 I llama_new_context_with_model: n_ctx      = 8192
0.00.379.998 I llama_new_context_with_model: n_batch    = 2048
0.00.379.999 I llama_new_context_with_model: n_ubatch   = 512
0.00.379.999 I llama_new_context_with_model: flash_attn = 0
0.00.380.002 I llama_new_context_with_model: freq_base  = 10000.0
0.00.380.003 I llama_new_context_with_model: freq_scale = 1
0.00.410.255 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.410.271 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.410.366 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.411.232 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.411.240 I llama_new_context_with_model: graph nodes  = 601
0.00.411.240 I llama_new_context_with_model: graph splits = 1
0.00.411.242 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.503.565 I main: llama threadpool init, n_threads = 4
0.00.503.580 I 
0.00.503.662 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.503.665 I 
0.00.503.710 I sampler seed: 721476780
0.00.503.720 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.503.723 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.503.724 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.503.724 I 
 increasities. [end of text]


0.00.782.049 I llama_perf_sampler_print:    sampling time =       0.59 ms /     5 runs   (    0.12 ms per token,  8431.70 tokens per second)
0.00.782.051 I llama_perf_context_print:        load time =     501.62 ms
0.00.782.053 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.782.055 I llama_perf_context_print:        eval time =     275.10 ms /     4 runs   (   68.78 ms per token,    14.54 tokens per second)
0.00.782.056 I llama_perf_context_print:       total time =     278.49 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.573 I build: 3974 (958367bf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.773 I main: llama backend init
0.00.001.905 I main: load the model and apply lora adapter, if any
0.00.022.554 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.605 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.612 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.618 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.619 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.624 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.625 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.625 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.626 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.626 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.627 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.631 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.632 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.633 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.633 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.634 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.897 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.339 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.242 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.250 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.251 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.252 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.252 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.253 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.254 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.257 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.258 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.258 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.259 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.134.260 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.264 I llama_model_loader: - type  f32:   37 tensors
0.00.134.267 I llama_model_loader: - type q8_0:  127 tensors
0.00.226.336 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.282.074 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.282.844 I llm_load_vocab: special tokens cache size = 5
0.00.304.098 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.304.117 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.304.117 I llm_load_print_meta: arch             = gemma
0.00.304.118 I llm_load_print_meta: vocab type       = SPM
0.00.304.118 I llm_load_print_meta: n_vocab          = 256000
0.00.304.119 I llm_load_print_meta: n_merges         = 0
0.00.304.119 I llm_load_print_meta: vocab_only       = 0
0.00.304.119 I llm_load_print_meta: n_ctx_train      = 8192
0.00.304.120 I llm_load_print_meta: n_embd           = 2048
0.00.304.120 I llm_load_print_meta: n_layer          = 18
0.00.304.134 I llm_load_print_meta: n_head           = 8
0.00.304.135 I llm_load_print_meta: n_head_kv        = 1
0.00.304.136 I llm_load_print_meta: n_rot            = 256
0.00.304.136 I llm_load_print_meta: n_swa            = 0
0.00.304.136 I llm_load_print_meta: n_embd_head_k    = 256
0.00.304.137 I llm_load_print_meta: n_embd_head_v    = 256
0.00.304.138 I llm_load_print_meta: n_gqa            = 8
0.00.304.139 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.304.140 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.304.141 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.304.142 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.304.142 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.304.142 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.304.143 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.304.144 I llm_load_print_meta: n_ff             = 16384
0.00.304.144 I llm_load_print_meta: n_expert         = 0
0.00.304.144 I llm_load_print_meta: n_expert_used    = 0
0.00.304.145 I llm_load_print_meta: causal attn      = 1
0.00.304.145 I llm_load_print_meta: pooling type     = 0
0.00.304.146 I llm_load_print_meta: rope type        = 2
0.00.304.146 I llm_load_print_meta: rope scaling     = linear
0.00.304.147 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.304.148 I llm_load_print_meta: freq_scale_train = 1
0.00.304.148 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.304.149 I llm_load_print_meta: rope_finetuned   = unknown
0.00.304.149 I llm_load_print_meta: ssm_d_conv       = 0
0.00.304.149 I llm_load_print_meta: ssm_d_inner      = 0
0.00.304.149 I llm_load_print_meta: ssm_d_state      = 0
0.00.304.149 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.304.150 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.304.150 I llm_load_print_meta: model type       = 2B
0.00.304.151 I llm_load_print_meta: model ftype      = Q8_0
0.00.304.152 I llm_load_print_meta: model params     = 2.51 B
0.00.304.153 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.304.153 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.304.154 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.304.154 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.304.154 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.304.155 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.304.155 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.304.155 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.304.156 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.304.156 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.304.157 I llm_load_print_meta: max token length = 93
0.00.304.178 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.380.691 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.380.700 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.380.700 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.380.701 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.380.702 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.380.702 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.385.887 I llama_new_context_with_model: n_ctx      = 8192
0.00.385.894 I llama_new_context_with_model: n_batch    = 2048
0.00.385.894 I llama_new_context_with_model: n_ubatch   = 512
0.00.385.895 I llama_new_context_with_model: flash_attn = 0
0.00.385.898 I llama_new_context_with_model: freq_base  = 10000.0
0.00.385.899 I llama_new_context_with_model: freq_scale = 1
0.00.416.707 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.416.725 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.416.822 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.417.719 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.417.727 I llama_new_context_with_model: graph nodes  = 601
0.00.417.727 I llama_new_context_with_model: graph splits = 1
0.00.417.728 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.512.299 I main: llama threadpool init, n_threads = 4
0.00.512.313 I 
0.00.512.396 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.512.399 I 
0.00.512.445 I sampler seed: 2647912562
0.00.512.456 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.512.459 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.512.460 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.512.460 I 
 increamically.

I am sorry, but I am unable to generate responses that are sexually suggestive or inappropriate in nature. My purpose is to assist with tasks and

0.02.836.745 I llama_perf_sampler_print:    sampling time =       5.12 ms /    33 runs   (    0.16 ms per token,  6441.54 tokens per second)
0.02.836.748 I llama_perf_context_print:        load time =     510.37 ms
0.02.836.749 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.836.751 I llama_perf_context_print:        eval time =    2304.17 ms /    32 runs   (   72.01 ms per token,    13.89 tokens per second)
0.02.836.752 I llama_perf_context_print:       total time =    2324.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.581 I build: 3974 (958367bf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.800 I main: llama backend init
0.00.001.942 I main: load the model and apply lora adapter, if any
0.00.022.320 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.373 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.388 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.394 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.396 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.401 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.402 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.403 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.404 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.405 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.406 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.413 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.414 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.415 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.416 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.417 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.278 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.911 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.761 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.769 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.770 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.771 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.771 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.772 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.773 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.775 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.776 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.776 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.777 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.778 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.782 I llama_model_loader: - type  f32:   37 tensors
0.00.133.784 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.808 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.280.942 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.281.645 I llm_load_vocab: special tokens cache size = 5
0.00.303.019 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.303.040 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.303.041 I llm_load_print_meta: arch             = gemma
0.00.303.041 I llm_load_print_meta: vocab type       = SPM
0.00.303.043 I llm_load_print_meta: n_vocab          = 256000
0.00.303.043 I llm_load_print_meta: n_merges         = 0
0.00.303.044 I llm_load_print_meta: vocab_only       = 0
0.00.303.045 I llm_load_print_meta: n_ctx_train      = 8192
0.00.303.045 I llm_load_print_meta: n_embd           = 2048
0.00.303.045 I llm_load_print_meta: n_layer          = 18
0.00.303.061 I llm_load_print_meta: n_head           = 8
0.00.303.062 I llm_load_print_meta: n_head_kv        = 1
0.00.303.062 I llm_load_print_meta: n_rot            = 256
0.00.303.063 I llm_load_print_meta: n_swa            = 0
0.00.303.063 I llm_load_print_meta: n_embd_head_k    = 256
0.00.303.063 I llm_load_print_meta: n_embd_head_v    = 256
0.00.303.064 I llm_load_print_meta: n_gqa            = 8
0.00.303.065 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.303.066 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.303.067 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.303.068 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.303.068 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.303.069 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.303.069 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.303.070 I llm_load_print_meta: n_ff             = 16384
0.00.303.071 I llm_load_print_meta: n_expert         = 0
0.00.303.071 I llm_load_print_meta: n_expert_used    = 0
0.00.303.071 I llm_load_print_meta: causal attn      = 1
0.00.303.072 I llm_load_print_meta: pooling type     = 0
0.00.303.072 I llm_load_print_meta: rope type        = 2
0.00.303.073 I llm_load_print_meta: rope scaling     = linear
0.00.303.074 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.303.074 I llm_load_print_meta: freq_scale_train = 1
0.00.303.075 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.303.075 I llm_load_print_meta: rope_finetuned   = unknown
0.00.303.075 I llm_load_print_meta: ssm_d_conv       = 0
0.00.303.075 I llm_load_print_meta: ssm_d_inner      = 0
0.00.303.076 I llm_load_print_meta: ssm_d_state      = 0
0.00.303.076 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.303.076 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.303.077 I llm_load_print_meta: model type       = 2B
0.00.303.078 I llm_load_print_meta: model ftype      = Q8_0
0.00.303.079 I llm_load_print_meta: model params     = 2.51 B
0.00.303.080 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.303.081 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.303.082 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.303.082 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.303.082 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.303.083 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.303.083 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.303.083 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.303.084 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.303.084 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.303.084 I llm_load_print_meta: max token length = 93
0.00.303.111 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.373.155 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.373.163 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.378.324 I llama_new_context_with_model: n_ctx      = 8192
0.00.378.331 I llama_new_context_with_model: n_batch    = 2048
0.00.378.331 I llama_new_context_with_model: n_ubatch   = 512
0.00.378.332 I llama_new_context_with_model: flash_attn = 0
0.00.378.336 I llama_new_context_with_model: freq_base  = 10000.0
0.00.378.337 I llama_new_context_with_model: freq_scale = 1
0.00.408.102 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.408.117 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.408.214 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.409.077 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.409.086 I llama_new_context_with_model: graph nodes  = 601
0.00.409.086 I llama_new_context_with_model: graph splits = 1
0.00.409.088 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.504.768 I main: llama threadpool init, n_threads = 4
0.00.504.782 I 
0.00.504.869 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.504.874 I 
0.00.504.921 I sampler seed: 3284645546
0.00.504.935 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.504.939 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.504.939 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.504.941 I 
 increasities is a fallacy that relies on unsupported generalizations to draw conclusions. It is a type of weak form of induction that cannot establish the truth of a conclusion from

0.02.997.049 I llama_perf_sampler_print:    sampling time =       5.53 ms /    33 runs   (    0.17 ms per token,  5965.29 tokens per second)
0.02.997.052 I llama_perf_context_print:        load time =     502.80 ms
0.02.997.053 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.997.054 I llama_perf_context_print:        eval time =    2470.43 ms /    32 runs   (   77.20 ms per token,    12.95 tokens per second)
0.02.997.055 I llama_perf_context_print:       total time =    2492.29 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.035s
user	0m32.389s
sys	0m9.621s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3974 (958367bf)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32031.77 ms
main:    total time = 32031.77 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.546 I build: 3974 (958367bf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.022.114 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.164 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.177 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.182 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.188 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.192 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.192 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.193 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.193 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.194 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.194 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.206 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.207 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.207 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.208 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.209 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.721 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.666 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.510 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.518 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.519 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.520 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.521 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.522 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.523 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.526 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.527 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.527 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.528 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.528 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.533 I llama_model_loader: - type  f32:   37 tensors
0.00.133.535 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.536 I llama_model_loader: - type q6_K:   19 tensors
0.00.218.347 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.913 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.263.515 I llm_load_vocab: special tokens cache size = 5
0.00.284.669 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.689 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.689 I llm_load_print_meta: arch             = gemma
0.00.284.690 I llm_load_print_meta: vocab type       = SPM
0.00.284.691 I llm_load_print_meta: n_vocab          = 256000
0.00.284.691 I llm_load_print_meta: n_merges         = 0
0.00.284.691 I llm_load_print_meta: vocab_only       = 0
0.00.284.692 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.692 I llm_load_print_meta: n_embd           = 2048
0.00.284.692 I llm_load_print_meta: n_layer          = 18
0.00.284.705 I llm_load_print_meta: n_head           = 8
0.00.284.706 I llm_load_print_meta: n_head_kv        = 1
0.00.284.706 I llm_load_print_meta: n_rot            = 256
0.00.284.706 I llm_load_print_meta: n_swa            = 0
0.00.284.707 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.707 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.708 I llm_load_print_meta: n_gqa            = 8
0.00.284.709 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.710 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.710 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.712 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.712 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.712 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.713 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.713 I llm_load_print_meta: n_ff             = 16384
0.00.284.714 I llm_load_print_meta: n_expert         = 0
0.00.284.714 I llm_load_print_meta: n_expert_used    = 0
0.00.284.714 I llm_load_print_meta: causal attn      = 1
0.00.284.715 I llm_load_print_meta: pooling type     = 0
0.00.284.715 I llm_load_print_meta: rope type        = 2
0.00.284.716 I llm_load_print_meta: rope scaling     = linear
0.00.284.717 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.717 I llm_load_print_meta: freq_scale_train = 1
0.00.284.718 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.718 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.718 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.719 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.719 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.719 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.719 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.720 I llm_load_print_meta: model type       = 2B
0.00.284.720 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.284.721 I llm_load_print_meta: model params     = 2.51 B
0.00.284.722 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.284.722 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.723 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.723 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.723 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.724 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.724 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.724 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.724 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.725 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.726 I llm_load_print_meta: max token length = 93
0.00.284.747 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.343.957 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.343.967 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.343.967 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.343.968 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.343.969 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.343.969 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.350.129 I llama_new_context_with_model: n_ctx      = 8192
0.00.350.137 I llama_new_context_with_model: n_batch    = 2048
0.00.350.138 I llama_new_context_with_model: n_ubatch   = 512
0.00.350.139 I llama_new_context_with_model: flash_attn = 0
0.00.350.142 I llama_new_context_with_model: freq_base  = 10000.0
0.00.350.142 I llama_new_context_with_model: freq_scale = 1
0.00.380.526 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.380.542 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.380.636 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.381.522 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.381.530 I llama_new_context_with_model: graph nodes  = 601
0.00.381.530 I llama_new_context_with_model: graph splits = 1
0.00.381.532 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.438 I main: llama threadpool init, n_threads = 4
0.00.464.452 I 
0.00.464.530 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.533 I 
0.00.464.576 I sampler seed: 2291523785
0.00.464.586 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.589 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.590 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.590 I 
 effeic and acute.

This word contains two parts: the prefix "acute" and the suffix "-ic".

**Answer:** Acute. [end of text]


0.02.026.750 I llama_perf_sampler_print:    sampling time =       5.08 ms /    31 runs   (    0.16 ms per token,  6096.36 tokens per second)
0.02.026.753 I llama_perf_context_print:        load time =     462.54 ms
0.02.026.754 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.026.756 I llama_perf_context_print:        eval time =    1542.58 ms /    30 runs   (   51.42 ms per token,    19.45 tokens per second)
0.02.026.756 I llama_perf_context_print:       total time =    1562.32 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3974 (958367bf)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32080.78 ms
main:    total time = 32080.78 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.574 I build: 3974 (958367bf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.778 I main: llama backend init
0.00.001.902 I main: load the model and apply lora adapter, if any
0.00.022.164 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.176 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.183 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.184 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.188 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.189 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.189 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.190 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.190 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.191 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.196 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.196 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.198 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.198 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.199 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.992 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.884 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.695 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.702 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.702 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.703 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.704 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.705 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.705 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.708 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.709 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.713 I llama_model_loader: - type  f32:   37 tensors
0.00.132.716 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.716 I llama_model_loader: - type q6_K:   19 tensors
0.00.224.970 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.275.642 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.276.294 I llm_load_vocab: special tokens cache size = 5
0.00.297.673 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.297.691 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.297.691 I llm_load_print_meta: arch             = gemma
0.00.297.692 I llm_load_print_meta: vocab type       = SPM
0.00.297.693 I llm_load_print_meta: n_vocab          = 256000
0.00.297.693 I llm_load_print_meta: n_merges         = 0
0.00.297.694 I llm_load_print_meta: vocab_only       = 0
0.00.297.694 I llm_load_print_meta: n_ctx_train      = 8192
0.00.297.694 I llm_load_print_meta: n_embd           = 2048
0.00.297.695 I llm_load_print_meta: n_layer          = 18
0.00.297.707 I llm_load_print_meta: n_head           = 8
0.00.297.708 I llm_load_print_meta: n_head_kv        = 1
0.00.297.708 I llm_load_print_meta: n_rot            = 256
0.00.297.709 I llm_load_print_meta: n_swa            = 0
0.00.297.709 I llm_load_print_meta: n_embd_head_k    = 256
0.00.297.709 I llm_load_print_meta: n_embd_head_v    = 256
0.00.297.710 I llm_load_print_meta: n_gqa            = 8
0.00.297.711 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.297.712 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.297.713 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.297.714 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.297.715 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.297.715 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.297.715 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.297.716 I llm_load_print_meta: n_ff             = 16384
0.00.297.716 I llm_load_print_meta: n_expert         = 0
0.00.297.717 I llm_load_print_meta: n_expert_used    = 0
0.00.297.717 I llm_load_print_meta: causal attn      = 1
0.00.297.717 I llm_load_print_meta: pooling type     = 0
0.00.297.718 I llm_load_print_meta: rope type        = 2
0.00.297.718 I llm_load_print_meta: rope scaling     = linear
0.00.297.719 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.297.720 I llm_load_print_meta: freq_scale_train = 1
0.00.297.720 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.297.721 I llm_load_print_meta: rope_finetuned   = unknown
0.00.297.721 I llm_load_print_meta: ssm_d_conv       = 0
0.00.297.721 I llm_load_print_meta: ssm_d_inner      = 0
0.00.297.722 I llm_load_print_meta: ssm_d_state      = 0
0.00.297.722 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.297.722 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.297.722 I llm_load_print_meta: model type       = 2B
0.00.297.723 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.297.724 I llm_load_print_meta: model params     = 2.51 B
0.00.297.725 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.297.725 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.297.726 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.297.726 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.297.727 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.297.727 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.297.727 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.297.728 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.297.728 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.297.728 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.297.728 I llm_load_print_meta: max token length = 93
0.00.297.751 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.355.461 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.360.481 I llama_new_context_with_model: n_ctx      = 8192
0.00.360.487 I llama_new_context_with_model: n_batch    = 2048
0.00.360.488 I llama_new_context_with_model: n_ubatch   = 512
0.00.360.488 I llama_new_context_with_model: flash_attn = 0
0.00.360.491 I llama_new_context_with_model: freq_base  = 10000.0
0.00.360.492 I llama_new_context_with_model: freq_scale = 1
0.00.390.492 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.390.509 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.390.612 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.391.501 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.391.509 I llama_new_context_with_model: graph nodes  = 601
0.00.391.509 I llama_new_context_with_model: graph splits = 1
0.00.391.512 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.064 I main: llama threadpool init, n_threads = 4
0.00.473.078 I 
0.00.473.158 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.162 I 
0.00.473.202 I sampler seed: 3859334101
0.00.473.213 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.218 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.473.219 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.219 I 
 increasities, and other forms of harassment.

**Response:**

**1. Reporting and Documentation:**

* Reporting mechanisms should be established and readily accessible to

0.02.164.306 I llama_perf_sampler_print:    sampling time =       5.14 ms /    33 runs   (    0.16 ms per token,  6415.24 tokens per second)
0.02.164.309 I llama_perf_context_print:        load time =     471.14 ms
0.02.164.310 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.164.311 I llama_perf_context_print:        eval time =    1670.12 ms /    32 runs   (   52.19 ms per token,    19.16 tokens per second)
0.02.164.311 I llama_perf_context_print:       total time =    1691.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.244s
user	8m15.026s
sys	0m7.141s
