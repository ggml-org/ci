+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.575 I build: 3828 (95bc82fb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.767 I main: llama backend init
0.00.001.902 I main: load the model and apply lora adapter, if any
0.00.022.511 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.559 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.570 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.574 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.575 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.579 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.580 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.581 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.582 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.583 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.583 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.588 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.588 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.589 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.590 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.590 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.193 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.759 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.610 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.617 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.618 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.619 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.620 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.621 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.622 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.626 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.626 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.628 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.628 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.630 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.634 I llama_model_loader: - type  f32:   37 tensors
0.00.133.638 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.776 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.787 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.548 I llm_load_vocab: special tokens cache size = 5
0.00.231.642 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.655 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.656 I llm_load_print_meta: arch             = gemma
0.00.231.656 I llm_load_print_meta: vocab type       = SPM
0.00.231.657 I llm_load_print_meta: n_vocab          = 256000
0.00.231.657 I llm_load_print_meta: n_merges         = 0
0.00.231.658 I llm_load_print_meta: vocab_only       = 0
0.00.231.658 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.658 I llm_load_print_meta: n_embd           = 2048
0.00.231.659 I llm_load_print_meta: n_layer          = 18
0.00.231.671 I llm_load_print_meta: n_head           = 8
0.00.231.672 I llm_load_print_meta: n_head_kv        = 1
0.00.231.673 I llm_load_print_meta: n_rot            = 256
0.00.231.673 I llm_load_print_meta: n_swa            = 0
0.00.231.673 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.674 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.675 I llm_load_print_meta: n_gqa            = 8
0.00.231.676 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.677 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.677 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.679 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.679 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.679 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.680 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.681 I llm_load_print_meta: n_ff             = 16384
0.00.231.681 I llm_load_print_meta: n_expert         = 0
0.00.231.681 I llm_load_print_meta: n_expert_used    = 0
0.00.231.682 I llm_load_print_meta: causal attn      = 1
0.00.231.682 I llm_load_print_meta: pooling type     = 0
0.00.231.682 I llm_load_print_meta: rope type        = 2
0.00.231.683 I llm_load_print_meta: rope scaling     = linear
0.00.231.684 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.684 I llm_load_print_meta: freq_scale_train = 1
0.00.231.685 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.685 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.685 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.686 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.686 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.686 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.686 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.687 I llm_load_print_meta: model type       = 2B
0.00.231.687 I llm_load_print_meta: model ftype      = Q8_0
0.00.231.688 I llm_load_print_meta: model params     = 2.51 B
0.00.231.689 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.231.689 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.690 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.690 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.691 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.691 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.691 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.691 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.692 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.692 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.693 I llm_load_print_meta: max token length = 93
0.00.231.710 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.288 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.329.297 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.329.298 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.329.299 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.329.299 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.329.300 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.334.498 I llama_new_context_with_model: n_ctx      = 8192
0.00.334.506 I llama_new_context_with_model: n_batch    = 2048
0.00.334.507 I llama_new_context_with_model: n_ubatch   = 512
0.00.334.507 I llama_new_context_with_model: flash_attn = 0
0.00.334.511 I llama_new_context_with_model: freq_base  = 10000.0
0.00.334.512 I llama_new_context_with_model: freq_scale = 1
0.00.363.549 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.566 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.661 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.535 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.543 I llama_new_context_with_model: graph nodes  = 601
0.00.364.544 I llama_new_context_with_model: graph splits = 1
0.00.364.546 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.455.513 I main: llama threadpool init, n_threads = 4
0.00.455.526 I 
0.00.455.599 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.455.602 I 
0.00.455.641 I sampler seed: 528054190
0.00.455.650 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.654 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.455.655 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.657 I 
 increasements:

* **The influence of media technology on communication has been profound.**
* **Social media has revolutionized the way we communicate with each other

0.02.700.080 I llama_perf_sampler_print:    sampling time =       5.00 ms /    33 runs   (    0.15 ms per token,  6601.32 tokens per second)
0.02.700.082 I llama_perf_context_print:        load time =     453.59 ms
0.02.700.083 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.700.084 I llama_perf_context_print:        eval time =    2226.52 ms /    32 runs   (   69.58 ms per token,    14.37 tokens per second)
0.02.700.085 I llama_perf_context_print:       total time =    2244.57 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.598 I build: 3828 (95bc82fb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.797 I main: llama backend init
0.00.001.927 I main: load the model and apply lora adapter, if any
0.00.022.281 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.293 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.300 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.301 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.304 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.305 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.305 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.306 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.306 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.307 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.312 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.312 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.313 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.314 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.314 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.977 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.868 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.707 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.714 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.714 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.715 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.715 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.716 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.717 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.720 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.720 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.721 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.722 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.723 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.726 I llama_model_loader: - type  f32:   37 tensors
0.00.133.728 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.732 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.216.986 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.217.748 I llm_load_vocab: special tokens cache size = 5
0.00.235.943 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.958 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.959 I llm_load_print_meta: arch             = gemma
0.00.235.959 I llm_load_print_meta: vocab type       = SPM
0.00.235.960 I llm_load_print_meta: n_vocab          = 256000
0.00.235.960 I llm_load_print_meta: n_merges         = 0
0.00.235.961 I llm_load_print_meta: vocab_only       = 0
0.00.235.961 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.962 I llm_load_print_meta: n_embd           = 2048
0.00.235.962 I llm_load_print_meta: n_layer          = 18
0.00.235.975 I llm_load_print_meta: n_head           = 8
0.00.235.976 I llm_load_print_meta: n_head_kv        = 1
0.00.235.976 I llm_load_print_meta: n_rot            = 256
0.00.235.976 I llm_load_print_meta: n_swa            = 0
0.00.235.977 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.977 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.978 I llm_load_print_meta: n_gqa            = 8
0.00.235.979 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.980 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.981 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.982 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.982 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.983 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.983 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.984 I llm_load_print_meta: n_ff             = 16384
0.00.235.984 I llm_load_print_meta: n_expert         = 0
0.00.235.985 I llm_load_print_meta: n_expert_used    = 0
0.00.235.985 I llm_load_print_meta: causal attn      = 1
0.00.235.985 I llm_load_print_meta: pooling type     = 0
0.00.235.986 I llm_load_print_meta: rope type        = 2
0.00.235.986 I llm_load_print_meta: rope scaling     = linear
0.00.235.988 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.989 I llm_load_print_meta: freq_scale_train = 1
0.00.235.989 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.989 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.990 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.990 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.990 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.990 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.991 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.991 I llm_load_print_meta: model type       = 2B
0.00.235.992 I llm_load_print_meta: model ftype      = Q8_0
0.00.235.993 I llm_load_print_meta: model params     = 2.51 B
0.00.235.994 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.235.994 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.994 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.995 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.995 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.995 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.996 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.996 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.997 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.997 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.997 I llm_load_print_meta: max token length = 93
0.00.236.017 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.328.319 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.333.326 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.332 I llama_new_context_with_model: n_batch    = 2048
0.00.333.332 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.333 I llama_new_context_with_model: flash_attn = 0
0.00.333.335 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.336 I llama_new_context_with_model: freq_scale = 1
0.00.362.181 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.362.197 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.362.287 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.191 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.363.198 I llama_new_context_with_model: graph nodes  = 601
0.00.363.199 I llama_new_context_with_model: graph splits = 1
0.00.363.201 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.504 I main: llama threadpool init, n_threads = 4
0.00.449.517 I 
0.00.449.590 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.593 I 
0.00.449.623 I sampler seed: 481956355
0.00.449.632 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.449.645 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.449.648 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.449.648 I 
 increasities are a type of violation of privacy and personal data protection laws. They can occur when personal data is collected, stored, or processed in a manner that

0.02.612.622 I llama_perf_sampler_print:    sampling time =       4.67 ms /    33 runs   (    0.14 ms per token,  7070.92 tokens per second)
0.02.612.625 I llama_perf_context_print:        load time =     447.56 ms
0.02.612.626 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.612.628 I llama_perf_context_print:        eval time =    2145.48 ms /    32 runs   (   67.05 ms per token,    14.92 tokens per second)
0.02.612.629 I llama_perf_context_print:       total time =    2163.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.559 I build: 3828 (95bc82fb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.001.911 I main: load the model and apply lora adapter, if any
0.00.021.942 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.075 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.083 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.088 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.091 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.096 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.097 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.098 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.099 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.100 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.101 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.107 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.108 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.109 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.110 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.113 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.052.159 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.806 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.137.637 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.137.644 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.137.645 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.137.646 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.137.647 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.137.648 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.137.649 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.137.653 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.137.654 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.137.655 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.137.656 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.137.657 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.137.661 I llama_model_loader: - type  f32:   37 tensors
0.00.137.664 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.347 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.223.720 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.224.554 I llm_load_vocab: special tokens cache size = 5
0.00.242.737 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.242.752 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.242.753 I llm_load_print_meta: arch             = gemma
0.00.242.754 I llm_load_print_meta: vocab type       = SPM
0.00.242.754 I llm_load_print_meta: n_vocab          = 256000
0.00.242.755 I llm_load_print_meta: n_merges         = 0
0.00.242.755 I llm_load_print_meta: vocab_only       = 0
0.00.242.755 I llm_load_print_meta: n_ctx_train      = 8192
0.00.242.756 I llm_load_print_meta: n_embd           = 2048
0.00.242.756 I llm_load_print_meta: n_layer          = 18
0.00.242.769 I llm_load_print_meta: n_head           = 8
0.00.242.770 I llm_load_print_meta: n_head_kv        = 1
0.00.242.770 I llm_load_print_meta: n_rot            = 256
0.00.242.770 I llm_load_print_meta: n_swa            = 0
0.00.242.771 I llm_load_print_meta: n_embd_head_k    = 256
0.00.242.771 I llm_load_print_meta: n_embd_head_v    = 256
0.00.242.772 I llm_load_print_meta: n_gqa            = 8
0.00.242.773 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.242.774 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.242.775 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.242.776 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.242.777 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.242.777 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.242.777 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.242.779 I llm_load_print_meta: n_ff             = 16384
0.00.242.780 I llm_load_print_meta: n_expert         = 0
0.00.242.780 I llm_load_print_meta: n_expert_used    = 0
0.00.242.781 I llm_load_print_meta: causal attn      = 1
0.00.242.781 I llm_load_print_meta: pooling type     = 0
0.00.242.781 I llm_load_print_meta: rope type        = 2
0.00.242.782 I llm_load_print_meta: rope scaling     = linear
0.00.242.783 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.242.784 I llm_load_print_meta: freq_scale_train = 1
0.00.242.785 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.242.785 I llm_load_print_meta: rope_finetuned   = unknown
0.00.242.786 I llm_load_print_meta: ssm_d_conv       = 0
0.00.242.786 I llm_load_print_meta: ssm_d_inner      = 0
0.00.242.787 I llm_load_print_meta: ssm_d_state      = 0
0.00.242.787 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.242.788 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.242.788 I llm_load_print_meta: model type       = 2B
0.00.242.789 I llm_load_print_meta: model ftype      = Q8_0
0.00.242.790 I llm_load_print_meta: model params     = 2.51 B
0.00.242.791 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.242.792 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.242.793 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.242.793 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.242.794 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.242.794 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.242.794 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.242.795 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.242.795 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.242.796 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.242.796 I llm_load_print_meta: max token length = 93
0.00.242.831 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.626 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.319.634 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.319.635 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.319.636 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.319.636 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.319.637 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.324.691 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.697 I llama_new_context_with_model: n_batch    = 2048
0.00.324.697 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.698 I llama_new_context_with_model: flash_attn = 0
0.00.324.700 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.701 I llama_new_context_with_model: freq_scale = 1
0.00.354.236 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.252 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.339 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.201 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.355.208 I llama_new_context_with_model: graph nodes  = 601
0.00.355.208 I llama_new_context_with_model: graph splits = 1
0.00.355.210 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.307 I main: llama threadpool init, n_threads = 4
0.00.447.321 I 
0.00.447.403 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.447.407 I 
0.00.447.452 I sampler seed: 3649540356
0.00.447.465 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.469 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.447.470 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.471 I 
 increasities. [end of text]


0.00.733.856 I llama_perf_sampler_print:    sampling time =       0.59 ms /     5 runs   (    0.12 ms per token,  8503.40 tokens per second)
0.00.733.858 I llama_perf_context_print:        load time =     445.38 ms
0.00.733.860 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.733.861 I llama_perf_context_print:        eval time =     283.16 ms /     4 runs   (   70.79 ms per token,    14.13 tokens per second)
0.00.733.861 I llama_perf_context_print:       total time =     286.56 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.666 I build: 3828 (95bc82fb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.870 I main: llama backend init
0.00.002.145 I main: load the model and apply lora adapter, if any
0.00.023.522 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.570 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.580 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.586 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.587 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.592 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.593 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.594 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.595 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.596 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.597 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.602 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.603 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.604 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.605 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.607 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.052.285 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.863 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.819 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.828 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.829 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.831 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.832 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.833 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.834 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.838 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.840 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.841 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.842 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.135.843 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.848 I llama_model_loader: - type  f32:   37 tensors
0.00.135.851 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.438 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.886 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.575 I llm_load_vocab: special tokens cache size = 5
0.00.232.710 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.726 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.727 I llm_load_print_meta: arch             = gemma
0.00.232.728 I llm_load_print_meta: vocab type       = SPM
0.00.232.729 I llm_load_print_meta: n_vocab          = 256000
0.00.232.729 I llm_load_print_meta: n_merges         = 0
0.00.232.730 I llm_load_print_meta: vocab_only       = 0
0.00.232.730 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.731 I llm_load_print_meta: n_embd           = 2048
0.00.232.731 I llm_load_print_meta: n_layer          = 18
0.00.232.745 I llm_load_print_meta: n_head           = 8
0.00.232.747 I llm_load_print_meta: n_head_kv        = 1
0.00.232.748 I llm_load_print_meta: n_rot            = 256
0.00.232.748 I llm_load_print_meta: n_swa            = 0
0.00.232.749 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.749 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.751 I llm_load_print_meta: n_gqa            = 8
0.00.232.753 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.755 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.756 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.757 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.758 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.759 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.761 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.763 I llm_load_print_meta: n_ff             = 16384
0.00.232.764 I llm_load_print_meta: n_expert         = 0
0.00.232.764 I llm_load_print_meta: n_expert_used    = 0
0.00.232.765 I llm_load_print_meta: causal attn      = 1
0.00.232.766 I llm_load_print_meta: pooling type     = 0
0.00.232.766 I llm_load_print_meta: rope type        = 2
0.00.232.767 I llm_load_print_meta: rope scaling     = linear
0.00.232.769 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.770 I llm_load_print_meta: freq_scale_train = 1
0.00.232.770 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.771 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.772 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.773 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.773 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.774 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.774 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.775 I llm_load_print_meta: model type       = 2B
0.00.232.776 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.777 I llm_load_print_meta: model params     = 2.51 B
0.00.232.778 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.779 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.782 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.782 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.783 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.783 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.784 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.784 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.785 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.786 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.786 I llm_load_print_meta: max token length = 93
0.00.232.816 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.303.822 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.303.829 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.308.935 I llama_new_context_with_model: n_ctx      = 8192
0.00.308.941 I llama_new_context_with_model: n_batch    = 2048
0.00.308.941 I llama_new_context_with_model: n_ubatch   = 512
0.00.308.942 I llama_new_context_with_model: flash_attn = 0
0.00.308.945 I llama_new_context_with_model: freq_base  = 10000.0
0.00.308.946 I llama_new_context_with_model: freq_scale = 1
0.00.337.647 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.337.665 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.337.770 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.338.650 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.338.658 I llama_new_context_with_model: graph nodes  = 601
0.00.338.658 I llama_new_context_with_model: graph splits = 1
0.00.338.660 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.432.892 I main: llama threadpool init, n_threads = 4
0.00.432.904 I 
0.00.432.984 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.432.987 I 
0.00.433.020 I sampler seed: 1967576141
0.00.433.031 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.034 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.035 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.036 I 
 increasities. [end of text]


0.00.735.633 I llama_perf_sampler_print:    sampling time =       0.66 ms /     5 runs   (    0.13 ms per token,  7587.25 tokens per second)
0.00.735.636 I llama_perf_context_print:        load time =     430.73 ms
0.00.735.637 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.735.640 I llama_perf_context_print:        eval time =     299.21 ms /     4 runs   (   74.80 ms per token,    13.37 tokens per second)
0.00.735.641 I llama_perf_context_print:       total time =     302.75 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.165s
user	0m22.792s
sys	0m9.407s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3828 (95bc82fb)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32223.60 ms
main:    total time = 32223.60 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.570 I build: 3828 (95bc82fb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.779 I main: llama backend init
0.00.001.920 I main: load the model and apply lora adapter, if any
0.00.021.985 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.045 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.063 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.069 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.070 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.074 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.075 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.076 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.077 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.078 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.079 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.085 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.086 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.091 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.092 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.093 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.869 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.877 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.710 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.717 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.718 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.719 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.720 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.721 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.722 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.725 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.726 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.727 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.728 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.730 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.735 I llama_model_loader: - type  f32:   37 tensors
0.00.133.738 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.739 I llama_model_loader: - type q6_K:   19 tensors
0.00.198.327 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.040 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.756 I llm_load_vocab: special tokens cache size = 5
0.00.230.787 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.801 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.801 I llm_load_print_meta: arch             = gemma
0.00.230.802 I llm_load_print_meta: vocab type       = SPM
0.00.230.802 I llm_load_print_meta: n_vocab          = 256000
0.00.230.802 I llm_load_print_meta: n_merges         = 0
0.00.230.803 I llm_load_print_meta: vocab_only       = 0
0.00.230.803 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.803 I llm_load_print_meta: n_embd           = 2048
0.00.230.804 I llm_load_print_meta: n_layer          = 18
0.00.230.816 I llm_load_print_meta: n_head           = 8
0.00.230.817 I llm_load_print_meta: n_head_kv        = 1
0.00.230.817 I llm_load_print_meta: n_rot            = 256
0.00.230.817 I llm_load_print_meta: n_swa            = 0
0.00.230.818 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.818 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.819 I llm_load_print_meta: n_gqa            = 8
0.00.230.820 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.821 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.821 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.823 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.823 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.824 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.824 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.825 I llm_load_print_meta: n_ff             = 16384
0.00.230.825 I llm_load_print_meta: n_expert         = 0
0.00.230.826 I llm_load_print_meta: n_expert_used    = 0
0.00.230.826 I llm_load_print_meta: causal attn      = 1
0.00.230.826 I llm_load_print_meta: pooling type     = 0
0.00.230.827 I llm_load_print_meta: rope type        = 2
0.00.230.827 I llm_load_print_meta: rope scaling     = linear
0.00.230.829 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.830 I llm_load_print_meta: freq_scale_train = 1
0.00.230.830 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.830 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.830 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.831 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.831 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.832 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.832 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.832 I llm_load_print_meta: model type       = 2B
0.00.230.833 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.230.834 I llm_load_print_meta: model params     = 2.51 B
0.00.230.834 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.230.835 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.835 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.836 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.836 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.836 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.836 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.837 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.837 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.838 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.838 I llm_load_print_meta: max token length = 93
0.00.230.858 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.288.857 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.288.864 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.288.865 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.288.865 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.288.866 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.288.866 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.293.824 I llama_new_context_with_model: n_ctx      = 8192
0.00.293.830 I llama_new_context_with_model: n_batch    = 2048
0.00.293.830 I llama_new_context_with_model: n_ubatch   = 512
0.00.293.831 I llama_new_context_with_model: flash_attn = 0
0.00.293.833 I llama_new_context_with_model: freq_base  = 10000.0
0.00.293.834 I llama_new_context_with_model: freq_scale = 1
0.00.322.545 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.322.560 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.322.657 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.323.539 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.323.547 I llama_new_context_with_model: graph nodes  = 601
0.00.323.548 I llama_new_context_with_model: graph splits = 1
0.00.323.550 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.405.235 I main: llama threadpool init, n_threads = 4
0.00.405.248 I 
0.00.405.336 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.405.341 I 
0.00.405.387 I sampler seed: 2259567464
0.00.405.398 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.405.402 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.405.403 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.405.403 I 
 increasities. [end of text]


0.00.604.361 I llama_perf_sampler_print:    sampling time =       0.64 ms /     5 runs   (    0.13 ms per token,  7874.02 tokens per second)
0.00.604.363 I llama_perf_context_print:        load time =     403.30 ms
0.00.604.364 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.604.366 I llama_perf_context_print:        eval time =     195.75 ms /     4 runs   (   48.94 ms per token,    20.43 tokens per second)
0.00.604.366 I llama_perf_context_print:       total time =     199.13 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3828 (95bc82fb)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32094.91 ms
main:    total time = 32094.91 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.552 I build: 3828 (95bc82fb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.881 I main: load the model and apply lora adapter, if any
0.00.021.961 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.980 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.988 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.991 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.995 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.996 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.996 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.997 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.997 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.998 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.001 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.002 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.002 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.003 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.004 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.635 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.664 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.483 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.489 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.489 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.490 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.491 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.491 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.492 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.495 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.495 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.498 I llama_model_loader: - type  f32:   37 tensors
0.00.133.501 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.501 I llama_model_loader: - type q6_K:   19 tensors
0.00.199.171 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.595 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.334 I llm_load_vocab: special tokens cache size = 5
0.00.232.669 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.683 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.684 I llm_load_print_meta: arch             = gemma
0.00.232.684 I llm_load_print_meta: vocab type       = SPM
0.00.232.685 I llm_load_print_meta: n_vocab          = 256000
0.00.232.686 I llm_load_print_meta: n_merges         = 0
0.00.232.686 I llm_load_print_meta: vocab_only       = 0
0.00.232.686 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.687 I llm_load_print_meta: n_embd           = 2048
0.00.232.687 I llm_load_print_meta: n_layer          = 18
0.00.232.699 I llm_load_print_meta: n_head           = 8
0.00.232.700 I llm_load_print_meta: n_head_kv        = 1
0.00.232.701 I llm_load_print_meta: n_rot            = 256
0.00.232.701 I llm_load_print_meta: n_swa            = 0
0.00.232.701 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.701 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.702 I llm_load_print_meta: n_gqa            = 8
0.00.232.703 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.704 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.705 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.706 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.707 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.707 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.707 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.708 I llm_load_print_meta: n_ff             = 16384
0.00.232.708 I llm_load_print_meta: n_expert         = 0
0.00.232.708 I llm_load_print_meta: n_expert_used    = 0
0.00.232.709 I llm_load_print_meta: causal attn      = 1
0.00.232.709 I llm_load_print_meta: pooling type     = 0
0.00.232.709 I llm_load_print_meta: rope type        = 2
0.00.232.710 I llm_load_print_meta: rope scaling     = linear
0.00.232.711 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.712 I llm_load_print_meta: freq_scale_train = 1
0.00.232.712 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.713 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.713 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.713 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.713 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.713 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.714 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.714 I llm_load_print_meta: model type       = 2B
0.00.232.715 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.232.715 I llm_load_print_meta: model params     = 2.51 B
0.00.232.716 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.232.716 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.717 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.717 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.718 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.718 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.718 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.719 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.719 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.720 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.720 I llm_load_print_meta: max token length = 93
0.00.232.739 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.290.873 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.295.874 I llama_new_context_with_model: n_ctx      = 8192
0.00.295.881 I llama_new_context_with_model: n_batch    = 2048
0.00.295.882 I llama_new_context_with_model: n_ubatch   = 512
0.00.295.882 I llama_new_context_with_model: flash_attn = 0
0.00.295.884 I llama_new_context_with_model: freq_base  = 10000.0
0.00.295.885 I llama_new_context_with_model: freq_scale = 1
0.00.325.329 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.325.350 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.325.441 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.326.300 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.326.307 I llama_new_context_with_model: graph nodes  = 601
0.00.326.308 I llama_new_context_with_model: graph splits = 1
0.00.326.309 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.407.516 I main: llama threadpool init, n_threads = 4
0.00.407.528 I 
0.00.407.598 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.407.601 I 
0.00.407.638 I sampler seed: 331390208
0.00.407.647 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.407.649 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.407.650 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.407.650 I 
 seconally.

I understand your request, but I am unable to provide assistance with sexually suggestive or inappropriate content. My purpose is to uphold ethical standards and promote

0.01.983.491 I llama_perf_sampler_print:    sampling time =       4.96 ms /    33 runs   (    0.15 ms per token,  6651.88 tokens per second)
0.01.983.494 I llama_perf_context_print:        load time =     405.62 ms
0.01.983.495 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.983.497 I llama_perf_context_print:        eval time =    1558.35 ms /    32 runs   (   48.70 ms per token,    20.53 tokens per second)
0.01.983.497 I llama_perf_context_print:       total time =    1575.98 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m9.685s
user	8m9.125s
sys	0m6.889s
