+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.843 I main: llama backend init
0.00.002.783 I main: load the model and apply lora adapter, if any
0.00.024.867 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.081 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.171 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.183 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.185 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.189 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.190 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.191 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.192 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.193 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.194 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.202 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.204 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.205 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.206 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.208 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.990 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.961 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.365 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.375 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.376 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.377 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.378 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.379 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.381 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.385 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.386 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.388 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.390 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.391 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.400 I llama_model_loader: - type  f32:   37 tensors
0.00.267.404 I llama_model_loader: - type q8_0:  127 tensors
0.00.420.000 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.445.113 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.446.159 I llm_load_vocab: special tokens cache size = 5
0.00.539.991 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.540.048 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.540.049 I llm_load_print_meta: arch             = gemma
0.00.540.049 I llm_load_print_meta: vocab type       = SPM
0.00.540.050 I llm_load_print_meta: n_vocab          = 256000
0.00.540.053 I llm_load_print_meta: n_merges         = 0
0.00.540.054 I llm_load_print_meta: vocab_only       = 0
0.00.540.054 I llm_load_print_meta: n_ctx_train      = 8192
0.00.540.055 I llm_load_print_meta: n_embd           = 2048
0.00.540.055 I llm_load_print_meta: n_layer          = 18
0.00.540.121 I llm_load_print_meta: n_head           = 8
0.00.540.129 I llm_load_print_meta: n_head_kv        = 1
0.00.540.129 I llm_load_print_meta: n_rot            = 256
0.00.540.129 I llm_load_print_meta: n_swa            = 0
0.00.540.130 I llm_load_print_meta: n_embd_head_k    = 256
0.00.540.130 I llm_load_print_meta: n_embd_head_v    = 256
0.00.540.135 I llm_load_print_meta: n_gqa            = 8
0.00.540.139 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.540.144 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.540.145 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.540.147 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.540.148 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.540.148 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.540.148 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.540.153 I llm_load_print_meta: n_ff             = 16384
0.00.540.154 I llm_load_print_meta: n_expert         = 0
0.00.540.154 I llm_load_print_meta: n_expert_used    = 0
0.00.540.154 I llm_load_print_meta: causal attn      = 1
0.00.540.155 I llm_load_print_meta: pooling type     = 0
0.00.540.155 I llm_load_print_meta: rope type        = 2
0.00.540.155 I llm_load_print_meta: rope scaling     = linear
0.00.540.157 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.540.157 I llm_load_print_meta: freq_scale_train = 1
0.00.540.158 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.540.158 I llm_load_print_meta: rope_finetuned   = unknown
0.00.540.158 I llm_load_print_meta: ssm_d_conv       = 0
0.00.540.159 I llm_load_print_meta: ssm_d_inner      = 0
0.00.540.159 I llm_load_print_meta: ssm_d_state      = 0
0.00.540.159 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.540.160 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.540.160 I llm_load_print_meta: model type       = 2B
0.00.540.161 I llm_load_print_meta: model ftype      = Q8_0
0.00.540.161 I llm_load_print_meta: model params     = 2.51 B
0.00.540.162 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.540.163 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.540.163 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.540.164 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.540.164 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.540.165 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.540.166 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.540.166 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.540.172 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.540.173 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.540.174 I llm_load_print_meta: max token length = 93
0.00.540.346 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.642.586 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.642.595 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.642.596 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.642.597 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.642.598 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.642.598 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.648.287 I llama_new_context_with_model: n_ctx      = 8192
0.00.648.294 I llama_new_context_with_model: n_batch    = 2048
0.00.648.294 I llama_new_context_with_model: n_ubatch   = 512
0.00.648.295 I llama_new_context_with_model: flash_attn = 0
0.00.648.297 I llama_new_context_with_model: freq_base  = 10000.0
0.00.648.298 I llama_new_context_with_model: freq_scale = 1
0.00.676.854 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.676.894 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.677.010 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.678.414 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.678.420 I llama_new_context_with_model: graph nodes  = 601
0.00.678.420 I llama_new_context_with_model: graph splits = 1
0.00.678.436 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.290.820 I main: llama threadpool init, n_threads = 4
0.01.290.830 I 
0.01.290.939 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.290.943 I 
0.01.291.107 I sampler seed: 534830331
0.01.291.118 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.291.125 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.291.126 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.291.126 I 
 increably.

I am unable to access the internet to retrieve the necessary data for generating the requested output. Therefore, I am unable to provide the requested output

0.14.914.823 I llama_perf_sampler_print:    sampling time =      49.22 ms /    33 runs   (    1.49 ms per token,   670.40 tokens per second)
0.14.914.836 I llama_perf_context_print:        load time =    1287.93 ms
0.14.914.838 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.914.841 I llama_perf_context_print:        eval time =   13542.06 ms /    32 runs   (  423.19 ms per token,     2.36 tokens per second)
0.14.914.842 I llama_perf_context_print:       total time =   13624.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.644 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.858 I main: llama backend init
0.00.002.804 I main: load the model and apply lora adapter, if any
0.00.024.527 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.630 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.645 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.649 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.653 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.655 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.656 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.657 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.658 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.658 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.666 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.667 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.668 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.669 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.670 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.832 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.751 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.049 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.061 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.062 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.063 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.064 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.066 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.067 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.070 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.071 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.072 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.073 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.075 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.084 I llama_model_loader: - type  f32:   37 tensors
0.00.268.088 I llama_model_loader: - type q8_0:  127 tensors
0.00.408.626 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.430.536 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.431.558 I llm_load_vocab: special tokens cache size = 5
0.00.525.085 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.525.146 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.525.147 I llm_load_print_meta: arch             = gemma
0.00.525.148 I llm_load_print_meta: vocab type       = SPM
0.00.525.149 I llm_load_print_meta: n_vocab          = 256000
0.00.525.151 I llm_load_print_meta: n_merges         = 0
0.00.525.152 I llm_load_print_meta: vocab_only       = 0
0.00.525.152 I llm_load_print_meta: n_ctx_train      = 8192
0.00.525.152 I llm_load_print_meta: n_embd           = 2048
0.00.525.153 I llm_load_print_meta: n_layer          = 18
0.00.525.217 I llm_load_print_meta: n_head           = 8
0.00.525.225 I llm_load_print_meta: n_head_kv        = 1
0.00.525.226 I llm_load_print_meta: n_rot            = 256
0.00.525.226 I llm_load_print_meta: n_swa            = 0
0.00.525.226 I llm_load_print_meta: n_embd_head_k    = 256
0.00.525.228 I llm_load_print_meta: n_embd_head_v    = 256
0.00.525.232 I llm_load_print_meta: n_gqa            = 8
0.00.525.237 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.525.250 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.525.252 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.525.254 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.525.265 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.525.266 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.525.267 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.525.274 I llm_load_print_meta: n_ff             = 16384
0.00.525.275 I llm_load_print_meta: n_expert         = 0
0.00.525.275 I llm_load_print_meta: n_expert_used    = 0
0.00.525.276 I llm_load_print_meta: causal attn      = 1
0.00.525.276 I llm_load_print_meta: pooling type     = 0
0.00.525.276 I llm_load_print_meta: rope type        = 2
0.00.525.277 I llm_load_print_meta: rope scaling     = linear
0.00.525.278 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.525.279 I llm_load_print_meta: freq_scale_train = 1
0.00.525.279 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.525.280 I llm_load_print_meta: rope_finetuned   = unknown
0.00.525.280 I llm_load_print_meta: ssm_d_conv       = 0
0.00.525.281 I llm_load_print_meta: ssm_d_inner      = 0
0.00.525.284 I llm_load_print_meta: ssm_d_state      = 0
0.00.525.284 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.525.285 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.525.285 I llm_load_print_meta: model type       = 2B
0.00.525.286 I llm_load_print_meta: model ftype      = Q8_0
0.00.525.287 I llm_load_print_meta: model params     = 2.51 B
0.00.525.288 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.525.288 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.525.289 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.525.289 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.525.289 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.525.290 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.525.298 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.525.299 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.525.305 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.525.307 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.525.308 I llm_load_print_meta: max token length = 93
0.00.525.490 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.621.604 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.627.348 I llama_new_context_with_model: n_ctx      = 8192
0.00.627.356 I llama_new_context_with_model: n_batch    = 2048
0.00.627.356 I llama_new_context_with_model: n_ubatch   = 512
0.00.627.357 I llama_new_context_with_model: flash_attn = 0
0.00.627.360 I llama_new_context_with_model: freq_base  = 10000.0
0.00.627.361 I llama_new_context_with_model: freq_scale = 1
0.00.656.361 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.656.404 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.656.515 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.657.874 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.657.882 I llama_new_context_with_model: graph nodes  = 601
0.00.657.882 I llama_new_context_with_model: graph splits = 1
0.00.657.902 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.271.498 I main: llama threadpool init, n_threads = 4
0.01.271.511 I 
0.01.271.619 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.271.620 I 
0.01.271.798 I sampler seed: 3011439366
0.01.271.814 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.271.822 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.271.823 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.271.824 I 
 increably. [end of text]


0.02.984.702 I llama_perf_sampler_print:    sampling time =       6.26 ms /     5 runs   (    1.25 ms per token,   799.23 tokens per second)
0.02.984.705 I llama_perf_context_print:        load time =    1268.60 ms
0.02.984.706 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.984.708 I llama_perf_context_print:        eval time =    1701.23 ms /     4 runs   (  425.31 ms per token,     2.35 tokens per second)
0.02.984.729 I llama_perf_context_print:       total time =    1713.21 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.678 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.873 I main: llama backend init
0.00.002.805 I main: load the model and apply lora adapter, if any
0.00.024.845 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.058 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.148 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.159 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.161 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.165 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.167 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.168 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.169 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.171 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.171 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.179 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.181 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.182 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.183 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.185 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.123 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.961 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.202 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.214 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.215 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.217 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.218 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.219 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.221 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.224 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.225 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.226 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.227 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.269.228 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.238 I llama_model_loader: - type  f32:   37 tensors
0.00.269.242 I llama_model_loader: - type q8_0:  127 tensors
0.00.420.138 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.443.702 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.444.859 I llm_load_vocab: special tokens cache size = 5
0.00.538.916 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.538.979 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.538.983 I llm_load_print_meta: arch             = gemma
0.00.538.984 I llm_load_print_meta: vocab type       = SPM
0.00.538.985 I llm_load_print_meta: n_vocab          = 256000
0.00.538.987 I llm_load_print_meta: n_merges         = 0
0.00.538.987 I llm_load_print_meta: vocab_only       = 0
0.00.538.988 I llm_load_print_meta: n_ctx_train      = 8192
0.00.538.988 I llm_load_print_meta: n_embd           = 2048
0.00.538.988 I llm_load_print_meta: n_layer          = 18
0.00.539.053 I llm_load_print_meta: n_head           = 8
0.00.539.062 I llm_load_print_meta: n_head_kv        = 1
0.00.539.063 I llm_load_print_meta: n_rot            = 256
0.00.539.064 I llm_load_print_meta: n_swa            = 0
0.00.539.065 I llm_load_print_meta: n_embd_head_k    = 256
0.00.539.065 I llm_load_print_meta: n_embd_head_v    = 256
0.00.539.079 I llm_load_print_meta: n_gqa            = 8
0.00.539.086 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.539.092 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.539.093 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.539.095 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.539.095 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.539.096 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.539.096 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.539.102 I llm_load_print_meta: n_ff             = 16384
0.00.539.102 I llm_load_print_meta: n_expert         = 0
0.00.539.103 I llm_load_print_meta: n_expert_used    = 0
0.00.539.103 I llm_load_print_meta: causal attn      = 1
0.00.539.104 I llm_load_print_meta: pooling type     = 0
0.00.539.104 I llm_load_print_meta: rope type        = 2
0.00.539.105 I llm_load_print_meta: rope scaling     = linear
0.00.539.106 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.539.107 I llm_load_print_meta: freq_scale_train = 1
0.00.539.108 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.539.108 I llm_load_print_meta: rope_finetuned   = unknown
0.00.539.109 I llm_load_print_meta: ssm_d_conv       = 0
0.00.539.109 I llm_load_print_meta: ssm_d_inner      = 0
0.00.539.110 I llm_load_print_meta: ssm_d_state      = 0
0.00.539.110 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.539.113 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.539.114 I llm_load_print_meta: model type       = 2B
0.00.539.115 I llm_load_print_meta: model ftype      = Q8_0
0.00.539.115 I llm_load_print_meta: model params     = 2.51 B
0.00.539.116 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.539.116 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.539.117 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.539.118 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.539.118 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.539.118 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.539.119 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.539.119 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.539.126 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.539.127 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.539.128 I llm_load_print_meta: max token length = 93
0.00.539.293 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.619.485 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.619.496 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.619.497 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.619.498 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.619.498 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.619.499 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.625.294 I llama_new_context_with_model: n_ctx      = 8192
0.00.625.303 I llama_new_context_with_model: n_batch    = 2048
0.00.625.303 I llama_new_context_with_model: n_ubatch   = 512
0.00.625.304 I llama_new_context_with_model: flash_attn = 0
0.00.625.307 I llama_new_context_with_model: freq_base  = 10000.0
0.00.625.308 I llama_new_context_with_model: freq_scale = 1
0.00.656.163 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.656.206 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.656.352 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.657.740 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.657.747 I llama_new_context_with_model: graph nodes  = 601
0.00.657.747 I llama_new_context_with_model: graph splits = 1
0.00.657.764 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.271.896 I main: llama threadpool init, n_threads = 4
0.01.271.909 I 
0.01.272.019 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.272.023 I 
0.01.272.187 I sampler seed: 642527266
0.01.272.199 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.272.205 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.272.206 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.272.206 I 
 increadibly, but she was still a young girl and lacked the life experiences necessary to understand the complexities of the situation.

The speaker, a wise elder,

0.14.904.184 I llama_perf_sampler_print:    sampling time =      49.37 ms /    33 runs   (    1.50 ms per token,   668.44 tokens per second)
0.14.904.188 I llama_perf_context_print:        load time =    1269.00 ms
0.14.904.190 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.904.192 I llama_perf_context_print:        eval time =   13550.39 ms /    32 runs   (  423.45 ms per token,     2.36 tokens per second)
0.14.904.193 I llama_perf_context_print:       total time =   13632.30 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.613 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.809 I main: llama backend init
0.00.002.738 I main: load the model and apply lora adapter, if any
0.00.024.620 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.822 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.910 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.921 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.923 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.927 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.929 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.937 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.939 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.940 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.941 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.947 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.948 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.949 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.950 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.952 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.051 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.798 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.177 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.185 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.186 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.187 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.188 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.189 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.190 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.194 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.196 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.197 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.198 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.268.199 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.206 I llama_model_loader: - type  f32:   37 tensors
0.00.268.211 I llama_model_loader: - type q8_0:  127 tensors
0.00.412.511 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.440.078 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.441.078 I llm_load_vocab: special tokens cache size = 5
0.00.534.777 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.534.833 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.534.834 I llm_load_print_meta: arch             = gemma
0.00.534.834 I llm_load_print_meta: vocab type       = SPM
0.00.534.835 I llm_load_print_meta: n_vocab          = 256000
0.00.534.837 I llm_load_print_meta: n_merges         = 0
0.00.534.838 I llm_load_print_meta: vocab_only       = 0
0.00.534.838 I llm_load_print_meta: n_ctx_train      = 8192
0.00.534.839 I llm_load_print_meta: n_embd           = 2048
0.00.534.839 I llm_load_print_meta: n_layer          = 18
0.00.534.903 I llm_load_print_meta: n_head           = 8
0.00.534.911 I llm_load_print_meta: n_head_kv        = 1
0.00.534.913 I llm_load_print_meta: n_rot            = 256
0.00.534.914 I llm_load_print_meta: n_swa            = 0
0.00.534.914 I llm_load_print_meta: n_embd_head_k    = 256
0.00.534.914 I llm_load_print_meta: n_embd_head_v    = 256
0.00.534.919 I llm_load_print_meta: n_gqa            = 8
0.00.534.934 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.534.941 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.534.943 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.534.945 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.534.946 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.534.946 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.534.947 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.534.952 I llm_load_print_meta: n_ff             = 16384
0.00.534.952 I llm_load_print_meta: n_expert         = 0
0.00.534.952 I llm_load_print_meta: n_expert_used    = 0
0.00.534.960 I llm_load_print_meta: causal attn      = 1
0.00.534.960 I llm_load_print_meta: pooling type     = 0
0.00.534.961 I llm_load_print_meta: rope type        = 2
0.00.534.961 I llm_load_print_meta: rope scaling     = linear
0.00.534.963 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.534.964 I llm_load_print_meta: freq_scale_train = 1
0.00.534.964 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.534.964 I llm_load_print_meta: rope_finetuned   = unknown
0.00.534.965 I llm_load_print_meta: ssm_d_conv       = 0
0.00.534.965 I llm_load_print_meta: ssm_d_inner      = 0
0.00.534.966 I llm_load_print_meta: ssm_d_state      = 0
0.00.534.966 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.534.969 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.534.970 I llm_load_print_meta: model type       = 2B
0.00.534.971 I llm_load_print_meta: model ftype      = Q8_0
0.00.534.972 I llm_load_print_meta: model params     = 2.51 B
0.00.534.972 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.534.973 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.534.974 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.534.974 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.534.975 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.534.975 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.534.976 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.534.976 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.534.982 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.534.983 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.534.983 I llm_load_print_meta: max token length = 93
0.00.535.146 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.606.350 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.606.359 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.612.075 I llama_new_context_with_model: n_ctx      = 8192
0.00.612.082 I llama_new_context_with_model: n_batch    = 2048
0.00.612.083 I llama_new_context_with_model: n_ubatch   = 512
0.00.612.083 I llama_new_context_with_model: flash_attn = 0
0.00.612.086 I llama_new_context_with_model: freq_base  = 10000.0
0.00.612.087 I llama_new_context_with_model: freq_scale = 1
0.00.640.346 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.640.388 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.640.497 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.641.880 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.641.886 I llama_new_context_with_model: graph nodes  = 601
0.00.641.886 I llama_new_context_with_model: graph splits = 1
0.00.641.903 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.254.298 I main: llama threadpool init, n_threads = 4
0.01.254.309 I 
0.01.254.415 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.254.420 I 
0.01.254.586 I sampler seed: 3905160497
0.01.254.598 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.254.605 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.254.606 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.254.606 I 
 increasively, leaping across the pages of my textbook. [end of text]


0.06.339.334 I llama_perf_sampler_print:    sampling time =      18.55 ms /    13 runs   (    1.43 ms per token,   700.81 tokens per second)
0.06.339.337 I llama_perf_context_print:        load time =    1251.47 ms
0.06.339.339 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.06.339.351 I llama_perf_context_print:        eval time =    5053.10 ms /    12 runs   (  421.09 ms per token,     2.37 tokens per second)
0.06.339.352 I llama_perf_context_print:       total time =    5085.05 ms /    13 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m48.661s
user	2m28.588s
sys	0m9.422s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3907 (fc709cfc)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198782.40 ms
main:    total time = 198782.40 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.635 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.824 I main: llama backend init
0.00.002.770 I main: load the model and apply lora adapter, if any
0.00.024.533 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.738 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.823 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.834 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.835 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.839 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.840 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.842 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.843 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.843 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.844 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.850 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.854 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.855 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.856 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.857 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.268 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.641 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.828 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.836 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.837 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.838 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.839 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.840 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.842 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.845 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.846 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.847 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.848 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.849 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.857 I llama_model_loader: - type  f32:   37 tensors
0.00.267.862 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.862 I llama_model_loader: - type q6_K:   19 tensors
0.00.426.386 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.455.248 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.456.271 I llm_load_vocab: special tokens cache size = 5
0.00.554.026 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.554.088 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.554.090 I llm_load_print_meta: arch             = gemma
0.00.554.090 I llm_load_print_meta: vocab type       = SPM
0.00.554.091 I llm_load_print_meta: n_vocab          = 256000
0.00.554.094 I llm_load_print_meta: n_merges         = 0
0.00.554.094 I llm_load_print_meta: vocab_only       = 0
0.00.554.095 I llm_load_print_meta: n_ctx_train      = 8192
0.00.554.095 I llm_load_print_meta: n_embd           = 2048
0.00.554.095 I llm_load_print_meta: n_layer          = 18
0.00.554.159 I llm_load_print_meta: n_head           = 8
0.00.554.166 I llm_load_print_meta: n_head_kv        = 1
0.00.554.167 I llm_load_print_meta: n_rot            = 256
0.00.554.167 I llm_load_print_meta: n_swa            = 0
0.00.554.167 I llm_load_print_meta: n_embd_head_k    = 256
0.00.554.168 I llm_load_print_meta: n_embd_head_v    = 256
0.00.554.172 I llm_load_print_meta: n_gqa            = 8
0.00.554.177 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.554.182 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.554.183 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.554.185 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.554.185 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.554.186 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.554.186 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.554.210 I llm_load_print_meta: n_ff             = 16384
0.00.554.211 I llm_load_print_meta: n_expert         = 0
0.00.554.211 I llm_load_print_meta: n_expert_used    = 0
0.00.554.212 I llm_load_print_meta: causal attn      = 1
0.00.554.212 I llm_load_print_meta: pooling type     = 0
0.00.554.212 I llm_load_print_meta: rope type        = 2
0.00.554.213 I llm_load_print_meta: rope scaling     = linear
0.00.554.214 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.554.215 I llm_load_print_meta: freq_scale_train = 1
0.00.554.216 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.554.216 I llm_load_print_meta: rope_finetuned   = unknown
0.00.554.217 I llm_load_print_meta: ssm_d_conv       = 0
0.00.554.217 I llm_load_print_meta: ssm_d_inner      = 0
0.00.554.217 I llm_load_print_meta: ssm_d_state      = 0
0.00.554.217 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.554.218 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.554.218 I llm_load_print_meta: model type       = 2B
0.00.554.219 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.554.228 I llm_load_print_meta: model params     = 2.51 B
0.00.554.229 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.554.229 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.554.230 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.554.237 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.554.237 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.554.238 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.554.239 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.554.239 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.554.245 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.554.246 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.554.246 I llm_load_print_meta: max token length = 93
0.00.554.410 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.615.575 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.615.587 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.615.588 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.615.589 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.615.589 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.615.590 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.621.191 I llama_new_context_with_model: n_ctx      = 8192
0.00.621.197 I llama_new_context_with_model: n_batch    = 2048
0.00.621.197 I llama_new_context_with_model: n_ubatch   = 512
0.00.621.198 I llama_new_context_with_model: flash_attn = 0
0.00.621.200 I llama_new_context_with_model: freq_base  = 10000.0
0.00.621.201 I llama_new_context_with_model: freq_scale = 1
0.00.650.531 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.650.571 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.650.693 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.652.166 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.652.172 I llama_new_context_with_model: graph nodes  = 601
0.00.652.172 I llama_new_context_with_model: graph splits = 1
0.00.652.188 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.233.087 I main: llama threadpool init, n_threads = 4
0.01.233.098 I 
0.01.233.216 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.233.220 I 
0.01.233.385 I sampler seed: 4253996776
0.01.233.395 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.233.403 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.233.403 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.233.404 I 
 increasities, and other related concepts are not addressed in this context. [end of text]


0.06.339.698 I llama_perf_sampler_print:    sampling time =      23.15 ms /    16 runs   (    1.45 ms per token,   691.09 tokens per second)
0.06.339.702 I llama_perf_context_print:        load time =    1230.23 ms
0.06.339.704 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.06.339.706 I llama_perf_context_print:        eval time =    5067.51 ms /    15 runs   (  337.83 ms per token,     2.96 tokens per second)
0.06.339.707 I llama_perf_context_print:       total time =    5106.62 ms /    16 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3907 (fc709cfc)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198667.28 ms
main:    total time = 198667.28 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.621 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.812 I main: llama backend init
0.00.002.754 I main: load the model and apply lora adapter, if any
0.00.024.808 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.896 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.910 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.911 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.915 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.917 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.919 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.920 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.929 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.938 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.945 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.947 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.948 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.948 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.949 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.264 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.712 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.941 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.948 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.949 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.950 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.951 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.952 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.954 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.957 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.958 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.966 I llama_model_loader: - type  f32:   37 tensors
0.00.267.970 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.970 I llama_model_loader: - type q6_K:   19 tensors
0.00.414.137 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.439.230 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.440.255 I llm_load_vocab: special tokens cache size = 5
0.00.534.058 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.534.115 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.534.116 I llm_load_print_meta: arch             = gemma
0.00.534.117 I llm_load_print_meta: vocab type       = SPM
0.00.534.117 I llm_load_print_meta: n_vocab          = 256000
0.00.534.120 I llm_load_print_meta: n_merges         = 0
0.00.534.121 I llm_load_print_meta: vocab_only       = 0
0.00.534.121 I llm_load_print_meta: n_ctx_train      = 8192
0.00.534.122 I llm_load_print_meta: n_embd           = 2048
0.00.534.122 I llm_load_print_meta: n_layer          = 18
0.00.534.184 I llm_load_print_meta: n_head           = 8
0.00.534.191 I llm_load_print_meta: n_head_kv        = 1
0.00.534.192 I llm_load_print_meta: n_rot            = 256
0.00.534.192 I llm_load_print_meta: n_swa            = 0
0.00.534.192 I llm_load_print_meta: n_embd_head_k    = 256
0.00.534.193 I llm_load_print_meta: n_embd_head_v    = 256
0.00.534.197 I llm_load_print_meta: n_gqa            = 8
0.00.534.202 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.534.206 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.534.207 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.534.209 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.534.209 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.534.210 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.534.210 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.534.215 I llm_load_print_meta: n_ff             = 16384
0.00.534.216 I llm_load_print_meta: n_expert         = 0
0.00.534.216 I llm_load_print_meta: n_expert_used    = 0
0.00.534.217 I llm_load_print_meta: causal attn      = 1
0.00.534.219 I llm_load_print_meta: pooling type     = 0
0.00.534.219 I llm_load_print_meta: rope type        = 2
0.00.534.219 I llm_load_print_meta: rope scaling     = linear
0.00.534.230 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.534.243 I llm_load_print_meta: freq_scale_train = 1
0.00.534.244 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.534.253 I llm_load_print_meta: rope_finetuned   = unknown
0.00.534.253 I llm_load_print_meta: ssm_d_conv       = 0
0.00.534.254 I llm_load_print_meta: ssm_d_inner      = 0
0.00.534.262 I llm_load_print_meta: ssm_d_state      = 0
0.00.534.262 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.534.263 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.534.263 I llm_load_print_meta: model type       = 2B
0.00.534.265 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.534.266 I llm_load_print_meta: model params     = 2.51 B
0.00.534.266 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.534.266 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.534.272 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.534.273 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.534.273 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.534.274 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.534.281 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.534.282 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.534.289 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.534.290 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.534.291 I llm_load_print_meta: max token length = 93
0.00.534.455 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.592.719 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.598.239 I llama_new_context_with_model: n_ctx      = 8192
0.00.598.246 I llama_new_context_with_model: n_batch    = 2048
0.00.598.247 I llama_new_context_with_model: n_ubatch   = 512
0.00.598.247 I llama_new_context_with_model: flash_attn = 0
0.00.598.250 I llama_new_context_with_model: freq_base  = 10000.0
0.00.598.251 I llama_new_context_with_model: freq_scale = 1
0.00.627.729 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.627.770 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.627.877 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.629.230 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.629.236 I llama_new_context_with_model: graph nodes  = 601
0.00.629.236 I llama_new_context_with_model: graph splits = 1
0.00.629.251 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.206.652 I main: llama threadpool init, n_threads = 4
0.01.206.664 I 
0.01.206.768 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.206.771 I 
0.01.206.937 I sampler seed: 3278345648
0.01.206.948 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.206.954 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.206.955 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.206.955 I 
 seconde.

## The Importance of Storytelling in Education

Storytelling holds immense importance in education, serving various purposes such as:

**1. Fostering

0.12.168.741 I llama_perf_sampler_print:    sampling time =      49.00 ms /    33 runs   (    1.48 ms per token,   673.43 tokens per second)
0.12.168.756 I llama_perf_context_print:        load time =    1203.81 ms
0.12.168.757 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.168.759 I llama_perf_context_print:        eval time =   10880.30 ms /    32 runs   (  340.01 ms per token,     2.94 tokens per second)
0.12.168.760 I llama_perf_context_print:       total time =   10962.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m58.814s
user	49m49.444s
sys	0m6.295s
