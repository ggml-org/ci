+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.580 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.787 I main: llama backend init
0.00.001.911 I main: load the model and apply lora adapter, if any
0.00.022.332 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.378 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.388 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.393 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.397 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.400 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.401 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.402 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.403 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.403 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.404 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.408 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.408 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.409 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.410 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.410 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.732 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.061 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.863 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.870 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.870 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.871 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.872 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.872 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.873 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.876 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.877 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.878 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.878 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.879 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.883 I llama_model_loader: - type  f32:   37 tensors
0.00.131.885 I llama_model_loader: - type q8_0:  127 tensors
0.00.193.045 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.206.778 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.207.473 I llm_load_vocab: special tokens cache size = 5
0.00.228.266 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.279 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.279 I llm_load_print_meta: arch             = gemma
0.00.228.280 I llm_load_print_meta: vocab type       = SPM
0.00.228.281 I llm_load_print_meta: n_vocab          = 256000
0.00.228.281 I llm_load_print_meta: n_merges         = 0
0.00.228.282 I llm_load_print_meta: vocab_only       = 0
0.00.228.282 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.293 I llm_load_print_meta: n_embd           = 2048
0.00.228.294 I llm_load_print_meta: n_layer          = 18
0.00.228.305 I llm_load_print_meta: n_head           = 8
0.00.228.306 I llm_load_print_meta: n_head_kv        = 1
0.00.228.307 I llm_load_print_meta: n_rot            = 256
0.00.228.307 I llm_load_print_meta: n_swa            = 0
0.00.228.308 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.308 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.309 I llm_load_print_meta: n_gqa            = 8
0.00.228.311 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.314 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.315 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.316 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.317 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.317 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.318 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.319 I llm_load_print_meta: n_ff             = 16384
0.00.228.320 I llm_load_print_meta: n_expert         = 0
0.00.228.321 I llm_load_print_meta: n_expert_used    = 0
0.00.228.321 I llm_load_print_meta: causal attn      = 1
0.00.228.322 I llm_load_print_meta: pooling type     = 0
0.00.228.322 I llm_load_print_meta: rope type        = 2
0.00.228.325 I llm_load_print_meta: rope scaling     = linear
0.00.228.326 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.327 I llm_load_print_meta: freq_scale_train = 1
0.00.228.327 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.328 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.328 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.329 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.330 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.330 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.331 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.331 I llm_load_print_meta: model type       = 2B
0.00.228.332 I llm_load_print_meta: model ftype      = Q8_0
0.00.228.333 I llm_load_print_meta: model params     = 2.51 B
0.00.228.334 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.228.335 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.336 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.336 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.337 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.338 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.338 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.338 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.339 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.339 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.340 I llm_load_print_meta: max token length = 93
0.00.228.361 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.626 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.329.634 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.329.635 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.329.636 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.329.637 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.329.637 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.334.735 I llama_new_context_with_model: n_ctx      = 8192
0.00.334.741 I llama_new_context_with_model: n_batch    = 2048
0.00.334.741 I llama_new_context_with_model: n_ubatch   = 512
0.00.334.742 I llama_new_context_with_model: flash_attn = 0
0.00.334.744 I llama_new_context_with_model: freq_base  = 10000.0
0.00.334.744 I llama_new_context_with_model: freq_scale = 1
0.00.362.518 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.362.533 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.362.621 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.490 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.363.496 I llama_new_context_with_model: graph nodes  = 601
0.00.363.497 I llama_new_context_with_model: graph splits = 1
0.00.363.498 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.454.642 I main: llama threadpool init, n_threads = 4
0.00.454.654 I 
0.00.454.733 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.454.739 I 
0.00.454.777 I sampler seed: 1879466265
0.00.454.787 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.454.794 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.454.796 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.454.796 I 
 increasities of a long-standing and powerful corporation and a new generation of leaders determined to break the mold.

This complex interplay of power, ambition, and

0.02.701.739 I llama_perf_sampler_print:    sampling time =       4.78 ms /    33 runs   (    0.14 ms per token,  6897.99 tokens per second)
0.02.701.741 I llama_perf_context_print:        load time =     452.71 ms
0.02.701.742 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.701.744 I llama_perf_context_print:        eval time =    2228.81 ms /    32 runs   (   69.65 ms per token,    14.36 tokens per second)
0.02.701.745 I llama_perf_context_print:       total time =    2247.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.533 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.724 I main: llama backend init
0.00.001.826 I main: load the model and apply lora adapter, if any
0.00.021.873 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.885 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.893 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.894 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.898 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.899 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.900 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.900 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.901 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.901 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.906 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.907 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.907 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.909 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.910 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.441 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.291 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.084 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.091 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.092 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.092 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.093 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.094 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.094 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.097 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.098 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.098 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.099 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.100 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.104 I llama_model_loader: - type  f32:   37 tensors
0.00.133.106 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.215 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.818 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.528 I llm_load_vocab: special tokens cache size = 5
0.00.232.313 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.327 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.328 I llm_load_print_meta: arch             = gemma
0.00.232.328 I llm_load_print_meta: vocab type       = SPM
0.00.232.329 I llm_load_print_meta: n_vocab          = 256000
0.00.232.330 I llm_load_print_meta: n_merges         = 0
0.00.232.330 I llm_load_print_meta: vocab_only       = 0
0.00.232.331 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.331 I llm_load_print_meta: n_embd           = 2048
0.00.232.331 I llm_load_print_meta: n_layer          = 18
0.00.232.345 I llm_load_print_meta: n_head           = 8
0.00.232.346 I llm_load_print_meta: n_head_kv        = 1
0.00.232.346 I llm_load_print_meta: n_rot            = 256
0.00.232.346 I llm_load_print_meta: n_swa            = 0
0.00.232.346 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.347 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.348 I llm_load_print_meta: n_gqa            = 8
0.00.232.349 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.349 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.350 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.352 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.353 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.353 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.353 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.354 I llm_load_print_meta: n_ff             = 16384
0.00.232.355 I llm_load_print_meta: n_expert         = 0
0.00.232.355 I llm_load_print_meta: n_expert_used    = 0
0.00.232.355 I llm_load_print_meta: causal attn      = 1
0.00.232.355 I llm_load_print_meta: pooling type     = 0
0.00.232.355 I llm_load_print_meta: rope type        = 2
0.00.232.356 I llm_load_print_meta: rope scaling     = linear
0.00.232.358 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.358 I llm_load_print_meta: freq_scale_train = 1
0.00.232.359 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.359 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.359 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.360 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.360 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.360 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.360 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.361 I llm_load_print_meta: model type       = 2B
0.00.232.361 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.362 I llm_load_print_meta: model params     = 2.51 B
0.00.232.363 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.363 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.364 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.364 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.364 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.365 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.365 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.366 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.366 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.366 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.366 I llm_load_print_meta: max token length = 93
0.00.232.384 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.326.943 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.331.869 I llama_new_context_with_model: n_ctx      = 8192
0.00.331.874 I llama_new_context_with_model: n_batch    = 2048
0.00.331.875 I llama_new_context_with_model: n_ubatch   = 512
0.00.331.875 I llama_new_context_with_model: flash_attn = 0
0.00.331.878 I llama_new_context_with_model: freq_base  = 10000.0
0.00.331.879 I llama_new_context_with_model: freq_scale = 1
0.00.361.683 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.699 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.797 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.697 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.705 I llama_new_context_with_model: graph nodes  = 601
0.00.362.705 I llama_new_context_with_model: graph splits = 1
0.00.362.707 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.767 I main: llama threadpool init, n_threads = 4
0.00.449.778 I 
0.00.449.858 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.862 I 
0.00.449.900 I sampler seed: 1542955263
0.00.449.909 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.449.912 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.449.913 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.449.913 I 
 increasities for a living. [end of text]


0.00.923.098 I llama_perf_sampler_print:    sampling time =       1.05 ms /     8 runs   (    0.13 ms per token,  7633.59 tokens per second)
0.00.923.100 I llama_perf_context_print:        load time =     447.92 ms
0.00.923.101 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.923.103 I llama_perf_context_print:        eval time =     468.79 ms /     7 runs   (   66.97 ms per token,    14.93 tokens per second)
0.00.923.104 I llama_perf_context_print:       total time =     473.34 ms /     8 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.561 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.001.811 I main: load the model and apply lora adapter, if any
0.00.233.660 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.233.719 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.233.726 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.233.731 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.233.733 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.233.738 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.233.739 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.233.740 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.233.740 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.233.742 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.233.742 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.233.747 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.233.748 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.233.748 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.233.749 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.233.749 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.261.412 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.337.244 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.344.095 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.344.101 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.344.102 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.344.102 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.344.103 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.344.104 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.344.105 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.344.107 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.344.108 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.344.109 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.344.110 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.344.110 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.344.115 I llama_model_loader: - type  f32:   37 tensors
0.00.344.118 I llama_model_loader: - type q8_0:  127 tensors
0.00.408.465 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.421.689 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.422.393 I llm_load_vocab: special tokens cache size = 5
0.00.443.129 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.443.141 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.443.142 I llm_load_print_meta: arch             = gemma
0.00.443.143 I llm_load_print_meta: vocab type       = SPM
0.00.443.143 I llm_load_print_meta: n_vocab          = 256000
0.00.443.144 I llm_load_print_meta: n_merges         = 0
0.00.443.144 I llm_load_print_meta: vocab_only       = 0
0.00.443.145 I llm_load_print_meta: n_ctx_train      = 8192
0.00.443.145 I llm_load_print_meta: n_embd           = 2048
0.00.443.145 I llm_load_print_meta: n_layer          = 18
0.00.443.158 I llm_load_print_meta: n_head           = 8
0.00.443.159 I llm_load_print_meta: n_head_kv        = 1
0.00.443.159 I llm_load_print_meta: n_rot            = 256
0.00.443.160 I llm_load_print_meta: n_swa            = 0
0.00.443.160 I llm_load_print_meta: n_embd_head_k    = 256
0.00.443.160 I llm_load_print_meta: n_embd_head_v    = 256
0.00.443.161 I llm_load_print_meta: n_gqa            = 8
0.00.443.162 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.443.163 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.443.164 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.443.165 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.443.165 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.443.166 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.443.167 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.443.168 I llm_load_print_meta: n_ff             = 16384
0.00.443.168 I llm_load_print_meta: n_expert         = 0
0.00.443.168 I llm_load_print_meta: n_expert_used    = 0
0.00.443.169 I llm_load_print_meta: causal attn      = 1
0.00.443.169 I llm_load_print_meta: pooling type     = 0
0.00.443.170 I llm_load_print_meta: rope type        = 2
0.00.443.170 I llm_load_print_meta: rope scaling     = linear
0.00.443.172 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.443.173 I llm_load_print_meta: freq_scale_train = 1
0.00.443.173 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.443.173 I llm_load_print_meta: rope_finetuned   = unknown
0.00.443.174 I llm_load_print_meta: ssm_d_conv       = 0
0.00.443.174 I llm_load_print_meta: ssm_d_inner      = 0
0.00.443.174 I llm_load_print_meta: ssm_d_state      = 0
0.00.443.175 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.443.175 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.443.176 I llm_load_print_meta: model type       = 2B
0.00.443.176 I llm_load_print_meta: model ftype      = Q8_0
0.00.443.177 I llm_load_print_meta: model params     = 2.51 B
0.00.443.178 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.443.178 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.443.179 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.443.179 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.443.180 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.443.180 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.443.181 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.443.181 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.443.182 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.443.182 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.443.183 I llm_load_print_meta: max token length = 93
0.00.443.207 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.520.659 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.520.666 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.520.667 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.520.668 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.520.668 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.520.669 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.525.623 I llama_new_context_with_model: n_ctx      = 8192
0.00.525.630 I llama_new_context_with_model: n_batch    = 2048
0.00.525.630 I llama_new_context_with_model: n_ubatch   = 512
0.00.525.631 I llama_new_context_with_model: flash_attn = 0
0.00.525.633 I llama_new_context_with_model: freq_base  = 10000.0
0.00.525.634 I llama_new_context_with_model: freq_scale = 1
0.00.554.829 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.554.843 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.554.942 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.555.841 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.555.848 I llama_new_context_with_model: graph nodes  = 601
0.00.555.848 I llama_new_context_with_model: graph splits = 1
0.00.555.850 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.645.107 I main: llama threadpool init, n_threads = 4
0.00.645.119 I 
0.00.645.198 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.645.201 I 
0.00.645.238 I sampler seed: 2317782070
0.00.645.248 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.645.251 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.645.251 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.645.251 I 
 seconally.

I. Explain the concept of a bond.
II. Discuss the factors that contribute to the formation of bonds.
III. Highlight the

0.02.881.232 I llama_perf_sampler_print:    sampling time =       4.96 ms /    33 runs   (    0.15 ms per token,  6651.88 tokens per second)
0.02.881.235 I llama_perf_context_print:        load time =     643.27 ms
0.02.881.236 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.881.238 I llama_perf_context_print:        eval time =    2218.22 ms /    32 runs   (   69.32 ms per token,    14.43 tokens per second)
0.02.881.239 I llama_perf_context_print:       total time =    2236.13 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.531 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.812 I main: load the model and apply lora adapter, if any
0.00.021.654 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.699 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.709 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.719 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.720 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.723 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.724 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.724 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.725 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.725 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.726 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.729 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.730 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.730 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.731 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.731 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.812 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.073 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.845 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.852 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.852 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.853 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.853 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.855 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.856 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.858 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.860 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.861 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.861 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.862 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.866 I llama_model_loader: - type  f32:   37 tensors
0.00.131.868 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.011 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.209.683 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.364 I llm_load_vocab: special tokens cache size = 5
0.00.231.018 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.030 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.031 I llm_load_print_meta: arch             = gemma
0.00.231.032 I llm_load_print_meta: vocab type       = SPM
0.00.231.033 I llm_load_print_meta: n_vocab          = 256000
0.00.231.034 I llm_load_print_meta: n_merges         = 0
0.00.231.035 I llm_load_print_meta: vocab_only       = 0
0.00.231.035 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.035 I llm_load_print_meta: n_embd           = 2048
0.00.231.035 I llm_load_print_meta: n_layer          = 18
0.00.231.048 I llm_load_print_meta: n_head           = 8
0.00.231.049 I llm_load_print_meta: n_head_kv        = 1
0.00.231.049 I llm_load_print_meta: n_rot            = 256
0.00.231.050 I llm_load_print_meta: n_swa            = 0
0.00.231.050 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.051 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.052 I llm_load_print_meta: n_gqa            = 8
0.00.231.054 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.055 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.056 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.058 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.058 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.058 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.059 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.060 I llm_load_print_meta: n_ff             = 16384
0.00.231.060 I llm_load_print_meta: n_expert         = 0
0.00.231.061 I llm_load_print_meta: n_expert_used    = 0
0.00.231.062 I llm_load_print_meta: causal attn      = 1
0.00.231.062 I llm_load_print_meta: pooling type     = 0
0.00.231.062 I llm_load_print_meta: rope type        = 2
0.00.231.063 I llm_load_print_meta: rope scaling     = linear
0.00.231.064 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.065 I llm_load_print_meta: freq_scale_train = 1
0.00.231.065 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.066 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.066 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.066 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.067 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.067 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.068 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.069 I llm_load_print_meta: model type       = 2B
0.00.231.069 I llm_load_print_meta: model ftype      = Q8_0
0.00.231.070 I llm_load_print_meta: model params     = 2.51 B
0.00.231.071 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.231.072 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.072 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.073 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.073 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.073 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.074 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.074 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.075 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.075 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.076 I llm_load_print_meta: max token length = 93
0.00.231.093 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.301.550 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.301.556 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.306.550 I llama_new_context_with_model: n_ctx      = 8192
0.00.306.556 I llama_new_context_with_model: n_batch    = 2048
0.00.306.556 I llama_new_context_with_model: n_ubatch   = 512
0.00.306.557 I llama_new_context_with_model: flash_attn = 0
0.00.306.559 I llama_new_context_with_model: freq_base  = 10000.0
0.00.306.560 I llama_new_context_with_model: freq_scale = 1
0.00.335.509 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.335.523 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.335.612 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.336.478 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.336.486 I llama_new_context_with_model: graph nodes  = 601
0.00.336.486 I llama_new_context_with_model: graph splits = 1
0.00.336.488 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.428.593 I main: llama threadpool init, n_threads = 4
0.00.428.606 I 
0.00.428.681 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.428.684 I 
0.00.428.721 I sampler seed: 3743221151
0.00.428.731 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.428.733 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.428.734 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.428.734 I 
 increadibly long for a single review. However, I can provide a condensed version that captures the essence of the review.

This book is a comprehensive guide to

0.02.838.281 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6966.43 tokens per second)
0.02.838.284 I llama_perf_context_print:        load time =     426.76 ms
0.02.838.285 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.838.286 I llama_perf_context_print:        eval time =    2391.85 ms /    32 runs   (   74.75 ms per token,    13.38 tokens per second)
0.02.838.287 I llama_perf_context_print:       total time =    2409.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.847s
user	0m32.197s
sys	0m9.427s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3907 (fc709cfc)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32000.66 ms
main:    total time = 32000.66 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.524 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.722 I main: llama backend init
0.00.001.824 I main: load the model and apply lora adapter, if any
0.00.025.130 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.178 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.187 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.192 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.193 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.197 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.198 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.198 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.199 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.200 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.200 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.204 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.204 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.205 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.206 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.206 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.053.047 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.136.662 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.143.486 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.143.493 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.143.494 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.143.495 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.143.496 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.143.497 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.143.498 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.143.502 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.143.503 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.143.504 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.143.505 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.143.506 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.143.510 I llama_model_loader: - type  f32:   37 tensors
0.00.143.513 I llama_model_loader: - type q4_K:  108 tensors
0.00.143.514 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.173 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.218.433 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.219.180 I llm_load_vocab: special tokens cache size = 5
0.00.240.278 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.240.292 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.240.293 I llm_load_print_meta: arch             = gemma
0.00.240.293 I llm_load_print_meta: vocab type       = SPM
0.00.240.294 I llm_load_print_meta: n_vocab          = 256000
0.00.240.294 I llm_load_print_meta: n_merges         = 0
0.00.240.294 I llm_load_print_meta: vocab_only       = 0
0.00.240.295 I llm_load_print_meta: n_ctx_train      = 8192
0.00.240.295 I llm_load_print_meta: n_embd           = 2048
0.00.240.295 I llm_load_print_meta: n_layer          = 18
0.00.240.308 I llm_load_print_meta: n_head           = 8
0.00.240.309 I llm_load_print_meta: n_head_kv        = 1
0.00.240.310 I llm_load_print_meta: n_rot            = 256
0.00.240.310 I llm_load_print_meta: n_swa            = 0
0.00.240.310 I llm_load_print_meta: n_embd_head_k    = 256
0.00.240.310 I llm_load_print_meta: n_embd_head_v    = 256
0.00.240.312 I llm_load_print_meta: n_gqa            = 8
0.00.240.313 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.240.313 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.240.315 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.240.316 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.240.316 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.240.317 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.240.317 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.240.318 I llm_load_print_meta: n_ff             = 16384
0.00.240.318 I llm_load_print_meta: n_expert         = 0
0.00.240.318 I llm_load_print_meta: n_expert_used    = 0
0.00.240.318 I llm_load_print_meta: causal attn      = 1
0.00.240.319 I llm_load_print_meta: pooling type     = 0
0.00.240.319 I llm_load_print_meta: rope type        = 2
0.00.240.319 I llm_load_print_meta: rope scaling     = linear
0.00.240.321 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.240.321 I llm_load_print_meta: freq_scale_train = 1
0.00.240.322 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.240.322 I llm_load_print_meta: rope_finetuned   = unknown
0.00.240.322 I llm_load_print_meta: ssm_d_conv       = 0
0.00.240.322 I llm_load_print_meta: ssm_d_inner      = 0
0.00.240.323 I llm_load_print_meta: ssm_d_state      = 0
0.00.240.323 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.240.323 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.240.323 I llm_load_print_meta: model type       = 2B
0.00.240.324 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.240.325 I llm_load_print_meta: model params     = 2.51 B
0.00.240.325 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.240.326 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.240.326 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.240.327 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.240.327 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.240.327 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.240.328 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.240.328 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.240.328 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.240.329 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.240.329 I llm_load_print_meta: max token length = 93
0.00.240.347 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.298.185 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.298.192 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.298.193 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.298.194 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.298.194 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.298.195 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.303.358 I llama_new_context_with_model: n_ctx      = 8192
0.00.303.366 I llama_new_context_with_model: n_batch    = 2048
0.00.303.366 I llama_new_context_with_model: n_ubatch   = 512
0.00.303.367 I llama_new_context_with_model: flash_attn = 0
0.00.303.369 I llama_new_context_with_model: freq_base  = 10000.0
0.00.303.370 I llama_new_context_with_model: freq_scale = 1
0.00.332.369 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.332.384 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.332.476 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.333.415 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.333.421 I llama_new_context_with_model: graph nodes  = 601
0.00.333.421 I llama_new_context_with_model: graph splits = 1
0.00.333.423 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.415.918 I main: llama threadpool init, n_threads = 4
0.00.415.930 I 
0.00.416.006 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.416.009 I 
0.00.416.047 I sampler seed: 3397554724
0.00.416.057 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.416.060 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.416.060 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.416.060 I 
 strick.com is a website that provides a platform for people to create and share their stories. However, there have been concerns about the privacy and security of user

0.02.041.734 I llama_perf_sampler_print:    sampling time =       5.35 ms /    33 runs   (    0.16 ms per token,  6163.62 tokens per second)
0.02.041.736 I llama_perf_context_print:        load time =     414.07 ms
0.02.041.737 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.041.739 I llama_perf_context_print:        eval time =    1605.70 ms /    32 runs   (   50.18 ms per token,    19.93 tokens per second)
0.02.041.740 I llama_perf_context_print:       total time =    1625.82 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3907 (fc709cfc)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32050.26 ms
main:    total time = 32050.26 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.589 I build: 3907 (fc709cfc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.001.966 I main: load the model and apply lora adapter, if any
0.00.022.504 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.520 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.527 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.528 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.532 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.532 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.533 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.534 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.534 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.534 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.539 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.540 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.540 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.541 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.542 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.632 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.206 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.951 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.958 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.958 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.959 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.960 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.960 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.961 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.964 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.965 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.969 I llama_model_loader: - type  f32:   37 tensors
0.00.132.971 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.972 I llama_model_loader: - type q6_K:   19 tensors
0.00.192.746 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.971 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.206.597 I llm_load_vocab: special tokens cache size = 5
0.00.227.234 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.249 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.249 I llm_load_print_meta: arch             = gemma
0.00.227.250 I llm_load_print_meta: vocab type       = SPM
0.00.227.250 I llm_load_print_meta: n_vocab          = 256000
0.00.227.251 I llm_load_print_meta: n_merges         = 0
0.00.227.251 I llm_load_print_meta: vocab_only       = 0
0.00.227.251 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.252 I llm_load_print_meta: n_embd           = 2048
0.00.227.252 I llm_load_print_meta: n_layer          = 18
0.00.227.265 I llm_load_print_meta: n_head           = 8
0.00.227.266 I llm_load_print_meta: n_head_kv        = 1
0.00.227.266 I llm_load_print_meta: n_rot            = 256
0.00.227.266 I llm_load_print_meta: n_swa            = 0
0.00.227.267 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.267 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.268 I llm_load_print_meta: n_gqa            = 8
0.00.227.269 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.270 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.271 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.272 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.273 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.273 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.273 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.274 I llm_load_print_meta: n_ff             = 16384
0.00.227.275 I llm_load_print_meta: n_expert         = 0
0.00.227.275 I llm_load_print_meta: n_expert_used    = 0
0.00.227.275 I llm_load_print_meta: causal attn      = 1
0.00.227.276 I llm_load_print_meta: pooling type     = 0
0.00.227.276 I llm_load_print_meta: rope type        = 2
0.00.227.276 I llm_load_print_meta: rope scaling     = linear
0.00.227.277 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.278 I llm_load_print_meta: freq_scale_train = 1
0.00.227.279 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.279 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.279 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.280 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.280 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.280 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.280 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.281 I llm_load_print_meta: model type       = 2B
0.00.227.282 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.227.282 I llm_load_print_meta: model params     = 2.51 B
0.00.227.283 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.227.283 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.284 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.284 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.284 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.285 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.285 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.286 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.286 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.286 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.287 I llm_load_print_meta: max token length = 93
0.00.227.310 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.952.845 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.957.905 I llama_new_context_with_model: n_ctx      = 8192
0.00.957.911 I llama_new_context_with_model: n_batch    = 2048
0.00.957.912 I llama_new_context_with_model: n_ubatch   = 512
0.00.957.912 I llama_new_context_with_model: flash_attn = 0
0.00.957.915 I llama_new_context_with_model: freq_base  = 10000.0
0.00.957.915 I llama_new_context_with_model: freq_scale = 1
0.00.987.010 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.987.028 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.987.118 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.987.988 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.987.997 I llama_new_context_with_model: graph nodes  = 601
0.00.987.997 I llama_new_context_with_model: graph splits = 1
0.00.987.999 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.069.964 I main: llama threadpool init, n_threads = 4
0.01.069.976 I 
0.01.070.061 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.070.065 I 
0.01.070.113 I sampler seed: 698358020
0.01.070.125 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.070.127 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.070.128 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.070.128 I 
 seconally and ineffectively, failing to bring about the desired effect. [end of text]


0.01.809.734 I llama_perf_sampler_print:    sampling time =       2.24 ms /    16 runs   (    0.14 ms per token,  7142.86 tokens per second)
0.01.809.736 I llama_perf_context_print:        load time =    1067.97 ms
0.01.809.737 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.809.739 I llama_perf_context_print:        eval time =     730.45 ms /    15 runs   (   48.70 ms per token,    20.54 tokens per second)
0.01.809.740 I llama_perf_context_print:       total time =     739.78 ms /    16 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.796s
user	8m10.911s
sys	0m7.017s
