+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.534 I build: 3912 (edc26566) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.729 I main: llama backend init
0.00.001.808 I main: load the model and apply lora adapter, if any
0.00.021.774 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.823 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.830 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.835 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.836 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.840 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.840 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.841 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.842 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.842 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.843 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.848 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.849 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.850 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.851 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.852 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.772 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.955 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.830 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.835 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.835 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.836 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.837 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.837 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.838 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.840 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.841 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.841 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.842 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.844 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.847 I llama_model_loader: - type  f32:   37 tensors
0.00.131.849 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.041 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.272 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.057 I llm_load_vocab: special tokens cache size = 5
0.00.268.024 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.040 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.040 I llm_load_print_meta: arch             = gemma
0.00.268.041 I llm_load_print_meta: vocab type       = SPM
0.00.268.041 I llm_load_print_meta: n_vocab          = 256000
0.00.268.042 I llm_load_print_meta: n_merges         = 0
0.00.268.042 I llm_load_print_meta: vocab_only       = 0
0.00.268.042 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.043 I llm_load_print_meta: n_embd           = 2048
0.00.268.043 I llm_load_print_meta: n_layer          = 18
0.00.268.055 I llm_load_print_meta: n_head           = 8
0.00.268.056 I llm_load_print_meta: n_head_kv        = 1
0.00.268.056 I llm_load_print_meta: n_rot            = 256
0.00.268.057 I llm_load_print_meta: n_swa            = 0
0.00.268.057 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.057 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.058 I llm_load_print_meta: n_gqa            = 8
0.00.268.059 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.060 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.061 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.063 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.063 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.063 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.064 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.064 I llm_load_print_meta: n_ff             = 16384
0.00.268.065 I llm_load_print_meta: n_expert         = 0
0.00.268.065 I llm_load_print_meta: n_expert_used    = 0
0.00.268.065 I llm_load_print_meta: causal attn      = 1
0.00.268.066 I llm_load_print_meta: pooling type     = 0
0.00.268.066 I llm_load_print_meta: rope type        = 2
0.00.268.066 I llm_load_print_meta: rope scaling     = linear
0.00.268.068 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.069 I llm_load_print_meta: freq_scale_train = 1
0.00.268.069 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.070 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.070 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.070 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.071 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.071 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.071 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.072 I llm_load_print_meta: model type       = 2B
0.00.268.072 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.073 I llm_load_print_meta: model params     = 2.51 B
0.00.268.074 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.074 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.075 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.075 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.075 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.076 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.076 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.077 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.077 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.078 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.078 I llm_load_print_meta: max token length = 93
0.00.268.098 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.367.942 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.367.948 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.367.948 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.367.949 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.367.950 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.367.950 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.373.049 I llama_new_context_with_model: n_ctx      = 8192
0.00.373.056 I llama_new_context_with_model: n_batch    = 2048
0.00.373.057 I llama_new_context_with_model: n_ubatch   = 512
0.00.373.058 I llama_new_context_with_model: flash_attn = 0
0.00.373.060 I llama_new_context_with_model: freq_base  = 10000.0
0.00.373.061 I llama_new_context_with_model: freq_scale = 1
0.00.402.585 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.402.601 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.402.692 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.403.608 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.403.614 I llama_new_context_with_model: graph nodes  = 601
0.00.403.615 I llama_new_context_with_model: graph splits = 1
0.00.403.616 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.494.558 I main: llama threadpool init, n_threads = 4
0.00.494.570 I 
0.00.494.648 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.494.651 I 
0.00.494.686 I sampler seed: 973787745
0.00.494.695 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.494.698 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.494.699 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.494.699 I 
 seconal, 2023

The article highlights the growing trend of decentralized finance (DeFi) lending platforms, which offer users alternative financing options beyond

0.02.737.698 I llama_perf_sampler_print:    sampling time =       5.05 ms /    33 runs   (    0.15 ms per token,  6530.77 tokens per second)
0.02.737.700 I llama_perf_context_print:        load time =     492.73 ms
0.02.737.701 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.737.703 I llama_perf_context_print:        eval time =    2225.07 ms /    32 runs   (   69.53 ms per token,    14.38 tokens per second)
0.02.737.704 I llama_perf_context_print:       total time =    2243.15 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.650 I build: 3912 (edc26566) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.850 I main: llama backend init
0.00.002.012 I main: load the model and apply lora adapter, if any
0.00.023.553 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.567 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.575 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.576 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.579 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.580 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.581 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.582 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.582 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.584 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.588 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.589 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.589 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.590 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.590 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.356 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.752 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.581 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.587 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.588 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.589 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.590 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.591 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.592 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.596 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.597 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.598 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.598 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.600 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.604 I llama_model_loader: - type  f32:   37 tensors
0.00.133.606 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.587 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.075 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.727 I llm_load_vocab: special tokens cache size = 5
0.00.263.456 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.474 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.475 I llm_load_print_meta: arch             = gemma
0.00.263.476 I llm_load_print_meta: vocab type       = SPM
0.00.263.476 I llm_load_print_meta: n_vocab          = 256000
0.00.263.477 I llm_load_print_meta: n_merges         = 0
0.00.263.477 I llm_load_print_meta: vocab_only       = 0
0.00.263.478 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.478 I llm_load_print_meta: n_embd           = 2048
0.00.263.478 I llm_load_print_meta: n_layer          = 18
0.00.263.491 I llm_load_print_meta: n_head           = 8
0.00.263.491 I llm_load_print_meta: n_head_kv        = 1
0.00.263.492 I llm_load_print_meta: n_rot            = 256
0.00.263.492 I llm_load_print_meta: n_swa            = 0
0.00.263.492 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.493 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.494 I llm_load_print_meta: n_gqa            = 8
0.00.263.495 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.496 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.497 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.498 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.499 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.499 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.499 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.500 I llm_load_print_meta: n_ff             = 16384
0.00.263.500 I llm_load_print_meta: n_expert         = 0
0.00.263.501 I llm_load_print_meta: n_expert_used    = 0
0.00.263.501 I llm_load_print_meta: causal attn      = 1
0.00.263.501 I llm_load_print_meta: pooling type     = 0
0.00.263.502 I llm_load_print_meta: rope type        = 2
0.00.263.502 I llm_load_print_meta: rope scaling     = linear
0.00.263.504 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.505 I llm_load_print_meta: freq_scale_train = 1
0.00.263.505 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.506 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.506 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.506 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.506 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.507 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.507 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.508 I llm_load_print_meta: model type       = 2B
0.00.263.508 I llm_load_print_meta: model ftype      = Q8_0
0.00.263.509 I llm_load_print_meta: model params     = 2.51 B
0.00.263.510 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.263.510 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.510 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.511 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.511 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.512 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.512 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.513 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.513 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.514 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.514 I llm_load_print_meta: max token length = 93
0.00.263.535 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.360.803 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.365.949 I llama_new_context_with_model: n_ctx      = 8192
0.00.365.954 I llama_new_context_with_model: n_batch    = 2048
0.00.365.955 I llama_new_context_with_model: n_ubatch   = 512
0.00.365.955 I llama_new_context_with_model: flash_attn = 0
0.00.365.958 I llama_new_context_with_model: freq_base  = 10000.0
0.00.365.958 I llama_new_context_with_model: freq_scale = 1
0.00.394.681 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.394.700 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.394.794 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.395.649 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.395.656 I llama_new_context_with_model: graph nodes  = 601
0.00.395.657 I llama_new_context_with_model: graph splits = 1
0.00.395.659 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.482.563 I main: llama threadpool init, n_threads = 4
0.00.482.574 I 
0.00.482.653 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.482.656 I 
0.00.482.691 I sampler seed: 458473727
0.00.482.701 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.482.705 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.482.706 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.482.707 I 
 increasities in his early years.

The passage describes a period of rapid growth and development for the individual. This period is marked by significant achievements and milestones.

0.02.644.349 I llama_perf_sampler_print:    sampling time =       5.05 ms /    33 runs   (    0.15 ms per token,  6533.36 tokens per second)
0.02.644.351 I llama_perf_context_print:        load time =     480.53 ms
0.02.644.352 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.644.354 I llama_perf_context_print:        eval time =    2143.09 ms /    32 runs   (   66.97 ms per token,    14.93 tokens per second)
0.02.644.354 I llama_perf_context_print:       total time =    2161.79 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.564 I build: 3912 (edc26566) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.001.937 I main: load the model and apply lora adapter, if any
0.00.021.943 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.990 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.001 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.006 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.007 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.010 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.011 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.013 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.013 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.014 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.014 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.018 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.018 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.019 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.019 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.019 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.958 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.345 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.181 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.187 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.188 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.189 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.189 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.190 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.191 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.193 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.194 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.194 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.195 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.196 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.199 I llama_model_loader: - type  f32:   37 tensors
0.00.132.202 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.352 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.142 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.894 I llm_load_vocab: special tokens cache size = 5
0.00.269.738 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.754 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.755 I llm_load_print_meta: arch             = gemma
0.00.269.755 I llm_load_print_meta: vocab type       = SPM
0.00.269.756 I llm_load_print_meta: n_vocab          = 256000
0.00.269.756 I llm_load_print_meta: n_merges         = 0
0.00.269.757 I llm_load_print_meta: vocab_only       = 0
0.00.269.757 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.758 I llm_load_print_meta: n_embd           = 2048
0.00.269.758 I llm_load_print_meta: n_layer          = 18
0.00.269.769 I llm_load_print_meta: n_head           = 8
0.00.269.770 I llm_load_print_meta: n_head_kv        = 1
0.00.269.770 I llm_load_print_meta: n_rot            = 256
0.00.269.771 I llm_load_print_meta: n_swa            = 0
0.00.269.771 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.771 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.772 I llm_load_print_meta: n_gqa            = 8
0.00.269.773 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.774 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.775 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.776 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.777 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.777 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.777 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.778 I llm_load_print_meta: n_ff             = 16384
0.00.269.779 I llm_load_print_meta: n_expert         = 0
0.00.269.779 I llm_load_print_meta: n_expert_used    = 0
0.00.269.779 I llm_load_print_meta: causal attn      = 1
0.00.269.779 I llm_load_print_meta: pooling type     = 0
0.00.269.779 I llm_load_print_meta: rope type        = 2
0.00.269.780 I llm_load_print_meta: rope scaling     = linear
0.00.269.781 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.782 I llm_load_print_meta: freq_scale_train = 1
0.00.269.783 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.783 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.783 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.784 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.784 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.784 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.784 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.785 I llm_load_print_meta: model type       = 2B
0.00.269.785 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.786 I llm_load_print_meta: model params     = 2.51 B
0.00.269.787 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.787 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.788 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.788 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.788 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.789 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.789 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.790 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.790 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.790 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.791 I llm_load_print_meta: max token length = 93
0.00.269.809 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.345.983 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.345.990 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.345.991 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.345.991 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.345.992 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.345.992 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.351.088 I llama_new_context_with_model: n_ctx      = 8192
0.00.351.094 I llama_new_context_with_model: n_batch    = 2048
0.00.351.095 I llama_new_context_with_model: n_ubatch   = 512
0.00.351.095 I llama_new_context_with_model: flash_attn = 0
0.00.351.098 I llama_new_context_with_model: freq_base  = 10000.0
0.00.351.099 I llama_new_context_with_model: freq_scale = 1
0.00.379.587 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.379.600 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.379.692 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.550 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.380.558 I llama_new_context_with_model: graph nodes  = 601
0.00.380.559 I llama_new_context_with_model: graph splits = 1
0.00.380.561 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.132 I main: llama threadpool init, n_threads = 4
0.00.472.144 I 
0.00.472.221 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.224 I 
0.00.472.260 I sampler seed: 3149328516
0.00.472.270 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.472.274 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.472.275 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.472.275 I 
 increasels with the following features:

**Feature:** | **Description:**
|---|---|
| **Color:** | Randomly assigned color from a set of

0.02.723.294 I llama_perf_sampler_print:    sampling time =       4.69 ms /    33 runs   (    0.14 ms per token,  7043.76 tokens per second)
0.02.723.296 I llama_perf_context_print:        load time =     470.17 ms
0.02.723.297 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.723.309 I llama_perf_context_print:        eval time =    2233.77 ms /    32 runs   (   69.81 ms per token,    14.33 tokens per second)
0.02.723.310 I llama_perf_context_print:       total time =    2251.17 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.524 I build: 3912 (edc26566) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.903 I main: load the model and apply lora adapter, if any
0.00.021.831 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.895 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.908 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.914 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.918 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.923 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.924 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.925 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.928 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.938 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.938 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.944 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.944 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.945 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.946 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.947 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.851 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.891 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.761 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.768 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.768 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.769 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.770 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.771 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.771 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.774 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.774 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.775 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.775 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.776 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.782 I llama_model_loader: - type  f32:   37 tensors
0.00.131.785 I llama_model_loader: - type q8_0:  127 tensors
0.00.223.044 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.889 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.672 I llm_load_vocab: special tokens cache size = 5
0.00.283.716 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.734 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.734 I llm_load_print_meta: arch             = gemma
0.00.283.735 I llm_load_print_meta: vocab type       = SPM
0.00.283.736 I llm_load_print_meta: n_vocab          = 256000
0.00.283.736 I llm_load_print_meta: n_merges         = 0
0.00.283.737 I llm_load_print_meta: vocab_only       = 0
0.00.283.737 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.737 I llm_load_print_meta: n_embd           = 2048
0.00.283.738 I llm_load_print_meta: n_layer          = 18
0.00.283.757 I llm_load_print_meta: n_head           = 8
0.00.283.758 I llm_load_print_meta: n_head_kv        = 1
0.00.283.758 I llm_load_print_meta: n_rot            = 256
0.00.283.758 I llm_load_print_meta: n_swa            = 0
0.00.283.759 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.759 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.760 I llm_load_print_meta: n_gqa            = 8
0.00.283.761 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.762 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.762 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.764 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.765 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.765 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.765 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.766 I llm_load_print_meta: n_ff             = 16384
0.00.283.766 I llm_load_print_meta: n_expert         = 0
0.00.283.767 I llm_load_print_meta: n_expert_used    = 0
0.00.283.767 I llm_load_print_meta: causal attn      = 1
0.00.283.767 I llm_load_print_meta: pooling type     = 0
0.00.283.767 I llm_load_print_meta: rope type        = 2
0.00.283.768 I llm_load_print_meta: rope scaling     = linear
0.00.283.770 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.770 I llm_load_print_meta: freq_scale_train = 1
0.00.283.771 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.771 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.771 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.771 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.772 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.772 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.772 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.773 I llm_load_print_meta: model type       = 2B
0.00.283.773 I llm_load_print_meta: model ftype      = Q8_0
0.00.283.774 I llm_load_print_meta: model params     = 2.51 B
0.00.283.775 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.283.775 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.776 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.776 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.777 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.777 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.778 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.778 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.778 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.779 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.779 I llm_load_print_meta: max token length = 93
0.00.283.806 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.354.513 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.354.520 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.359.636 I llama_new_context_with_model: n_ctx      = 8192
0.00.359.644 I llama_new_context_with_model: n_batch    = 2048
0.00.359.644 I llama_new_context_with_model: n_ubatch   = 512
0.00.359.645 I llama_new_context_with_model: flash_attn = 0
0.00.359.648 I llama_new_context_with_model: freq_base  = 10000.0
0.00.359.648 I llama_new_context_with_model: freq_scale = 1
0.00.388.922 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.388.939 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.389.052 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.389.944 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.389.951 I llama_new_context_with_model: graph nodes  = 601
0.00.389.951 I llama_new_context_with_model: graph splits = 1
0.00.389.953 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.494.819 I main: llama threadpool init, n_threads = 4
0.00.494.833 I 
0.00.494.911 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.494.915 I 
0.00.494.948 I sampler seed: 838826067
0.00.494.957 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.494.959 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.494.960 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.494.960 I 
 increasities, and other sexual experiences are not inherently harmful. It is important to respect and value the diversity of sexual experiences and to create a safe and supportive environment

0.02.889.476 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6705.95 tokens per second)
0.02.889.478 I llama_perf_context_print:        load time =     492.89 ms
0.02.889.480 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.889.481 I llama_perf_context_print:        eval time =    2376.21 ms /    32 runs   (   74.26 ms per token,    13.47 tokens per second)
0.02.889.482 I llama_perf_context_print:       total time =    2394.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.410s
user	0m39.068s
sys	0m9.439s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3912 (edc26566)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32041.30 ms
main:    total time = 32041.30 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.541 I build: 3912 (edc26566) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.736 I main: llama backend init
0.00.001.867 I main: load the model and apply lora adapter, if any
0.00.021.815 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.863 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.874 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.879 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.882 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.886 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.887 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.888 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.888 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.889 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.889 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.893 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.894 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.894 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.895 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.895 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.623 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.899 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.682 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.688 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.689 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.690 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.691 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.692 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.694 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.697 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.698 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.698 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.699 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.700 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.703 I llama_model_loader: - type  f32:   37 tensors
0.00.131.706 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.706 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.931 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.572 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.442 I llm_load_vocab: special tokens cache size = 5
0.00.265.626 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.645 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.646 I llm_load_print_meta: arch             = gemma
0.00.265.646 I llm_load_print_meta: vocab type       = SPM
0.00.265.647 I llm_load_print_meta: n_vocab          = 256000
0.00.265.647 I llm_load_print_meta: n_merges         = 0
0.00.265.648 I llm_load_print_meta: vocab_only       = 0
0.00.265.648 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.649 I llm_load_print_meta: n_embd           = 2048
0.00.265.649 I llm_load_print_meta: n_layer          = 18
0.00.265.661 I llm_load_print_meta: n_head           = 8
0.00.265.662 I llm_load_print_meta: n_head_kv        = 1
0.00.265.662 I llm_load_print_meta: n_rot            = 256
0.00.265.663 I llm_load_print_meta: n_swa            = 0
0.00.265.663 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.663 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.664 I llm_load_print_meta: n_gqa            = 8
0.00.265.665 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.666 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.667 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.669 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.669 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.670 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.670 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.671 I llm_load_print_meta: n_ff             = 16384
0.00.265.671 I llm_load_print_meta: n_expert         = 0
0.00.265.671 I llm_load_print_meta: n_expert_used    = 0
0.00.265.671 I llm_load_print_meta: causal attn      = 1
0.00.265.672 I llm_load_print_meta: pooling type     = 0
0.00.265.672 I llm_load_print_meta: rope type        = 2
0.00.265.672 I llm_load_print_meta: rope scaling     = linear
0.00.265.674 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.675 I llm_load_print_meta: freq_scale_train = 1
0.00.265.676 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.676 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.676 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.677 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.677 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.677 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.677 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.678 I llm_load_print_meta: model type       = 2B
0.00.265.678 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.265.679 I llm_load_print_meta: model params     = 2.51 B
0.00.265.680 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.265.680 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.681 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.681 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.682 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.682 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.683 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.683 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.684 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.684 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.684 I llm_load_print_meta: max token length = 93
0.00.265.705 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.592 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.324.600 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.324.601 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.324.601 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.324.602 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.324.602 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.329.566 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.571 I llama_new_context_with_model: n_batch    = 2048
0.00.329.571 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.572 I llama_new_context_with_model: flash_attn = 0
0.00.329.574 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.574 I llama_new_context_with_model: freq_scale = 1
0.00.359.067 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.081 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.172 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.021 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.029 I llama_new_context_with_model: graph nodes  = 601
0.00.360.029 I llama_new_context_with_model: graph splits = 1
0.00.360.031 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.425 I main: llama threadpool init, n_threads = 4
0.00.441.437 I 
0.00.441.512 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.515 I 
0.00.441.551 I sampler seed: 500736055
0.00.441.560 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.567 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.441.568 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.569 I 
 encompassing a wide range of topics, from the philosophical implications of quantum mechanics to the practical applications of AI.

**Philosophical Implications of Quantum Mechanics**



0.02.046.434 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6727.83 tokens per second)
0.02.046.436 I llama_perf_context_print:        load time =     439.54 ms
0.02.046.437 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.046.439 I llama_perf_context_print:        eval time =    1587.40 ms /    32 runs   (   49.61 ms per token,    20.16 tokens per second)
0.02.046.450 I llama_perf_context_print:       total time =    1605.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3912 (edc26566)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32064.06 ms
main:    total time = 32064.06 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.549 I build: 3912 (edc26566) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.001.863 I main: load the model and apply lora adapter, if any
0.00.021.983 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.999 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.006 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.007 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.011 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.012 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.012 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.013 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.013 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.014 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.018 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.018 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.019 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.019 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.019 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.246 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.137 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.406 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.412 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.413 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.414 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.414 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.415 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.416 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.419 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.419 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.423 I llama_model_loader: - type  f32:   37 tensors
0.00.134.426 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.426 I llama_model_loader: - type q6_K:   19 tensors
0.00.214.435 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.125 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.922 I llm_load_vocab: special tokens cache size = 5
0.00.271.691 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.708 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.709 I llm_load_print_meta: arch             = gemma
0.00.271.709 I llm_load_print_meta: vocab type       = SPM
0.00.271.711 I llm_load_print_meta: n_vocab          = 256000
0.00.271.711 I llm_load_print_meta: n_merges         = 0
0.00.271.712 I llm_load_print_meta: vocab_only       = 0
0.00.271.712 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.712 I llm_load_print_meta: n_embd           = 2048
0.00.271.712 I llm_load_print_meta: n_layer          = 18
0.00.271.723 I llm_load_print_meta: n_head           = 8
0.00.271.725 I llm_load_print_meta: n_head_kv        = 1
0.00.271.725 I llm_load_print_meta: n_rot            = 256
0.00.271.725 I llm_load_print_meta: n_swa            = 0
0.00.271.725 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.726 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.726 I llm_load_print_meta: n_gqa            = 8
0.00.271.727 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.728 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.729 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.731 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.731 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.731 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.732 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.732 I llm_load_print_meta: n_ff             = 16384
0.00.271.733 I llm_load_print_meta: n_expert         = 0
0.00.271.733 I llm_load_print_meta: n_expert_used    = 0
0.00.271.733 I llm_load_print_meta: causal attn      = 1
0.00.271.733 I llm_load_print_meta: pooling type     = 0
0.00.271.734 I llm_load_print_meta: rope type        = 2
0.00.271.734 I llm_load_print_meta: rope scaling     = linear
0.00.271.736 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.736 I llm_load_print_meta: freq_scale_train = 1
0.00.271.737 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.737 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.737 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.738 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.738 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.738 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.739 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.739 I llm_load_print_meta: model type       = 2B
0.00.271.740 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.740 I llm_load_print_meta: model params     = 2.51 B
0.00.271.741 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.741 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.742 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.742 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.742 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.743 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.743 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.744 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.744 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.745 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.745 I llm_load_print_meta: max token length = 93
0.00.271.772 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.726 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.334.818 I llama_new_context_with_model: n_ctx      = 8192
0.00.334.826 I llama_new_context_with_model: n_batch    = 2048
0.00.334.826 I llama_new_context_with_model: n_ubatch   = 512
0.00.334.827 I llama_new_context_with_model: flash_attn = 0
0.00.334.830 I llama_new_context_with_model: freq_base  = 10000.0
0.00.334.831 I llama_new_context_with_model: freq_scale = 1
0.00.366.075 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.366.090 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.366.179 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.367.024 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.367.032 I llama_new_context_with_model: graph nodes  = 601
0.00.367.032 I llama_new_context_with_model: graph splits = 1
0.00.367.034 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.915 I main: llama threadpool init, n_threads = 4
0.00.447.926 I 
0.00.448.009 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.448.012 I 
0.00.448.050 I sampler seed: 3046357476
0.00.448.059 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.062 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.448.063 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.063 I 
 encompate the following points:

a) Importance of stress management in mental healthcare
b) Strategies for stress management
c) Challenges associated with stress management



0.02.028.155 I llama_perf_sampler_print:    sampling time =       4.69 ms /    33 runs   (    0.14 ms per token,  7036.25 tokens per second)
0.02.028.157 I llama_perf_context_print:        load time =     446.03 ms
0.02.028.159 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.028.160 I llama_perf_context_print:        eval time =    1562.15 ms /    32 runs   (   48.82 ms per token,    20.48 tokens per second)
0.02.028.161 I llama_perf_context_print:       total time =    1580.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.957s
user	8m14.684s
sys	0m6.809s
