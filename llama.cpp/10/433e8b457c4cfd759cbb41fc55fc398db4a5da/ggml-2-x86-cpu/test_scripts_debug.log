+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.667 I build: 3927 (10433e8b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.863 I main: llama backend init
0.00.002.798 I main: load the model and apply lora adapter, if any
0.00.024.783 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.994 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.084 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.094 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.096 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.101 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.105 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.106 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.107 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.108 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.109 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.115 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.116 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.117 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.119 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.120 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.835 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.844 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.823 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.830 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.831 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.832 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.833 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.834 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.836 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.840 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.841 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.842 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.843 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.844 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.852 I llama_model_loader: - type  f32:   37 tensors
0.00.267.857 I llama_model_loader: - type q8_0:  127 tensors
0.00.443.972 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.486.183 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.488.064 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.493.790 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.505.428 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.506.369 I llm_load_vocab: special tokens cache size = 5
0.00.601.104 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.173 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.174 I llm_load_print_meta: arch             = gemma
0.00.601.175 I llm_load_print_meta: vocab type       = SPM
0.00.601.176 I llm_load_print_meta: n_vocab          = 256000
0.00.601.178 I llm_load_print_meta: n_merges         = 0
0.00.601.178 I llm_load_print_meta: vocab_only       = 0
0.00.601.178 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.179 I llm_load_print_meta: n_embd           = 2048
0.00.601.179 I llm_load_print_meta: n_layer          = 18
0.00.601.243 I llm_load_print_meta: n_head           = 8
0.00.601.249 I llm_load_print_meta: n_head_kv        = 1
0.00.601.250 I llm_load_print_meta: n_rot            = 256
0.00.601.250 I llm_load_print_meta: n_swa            = 0
0.00.601.251 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.251 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.256 I llm_load_print_meta: n_gqa            = 8
0.00.601.260 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.265 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.266 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.268 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.269 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.269 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.270 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.275 I llm_load_print_meta: n_ff             = 16384
0.00.601.276 I llm_load_print_meta: n_expert         = 0
0.00.601.276 I llm_load_print_meta: n_expert_used    = 0
0.00.601.276 I llm_load_print_meta: causal attn      = 1
0.00.601.277 I llm_load_print_meta: pooling type     = 0
0.00.601.277 I llm_load_print_meta: rope type        = 2
0.00.601.278 I llm_load_print_meta: rope scaling     = linear
0.00.601.279 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.281 I llm_load_print_meta: freq_scale_train = 1
0.00.601.281 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.601.282 I llm_load_print_meta: rope_finetuned   = unknown
0.00.601.291 I llm_load_print_meta: ssm_d_conv       = 0
0.00.601.292 I llm_load_print_meta: ssm_d_inner      = 0
0.00.601.292 I llm_load_print_meta: ssm_d_state      = 0
0.00.601.293 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.601.293 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.601.294 I llm_load_print_meta: model type       = 2B
0.00.601.295 I llm_load_print_meta: model ftype      = Q8_0
0.00.601.299 I llm_load_print_meta: model params     = 2.51 B
0.00.601.300 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.601.301 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.601.301 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.601.312 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.601.321 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.601.322 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.601.330 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.601.331 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.601.337 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.601.339 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.601.339 I llm_load_print_meta: max token length = 93
0.00.601.505 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.703.491 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.703.502 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.703.503 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.703.503 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.703.504 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.703.505 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.709.059 I llama_new_context_with_model: n_ctx      = 8192
0.00.709.067 I llama_new_context_with_model: n_batch    = 2048
0.00.709.067 I llama_new_context_with_model: n_ubatch   = 512
0.00.709.068 I llama_new_context_with_model: flash_attn = 0
0.00.709.070 I llama_new_context_with_model: freq_base  = 10000.0
0.00.709.071 I llama_new_context_with_model: freq_scale = 1
0.00.737.610 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.737.652 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.737.773 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.739.143 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.739.148 I llama_new_context_with_model: graph nodes  = 601
0.00.739.149 I llama_new_context_with_model: graph splits = 1
0.00.739.165 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.352.151 I main: llama threadpool init, n_threads = 4
0.01.352.163 I 
0.01.352.267 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.352.272 I 
0.01.352.453 I sampler seed: 699916734
0.01.352.464 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.352.484 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.352.488 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.352.488 I 
 increably.

I am unable to generate a response as requested as I am unable to access external websites or perform web scraping. [end of text]


0.12.692.100 I llama_perf_sampler_print:    sampling time =      41.58 ms /    28 runs   (    1.49 ms per token,   673.38 tokens per second)
0.12.692.102 I llama_perf_context_print:        load time =    1349.26 ms
0.12.692.104 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.692.105 I llama_perf_context_print:        eval time =   11270.39 ms /    27 runs   (  417.42 ms per token,     2.40 tokens per second)
0.12.692.106 I llama_perf_context_print:       total time =   11339.96 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.627 I build: 3927 (10433e8b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.825 I main: llama backend init
0.00.002.816 I main: load the model and apply lora adapter, if any
0.00.031.345 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.031.436 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.031.450 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.031.452 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.031.456 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.031.460 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.031.461 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.031.462 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.031.463 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.031.464 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.031.470 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.031.471 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.031.472 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.031.473 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.031.474 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.159.965 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.259.403 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.277.364 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.277.372 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.277.373 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.277.374 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.277.375 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.277.376 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.277.377 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.277.381 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.277.382 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.277.383 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.277.384 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.277.385 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.277.393 I llama_model_loader: - type  f32:   37 tensors
0.00.277.398 I llama_model_loader: - type q8_0:  127 tensors
0.00.451.670 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.496.658 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.498.557 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.504.218 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.516.003 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.517.012 I llm_load_vocab: special tokens cache size = 5
0.00.628.029 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.628.100 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.628.101 I llm_load_print_meta: arch             = gemma
0.00.628.101 I llm_load_print_meta: vocab type       = SPM
0.00.628.102 I llm_load_print_meta: n_vocab          = 256000
0.00.628.105 I llm_load_print_meta: n_merges         = 0
0.00.628.105 I llm_load_print_meta: vocab_only       = 0
0.00.628.106 I llm_load_print_meta: n_ctx_train      = 8192
0.00.628.106 I llm_load_print_meta: n_embd           = 2048
0.00.628.106 I llm_load_print_meta: n_layer          = 18
0.00.628.171 I llm_load_print_meta: n_head           = 8
0.00.628.178 I llm_load_print_meta: n_head_kv        = 1
0.00.628.178 I llm_load_print_meta: n_rot            = 256
0.00.628.179 I llm_load_print_meta: n_swa            = 0
0.00.628.180 I llm_load_print_meta: n_embd_head_k    = 256
0.00.628.180 I llm_load_print_meta: n_embd_head_v    = 256
0.00.628.186 I llm_load_print_meta: n_gqa            = 8
0.00.628.191 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.628.196 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.628.197 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.628.199 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.628.200 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.628.200 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.628.201 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.628.206 I llm_load_print_meta: n_ff             = 16384
0.00.628.206 I llm_load_print_meta: n_expert         = 0
0.00.628.207 I llm_load_print_meta: n_expert_used    = 0
0.00.628.208 I llm_load_print_meta: causal attn      = 1
0.00.628.208 I llm_load_print_meta: pooling type     = 0
0.00.628.208 I llm_load_print_meta: rope type        = 2
0.00.628.209 I llm_load_print_meta: rope scaling     = linear
0.00.628.210 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.628.211 I llm_load_print_meta: freq_scale_train = 1
0.00.628.211 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.628.212 I llm_load_print_meta: rope_finetuned   = unknown
0.00.628.212 I llm_load_print_meta: ssm_d_conv       = 0
0.00.628.213 I llm_load_print_meta: ssm_d_inner      = 0
0.00.628.213 I llm_load_print_meta: ssm_d_state      = 0
0.00.628.214 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.628.215 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.628.215 I llm_load_print_meta: model type       = 2B
0.00.628.227 I llm_load_print_meta: model ftype      = Q8_0
0.00.628.228 I llm_load_print_meta: model params     = 2.51 B
0.00.628.229 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.628.230 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.628.231 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.628.231 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.628.232 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.628.238 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.628.239 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.628.239 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.628.245 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.628.246 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.628.247 I llm_load_print_meta: max token length = 93
0.00.628.415 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.723.397 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.729.104 I llama_new_context_with_model: n_ctx      = 8192
0.00.729.111 I llama_new_context_with_model: n_batch    = 2048
0.00.729.112 I llama_new_context_with_model: n_ubatch   = 512
0.00.729.112 I llama_new_context_with_model: flash_attn = 0
0.00.729.115 I llama_new_context_with_model: freq_base  = 10000.0
0.00.729.116 I llama_new_context_with_model: freq_scale = 1
0.00.758.632 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.758.680 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.758.794 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.760.159 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.760.165 I llama_new_context_with_model: graph nodes  = 601
0.00.760.165 I llama_new_context_with_model: graph splits = 1
0.00.760.180 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.372.892 I main: llama threadpool init, n_threads = 4
0.01.372.903 I 
0.01.373.008 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.373.012 I 
0.01.373.192 I sampler seed: 3364324249
0.01.373.203 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.373.212 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.373.213 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.373.214 I 
 maneuvrants.

I am unable to access the requested text. [end of text]


0.07.705.684 I llama_perf_sampler_print:    sampling time =      23.18 ms /    16 runs   (    1.45 ms per token,   690.19 tokens per second)
0.07.705.689 I llama_perf_context_print:        load time =    1369.99 ms
0.07.705.691 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.07.705.693 I llama_perf_context_print:        eval time =    6293.39 ms /    15 runs   (  419.56 ms per token,     2.38 tokens per second)
0.07.705.694 I llama_perf_context_print:       total time =    6332.80 ms /    16 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.646 I build: 3927 (10433e8b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.851 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.024.680 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.886 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.976 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.987 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.990 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.995 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.999 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.001 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.002 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.003 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.005 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.014 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.016 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.017 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.019 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.020 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.968 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.129 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.119 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.127 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.128 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.129 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.130 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.132 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.133 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.137 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.138 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.140 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.141 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.268.144 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.155 I llama_model_loader: - type  f32:   37 tensors
0.00.268.160 I llama_model_loader: - type q8_0:  127 tensors
0.00.443.886 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.492.542 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.494.706 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.501.374 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.514.488 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.448 I llm_load_vocab: special tokens cache size = 5
0.00.621.264 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.621.336 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.621.337 I llm_load_print_meta: arch             = gemma
0.00.621.337 I llm_load_print_meta: vocab type       = SPM
0.00.621.338 I llm_load_print_meta: n_vocab          = 256000
0.00.621.340 I llm_load_print_meta: n_merges         = 0
0.00.621.341 I llm_load_print_meta: vocab_only       = 0
0.00.621.341 I llm_load_print_meta: n_ctx_train      = 8192
0.00.621.342 I llm_load_print_meta: n_embd           = 2048
0.00.621.342 I llm_load_print_meta: n_layer          = 18
0.00.621.406 I llm_load_print_meta: n_head           = 8
0.00.621.413 I llm_load_print_meta: n_head_kv        = 1
0.00.621.414 I llm_load_print_meta: n_rot            = 256
0.00.621.414 I llm_load_print_meta: n_swa            = 0
0.00.621.415 I llm_load_print_meta: n_embd_head_k    = 256
0.00.621.415 I llm_load_print_meta: n_embd_head_v    = 256
0.00.621.420 I llm_load_print_meta: n_gqa            = 8
0.00.621.424 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.621.431 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.621.433 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.621.434 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.621.435 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.621.436 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.621.438 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.621.445 I llm_load_print_meta: n_ff             = 16384
0.00.621.447 I llm_load_print_meta: n_expert         = 0
0.00.621.448 I llm_load_print_meta: n_expert_used    = 0
0.00.621.449 I llm_load_print_meta: causal attn      = 1
0.00.621.450 I llm_load_print_meta: pooling type     = 0
0.00.621.450 I llm_load_print_meta: rope type        = 2
0.00.621.451 I llm_load_print_meta: rope scaling     = linear
0.00.621.453 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.621.455 I llm_load_print_meta: freq_scale_train = 1
0.00.621.455 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.621.456 I llm_load_print_meta: rope_finetuned   = unknown
0.00.621.456 I llm_load_print_meta: ssm_d_conv       = 0
0.00.621.457 I llm_load_print_meta: ssm_d_inner      = 0
0.00.621.457 I llm_load_print_meta: ssm_d_state      = 0
0.00.621.458 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.621.458 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.621.459 I llm_load_print_meta: model type       = 2B
0.00.621.461 I llm_load_print_meta: model ftype      = Q8_0
0.00.621.462 I llm_load_print_meta: model params     = 2.51 B
0.00.621.464 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.621.465 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.621.466 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.621.466 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.621.479 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.621.481 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.621.482 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.621.482 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.621.490 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.621.506 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.621.508 I llm_load_print_meta: max token length = 93
0.00.621.691 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.700.147 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.700.154 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.700.155 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.700.156 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.700.157 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.700.157 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.705.974 I llama_new_context_with_model: n_ctx      = 8192
0.00.705.982 I llama_new_context_with_model: n_batch    = 2048
0.00.705.982 I llama_new_context_with_model: n_ubatch   = 512
0.00.705.983 I llama_new_context_with_model: flash_attn = 0
0.00.705.985 I llama_new_context_with_model: freq_base  = 10000.0
0.00.705.986 I llama_new_context_with_model: freq_scale = 1
0.00.735.230 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.735.273 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.735.404 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.736.825 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.736.830 I llama_new_context_with_model: graph nodes  = 601
0.00.736.830 I llama_new_context_with_model: graph splits = 1
0.00.736.847 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.379.845 I main: llama threadpool init, n_threads = 4
0.01.379.858 I 
0.01.379.987 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.379.991 I 
0.01.380.176 I sampler seed: 87741924
0.01.380.188 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.380.198 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.380.199 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.380.199 I 
 increasively.

The answer should be:
$$\sum_{n=1}^\infty \frac{1}{n^2}$$

This is a convergent

0.14.960.457 I llama_perf_sampler_print:    sampling time =      49.21 ms /    33 runs   (    1.49 ms per token,   670.65 tokens per second)
0.14.960.459 I llama_perf_context_print:        load time =    1376.96 ms
0.14.960.461 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.960.462 I llama_perf_context_print:        eval time =   13498.32 ms /    32 runs   (  421.82 ms per token,     2.37 tokens per second)
0.14.960.463 I llama_perf_context_print:       total time =   13580.62 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 3927 (10433e8b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.837 I main: llama backend init
0.00.002.777 I main: load the model and apply lora adapter, if any
0.00.024.999 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.202 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.285 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.295 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.297 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.300 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.301 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.302 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.303 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.304 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.305 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.311 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.313 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.314 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.315 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.317 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.482 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.790 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.626 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.634 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.635 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.636 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.637 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.639 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.640 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.643 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.644 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.645 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.646 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.268.647 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.655 I llama_model_loader: - type  f32:   37 tensors
0.00.268.660 I llama_model_loader: - type q8_0:  127 tensors
0.00.450.232 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.493.305 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.495.106 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.500.418 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.512.487 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.513.435 I llm_load_vocab: special tokens cache size = 5
0.00.621.876 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.621.951 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.621.951 I llm_load_print_meta: arch             = gemma
0.00.621.952 I llm_load_print_meta: vocab type       = SPM
0.00.621.953 I llm_load_print_meta: n_vocab          = 256000
0.00.621.955 I llm_load_print_meta: n_merges         = 0
0.00.621.955 I llm_load_print_meta: vocab_only       = 0
0.00.621.956 I llm_load_print_meta: n_ctx_train      = 8192
0.00.621.957 I llm_load_print_meta: n_embd           = 2048
0.00.621.957 I llm_load_print_meta: n_layer          = 18
0.00.622.023 I llm_load_print_meta: n_head           = 8
0.00.622.029 I llm_load_print_meta: n_head_kv        = 1
0.00.622.030 I llm_load_print_meta: n_rot            = 256
0.00.622.030 I llm_load_print_meta: n_swa            = 0
0.00.622.032 I llm_load_print_meta: n_embd_head_k    = 256
0.00.622.032 I llm_load_print_meta: n_embd_head_v    = 256
0.00.622.036 I llm_load_print_meta: n_gqa            = 8
0.00.622.041 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.622.046 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.047 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.048 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.049 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.050 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.050 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.055 I llm_load_print_meta: n_ff             = 16384
0.00.622.056 I llm_load_print_meta: n_expert         = 0
0.00.622.061 I llm_load_print_meta: n_expert_used    = 0
0.00.622.061 I llm_load_print_meta: causal attn      = 1
0.00.622.062 I llm_load_print_meta: pooling type     = 0
0.00.622.062 I llm_load_print_meta: rope type        = 2
0.00.622.063 I llm_load_print_meta: rope scaling     = linear
0.00.622.065 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.066 I llm_load_print_meta: freq_scale_train = 1
0.00.622.067 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.067 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.067 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.067 I llm_load_print_meta: ssm_d_inner      = 0
0.00.622.068 I llm_load_print_meta: ssm_d_state      = 0
0.00.622.068 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.622.069 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.622.070 I llm_load_print_meta: model type       = 2B
0.00.622.071 I llm_load_print_meta: model ftype      = Q8_0
0.00.622.072 I llm_load_print_meta: model params     = 2.51 B
0.00.622.100 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.622.102 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.622.110 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.622.111 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.622.111 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.622.112 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.622.112 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.622.113 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.622.119 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.622.120 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.622.121 I llm_load_print_meta: max token length = 93
0.00.622.291 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.693.480 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.693.491 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.699.293 I llama_new_context_with_model: n_ctx      = 8192
0.00.699.299 I llama_new_context_with_model: n_batch    = 2048
0.00.699.300 I llama_new_context_with_model: n_ubatch   = 512
0.00.699.301 I llama_new_context_with_model: flash_attn = 0
0.00.699.303 I llama_new_context_with_model: freq_base  = 10000.0
0.00.699.304 I llama_new_context_with_model: freq_scale = 1
0.00.728.455 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.728.496 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.728.611 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.730.023 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.730.028 I llama_new_context_with_model: graph nodes  = 601
0.00.730.029 I llama_new_context_with_model: graph splits = 1
0.00.730.044 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.342.443 I main: llama threadpool init, n_threads = 4
0.01.342.455 I 
0.01.342.560 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.342.564 I 
0.01.342.744 I sampler seed: 3740819325
0.01.342.756 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.342.763 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.342.766 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.342.766 I 
 increasities, and other inappropriate behavior.

I cannot provide information that promotes harmful or inappropriate behavior. [end of text]


0.10.182.367 I llama_perf_sampler_print:    sampling time =      32.35 ms /    22 runs   (    1.47 ms per token,   680.08 tokens per second)
0.10.182.391 I llama_perf_context_print:        load time =    1339.58 ms
0.10.182.393 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.182.395 I llama_perf_context_print:        eval time =    8785.22 ms /    21 runs   (  418.34 ms per token,     2.39 tokens per second)
0.10.182.403 I llama_perf_context_print:       total time =    8839.93 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m55.194s
user	2m53.232s
sys	0m9.393s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3927 (10433e8b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198797.01 ms
main:    total time = 198797.01 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.637 I build: 3927 (10433e8b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.831 I main: llama backend init
0.00.002.786 I main: load the model and apply lora adapter, if any
0.00.024.690 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.892 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.979 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.989 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.992 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.996 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.997 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.999 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.000 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.001 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.002 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.014 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.017 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.018 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.020 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.022 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.195 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.421 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.388 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.397 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.398 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.399 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.400 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.402 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.403 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.406 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.407 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.408 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.409 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.410 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.418 I llama_model_loader: - type  f32:   37 tensors
0.00.267.422 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.423 I llama_model_loader: - type q6_K:   19 tensors
0.00.446.581 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.490.623 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.492.511 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.498.116 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.509.920 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.510.864 I llm_load_vocab: special tokens cache size = 5
0.00.610.154 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.610.224 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.610.225 I llm_load_print_meta: arch             = gemma
0.00.610.226 I llm_load_print_meta: vocab type       = SPM
0.00.610.227 I llm_load_print_meta: n_vocab          = 256000
0.00.610.229 I llm_load_print_meta: n_merges         = 0
0.00.610.229 I llm_load_print_meta: vocab_only       = 0
0.00.610.230 I llm_load_print_meta: n_ctx_train      = 8192
0.00.610.230 I llm_load_print_meta: n_embd           = 2048
0.00.610.230 I llm_load_print_meta: n_layer          = 18
0.00.610.291 I llm_load_print_meta: n_head           = 8
0.00.610.298 I llm_load_print_meta: n_head_kv        = 1
0.00.610.298 I llm_load_print_meta: n_rot            = 256
0.00.610.299 I llm_load_print_meta: n_swa            = 0
0.00.610.299 I llm_load_print_meta: n_embd_head_k    = 256
0.00.610.301 I llm_load_print_meta: n_embd_head_v    = 256
0.00.610.306 I llm_load_print_meta: n_gqa            = 8
0.00.610.310 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.610.315 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.610.317 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.610.318 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.610.319 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.610.320 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.610.320 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.610.325 I llm_load_print_meta: n_ff             = 16384
0.00.610.326 I llm_load_print_meta: n_expert         = 0
0.00.610.326 I llm_load_print_meta: n_expert_used    = 0
0.00.610.327 I llm_load_print_meta: causal attn      = 1
0.00.610.327 I llm_load_print_meta: pooling type     = 0
0.00.610.327 I llm_load_print_meta: rope type        = 2
0.00.610.328 I llm_load_print_meta: rope scaling     = linear
0.00.610.330 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.610.331 I llm_load_print_meta: freq_scale_train = 1
0.00.610.332 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.610.332 I llm_load_print_meta: rope_finetuned   = unknown
0.00.610.333 I llm_load_print_meta: ssm_d_conv       = 0
0.00.610.334 I llm_load_print_meta: ssm_d_inner      = 0
0.00.610.334 I llm_load_print_meta: ssm_d_state      = 0
0.00.610.335 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.610.336 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.610.337 I llm_load_print_meta: model type       = 2B
0.00.610.338 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.610.339 I llm_load_print_meta: model params     = 2.51 B
0.00.610.341 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.610.342 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.610.343 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.610.344 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.610.345 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.610.346 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.610.347 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.610.348 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.610.355 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.610.357 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.610.357 I llm_load_print_meta: max token length = 93
0.00.610.535 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.671.486 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.671.495 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.671.496 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.671.497 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.671.497 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.671.498 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.677.187 I llama_new_context_with_model: n_ctx      = 8192
0.00.677.194 I llama_new_context_with_model: n_batch    = 2048
0.00.677.195 I llama_new_context_with_model: n_ubatch   = 512
0.00.677.195 I llama_new_context_with_model: flash_attn = 0
0.00.677.197 I llama_new_context_with_model: freq_base  = 10000.0
0.00.677.198 I llama_new_context_with_model: freq_scale = 1
0.00.706.078 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.706.123 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.706.241 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.707.654 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.707.659 I llama_new_context_with_model: graph nodes  = 601
0.00.707.660 I llama_new_context_with_model: graph splits = 1
0.00.707.676 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.286.822 I main: llama threadpool init, n_threads = 4
0.01.286.833 I 
0.01.286.948 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.286.953 I 
0.01.287.146 I sampler seed: 3637400854
0.01.287.158 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.287.165 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.287.167 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.287.168 I 
 seconally, and you might just see me.

This is an excerpt from a poem. What type of figurative language is it and what is the meaning?

0.12.194.441 I llama_perf_sampler_print:    sampling time =      49.15 ms /    33 runs   (    1.49 ms per token,   671.40 tokens per second)
0.12.194.465 I llama_perf_context_print:        load time =    1283.95 ms
0.12.194.467 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.194.469 I llama_perf_context_print:        eval time =   10826.03 ms /    32 runs   (  338.31 ms per token,     2.96 tokens per second)
0.12.194.470 I llama_perf_context_print:       total time =   10907.63 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3927 (10433e8b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198840.16 ms
main:    total time = 198840.16 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.634 I build: 3927 (10433e8b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.832 I main: llama backend init
0.00.002.784 I main: load the model and apply lora adapter, if any
0.00.024.713 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.806 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.819 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.821 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.825 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.826 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.827 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.828 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.829 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.830 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.836 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.837 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.838 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.839 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.848 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.732 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.771 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.698 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.705 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.706 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.707 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.708 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.710 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.711 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.714 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.715 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.723 I llama_model_loader: - type  f32:   37 tensors
0.00.267.727 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.727 I llama_model_loader: - type q6_K:   19 tensors
0.00.448.496 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.492.535 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.494.299 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.499.553 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.510.509 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.426 I llm_load_vocab: special tokens cache size = 5
0.00.606.930 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.606.998 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.606.999 I llm_load_print_meta: arch             = gemma
0.00.607.000 I llm_load_print_meta: vocab type       = SPM
0.00.607.000 I llm_load_print_meta: n_vocab          = 256000
0.00.607.002 I llm_load_print_meta: n_merges         = 0
0.00.607.003 I llm_load_print_meta: vocab_only       = 0
0.00.607.003 I llm_load_print_meta: n_ctx_train      = 8192
0.00.607.004 I llm_load_print_meta: n_embd           = 2048
0.00.607.004 I llm_load_print_meta: n_layer          = 18
0.00.607.066 I llm_load_print_meta: n_head           = 8
0.00.607.074 I llm_load_print_meta: n_head_kv        = 1
0.00.607.074 I llm_load_print_meta: n_rot            = 256
0.00.607.075 I llm_load_print_meta: n_swa            = 0
0.00.607.077 I llm_load_print_meta: n_embd_head_k    = 256
0.00.607.077 I llm_load_print_meta: n_embd_head_v    = 256
0.00.607.082 I llm_load_print_meta: n_gqa            = 8
0.00.607.087 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.607.092 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.607.094 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.607.095 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.607.104 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.607.105 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.607.118 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.607.124 I llm_load_print_meta: n_ff             = 16384
0.00.607.124 I llm_load_print_meta: n_expert         = 0
0.00.607.125 I llm_load_print_meta: n_expert_used    = 0
0.00.607.125 I llm_load_print_meta: causal attn      = 1
0.00.607.126 I llm_load_print_meta: pooling type     = 0
0.00.607.127 I llm_load_print_meta: rope type        = 2
0.00.607.127 I llm_load_print_meta: rope scaling     = linear
0.00.607.129 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.607.130 I llm_load_print_meta: freq_scale_train = 1
0.00.607.130 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.607.131 I llm_load_print_meta: rope_finetuned   = unknown
0.00.607.131 I llm_load_print_meta: ssm_d_conv       = 0
0.00.607.131 I llm_load_print_meta: ssm_d_inner      = 0
0.00.607.132 I llm_load_print_meta: ssm_d_state      = 0
0.00.607.132 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.607.132 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.607.133 I llm_load_print_meta: model type       = 2B
0.00.607.134 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.607.134 I llm_load_print_meta: model params     = 2.51 B
0.00.607.136 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.607.136 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.607.137 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.607.137 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.607.137 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.607.138 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.607.138 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.607.148 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.607.153 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.607.154 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.607.155 I llm_load_print_meta: max token length = 93
0.00.607.320 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.666.505 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.672.098 I llama_new_context_with_model: n_ctx      = 8192
0.00.672.105 I llama_new_context_with_model: n_batch    = 2048
0.00.672.105 I llama_new_context_with_model: n_ubatch   = 512
0.00.672.106 I llama_new_context_with_model: flash_attn = 0
0.00.672.108 I llama_new_context_with_model: freq_base  = 10000.0
0.00.672.109 I llama_new_context_with_model: freq_scale = 1
0.00.701.832 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.701.880 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.701.999 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.703.435 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.703.440 I llama_new_context_with_model: graph nodes  = 601
0.00.703.441 I llama_new_context_with_model: graph splits = 1
0.00.703.457 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.283.408 I main: llama threadpool init, n_threads = 4
0.01.283.420 I 
0.01.283.525 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.283.528 I 
0.01.283.712 I sampler seed: 2506309471
0.01.283.723 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.283.731 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.283.732 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.283.732 I 
 fufilling and whispering.

**Answer:** Laughter.

Laughter is a delightful sound that evokes joy, amusement, and relaxation. It is a natural expression of

0.12.239.522 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.52 tokens per second)
0.12.239.527 I llama_perf_context_print:        load time =    1280.54 ms
0.12.239.529 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.239.531 I llama_perf_context_print:        eval time =   10871.95 ms /    32 runs   (  339.75 ms per token,     2.94 tokens per second)
0.12.239.532 I llama_perf_context_print:       total time =   10956.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m4.970s
user	50m8.033s
sys	0m6.286s
