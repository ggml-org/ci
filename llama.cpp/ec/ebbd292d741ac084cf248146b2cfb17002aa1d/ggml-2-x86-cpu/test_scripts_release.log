+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.623 I build: 4430 (ecebbd29) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.818 I main: llama backend init
0.00.000.824 I main: load the model and apply lora adapter, if any
0.00.021.398 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.409 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.417 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.423 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.428 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.431 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.432 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.432 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.434 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.435 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.435 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.439 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.440 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.440 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.441 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.441 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.447 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.436 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.284 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.291 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.292 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.293 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.294 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.295 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.296 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.300 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.301 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.302 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.302 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.304 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.308 I llama_model_loader: - type  f32:   37 tensors
0.00.131.309 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.603 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.269.520 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.113 I llm_load_vocab: special tokens cache size = 5
0.00.290.898 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.913 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.914 I llm_load_print_meta: arch             = gemma
0.00.290.915 I llm_load_print_meta: vocab type       = SPM
0.00.290.915 I llm_load_print_meta: n_vocab          = 256000
0.00.290.916 I llm_load_print_meta: n_merges         = 0
0.00.290.916 I llm_load_print_meta: vocab_only       = 0
0.00.290.917 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.917 I llm_load_print_meta: n_embd           = 2048
0.00.290.917 I llm_load_print_meta: n_layer          = 18
0.00.290.929 I llm_load_print_meta: n_head           = 8
0.00.290.931 I llm_load_print_meta: n_head_kv        = 1
0.00.290.931 I llm_load_print_meta: n_rot            = 256
0.00.290.931 I llm_load_print_meta: n_swa            = 0
0.00.290.932 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.932 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.933 I llm_load_print_meta: n_gqa            = 8
0.00.290.935 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.936 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.937 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.939 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.939 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.940 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.940 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.942 I llm_load_print_meta: n_ff             = 16384
0.00.290.942 I llm_load_print_meta: n_expert         = 0
0.00.290.942 I llm_load_print_meta: n_expert_used    = 0
0.00.290.943 I llm_load_print_meta: causal attn      = 1
0.00.290.943 I llm_load_print_meta: pooling type     = 0
0.00.290.943 I llm_load_print_meta: rope type        = 2
0.00.290.944 I llm_load_print_meta: rope scaling     = linear
0.00.290.945 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.946 I llm_load_print_meta: freq_scale_train = 1
0.00.290.946 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.946 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.947 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.947 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.947 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.948 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.948 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.950 I llm_load_print_meta: model type       = 2B
0.00.290.951 I llm_load_print_meta: model ftype      = Q8_0
0.00.290.952 I llm_load_print_meta: model params     = 2.51 B
0.00.290.953 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.290.953 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.953 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.953 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.954 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.954 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.955 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.955 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.955 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.956 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.956 I llm_load_print_meta: max token length = 93
0.00.391.673 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.391.680 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.391.681 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.391.682 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.391.682 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.391.683 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.396.897 I llama_new_context_with_model: n_seq_max     = 1
0.00.396.903 I llama_new_context_with_model: n_ctx         = 4096
0.00.396.904 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.396.904 I llama_new_context_with_model: n_batch       = 2048
0.00.396.904 I llama_new_context_with_model: n_ubatch      = 512
0.00.396.905 I llama_new_context_with_model: flash_attn    = 0
0.00.396.907 I llama_new_context_with_model: freq_base     = 10000.0
0.00.396.908 I llama_new_context_with_model: freq_scale    = 1
0.00.396.909 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.396.928 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.411.149 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.411.162 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.411.255 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.412.484 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.412.490 I llama_new_context_with_model: graph nodes  = 601
0.00.412.491 I llama_new_context_with_model: graph splits = 1
0.00.412.494 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.412.494 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.619 I main: llama threadpool init, n_threads = 4
0.00.497.635 I 
0.00.497.703 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.497.707 I 
0.00.497.742 I sampler seed: 3669893543
0.00.497.753 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.497.765 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.497.769 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.497.769 I 
 seconary clauses.

A secondary clause is a clause that contains a subject and a verb, and that is linked to the main clause by a conjunction. Secondary

0.02.738.327 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6689.64 tokens per second)
0.02.738.330 I llama_perf_context_print:        load time =     496.77 ms
0.02.738.332 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.738.334 I llama_perf_context_print:        eval time =    2221.33 ms /    32 runs   (   69.42 ms per token,    14.41 tokens per second)
0.02.738.336 I llama_perf_context_print:       total time =    2240.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.572 I build: 4430 (ecebbd29) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.763 I main: llama backend init
0.00.000.769 I main: load the model and apply lora adapter, if any
0.00.021.148 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.162 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.169 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.170 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.173 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.174 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.175 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.176 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.176 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.177 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.180 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.182 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.182 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.183 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.183 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.588 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.402 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.215 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.222 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.223 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.223 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.224 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.225 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.226 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.230 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.230 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.231 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.232 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.233 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.237 I llama_model_loader: - type  f32:   37 tensors
0.00.130.238 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.694 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.773 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.380 I llm_load_vocab: special tokens cache size = 5
0.00.267.054 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.070 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.071 I llm_load_print_meta: arch             = gemma
0.00.267.072 I llm_load_print_meta: vocab type       = SPM
0.00.267.073 I llm_load_print_meta: n_vocab          = 256000
0.00.267.073 I llm_load_print_meta: n_merges         = 0
0.00.267.073 I llm_load_print_meta: vocab_only       = 0
0.00.267.074 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.074 I llm_load_print_meta: n_embd           = 2048
0.00.267.075 I llm_load_print_meta: n_layer          = 18
0.00.267.086 I llm_load_print_meta: n_head           = 8
0.00.267.088 I llm_load_print_meta: n_head_kv        = 1
0.00.267.088 I llm_load_print_meta: n_rot            = 256
0.00.267.089 I llm_load_print_meta: n_swa            = 0
0.00.267.089 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.089 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.091 I llm_load_print_meta: n_gqa            = 8
0.00.267.093 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.094 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.095 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.097 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.097 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.098 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.098 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.100 I llm_load_print_meta: n_ff             = 16384
0.00.267.100 I llm_load_print_meta: n_expert         = 0
0.00.267.100 I llm_load_print_meta: n_expert_used    = 0
0.00.267.101 I llm_load_print_meta: causal attn      = 1
0.00.267.101 I llm_load_print_meta: pooling type     = 0
0.00.267.101 I llm_load_print_meta: rope type        = 2
0.00.267.102 I llm_load_print_meta: rope scaling     = linear
0.00.267.103 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.104 I llm_load_print_meta: freq_scale_train = 1
0.00.267.104 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.104 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.105 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.105 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.105 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.106 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.106 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.108 I llm_load_print_meta: model type       = 2B
0.00.267.109 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.110 I llm_load_print_meta: model params     = 2.51 B
0.00.267.110 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.111 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.111 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.111 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.112 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.112 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.112 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.112 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.113 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.113 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.114 I llm_load_print_meta: max token length = 93
0.00.360.856 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.366.224 I llama_new_context_with_model: n_seq_max     = 1
0.00.366.231 I llama_new_context_with_model: n_ctx         = 4096
0.00.366.232 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.366.232 I llama_new_context_with_model: n_batch       = 2048
0.00.366.232 I llama_new_context_with_model: n_ubatch      = 512
0.00.366.233 I llama_new_context_with_model: flash_attn    = 0
0.00.366.236 I llama_new_context_with_model: freq_base     = 10000.0
0.00.366.237 I llama_new_context_with_model: freq_scale    = 1
0.00.366.238 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.366.259 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.381.744 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.381.760 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.381.856 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.120 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.383.127 I llama_new_context_with_model: graph nodes  = 601
0.00.383.127 I llama_new_context_with_model: graph splits = 1
0.00.383.131 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.383.131 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.859 I main: llama threadpool init, n_threads = 4
0.00.470.876 I 
0.00.470.953 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.470.956 I 
0.00.470.988 I sampler seed: 3864315404
0.00.470.999 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.471.011 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.471.015 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.471.015 I 
 increably.

I am unable to generate an output as I am unable to access external websites. Therefore, I am unable to provide the requested information. [end of text]


0.02.646.921 I llama_perf_sampler_print:    sampling time =       5.13 ms /    33 runs   (    0.16 ms per token,  6432.75 tokens per second)
0.02.646.922 I llama_perf_context_print:        load time =     470.07 ms
0.02.646.924 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.646.925 I llama_perf_context_print:        eval time =    2156.60 ms /    32 runs   (   67.39 ms per token,    14.84 tokens per second)
0.02.646.926 I llama_perf_context_print:       total time =    2176.07 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.568 I build: 4430 (ecebbd29) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.763 I main: llama backend init
0.00.000.771 I main: load the model and apply lora adapter, if any
0.00.021.279 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.290 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.298 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.304 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.308 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.311 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.312 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.313 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.314 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.315 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.315 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.321 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.322 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.323 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.324 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.325 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.845 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.670 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.555 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.563 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.564 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.564 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.565 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.566 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.567 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.569 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.570 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.571 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.572 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.130.573 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.576 I llama_model_loader: - type  f32:   37 tensors
0.00.130.578 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.641 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.091 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.689 I llm_load_vocab: special tokens cache size = 5
0.00.275.800 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.819 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.821 I llm_load_print_meta: arch             = gemma
0.00.275.821 I llm_load_print_meta: vocab type       = SPM
0.00.275.822 I llm_load_print_meta: n_vocab          = 256000
0.00.275.823 I llm_load_print_meta: n_merges         = 0
0.00.275.823 I llm_load_print_meta: vocab_only       = 0
0.00.275.824 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.824 I llm_load_print_meta: n_embd           = 2048
0.00.275.824 I llm_load_print_meta: n_layer          = 18
0.00.275.835 I llm_load_print_meta: n_head           = 8
0.00.275.837 I llm_load_print_meta: n_head_kv        = 1
0.00.275.838 I llm_load_print_meta: n_rot            = 256
0.00.275.838 I llm_load_print_meta: n_swa            = 0
0.00.275.838 I llm_load_print_meta: n_embd_head_k    = 256
0.00.275.838 I llm_load_print_meta: n_embd_head_v    = 256
0.00.275.840 I llm_load_print_meta: n_gqa            = 8
0.00.275.842 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.275.843 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.275.844 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.275.845 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.275.846 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.275.846 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.275.847 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.275.849 I llm_load_print_meta: n_ff             = 16384
0.00.275.849 I llm_load_print_meta: n_expert         = 0
0.00.275.849 I llm_load_print_meta: n_expert_used    = 0
0.00.275.850 I llm_load_print_meta: causal attn      = 1
0.00.275.850 I llm_load_print_meta: pooling type     = 0
0.00.275.850 I llm_load_print_meta: rope type        = 2
0.00.275.850 I llm_load_print_meta: rope scaling     = linear
0.00.275.851 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.275.852 I llm_load_print_meta: freq_scale_train = 1
0.00.275.852 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.275.853 I llm_load_print_meta: rope_finetuned   = unknown
0.00.275.853 I llm_load_print_meta: ssm_d_conv       = 0
0.00.275.853 I llm_load_print_meta: ssm_d_inner      = 0
0.00.275.853 I llm_load_print_meta: ssm_d_state      = 0
0.00.275.854 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.275.854 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.856 I llm_load_print_meta: model type       = 2B
0.00.275.857 I llm_load_print_meta: model ftype      = Q8_0
0.00.275.857 I llm_load_print_meta: model params     = 2.51 B
0.00.275.858 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.275.858 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.275.859 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.275.859 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.275.859 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.275.860 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.275.860 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.275.860 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.275.861 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.275.861 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.275.862 I llm_load_print_meta: max token length = 93
0.00.353.035 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.353.043 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.353.043 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.353.044 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.353.045 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.353.045 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.358.402 I llama_new_context_with_model: n_seq_max     = 1
0.00.358.408 I llama_new_context_with_model: n_ctx         = 4096
0.00.358.409 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.358.409 I llama_new_context_with_model: n_batch       = 2048
0.00.358.409 I llama_new_context_with_model: n_ubatch      = 512
0.00.358.410 I llama_new_context_with_model: flash_attn    = 0
0.00.358.414 I llama_new_context_with_model: freq_base     = 10000.0
0.00.358.414 I llama_new_context_with_model: freq_scale    = 1
0.00.358.415 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.358.437 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.373.173 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.373.188 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.373.282 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.625 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.374.632 I llama_new_context_with_model: graph nodes  = 601
0.00.374.632 I llama_new_context_with_model: graph splits = 1
0.00.374.635 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.374.636 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.321 I main: llama threadpool init, n_threads = 4
0.00.460.337 I 
0.00.460.421 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.460.425 I 
0.00.460.462 I sampler seed: 1641007091
0.00.460.482 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.492 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.497 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.497 I 
 increasities, a bold statement that emphasizes the transformative nature of the experience. [end of text]


0.01.600.776 I llama_perf_sampler_print:    sampling time =       2.57 ms /    17 runs   (    0.15 ms per token,  6612.21 tokens per second)
0.01.600.779 I llama_perf_context_print:        load time =     459.53 ms
0.01.600.780 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.600.781 I llama_perf_context_print:        eval time =    1130.58 ms /    16 runs   (   70.66 ms per token,    14.15 tokens per second)
0.01.600.782 I llama_perf_context_print:       total time =    1140.46 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.188 I build: 4430 (ecebbd29) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.395 I main: llama backend init
0.00.000.404 I main: load the model and apply lora adapter, if any
0.00.020.863 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.876 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.884 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.891 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.893 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.897 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.897 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.898 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.899 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.899 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.900 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.904 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.905 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.906 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.907 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.908 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.810 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.588 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.441 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.448 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.449 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.449 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.450 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.451 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.452 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.454 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.456 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.456 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.457 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.130.458 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.461 I llama_model_loader: - type  f32:   37 tensors
0.00.130.462 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.891 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.731 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.323 I llm_load_vocab: special tokens cache size = 5
0.00.271.247 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.263 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.265 I llm_load_print_meta: arch             = gemma
0.00.271.265 I llm_load_print_meta: vocab type       = SPM
0.00.271.266 I llm_load_print_meta: n_vocab          = 256000
0.00.271.266 I llm_load_print_meta: n_merges         = 0
0.00.271.267 I llm_load_print_meta: vocab_only       = 0
0.00.271.267 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.267 I llm_load_print_meta: n_embd           = 2048
0.00.271.268 I llm_load_print_meta: n_layer          = 18
0.00.271.278 I llm_load_print_meta: n_head           = 8
0.00.271.280 I llm_load_print_meta: n_head_kv        = 1
0.00.271.281 I llm_load_print_meta: n_rot            = 256
0.00.271.281 I llm_load_print_meta: n_swa            = 0
0.00.271.281 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.281 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.283 I llm_load_print_meta: n_gqa            = 8
0.00.271.285 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.287 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.287 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.289 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.289 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.290 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.290 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.292 I llm_load_print_meta: n_ff             = 16384
0.00.271.292 I llm_load_print_meta: n_expert         = 0
0.00.271.292 I llm_load_print_meta: n_expert_used    = 0
0.00.271.292 I llm_load_print_meta: causal attn      = 1
0.00.271.293 I llm_load_print_meta: pooling type     = 0
0.00.271.293 I llm_load_print_meta: rope type        = 2
0.00.271.293 I llm_load_print_meta: rope scaling     = linear
0.00.271.294 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.295 I llm_load_print_meta: freq_scale_train = 1
0.00.271.295 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.296 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.296 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.296 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.296 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.297 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.297 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.299 I llm_load_print_meta: model type       = 2B
0.00.271.300 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.300 I llm_load_print_meta: model params     = 2.51 B
0.00.271.301 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.301 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.302 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.302 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.302 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.302 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.303 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.303 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.304 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.304 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.305 I llm_load_print_meta: max token length = 93
0.00.342.840 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.342.847 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.348.110 I llama_new_context_with_model: n_seq_max     = 1
0.00.348.115 I llama_new_context_with_model: n_ctx         = 4096
0.00.348.116 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.348.116 I llama_new_context_with_model: n_batch       = 2048
0.00.348.117 I llama_new_context_with_model: n_ubatch      = 512
0.00.348.117 I llama_new_context_with_model: flash_attn    = 0
0.00.348.119 I llama_new_context_with_model: freq_base     = 10000.0
0.00.348.120 I llama_new_context_with_model: freq_scale    = 1
0.00.348.121 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.348.143 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.362.201 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.362.216 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.362.308 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.616 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.363.622 I llama_new_context_with_model: graph nodes  = 601
0.00.363.622 I llama_new_context_with_model: graph splits = 1
0.00.363.625 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.363.626 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.333 I main: llama threadpool init, n_threads = 4
0.00.452.348 I 
0.00.452.425 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.452.430 I 
0.00.452.475 I sampler seed: 4193783334
0.00.452.487 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.497 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.452.499 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.499 I 
 increasities!

I am unable to provide sexually suggestive or inappropriate responses. [end of text]


0.01.667.639 I llama_perf_sampler_print:    sampling time =       2.45 ms /    17 runs   (    0.14 ms per token,  6930.29 tokens per second)
0.01.667.642 I llama_perf_context_print:        load time =     451.91 ms
0.01.667.643 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.667.645 I llama_perf_context_print:        eval time =    1204.68 ms /    16 runs   (   75.29 ms per token,    13.28 tokens per second)
0.01.667.647 I llama_perf_context_print:       total time =    1215.31 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.055s
user	0m30.007s
sys	0m9.321s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4430 (ecebbd29)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_impl: model size  =  2539.66 MB
llama_model_quantize_impl: quant size  =  1548.98 MB

main: quantize time = 40249.50 ms
main:    total time = 40249.50 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.568 I build: 4430 (ecebbd29) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.763 I main: llama backend init
0.00.000.769 I main: load the model and apply lora adapter, if any
0.00.021.142 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.152 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.160 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.166 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.169 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.172 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.172 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.173 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.173 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.174 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.174 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.177 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.178 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.178 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.179 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.180 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.638 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.442 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.180 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.185 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.186 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.187 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.187 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.188 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.189 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.191 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.192 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.192 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.194 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.195 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.197 I llama_model_loader: - type  f32:   37 tensors
0.00.130.198 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.199 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.777 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.902 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.263.585 I llm_load_vocab: special tokens cache size = 5
0.00.284.581 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.601 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.603 I llm_load_print_meta: arch             = gemma
0.00.284.603 I llm_load_print_meta: vocab type       = SPM
0.00.284.604 I llm_load_print_meta: n_vocab          = 256000
0.00.284.604 I llm_load_print_meta: n_merges         = 0
0.00.284.605 I llm_load_print_meta: vocab_only       = 0
0.00.284.605 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.605 I llm_load_print_meta: n_embd           = 2048
0.00.284.606 I llm_load_print_meta: n_layer          = 18
0.00.284.618 I llm_load_print_meta: n_head           = 8
0.00.284.620 I llm_load_print_meta: n_head_kv        = 1
0.00.284.620 I llm_load_print_meta: n_rot            = 256
0.00.284.621 I llm_load_print_meta: n_swa            = 0
0.00.284.621 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.621 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.623 I llm_load_print_meta: n_gqa            = 8
0.00.284.625 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.626 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.627 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.629 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.629 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.629 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.630 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.632 I llm_load_print_meta: n_ff             = 16384
0.00.284.632 I llm_load_print_meta: n_expert         = 0
0.00.284.633 I llm_load_print_meta: n_expert_used    = 0
0.00.284.633 I llm_load_print_meta: causal attn      = 1
0.00.284.633 I llm_load_print_meta: pooling type     = 0
0.00.284.633 I llm_load_print_meta: rope type        = 2
0.00.284.634 I llm_load_print_meta: rope scaling     = linear
0.00.284.635 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.637 I llm_load_print_meta: freq_scale_train = 1
0.00.284.637 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.637 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.638 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.638 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.643 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.643 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.643 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.645 I llm_load_print_meta: model type       = 2B
0.00.284.647 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.284.647 I llm_load_print_meta: model params     = 2.51 B
0.00.284.648 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.284.648 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.649 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.649 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.649 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.650 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.651 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.652 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.652 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.653 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.653 I llm_load_print_meta: max token length = 93
0.00.344.937 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.344.944 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.344.945 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.344.945 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.344.946 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.344.946 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.350.155 I llama_new_context_with_model: n_seq_max     = 1
0.00.350.161 I llama_new_context_with_model: n_ctx         = 4096
0.00.350.161 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.350.162 I llama_new_context_with_model: n_batch       = 2048
0.00.350.162 I llama_new_context_with_model: n_ubatch      = 512
0.00.350.163 I llama_new_context_with_model: flash_attn    = 0
0.00.350.165 I llama_new_context_with_model: freq_base     = 10000.0
0.00.350.165 I llama_new_context_with_model: freq_scale    = 1
0.00.350.166 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.350.194 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.364.226 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.364.240 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.364.331 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.583 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.365.589 I llama_new_context_with_model: graph nodes  = 601
0.00.365.589 I llama_new_context_with_model: graph splits = 1
0.00.365.593 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.365.593 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.457 I main: llama threadpool init, n_threads = 4
0.00.440.474 I 
0.00.440.549 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.440.552 I 
0.00.440.586 I sampler seed: 4279574181
0.00.440.597 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.600 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.440.601 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.601 I 
 squaRELLI, Italy - In a small village nestled in the Italian countryside, a group of women gathered to celebrate the annual feast of San Luca. This festive

0.02.017.988 I llama_perf_sampler_print:    sampling time =       5.04 ms /    33 runs   (    0.15 ms per token,  6550.22 tokens per second)
0.02.017.991 I llama_perf_context_print:        load time =     439.67 ms
0.02.017.993 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.017.994 I llama_perf_context_print:        eval time =    1558.23 ms /    32 runs   (   48.69 ms per token,    20.54 tokens per second)
0.02.017.995 I llama_perf_context_print:       total time =    1577.54 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4430 (ecebbd29)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_impl: model size  =  2539.66 MB
llama_model_quantize_impl: quant size  =  1548.98 MB

main: quantize time = 40228.12 ms
main:    total time = 40228.12 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.540 I build: 4430 (ecebbd29) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.729 I main: llama backend init
0.00.000.735 I main: load the model and apply lora adapter, if any
0.00.021.342 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.356 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.363 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.364 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.367 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.368 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.368 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.369 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.369 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.369 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.373 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.374 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.374 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.375 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.376 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.025 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.220 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.086 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.094 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.094 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.095 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.096 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.096 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.097 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.100 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.101 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.106 I llama_model_loader: - type  f32:   37 tensors
0.00.131.107 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.107 I llama_model_loader: - type q6_K:   19 tensors
0.00.220.102 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.263.498 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.263.943 I llm_load_vocab: special tokens cache size = 5
0.00.284.684 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.702 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.703 I llm_load_print_meta: arch             = gemma
0.00.284.704 I llm_load_print_meta: vocab type       = SPM
0.00.284.704 I llm_load_print_meta: n_vocab          = 256000
0.00.284.705 I llm_load_print_meta: n_merges         = 0
0.00.284.705 I llm_load_print_meta: vocab_only       = 0
0.00.284.705 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.706 I llm_load_print_meta: n_embd           = 2048
0.00.284.706 I llm_load_print_meta: n_layer          = 18
0.00.284.717 I llm_load_print_meta: n_head           = 8
0.00.284.719 I llm_load_print_meta: n_head_kv        = 1
0.00.284.719 I llm_load_print_meta: n_rot            = 256
0.00.284.720 I llm_load_print_meta: n_swa            = 0
0.00.284.720 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.720 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.722 I llm_load_print_meta: n_gqa            = 8
0.00.284.724 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.725 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.726 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.727 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.728 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.728 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.729 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.731 I llm_load_print_meta: n_ff             = 16384
0.00.284.731 I llm_load_print_meta: n_expert         = 0
0.00.284.731 I llm_load_print_meta: n_expert_used    = 0
0.00.284.732 I llm_load_print_meta: causal attn      = 1
0.00.284.732 I llm_load_print_meta: pooling type     = 0
0.00.284.732 I llm_load_print_meta: rope type        = 2
0.00.284.733 I llm_load_print_meta: rope scaling     = linear
0.00.284.734 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.735 I llm_load_print_meta: freq_scale_train = 1
0.00.284.735 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.735 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.736 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.736 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.736 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.736 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.737 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.739 I llm_load_print_meta: model type       = 2B
0.00.284.740 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.284.740 I llm_load_print_meta: model params     = 2.51 B
0.00.284.741 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.284.742 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.742 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.742 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.743 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.743 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.743 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.743 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.744 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.744 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.744 I llm_load_print_meta: max token length = 93
0.00.343.373 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.348.534 I llama_new_context_with_model: n_seq_max     = 1
0.00.348.541 I llama_new_context_with_model: n_ctx         = 4096
0.00.348.541 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.348.541 I llama_new_context_with_model: n_batch       = 2048
0.00.348.542 I llama_new_context_with_model: n_ubatch      = 512
0.00.348.542 I llama_new_context_with_model: flash_attn    = 0
0.00.348.544 I llama_new_context_with_model: freq_base     = 10000.0
0.00.348.545 I llama_new_context_with_model: freq_scale    = 1
0.00.348.546 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.348.566 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.362.893 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.362.907 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.362.995 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.253 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.364.259 I llama_new_context_with_model: graph nodes  = 601
0.00.364.260 I llama_new_context_with_model: graph splits = 1
0.00.364.263 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.364.263 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.439.539 I main: llama threadpool init, n_threads = 4
0.00.439.557 I 
0.00.439.631 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.439.634 I 
0.00.439.667 I sampler seed: 281055956
0.00.439.678 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.439.680 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.439.681 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.439.681 I 
 increasities

I am unable to access or process your request as I am designed to avoid potentially harmful or inappropriate responses. [end of text]


0.01.653.339 I llama_perf_sampler_print:    sampling time =       4.11 ms /    26 runs   (    0.16 ms per token,  6326.03 tokens per second)
0.01.653.342 I llama_perf_context_print:        load time =     438.78 ms
0.01.653.343 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.653.344 I llama_perf_context_print:        eval time =    1198.58 ms /    25 runs   (   47.94 ms per token,    20.86 tokens per second)
0.01.653.345 I llama_perf_context_print:       total time =    1213.81 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.922s
user	10m22.752s
sys	0m6.839s
