+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.683 I build: 4001 (1e9f9499) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.886 I main: llama backend init
0.00.002.832 I main: load the model and apply lora adapter, if any
0.00.027.544 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.027.555 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.027.655 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.667 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.669 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.675 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.681 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.682 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.683 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.684 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.685 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.692 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.693 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.694 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.695 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.696 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.565 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.010 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.132 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.141 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.142 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.143 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.144 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.145 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.153 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.158 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.160 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.161 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.163 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.164 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.173 I llama_model_loader: - type  f32:   37 tensors
0.00.268.183 I llama_model_loader: - type q8_0:  127 tensors
0.00.444.357 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.510.463 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.459 I llm_load_vocab: special tokens cache size = 5
0.00.605.835 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.605.901 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.605.902 I llm_load_print_meta: arch             = gemma
0.00.605.902 I llm_load_print_meta: vocab type       = SPM
0.00.605.903 I llm_load_print_meta: n_vocab          = 256000
0.00.605.913 I llm_load_print_meta: n_merges         = 0
0.00.605.914 I llm_load_print_meta: vocab_only       = 0
0.00.605.914 I llm_load_print_meta: n_ctx_train      = 8192
0.00.605.914 I llm_load_print_meta: n_embd           = 2048
0.00.605.915 I llm_load_print_meta: n_layer          = 18
0.00.605.976 I llm_load_print_meta: n_head           = 8
0.00.605.982 I llm_load_print_meta: n_head_kv        = 1
0.00.605.983 I llm_load_print_meta: n_rot            = 256
0.00.605.984 I llm_load_print_meta: n_swa            = 0
0.00.605.985 I llm_load_print_meta: n_embd_head_k    = 256
0.00.605.986 I llm_load_print_meta: n_embd_head_v    = 256
0.00.605.990 I llm_load_print_meta: n_gqa            = 8
0.00.605.995 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.606.000 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.606.004 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.606.006 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.606.006 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.606.006 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.606.007 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.606.012 I llm_load_print_meta: n_ff             = 16384
0.00.606.012 I llm_load_print_meta: n_expert         = 0
0.00.606.016 I llm_load_print_meta: n_expert_used    = 0
0.00.606.016 I llm_load_print_meta: causal attn      = 1
0.00.606.016 I llm_load_print_meta: pooling type     = 0
0.00.606.017 I llm_load_print_meta: rope type        = 2
0.00.606.017 I llm_load_print_meta: rope scaling     = linear
0.00.606.019 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.606.019 I llm_load_print_meta: freq_scale_train = 1
0.00.606.020 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.606.020 I llm_load_print_meta: rope_finetuned   = unknown
0.00.606.020 I llm_load_print_meta: ssm_d_conv       = 0
0.00.606.020 I llm_load_print_meta: ssm_d_inner      = 0
0.00.606.021 I llm_load_print_meta: ssm_d_state      = 0
0.00.606.021 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.606.021 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.606.022 I llm_load_print_meta: model type       = 2B
0.00.606.023 I llm_load_print_meta: model ftype      = Q8_0
0.00.606.024 I llm_load_print_meta: model params     = 2.51 B
0.00.606.025 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.606.025 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.606.026 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.606.026 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.606.027 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.606.027 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.606.028 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.606.028 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.606.034 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.606.035 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.606.035 I llm_load_print_meta: max token length = 93
0.00.708.424 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.708.433 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.708.434 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.708.435 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.708.435 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.708.436 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.714.283 I llama_new_context_with_model: n_ctx      = 8192
0.00.714.290 I llama_new_context_with_model: n_batch    = 2048
0.00.714.290 I llama_new_context_with_model: n_ubatch   = 512
0.00.714.291 I llama_new_context_with_model: flash_attn = 0
0.00.714.293 I llama_new_context_with_model: freq_base  = 10000.0
0.00.714.294 I llama_new_context_with_model: freq_scale = 1
0.00.743.672 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.743.711 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.743.835 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.746.333 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.746.337 I llama_new_context_with_model: graph nodes  = 601
0.00.746.338 I llama_new_context_with_model: graph splits = 1
0.00.746.353 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.357.323 I main: llama threadpool init, n_threads = 4
0.01.357.335 I 
0.01.357.442 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.357.446 I 
0.01.357.677 I sampler seed: 996422300
0.01.357.689 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.357.697 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.357.697 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.357.698 I 
 increasities and anxieties around the future of work in the age of automation.

**Automation and its potential benefits:**

* Increased productivity and efficiency
* Job

0.14.818.791 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.77 tokens per second)
0.14.818.807 I llama_perf_context_print:        load time =    1354.36 ms
0.14.818.808 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.818.810 I llama_perf_context_print:        eval time =   13366.67 ms /    32 runs   (  417.71 ms per token,     2.39 tokens per second)
0.14.818.811 I llama_perf_context_print:       total time =   13461.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.619 I build: 4001 (1e9f9499) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.859 I main: llama backend init
0.00.002.829 I main: load the model and apply lora adapter, if any
0.00.025.043 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.147 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.162 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.167 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.173 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.175 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.177 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.179 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.181 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.183 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.192 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.197 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.199 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.200 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.202 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.304 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.683 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.665 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.674 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.675 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.676 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.677 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.679 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.680 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.684 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.685 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.686 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.687 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.266.688 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.696 I llama_model_loader: - type  f32:   37 tensors
0.00.266.699 I llama_model_loader: - type q8_0:  127 tensors
0.00.436.990 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.495.410 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.496.378 I llm_load_vocab: special tokens cache size = 5
0.00.594.411 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.594.481 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.594.482 I llm_load_print_meta: arch             = gemma
0.00.594.482 I llm_load_print_meta: vocab type       = SPM
0.00.594.483 I llm_load_print_meta: n_vocab          = 256000
0.00.594.493 I llm_load_print_meta: n_merges         = 0
0.00.594.493 I llm_load_print_meta: vocab_only       = 0
0.00.594.494 I llm_load_print_meta: n_ctx_train      = 8192
0.00.594.494 I llm_load_print_meta: n_embd           = 2048
0.00.594.495 I llm_load_print_meta: n_layer          = 18
0.00.594.562 I llm_load_print_meta: n_head           = 8
0.00.594.568 I llm_load_print_meta: n_head_kv        = 1
0.00.594.569 I llm_load_print_meta: n_rot            = 256
0.00.594.569 I llm_load_print_meta: n_swa            = 0
0.00.594.570 I llm_load_print_meta: n_embd_head_k    = 256
0.00.594.570 I llm_load_print_meta: n_embd_head_v    = 256
0.00.594.575 I llm_load_print_meta: n_gqa            = 8
0.00.594.583 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.594.590 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.594.592 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.594.594 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.594.595 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.594.596 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.594.597 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.594.604 I llm_load_print_meta: n_ff             = 16384
0.00.594.605 I llm_load_print_meta: n_expert         = 0
0.00.594.609 I llm_load_print_meta: n_expert_used    = 0
0.00.594.610 I llm_load_print_meta: causal attn      = 1
0.00.594.611 I llm_load_print_meta: pooling type     = 0
0.00.594.614 I llm_load_print_meta: rope type        = 2
0.00.594.615 I llm_load_print_meta: rope scaling     = linear
0.00.594.617 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.594.618 I llm_load_print_meta: freq_scale_train = 1
0.00.594.618 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.594.619 I llm_load_print_meta: rope_finetuned   = unknown
0.00.594.619 I llm_load_print_meta: ssm_d_conv       = 0
0.00.594.620 I llm_load_print_meta: ssm_d_inner      = 0
0.00.594.620 I llm_load_print_meta: ssm_d_state      = 0
0.00.594.620 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.594.621 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.594.622 I llm_load_print_meta: model type       = 2B
0.00.594.623 I llm_load_print_meta: model ftype      = Q8_0
0.00.594.624 I llm_load_print_meta: model params     = 2.51 B
0.00.594.626 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.594.626 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.594.627 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.594.628 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.594.637 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.594.638 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.594.640 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.594.641 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.594.649 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.594.651 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.594.652 I llm_load_print_meta: max token length = 93
0.00.693.523 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.699.708 I llama_new_context_with_model: n_ctx      = 8192
0.00.699.716 I llama_new_context_with_model: n_batch    = 2048
0.00.699.716 I llama_new_context_with_model: n_ubatch   = 512
0.00.699.716 I llama_new_context_with_model: flash_attn = 0
0.00.699.719 I llama_new_context_with_model: freq_base  = 10000.0
0.00.699.720 I llama_new_context_with_model: freq_scale = 1
0.00.729.788 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.729.831 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.729.955 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.732.478 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.732.482 I llama_new_context_with_model: graph nodes  = 601
0.00.732.482 I llama_new_context_with_model: graph splits = 1
0.00.732.499 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.345.926 I main: llama threadpool init, n_threads = 4
0.01.345.938 I 
0.01.346.049 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.346.053 I 
0.01.346.294 I sampler seed: 2272659894
0.01.346.308 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.346.316 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.346.317 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.346.317 I 
 increasities with the correct answer in parentheses.

1. The _______ is a complex social phenomenon in which individuals are interconnected through social ties and engage in repeated interactions

0.14.947.444 I llama_perf_sampler_print:    sampling time =      49.24 ms /    33 runs   (    1.49 ms per token,   670.13 tokens per second)
0.14.947.447 I llama_perf_context_print:        load time =    1342.99 ms
0.14.947.448 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.947.469 I llama_perf_context_print:        eval time =   13507.43 ms /    32 runs   (  422.11 ms per token,     2.37 tokens per second)
0.14.947.471 I llama_perf_context_print:       total time =   13601.53 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.615 I build: 4001 (1e9f9499) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.810 I main: llama backend init
0.00.002.759 I main: load the model and apply lora adapter, if any
0.00.025.030 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.041 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.126 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.136 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.138 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.141 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.142 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.143 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.145 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.146 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.154 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.161 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.162 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.171 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.173 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.174 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.491 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.074 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.262 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.269 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.270 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.271 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.272 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.273 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.274 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.278 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.279 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.280 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.281 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.265.282 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.290 I llama_model_loader: - type  f32:   37 tensors
0.00.265.292 I llama_model_loader: - type q8_0:  127 tensors
0.00.440.322 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.498.172 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.499.057 I llm_load_vocab: special tokens cache size = 5
0.00.593.225 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.593.293 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.593.294 I llm_load_print_meta: arch             = gemma
0.00.593.294 I llm_load_print_meta: vocab type       = SPM
0.00.593.295 I llm_load_print_meta: n_vocab          = 256000
0.00.593.306 I llm_load_print_meta: n_merges         = 0
0.00.593.306 I llm_load_print_meta: vocab_only       = 0
0.00.593.307 I llm_load_print_meta: n_ctx_train      = 8192
0.00.593.307 I llm_load_print_meta: n_embd           = 2048
0.00.593.308 I llm_load_print_meta: n_layer          = 18
0.00.593.370 I llm_load_print_meta: n_head           = 8
0.00.593.377 I llm_load_print_meta: n_head_kv        = 1
0.00.593.378 I llm_load_print_meta: n_rot            = 256
0.00.593.378 I llm_load_print_meta: n_swa            = 0
0.00.593.379 I llm_load_print_meta: n_embd_head_k    = 256
0.00.593.379 I llm_load_print_meta: n_embd_head_v    = 256
0.00.593.384 I llm_load_print_meta: n_gqa            = 8
0.00.593.409 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.593.417 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.593.419 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.593.420 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.593.421 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.593.421 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.593.428 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.593.434 I llm_load_print_meta: n_ff             = 16384
0.00.593.435 I llm_load_print_meta: n_expert         = 0
0.00.593.435 I llm_load_print_meta: n_expert_used    = 0
0.00.593.435 I llm_load_print_meta: causal attn      = 1
0.00.593.436 I llm_load_print_meta: pooling type     = 0
0.00.593.436 I llm_load_print_meta: rope type        = 2
0.00.593.437 I llm_load_print_meta: rope scaling     = linear
0.00.593.447 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.593.448 I llm_load_print_meta: freq_scale_train = 1
0.00.593.449 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.593.454 I llm_load_print_meta: rope_finetuned   = unknown
0.00.593.455 I llm_load_print_meta: ssm_d_conv       = 0
0.00.593.462 I llm_load_print_meta: ssm_d_inner      = 0
0.00.593.463 I llm_load_print_meta: ssm_d_state      = 0
0.00.593.463 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.593.464 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.593.464 I llm_load_print_meta: model type       = 2B
0.00.593.465 I llm_load_print_meta: model ftype      = Q8_0
0.00.593.466 I llm_load_print_meta: model params     = 2.51 B
0.00.593.467 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.593.468 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.593.469 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.593.469 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.593.470 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.593.470 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.593.471 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.593.471 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.593.478 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.593.480 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.593.481 I llm_load_print_meta: max token length = 93
0.00.679.236 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.679.246 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.679.247 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.679.248 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.679.248 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.679.249 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.685.102 I llama_new_context_with_model: n_ctx      = 8192
0.00.685.111 I llama_new_context_with_model: n_batch    = 2048
0.00.685.111 I llama_new_context_with_model: n_ubatch   = 512
0.00.685.112 I llama_new_context_with_model: flash_attn = 0
0.00.685.114 I llama_new_context_with_model: freq_base  = 10000.0
0.00.685.115 I llama_new_context_with_model: freq_scale = 1
0.00.715.355 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.715.395 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.715.522 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.718.123 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.718.127 I llama_new_context_with_model: graph nodes  = 601
0.00.718.128 I llama_new_context_with_model: graph splits = 1
0.00.718.144 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.330.327 I main: llama threadpool init, n_threads = 4
0.01.330.340 I 
0.01.330.445 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.330.449 I 
0.01.330.679 I sampler seed: 850974593
0.01.330.691 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.330.697 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.330.698 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.330.698 I 
 increably!

I am unable to generate the requested text due to safety concerns. [end of text]


0.08.890.301 I llama_perf_sampler_print:    sampling time =      27.68 ms /    19 runs   (    1.46 ms per token,   686.39 tokens per second)
0.08.890.317 I llama_perf_context_print:        load time =    1327.47 ms
0.08.890.319 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.890.321 I llama_perf_context_print:        eval time =    7506.20 ms /    18 runs   (  417.01 ms per token,     2.40 tokens per second)
0.08.890.322 I llama_perf_context_print:       total time =    7559.98 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.637 I build: 4001 (1e9f9499) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.839 I main: llama backend init
0.00.002.786 I main: load the model and apply lora adapter, if any
0.00.025.322 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.331 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.421 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.432 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.434 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.438 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.440 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.441 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.442 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.442 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.444 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.450 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.451 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.452 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.453 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.454 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.394 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.630 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.801 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.809 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.810 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.811 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.812 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.813 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.814 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.818 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.819 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.820 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.820 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.265.822 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.830 I llama_model_loader: - type  f32:   37 tensors
0.00.265.832 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.614 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.511.163 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.066 I llm_load_vocab: special tokens cache size = 5
0.00.605.881 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.605.949 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.605.950 I llm_load_print_meta: arch             = gemma
0.00.605.951 I llm_load_print_meta: vocab type       = SPM
0.00.605.952 I llm_load_print_meta: n_vocab          = 256000
0.00.605.962 I llm_load_print_meta: n_merges         = 0
0.00.605.962 I llm_load_print_meta: vocab_only       = 0
0.00.605.963 I llm_load_print_meta: n_ctx_train      = 8192
0.00.605.963 I llm_load_print_meta: n_embd           = 2048
0.00.605.964 I llm_load_print_meta: n_layer          = 18
0.00.606.027 I llm_load_print_meta: n_head           = 8
0.00.606.034 I llm_load_print_meta: n_head_kv        = 1
0.00.606.034 I llm_load_print_meta: n_rot            = 256
0.00.606.036 I llm_load_print_meta: n_swa            = 0
0.00.606.036 I llm_load_print_meta: n_embd_head_k    = 256
0.00.606.037 I llm_load_print_meta: n_embd_head_v    = 256
0.00.606.042 I llm_load_print_meta: n_gqa            = 8
0.00.606.047 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.606.052 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.606.053 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.606.055 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.606.055 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.606.056 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.606.056 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.606.062 I llm_load_print_meta: n_ff             = 16384
0.00.606.062 I llm_load_print_meta: n_expert         = 0
0.00.606.062 I llm_load_print_meta: n_expert_used    = 0
0.00.606.064 I llm_load_print_meta: causal attn      = 1
0.00.606.064 I llm_load_print_meta: pooling type     = 0
0.00.606.064 I llm_load_print_meta: rope type        = 2
0.00.606.065 I llm_load_print_meta: rope scaling     = linear
0.00.606.066 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.606.067 I llm_load_print_meta: freq_scale_train = 1
0.00.606.068 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.606.068 I llm_load_print_meta: rope_finetuned   = unknown
0.00.606.068 I llm_load_print_meta: ssm_d_conv       = 0
0.00.606.068 I llm_load_print_meta: ssm_d_inner      = 0
0.00.606.069 I llm_load_print_meta: ssm_d_state      = 0
0.00.606.069 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.606.070 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.606.071 I llm_load_print_meta: model type       = 2B
0.00.606.072 I llm_load_print_meta: model ftype      = Q8_0
0.00.606.073 I llm_load_print_meta: model params     = 2.51 B
0.00.606.082 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.606.083 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.606.086 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.606.087 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.606.088 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.606.089 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.606.089 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.606.090 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.606.095 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.606.097 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.606.097 I llm_load_print_meta: max token length = 93
0.00.678.686 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.678.697 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.684.481 I llama_new_context_with_model: n_ctx      = 8192
0.00.684.488 I llama_new_context_with_model: n_batch    = 2048
0.00.684.488 I llama_new_context_with_model: n_ubatch   = 512
0.00.684.488 I llama_new_context_with_model: flash_attn = 0
0.00.684.491 I llama_new_context_with_model: freq_base  = 10000.0
0.00.684.491 I llama_new_context_with_model: freq_scale = 1
0.00.713.538 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.713.578 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.713.698 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.716.130 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.716.135 I llama_new_context_with_model: graph nodes  = 601
0.00.716.135 I llama_new_context_with_model: graph splits = 1
0.00.716.150 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.327.039 I main: llama threadpool init, n_threads = 4
0.01.327.052 I 
0.01.327.163 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.327.166 I 
0.01.327.395 I sampler seed: 2773097646
0.01.327.408 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.327.416 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.327.416 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.327.417 I 
 increamically. 

I am a computer program. I am designed to generate creative and original text. My output is based on patterns and relationships found in vast

0.14.791.776 I llama_perf_sampler_print:    sampling time =      49.08 ms /    33 runs   (    1.49 ms per token,   672.32 tokens per second)
0.14.791.780 I llama_perf_context_print:        load time =    1324.16 ms
0.14.791.782 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.791.784 I llama_perf_context_print:        eval time =   13370.39 ms /    32 runs   (  417.82 ms per token,     2.39 tokens per second)
0.14.791.796 I llama_perf_context_print:       total time =   13464.75 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m3.120s
user	3m24.988s
sys	0m9.448s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4001 (1e9f9499)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199071.63 ms
main:    total time = 199071.63 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.635 I build: 4001 (1e9f9499) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.848 I main: llama backend init
0.00.002.814 I main: load the model and apply lora adapter, if any
0.00.025.332 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.343 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.433 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.445 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.446 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.450 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.452 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.453 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.454 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.455 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.457 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.463 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.465 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.466 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.468 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.469 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.658 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.172 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.361 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.369 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.370 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.371 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.372 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.374 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.375 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.378 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.379 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.380 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.381 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.382 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.391 I llama_model_loader: - type  f32:   37 tensors
0.00.267.393 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.394 I llama_model_loader: - type q6_K:   19 tensors
0.00.431.245 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.490.014 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.490.941 I llm_load_vocab: special tokens cache size = 5
0.00.585.203 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.585.273 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.585.274 I llm_load_print_meta: arch             = gemma
0.00.585.274 I llm_load_print_meta: vocab type       = SPM
0.00.585.275 I llm_load_print_meta: n_vocab          = 256000
0.00.585.285 I llm_load_print_meta: n_merges         = 0
0.00.585.286 I llm_load_print_meta: vocab_only       = 0
0.00.585.286 I llm_load_print_meta: n_ctx_train      = 8192
0.00.585.287 I llm_load_print_meta: n_embd           = 2048
0.00.585.287 I llm_load_print_meta: n_layer          = 18
0.00.585.351 I llm_load_print_meta: n_head           = 8
0.00.585.362 I llm_load_print_meta: n_head_kv        = 1
0.00.585.362 I llm_load_print_meta: n_rot            = 256
0.00.585.363 I llm_load_print_meta: n_swa            = 0
0.00.585.364 I llm_load_print_meta: n_embd_head_k    = 256
0.00.585.364 I llm_load_print_meta: n_embd_head_v    = 256
0.00.585.369 I llm_load_print_meta: n_gqa            = 8
0.00.585.374 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.585.379 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.585.381 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.585.382 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.585.383 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.585.383 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.585.384 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.585.390 I llm_load_print_meta: n_ff             = 16384
0.00.585.391 I llm_load_print_meta: n_expert         = 0
0.00.585.393 I llm_load_print_meta: n_expert_used    = 0
0.00.585.394 I llm_load_print_meta: causal attn      = 1
0.00.585.394 I llm_load_print_meta: pooling type     = 0
0.00.585.394 I llm_load_print_meta: rope type        = 2
0.00.585.395 I llm_load_print_meta: rope scaling     = linear
0.00.585.396 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.585.397 I llm_load_print_meta: freq_scale_train = 1
0.00.585.397 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.585.398 I llm_load_print_meta: rope_finetuned   = unknown
0.00.585.399 I llm_load_print_meta: ssm_d_conv       = 0
0.00.585.400 I llm_load_print_meta: ssm_d_inner      = 0
0.00.585.400 I llm_load_print_meta: ssm_d_state      = 0
0.00.585.400 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.585.409 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.585.421 I llm_load_print_meta: model type       = 2B
0.00.585.422 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.585.423 I llm_load_print_meta: model params     = 2.51 B
0.00.585.424 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.585.424 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.585.426 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.585.426 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.585.426 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.585.427 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.585.428 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.585.443 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.585.449 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.585.451 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.585.451 I llm_load_print_meta: max token length = 93
0.00.650.320 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.650.327 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.650.328 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.650.328 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.650.329 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.650.329 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.656.053 I llama_new_context_with_model: n_ctx      = 8192
0.00.656.060 I llama_new_context_with_model: n_batch    = 2048
0.00.656.060 I llama_new_context_with_model: n_ubatch   = 512
0.00.656.060 I llama_new_context_with_model: flash_attn = 0
0.00.656.062 I llama_new_context_with_model: freq_base  = 10000.0
0.00.656.063 I llama_new_context_with_model: freq_scale = 1
0.00.685.325 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.685.364 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.685.485 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.688.040 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.688.044 I llama_new_context_with_model: graph nodes  = 601
0.00.688.044 I llama_new_context_with_model: graph splits = 1
0.00.688.061 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.265.039 I main: llama threadpool init, n_threads = 4
0.01.265.054 I 
0.01.265.158 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.265.162 I 
0.01.265.392 I sampler seed: 715619246
0.01.265.404 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.265.414 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.265.414 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.265.417 I 
 increasities.  They are typically associated with a certain emotional state and can be used to explore themes of memory, identity, and self.

**Instructions:**

0.12.167.020 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.54 tokens per second)
0.12.167.024 I llama_perf_context_print:        load time =    1262.12 ms
0.12.167.037 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.167.039 I llama_perf_context_print:        eval time =   10807.58 ms /    32 runs   (  337.74 ms per token,     2.96 tokens per second)
0.12.167.040 I llama_perf_context_print:       total time =   10901.99 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4001 (1e9f9499)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198962.06 ms
main:    total time = 198962.06 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.650 I build: 4001 (1e9f9499) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.853 I main: llama backend init
0.00.002.816 I main: load the model and apply lora adapter, if any
0.00.025.481 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.591 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.606 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.610 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.614 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.617 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.619 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.622 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.624 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.626 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.633 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.639 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.640 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.642 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.643 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.372 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.318 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.488 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.496 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.497 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.498 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.499 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.500 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.501 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.505 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.506 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.514 I llama_model_loader: - type  f32:   37 tensors
0.00.265.516 I llama_model_loader: - type q4_K:  108 tensors
0.00.265.516 I llama_model_loader: - type q6_K:   19 tensors
0.00.453.978 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.516.671 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.517.629 I llm_load_vocab: special tokens cache size = 5
0.00.611.678 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.611.744 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.611.746 I llm_load_print_meta: arch             = gemma
0.00.611.746 I llm_load_print_meta: vocab type       = SPM
0.00.611.747 I llm_load_print_meta: n_vocab          = 256000
0.00.611.757 I llm_load_print_meta: n_merges         = 0
0.00.611.758 I llm_load_print_meta: vocab_only       = 0
0.00.611.758 I llm_load_print_meta: n_ctx_train      = 8192
0.00.611.759 I llm_load_print_meta: n_embd           = 2048
0.00.611.759 I llm_load_print_meta: n_layer          = 18
0.00.611.822 I llm_load_print_meta: n_head           = 8
0.00.611.829 I llm_load_print_meta: n_head_kv        = 1
0.00.611.829 I llm_load_print_meta: n_rot            = 256
0.00.611.830 I llm_load_print_meta: n_swa            = 0
0.00.611.831 I llm_load_print_meta: n_embd_head_k    = 256
0.00.611.831 I llm_load_print_meta: n_embd_head_v    = 256
0.00.611.836 I llm_load_print_meta: n_gqa            = 8
0.00.611.841 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.611.846 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.611.850 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.611.852 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.611.852 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.611.853 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.611.853 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.611.858 I llm_load_print_meta: n_ff             = 16384
0.00.611.860 I llm_load_print_meta: n_expert         = 0
0.00.611.861 I llm_load_print_meta: n_expert_used    = 0
0.00.611.861 I llm_load_print_meta: causal attn      = 1
0.00.611.880 I llm_load_print_meta: pooling type     = 0
0.00.611.881 I llm_load_print_meta: rope type        = 2
0.00.611.881 I llm_load_print_meta: rope scaling     = linear
0.00.611.883 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.611.883 I llm_load_print_meta: freq_scale_train = 1
0.00.611.884 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.611.884 I llm_load_print_meta: rope_finetuned   = unknown
0.00.611.884 I llm_load_print_meta: ssm_d_conv       = 0
0.00.611.885 I llm_load_print_meta: ssm_d_inner      = 0
0.00.611.886 I llm_load_print_meta: ssm_d_state      = 0
0.00.611.886 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.611.887 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.611.888 I llm_load_print_meta: model type       = 2B
0.00.611.889 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.611.890 I llm_load_print_meta: model params     = 2.51 B
0.00.611.891 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.611.891 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.611.892 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.611.895 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.611.896 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.611.896 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.611.897 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.611.897 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.611.903 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.611.905 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.611.905 I llm_load_print_meta: max token length = 93
0.00.674.417 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.680.345 I llama_new_context_with_model: n_ctx      = 8192
0.00.680.351 I llama_new_context_with_model: n_batch    = 2048
0.00.680.351 I llama_new_context_with_model: n_ubatch   = 512
0.00.680.352 I llama_new_context_with_model: flash_attn = 0
0.00.680.354 I llama_new_context_with_model: freq_base  = 10000.0
0.00.680.354 I llama_new_context_with_model: freq_scale = 1
0.00.709.560 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.709.600 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.709.719 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.712.226 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.712.231 I llama_new_context_with_model: graph nodes  = 601
0.00.712.231 I llama_new_context_with_model: graph splits = 1
0.00.712.246 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.290.566 I main: llama threadpool init, n_threads = 4
0.01.290.579 I 
0.01.290.696 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.290.702 I 
0.01.290.937 I sampler seed: 304237446
0.01.290.949 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.290.956 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.290.957 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.290.957 I 
 seconally.

The word "slowly" is used twice in the given text. Is it being used correctly? Explain.

**Incorrect usage:**

"

0.12.197.764 I llama_perf_sampler_print:    sampling time =      49.08 ms /    33 runs   (    1.49 ms per token,   672.37 tokens per second)
0.12.197.767 I llama_perf_context_print:        load time =    1287.65 ms
0.12.197.769 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.197.770 I llama_perf_context_print:        eval time =   10812.51 ms /    32 runs   (  337.89 ms per token,     2.96 tokens per second)
0.12.197.785 I llama_perf_context_print:       total time =   10907.21 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m5.679s
user	50m7.795s
sys	0m6.811s
