+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.509 I build: 4041 (2319126a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.706 I main: llama backend init
0.00.000.839 I main: load the model and apply lora adapter, if any
0.00.021.767 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.779 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.786 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.795 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.797 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.800 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.801 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.801 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.802 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.802 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.817 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.822 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.823 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.823 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.824 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.824 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.913 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.486 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.283 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.288 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.289 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.290 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.291 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.292 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.293 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.296 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.297 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.298 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.299 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.300 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.303 I llama_model_loader: - type  f32:   37 tensors
0.00.132.304 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.935 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.324 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.856 I llm_load_vocab: special tokens cache size = 5
0.00.262.560 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.575 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.576 I llm_load_print_meta: arch             = gemma
0.00.262.576 I llm_load_print_meta: vocab type       = SPM
0.00.262.577 I llm_load_print_meta: n_vocab          = 256000
0.00.262.577 I llm_load_print_meta: n_merges         = 0
0.00.262.577 I llm_load_print_meta: vocab_only       = 0
0.00.262.578 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.578 I llm_load_print_meta: n_embd           = 2048
0.00.262.578 I llm_load_print_meta: n_layer          = 18
0.00.262.589 I llm_load_print_meta: n_head           = 8
0.00.262.590 I llm_load_print_meta: n_head_kv        = 1
0.00.262.591 I llm_load_print_meta: n_rot            = 256
0.00.262.591 I llm_load_print_meta: n_swa            = 0
0.00.262.591 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.591 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.592 I llm_load_print_meta: n_gqa            = 8
0.00.262.593 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.594 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.595 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.597 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.601 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.601 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.602 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.603 I llm_load_print_meta: n_ff             = 16384
0.00.262.604 I llm_load_print_meta: n_expert         = 0
0.00.262.605 I llm_load_print_meta: n_expert_used    = 0
0.00.262.605 I llm_load_print_meta: causal attn      = 1
0.00.262.606 I llm_load_print_meta: pooling type     = 0
0.00.262.606 I llm_load_print_meta: rope type        = 2
0.00.262.607 I llm_load_print_meta: rope scaling     = linear
0.00.262.608 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.611 I llm_load_print_meta: freq_scale_train = 1
0.00.262.612 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.612 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.613 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.615 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.615 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.615 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.616 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.616 I llm_load_print_meta: model type       = 2B
0.00.262.617 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.618 I llm_load_print_meta: model params     = 2.51 B
0.00.262.619 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.620 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.620 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.621 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.621 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.622 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.622 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.623 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.623 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.623 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.625 I llm_load_print_meta: max token length = 93
0.00.363.728 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.363.735 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.363.736 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.363.737 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.363.737 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.363.738 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.369.063 I llama_new_context_with_model: n_seq_max     = 1
0.00.369.069 I llama_new_context_with_model: n_ctx         = 4096
0.00.369.069 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.369.070 I llama_new_context_with_model: n_batch       = 2048
0.00.369.070 I llama_new_context_with_model: n_ubatch      = 512
0.00.369.071 I llama_new_context_with_model: flash_attn    = 0
0.00.369.074 I llama_new_context_with_model: freq_base     = 10000.0
0.00.369.075 I llama_new_context_with_model: freq_scale    = 1
0.00.369.076 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.384.617 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.384.632 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.384.729 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.385.982 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.385.986 I llama_new_context_with_model: graph nodes  = 601
0.00.385.987 I llama_new_context_with_model: graph splits = 1
0.00.385.988 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.477 I main: llama threadpool init, n_threads = 4
0.00.472.492 I 
0.00.472.569 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.573 I 
0.00.472.616 I sampler seed: 3044952516
0.00.472.626 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.472.632 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.472.632 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.472.632 I 
 increasities
The given text contains a reference to "reciprocal admiration". I am unable to understand the context of this phrase and its relation to the text

0.02.748.880 I llama_perf_sampler_print:    sampling time =       4.64 ms /    33 runs   (    0.14 ms per token,  7112.07 tokens per second)
0.02.748.883 I llama_perf_context_print:        load time =     471.62 ms
0.02.748.885 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.748.886 I llama_perf_context_print:        eval time =    2258.06 ms /    32 runs   (   70.56 ms per token,    14.17 tokens per second)
0.02.748.887 I llama_perf_context_print:       total time =    2276.41 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.602 I build: 4041 (2319126a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.000.932 I main: load the model and apply lora adapter, if any
0.00.021.700 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.716 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.723 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.725 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.729 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.730 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.732 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.732 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.733 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.733 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.739 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.739 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.740 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.740 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.741 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.513 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.388 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.168 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.174 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.174 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.175 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.175 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.176 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.177 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.179 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.180 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.180 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.182 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.183 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.186 I llama_model_loader: - type  f32:   37 tensors
0.00.132.187 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.989 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.152 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.238.626 I llm_load_vocab: special tokens cache size = 5
0.00.259.229 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.259.245 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.259.245 I llm_load_print_meta: arch             = gemma
0.00.259.246 I llm_load_print_meta: vocab type       = SPM
0.00.259.246 I llm_load_print_meta: n_vocab          = 256000
0.00.259.247 I llm_load_print_meta: n_merges         = 0
0.00.259.247 I llm_load_print_meta: vocab_only       = 0
0.00.259.247 I llm_load_print_meta: n_ctx_train      = 8192
0.00.259.248 I llm_load_print_meta: n_embd           = 2048
0.00.259.248 I llm_load_print_meta: n_layer          = 18
0.00.259.258 I llm_load_print_meta: n_head           = 8
0.00.259.259 I llm_load_print_meta: n_head_kv        = 1
0.00.259.260 I llm_load_print_meta: n_rot            = 256
0.00.259.260 I llm_load_print_meta: n_swa            = 0
0.00.259.260 I llm_load_print_meta: n_embd_head_k    = 256
0.00.259.261 I llm_load_print_meta: n_embd_head_v    = 256
0.00.259.262 I llm_load_print_meta: n_gqa            = 8
0.00.259.263 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.259.264 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.259.265 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.259.266 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.259.266 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.259.266 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.259.267 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.259.268 I llm_load_print_meta: n_ff             = 16384
0.00.259.268 I llm_load_print_meta: n_expert         = 0
0.00.259.268 I llm_load_print_meta: n_expert_used    = 0
0.00.259.268 I llm_load_print_meta: causal attn      = 1
0.00.259.269 I llm_load_print_meta: pooling type     = 0
0.00.259.269 I llm_load_print_meta: rope type        = 2
0.00.259.269 I llm_load_print_meta: rope scaling     = linear
0.00.259.271 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.259.271 I llm_load_print_meta: freq_scale_train = 1
0.00.259.272 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.259.272 I llm_load_print_meta: rope_finetuned   = unknown
0.00.259.272 I llm_load_print_meta: ssm_d_conv       = 0
0.00.259.273 I llm_load_print_meta: ssm_d_inner      = 0
0.00.259.273 I llm_load_print_meta: ssm_d_state      = 0
0.00.259.273 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.259.273 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.259.274 I llm_load_print_meta: model type       = 2B
0.00.259.274 I llm_load_print_meta: model ftype      = Q8_0
0.00.259.275 I llm_load_print_meta: model params     = 2.51 B
0.00.259.276 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.259.276 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.259.277 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.259.277 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.259.278 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.259.278 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.259.278 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.259.279 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.259.279 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.259.279 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.259.280 I llm_load_print_meta: max token length = 93
0.00.356.940 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.362.093 I llama_new_context_with_model: n_seq_max     = 1
0.00.362.100 I llama_new_context_with_model: n_ctx         = 4096
0.00.362.101 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.362.101 I llama_new_context_with_model: n_batch       = 2048
0.00.362.102 I llama_new_context_with_model: n_ubatch      = 512
0.00.362.102 I llama_new_context_with_model: flash_attn    = 0
0.00.362.104 I llama_new_context_with_model: freq_base     = 10000.0
0.00.362.105 I llama_new_context_with_model: freq_scale    = 1
0.00.362.106 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.377.227 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.377.242 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.377.329 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.522 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.378.529 I llama_new_context_with_model: graph nodes  = 601
0.00.378.529 I llama_new_context_with_model: graph splits = 1
0.00.378.531 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.459.983 I main: llama threadpool init, n_threads = 4
0.00.459.995 I 
0.00.460.072 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.075 I 
0.00.460.114 I sampler seed: 2124901899
0.00.460.125 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.129 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.129 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.131 I 
 increably.

I am unable to locate the requested information in the provided context. Please check your search parameters and try again. [end of text]


0.02.347.995 I llama_perf_sampler_print:    sampling time =       3.90 ms /    28 runs   (    0.14 ms per token,  7177.65 tokens per second)
0.02.347.998 I llama_perf_context_print:        load time =     459.03 ms
0.02.347.999 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.348.001 I llama_perf_context_print:        eval time =    1871.80 ms /    27 runs   (   69.33 ms per token,    14.42 tokens per second)
0.02.348.003 I llama_perf_context_print:       total time =    1888.02 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.542 I build: 4041 (2319126a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.754 I main: llama backend init
0.00.000.897 I main: load the model and apply lora adapter, if any
0.00.021.892 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.903 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.911 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.916 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.917 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.923 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.924 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.924 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.925 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.926 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.927 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.932 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.933 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.934 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.935 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.936 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.740 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.482 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.307 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.313 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.314 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.314 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.315 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.316 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.317 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.319 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.319 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.320 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.320 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.322 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.325 I llama_model_loader: - type  f32:   37 tensors
0.00.132.326 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.913 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.366 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.933 I llm_load_vocab: special tokens cache size = 5
0.00.265.433 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.447 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.448 I llm_load_print_meta: arch             = gemma
0.00.265.448 I llm_load_print_meta: vocab type       = SPM
0.00.265.449 I llm_load_print_meta: n_vocab          = 256000
0.00.265.450 I llm_load_print_meta: n_merges         = 0
0.00.265.450 I llm_load_print_meta: vocab_only       = 0
0.00.265.451 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.451 I llm_load_print_meta: n_embd           = 2048
0.00.265.451 I llm_load_print_meta: n_layer          = 18
0.00.265.462 I llm_load_print_meta: n_head           = 8
0.00.265.463 I llm_load_print_meta: n_head_kv        = 1
0.00.265.463 I llm_load_print_meta: n_rot            = 256
0.00.265.464 I llm_load_print_meta: n_swa            = 0
0.00.265.464 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.464 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.465 I llm_load_print_meta: n_gqa            = 8
0.00.265.466 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.467 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.468 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.470 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.470 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.470 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.471 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.472 I llm_load_print_meta: n_ff             = 16384
0.00.265.472 I llm_load_print_meta: n_expert         = 0
0.00.265.472 I llm_load_print_meta: n_expert_used    = 0
0.00.265.473 I llm_load_print_meta: causal attn      = 1
0.00.265.473 I llm_load_print_meta: pooling type     = 0
0.00.265.473 I llm_load_print_meta: rope type        = 2
0.00.265.474 I llm_load_print_meta: rope scaling     = linear
0.00.265.475 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.476 I llm_load_print_meta: freq_scale_train = 1
0.00.265.476 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.476 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.477 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.477 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.477 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.477 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.478 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.478 I llm_load_print_meta: model type       = 2B
0.00.265.479 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.480 I llm_load_print_meta: model params     = 2.51 B
0.00.265.481 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.481 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.482 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.482 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.482 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.483 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.483 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.483 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.484 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.484 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.484 I llm_load_print_meta: max token length = 93
0.00.354.572 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.354.579 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.354.580 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.354.580 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.354.581 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.354.581 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.359.852 I llama_new_context_with_model: n_seq_max     = 1
0.00.359.858 I llama_new_context_with_model: n_ctx         = 4096
0.00.359.858 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.359.858 I llama_new_context_with_model: n_batch       = 2048
0.00.359.859 I llama_new_context_with_model: n_ubatch      = 512
0.00.359.859 I llama_new_context_with_model: flash_attn    = 0
0.00.359.862 I llama_new_context_with_model: freq_base     = 10000.0
0.00.359.862 I llama_new_context_with_model: freq_scale    = 1
0.00.359.863 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.375.216 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.375.231 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.375.330 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.591 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.376.598 I llama_new_context_with_model: graph nodes  = 601
0.00.376.599 I llama_new_context_with_model: graph splits = 1
0.00.376.600 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.606 I main: llama threadpool init, n_threads = 4
0.00.464.621 I 
0.00.464.705 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.709 I 
0.00.464.760 I sampler seed: 3322938105
0.00.464.772 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.775 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.775 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.776 I 
 seconary, and tertiary objectives of a research project.

**Objectives of a Research Project**

**Secondary Objectives:**

- Provide a comprehensive understanding of the

0.02.695.534 I llama_perf_sampler_print:    sampling time =       5.09 ms /    33 runs   (    0.15 ms per token,  6482.03 tokens per second)
0.02.695.538 I llama_perf_context_print:        load time =     463.69 ms
0.02.695.540 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.695.542 I llama_perf_context_print:        eval time =    2211.51 ms /    32 runs   (   69.11 ms per token,    14.47 tokens per second)
0.02.695.543 I llama_perf_context_print:       total time =    2230.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.544 I build: 4041 (2319126a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.000.882 I main: load the model and apply lora adapter, if any
0.00.021.294 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.303 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.311 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.316 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.317 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.321 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.321 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.322 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.322 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.323 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.323 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.329 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.329 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.330 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.330 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.331 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.075 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.056 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.861 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.868 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.869 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.870 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.871 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.872 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.873 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.876 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.877 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.878 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.879 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.880 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.883 I llama_model_loader: - type  f32:   37 tensors
0.00.131.885 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.363 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.819 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.391 I llm_load_vocab: special tokens cache size = 5
0.00.268.106 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.124 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.124 I llm_load_print_meta: arch             = gemma
0.00.268.125 I llm_load_print_meta: vocab type       = SPM
0.00.268.125 I llm_load_print_meta: n_vocab          = 256000
0.00.268.126 I llm_load_print_meta: n_merges         = 0
0.00.268.126 I llm_load_print_meta: vocab_only       = 0
0.00.268.126 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.127 I llm_load_print_meta: n_embd           = 2048
0.00.268.127 I llm_load_print_meta: n_layer          = 18
0.00.268.139 I llm_load_print_meta: n_head           = 8
0.00.268.140 I llm_load_print_meta: n_head_kv        = 1
0.00.268.141 I llm_load_print_meta: n_rot            = 256
0.00.268.141 I llm_load_print_meta: n_swa            = 0
0.00.268.141 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.141 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.143 I llm_load_print_meta: n_gqa            = 8
0.00.268.144 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.145 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.146 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.148 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.148 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.149 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.149 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.150 I llm_load_print_meta: n_ff             = 16384
0.00.268.150 I llm_load_print_meta: n_expert         = 0
0.00.268.151 I llm_load_print_meta: n_expert_used    = 0
0.00.268.151 I llm_load_print_meta: causal attn      = 1
0.00.268.151 I llm_load_print_meta: pooling type     = 0
0.00.268.152 I llm_load_print_meta: rope type        = 2
0.00.268.152 I llm_load_print_meta: rope scaling     = linear
0.00.268.153 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.154 I llm_load_print_meta: freq_scale_train = 1
0.00.268.154 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.154 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.155 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.156 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.156 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.156 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.156 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.157 I llm_load_print_meta: model type       = 2B
0.00.268.158 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.159 I llm_load_print_meta: model params     = 2.51 B
0.00.268.160 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.160 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.161 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.161 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.162 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.162 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.162 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.163 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.163 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.163 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.164 I llm_load_print_meta: max token length = 93
0.00.339.952 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.339.958 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.345.154 I llama_new_context_with_model: n_seq_max     = 1
0.00.345.160 I llama_new_context_with_model: n_ctx         = 4096
0.00.345.160 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.345.161 I llama_new_context_with_model: n_batch       = 2048
0.00.345.161 I llama_new_context_with_model: n_ubatch      = 512
0.00.345.161 I llama_new_context_with_model: flash_attn    = 0
0.00.345.164 I llama_new_context_with_model: freq_base     = 10000.0
0.00.345.165 I llama_new_context_with_model: freq_scale    = 1
0.00.345.166 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.360.266 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.360.280 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.360.369 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.361.587 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.361.593 I llama_new_context_with_model: graph nodes  = 601
0.00.361.593 I llama_new_context_with_model: graph splits = 1
0.00.361.595 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.695 I main: llama threadpool init, n_threads = 4
0.00.450.709 I 
0.00.450.788 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.791 I 
0.00.450.831 I sampler seed: 1405290151
0.00.450.842 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.849 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.450.849 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.849 I 
 increably.

**Explanation:**

The sentence is unacceptable because it contains incorrect grammar and spelling. The word " increably" is misspelled, and the sentence

0.02.869.510 I llama_perf_sampler_print:    sampling time =       4.79 ms /    33 runs   (    0.15 ms per token,  6883.60 tokens per second)
0.02.869.512 I llama_perf_context_print:        load time =     449.79 ms
0.02.869.513 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.869.515 I llama_perf_context_print:        eval time =    2399.47 ms /    32 runs   (   74.98 ms per token,    13.34 tokens per second)
0.02.869.516 I llama_perf_context_print:       total time =    2418.82 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.175s
user	0m38.067s
sys	0m9.449s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4041 (2319126a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32111.91 ms
main:    total time = 32111.91 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.544 I build: 4041 (2319126a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.000.872 I main: load the model and apply lora adapter, if any
0.00.021.792 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.802 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.810 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.816 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.817 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.821 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.824 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.824 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.825 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.825 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.826 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.829 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.829 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.830 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.831 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.831 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.564 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.746 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.598 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.605 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.605 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.606 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.607 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.607 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.608 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.610 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.611 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.612 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.613 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.613 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.617 I llama_model_loader: - type  f32:   37 tensors
0.00.132.618 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.618 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.390 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.431 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.941 I llm_load_vocab: special tokens cache size = 5
0.00.263.643 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.659 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.659 I llm_load_print_meta: arch             = gemma
0.00.263.660 I llm_load_print_meta: vocab type       = SPM
0.00.263.662 I llm_load_print_meta: n_vocab          = 256000
0.00.263.663 I llm_load_print_meta: n_merges         = 0
0.00.263.663 I llm_load_print_meta: vocab_only       = 0
0.00.263.663 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.664 I llm_load_print_meta: n_embd           = 2048
0.00.263.664 I llm_load_print_meta: n_layer          = 18
0.00.263.674 I llm_load_print_meta: n_head           = 8
0.00.263.676 I llm_load_print_meta: n_head_kv        = 1
0.00.263.676 I llm_load_print_meta: n_rot            = 256
0.00.263.677 I llm_load_print_meta: n_swa            = 0
0.00.263.677 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.678 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.679 I llm_load_print_meta: n_gqa            = 8
0.00.263.681 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.682 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.683 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.686 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.686 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.687 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.688 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.690 I llm_load_print_meta: n_ff             = 16384
0.00.263.690 I llm_load_print_meta: n_expert         = 0
0.00.263.691 I llm_load_print_meta: n_expert_used    = 0
0.00.263.691 I llm_load_print_meta: causal attn      = 1
0.00.263.692 I llm_load_print_meta: pooling type     = 0
0.00.263.692 I llm_load_print_meta: rope type        = 2
0.00.263.693 I llm_load_print_meta: rope scaling     = linear
0.00.263.695 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.695 I llm_load_print_meta: freq_scale_train = 1
0.00.263.696 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.697 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.697 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.698 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.699 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.699 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.700 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.701 I llm_load_print_meta: model type       = 2B
0.00.263.702 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.703 I llm_load_print_meta: model params     = 2.51 B
0.00.263.704 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.705 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.706 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.706 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.707 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.707 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.708 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.711 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.712 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.713 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.713 I llm_load_print_meta: max token length = 93
0.00.326.108 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.326.114 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.326.115 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.326.115 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.326.116 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.326.116 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.331.771 I llama_new_context_with_model: n_seq_max     = 1
0.00.331.778 I llama_new_context_with_model: n_ctx         = 4096
0.00.331.778 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.331.778 I llama_new_context_with_model: n_batch       = 2048
0.00.331.779 I llama_new_context_with_model: n_ubatch      = 512
0.00.331.779 I llama_new_context_with_model: flash_attn    = 0
0.00.331.781 I llama_new_context_with_model: freq_base     = 10000.0
0.00.331.782 I llama_new_context_with_model: freq_scale    = 1
0.00.331.783 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.346.763 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.346.778 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.346.880 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.348.162 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.348.169 I llama_new_context_with_model: graph nodes  = 601
0.00.348.170 I llama_new_context_with_model: graph splits = 1
0.00.348.171 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.424.869 I main: llama threadpool init, n_threads = 4
0.00.424.883 I 
0.00.424.971 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.424.974 I 
0.00.425.021 I sampler seed: 2479226441
0.00.425.032 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.036 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.425.038 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.039 I 
 increasities can be caused by various factors, including hormonal imbalances, stress, and certain medical conditions.

**Hormonal imbalances**

Hormonal imbalances can contribute

0.02.088.273 I llama_perf_sampler_print:    sampling time =       5.25 ms /    33 runs   (    0.16 ms per token,  6279.73 tokens per second)
0.02.088.276 I llama_perf_context_print:        load time =     423.98 ms
0.02.088.277 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.088.278 I llama_perf_context_print:        eval time =    1643.69 ms /    32 runs   (   51.37 ms per token,    19.47 tokens per second)
0.02.088.279 I llama_perf_context_print:       total time =    1663.41 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4041 (2319126a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32159.74 ms
main:    total time = 32159.74 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.603 I build: 4041 (2319126a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.821 I main: llama backend init
0.00.000.973 I main: load the model and apply lora adapter, if any
0.00.021.498 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.516 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.522 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.524 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.527 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.528 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.529 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.529 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.530 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.530 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.535 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.535 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.536 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.536 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.537 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.380 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.238 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.160 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.167 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.168 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.168 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.169 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.169 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.170 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.173 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.173 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.178 I llama_model_loader: - type  f32:   37 tensors
0.00.133.179 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.179 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.775 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.607 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.199 I llm_load_vocab: special tokens cache size = 5
0.00.271.846 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.863 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.863 I llm_load_print_meta: arch             = gemma
0.00.271.864 I llm_load_print_meta: vocab type       = SPM
0.00.271.865 I llm_load_print_meta: n_vocab          = 256000
0.00.271.865 I llm_load_print_meta: n_merges         = 0
0.00.271.866 I llm_load_print_meta: vocab_only       = 0
0.00.271.866 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.866 I llm_load_print_meta: n_embd           = 2048
0.00.271.867 I llm_load_print_meta: n_layer          = 18
0.00.271.878 I llm_load_print_meta: n_head           = 8
0.00.271.879 I llm_load_print_meta: n_head_kv        = 1
0.00.271.880 I llm_load_print_meta: n_rot            = 256
0.00.271.880 I llm_load_print_meta: n_swa            = 0
0.00.271.881 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.881 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.882 I llm_load_print_meta: n_gqa            = 8
0.00.271.883 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.884 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.885 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.886 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.887 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.887 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.888 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.888 I llm_load_print_meta: n_ff             = 16384
0.00.271.889 I llm_load_print_meta: n_expert         = 0
0.00.271.889 I llm_load_print_meta: n_expert_used    = 0
0.00.271.889 I llm_load_print_meta: causal attn      = 1
0.00.271.889 I llm_load_print_meta: pooling type     = 0
0.00.271.890 I llm_load_print_meta: rope type        = 2
0.00.271.890 I llm_load_print_meta: rope scaling     = linear
0.00.271.891 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.892 I llm_load_print_meta: freq_scale_train = 1
0.00.271.892 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.893 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.893 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.893 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.893 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.894 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.894 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.894 I llm_load_print_meta: model type       = 2B
0.00.271.895 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.896 I llm_load_print_meta: model params     = 2.51 B
0.00.271.897 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.897 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.898 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.898 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.899 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.899 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.899 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.899 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.900 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.900 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.901 I llm_load_print_meta: max token length = 93
0.00.332.481 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.337.614 I llama_new_context_with_model: n_seq_max     = 1
0.00.337.620 I llama_new_context_with_model: n_ctx         = 4096
0.00.337.620 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.337.621 I llama_new_context_with_model: n_batch       = 2048
0.00.337.621 I llama_new_context_with_model: n_ubatch      = 512
0.00.337.622 I llama_new_context_with_model: flash_attn    = 0
0.00.337.625 I llama_new_context_with_model: freq_base     = 10000.0
0.00.337.626 I llama_new_context_with_model: freq_scale    = 1
0.00.337.627 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.353.747 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.353.762 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.353.857 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.134 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.355.140 I llama_new_context_with_model: graph nodes  = 601
0.00.355.141 I llama_new_context_with_model: graph splits = 1
0.00.355.142 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.390 I main: llama threadpool init, n_threads = 4
0.00.431.405 I 
0.00.431.488 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.491 I 
0.00.431.539 I sampler seed: 3626827040
0.00.431.550 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.554 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.431.555 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.557 I 
 maneustalline coral reefs are a marvel of the underwater world, teeming with diverse marine life and offering breathtaking views of colorful coral formations.

**A. What is

0.02.103.766 I llama_perf_sampler_print:    sampling time =       4.86 ms /    33 runs   (    0.15 ms per token,  6792.92 tokens per second)
0.02.103.769 I llama_perf_context_print:        load time =     430.39 ms
0.02.103.770 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.103.771 I llama_perf_context_print:        eval time =    1653.04 ms /    32 runs   (   51.66 ms per token,    19.36 tokens per second)
0.02.103.772 I llama_perf_context_print:       total time =    1672.39 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.286s
user	8m15.192s
sys	0m6.879s
