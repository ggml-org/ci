+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.566 I build: 3957 (6b844735) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.865 I main: load the model and apply lora adapter, if any
0.00.022.035 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.083 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.090 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.094 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.095 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.098 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.099 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.100 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.100 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.101 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.101 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.104 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.105 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.106 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.106 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.106 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.176 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.194 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.054 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.059 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.060 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.061 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.061 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.062 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.063 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.065 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.065 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.066 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.067 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.068 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.071 I llama_model_loader: - type  f32:   37 tensors
0.00.133.074 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.352 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.409 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.014 I llm_load_vocab: special tokens cache size = 5
0.00.264.792 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.809 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.809 I llm_load_print_meta: arch             = gemma
0.00.264.810 I llm_load_print_meta: vocab type       = SPM
0.00.264.810 I llm_load_print_meta: n_vocab          = 256000
0.00.264.811 I llm_load_print_meta: n_merges         = 0
0.00.264.811 I llm_load_print_meta: vocab_only       = 0
0.00.264.811 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.812 I llm_load_print_meta: n_embd           = 2048
0.00.264.812 I llm_load_print_meta: n_layer          = 18
0.00.264.823 I llm_load_print_meta: n_head           = 8
0.00.264.825 I llm_load_print_meta: n_head_kv        = 1
0.00.264.825 I llm_load_print_meta: n_rot            = 256
0.00.264.825 I llm_load_print_meta: n_swa            = 0
0.00.264.826 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.826 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.827 I llm_load_print_meta: n_gqa            = 8
0.00.264.828 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.829 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.830 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.831 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.831 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.832 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.832 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.833 I llm_load_print_meta: n_ff             = 16384
0.00.264.833 I llm_load_print_meta: n_expert         = 0
0.00.264.834 I llm_load_print_meta: n_expert_used    = 0
0.00.264.834 I llm_load_print_meta: causal attn      = 1
0.00.264.834 I llm_load_print_meta: pooling type     = 0
0.00.264.835 I llm_load_print_meta: rope type        = 2
0.00.264.835 I llm_load_print_meta: rope scaling     = linear
0.00.264.836 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.837 I llm_load_print_meta: freq_scale_train = 1
0.00.264.838 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.838 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.838 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.838 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.839 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.839 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.839 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.840 I llm_load_print_meta: model type       = 2B
0.00.264.840 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.841 I llm_load_print_meta: model params     = 2.51 B
0.00.264.842 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.842 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.843 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.843 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.844 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.844 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.844 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.844 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.845 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.845 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.845 I llm_load_print_meta: max token length = 93
0.00.264.870 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.362.957 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.362.966 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.362.966 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.362.967 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.362.968 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.362.968 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.368.145 I llama_new_context_with_model: n_ctx      = 8192
0.00.368.151 I llama_new_context_with_model: n_batch    = 2048
0.00.368.152 I llama_new_context_with_model: n_ubatch   = 512
0.00.368.152 I llama_new_context_with_model: flash_attn = 0
0.00.368.155 I llama_new_context_with_model: freq_base  = 10000.0
0.00.368.156 I llama_new_context_with_model: freq_scale = 1
0.00.397.419 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.397.436 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.397.536 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.398.439 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.398.446 I llama_new_context_with_model: graph nodes  = 601
0.00.398.447 I llama_new_context_with_model: graph splits = 1
0.00.398.449 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.112 I main: llama threadpool init, n_threads = 4
0.00.489.127 I 
0.00.489.205 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.208 I 
0.00.489.246 I sampler seed: 2928149901
0.00.489.257 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.259 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.489.260 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.260 I 
 increasities, and complex scenes, which require a high degree of critical thinking, analysis, and interpretation. [end of text]


0.02.037.876 I llama_perf_sampler_print:    sampling time =       3.35 ms /    23 runs   (    0.15 ms per token,  6869.77 tokens per second)
0.02.037.879 I llama_perf_context_print:        load time =     487.23 ms
0.02.037.880 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.037.881 I llama_perf_context_print:        eval time =    1535.06 ms /    22 runs   (   69.78 ms per token,    14.33 tokens per second)
0.02.037.882 I llama_perf_context_print:       total time =    1548.77 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.568 I build: 3957 (6b844735) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.780 I main: llama backend init
0.00.001.901 I main: load the model and apply lora adapter, if any
0.00.021.836 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.849 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.856 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.857 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.861 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.864 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.865 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.865 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.866 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.867 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.872 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.873 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.874 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.875 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.875 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.705 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.452 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.292 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.298 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.299 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.299 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.300 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.301 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.301 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.304 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.304 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.305 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.306 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.306 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.309 I llama_model_loader: - type  f32:   37 tensors
0.00.133.312 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.764 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.641 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.175 I llm_load_vocab: special tokens cache size = 5
0.00.266.954 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.971 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.971 I llm_load_print_meta: arch             = gemma
0.00.266.972 I llm_load_print_meta: vocab type       = SPM
0.00.266.972 I llm_load_print_meta: n_vocab          = 256000
0.00.266.973 I llm_load_print_meta: n_merges         = 0
0.00.266.973 I llm_load_print_meta: vocab_only       = 0
0.00.266.973 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.974 I llm_load_print_meta: n_embd           = 2048
0.00.266.974 I llm_load_print_meta: n_layer          = 18
0.00.266.987 I llm_load_print_meta: n_head           = 8
0.00.266.988 I llm_load_print_meta: n_head_kv        = 1
0.00.266.988 I llm_load_print_meta: n_rot            = 256
0.00.266.989 I llm_load_print_meta: n_swa            = 0
0.00.266.989 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.989 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.990 I llm_load_print_meta: n_gqa            = 8
0.00.266.991 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.992 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.993 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.993 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.994 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.994 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.994 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.995 I llm_load_print_meta: n_ff             = 16384
0.00.266.996 I llm_load_print_meta: n_expert         = 0
0.00.266.996 I llm_load_print_meta: n_expert_used    = 0
0.00.266.996 I llm_load_print_meta: causal attn      = 1
0.00.266.997 I llm_load_print_meta: pooling type     = 0
0.00.266.997 I llm_load_print_meta: rope type        = 2
0.00.266.998 I llm_load_print_meta: rope scaling     = linear
0.00.266.999 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.999 I llm_load_print_meta: freq_scale_train = 1
0.00.267.000 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.000 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.000 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.001 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.001 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.001 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.001 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.002 I llm_load_print_meta: model type       = 2B
0.00.267.002 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.003 I llm_load_print_meta: model params     = 2.51 B
0.00.267.004 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.004 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.005 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.005 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.006 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.006 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.006 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.007 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.007 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.007 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.008 I llm_load_print_meta: max token length = 93
0.00.267.028 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.361.436 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.366.826 I llama_new_context_with_model: n_ctx      = 8192
0.00.366.833 I llama_new_context_with_model: n_batch    = 2048
0.00.366.833 I llama_new_context_with_model: n_ubatch   = 512
0.00.366.834 I llama_new_context_with_model: flash_attn = 0
0.00.366.836 I llama_new_context_with_model: freq_base  = 10000.0
0.00.366.837 I llama_new_context_with_model: freq_scale = 1
0.00.395.621 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.395.636 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.395.738 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.606 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.396.614 I llama_new_context_with_model: graph nodes  = 601
0.00.396.614 I llama_new_context_with_model: graph splits = 1
0.00.396.616 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.492 I main: llama threadpool init, n_threads = 4
0.00.483.505 I 
0.00.483.588 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.483.593 I 
0.00.483.642 I sampler seed: 3088195667
0.00.483.652 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.483.656 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.483.656 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.483.657 I 
 increasels, but she is unable to move.

What is the cause of this?

a) She is frozen.
b) She is paralyzed.

0.02.664.232 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6558.03 tokens per second)
0.02.664.234 I llama_perf_context_print:        load time =     481.57 ms
0.02.664.236 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.664.237 I llama_perf_context_print:        eval time =    2161.03 ms /    32 runs   (   67.53 ms per token,    14.81 tokens per second)
0.02.664.238 I llama_perf_context_print:       total time =    2180.75 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.536 I build: 3957 (6b844735) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.900 I main: load the model and apply lora adapter, if any
0.00.021.743 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.813 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.825 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.835 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.840 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.845 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.846 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.846 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.847 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.848 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.849 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.859 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.863 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.864 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.865 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.866 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.303 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.418 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.340 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.346 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.346 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.347 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.348 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.349 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.349 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.353 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.353 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.354 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.355 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.355 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.359 I llama_model_loader: - type  f32:   37 tensors
0.00.133.362 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.712 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.263.717 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.264.286 I llm_load_vocab: special tokens cache size = 5
0.00.285.222 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.285.240 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.285.241 I llm_load_print_meta: arch             = gemma
0.00.285.241 I llm_load_print_meta: vocab type       = SPM
0.00.285.242 I llm_load_print_meta: n_vocab          = 256000
0.00.285.243 I llm_load_print_meta: n_merges         = 0
0.00.285.243 I llm_load_print_meta: vocab_only       = 0
0.00.285.243 I llm_load_print_meta: n_ctx_train      = 8192
0.00.285.244 I llm_load_print_meta: n_embd           = 2048
0.00.285.244 I llm_load_print_meta: n_layer          = 18
0.00.285.257 I llm_load_print_meta: n_head           = 8
0.00.285.258 I llm_load_print_meta: n_head_kv        = 1
0.00.285.258 I llm_load_print_meta: n_rot            = 256
0.00.285.258 I llm_load_print_meta: n_swa            = 0
0.00.285.259 I llm_load_print_meta: n_embd_head_k    = 256
0.00.285.259 I llm_load_print_meta: n_embd_head_v    = 256
0.00.285.260 I llm_load_print_meta: n_gqa            = 8
0.00.285.261 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.285.262 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.285.263 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.285.265 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.285.266 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.285.266 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.285.267 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.285.268 I llm_load_print_meta: n_ff             = 16384
0.00.285.269 I llm_load_print_meta: n_expert         = 0
0.00.285.270 I llm_load_print_meta: n_expert_used    = 0
0.00.285.270 I llm_load_print_meta: causal attn      = 1
0.00.285.271 I llm_load_print_meta: pooling type     = 0
0.00.285.271 I llm_load_print_meta: rope type        = 2
0.00.285.272 I llm_load_print_meta: rope scaling     = linear
0.00.285.274 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.285.275 I llm_load_print_meta: freq_scale_train = 1
0.00.285.275 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.285.276 I llm_load_print_meta: rope_finetuned   = unknown
0.00.285.277 I llm_load_print_meta: ssm_d_conv       = 0
0.00.285.277 I llm_load_print_meta: ssm_d_inner      = 0
0.00.285.278 I llm_load_print_meta: ssm_d_state      = 0
0.00.285.279 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.285.279 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.285.280 I llm_load_print_meta: model type       = 2B
0.00.285.281 I llm_load_print_meta: model ftype      = Q8_0
0.00.285.282 I llm_load_print_meta: model params     = 2.51 B
0.00.285.284 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.285.284 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.285.285 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.285.285 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.285.286 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.285.287 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.285.287 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.285.288 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.285.289 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.285.289 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.285.290 I llm_load_print_meta: max token length = 93
0.00.285.314 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.362.531 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.362.539 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.362.540 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.362.541 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.362.541 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.362.542 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.367.655 I llama_new_context_with_model: n_ctx      = 8192
0.00.367.662 I llama_new_context_with_model: n_batch    = 2048
0.00.367.662 I llama_new_context_with_model: n_ubatch   = 512
0.00.367.663 I llama_new_context_with_model: flash_attn = 0
0.00.367.665 I llama_new_context_with_model: freq_base  = 10000.0
0.00.367.666 I llama_new_context_with_model: freq_scale = 1
0.00.397.460 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.397.475 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.397.583 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.398.510 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.398.519 I llama_new_context_with_model: graph nodes  = 601
0.00.398.519 I llama_new_context_with_model: graph splits = 1
0.00.398.521 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.166 I main: llama threadpool init, n_threads = 4
0.00.492.179 I 
0.00.492.274 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.492.277 I 
0.00.492.326 I sampler seed: 1457068543
0.00.492.336 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.341 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.492.342 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.342 I 
 increasities.

The passage is discussing what kind of wording or phrases might be used in a formal letter or email to express disapproval or disagreement.

The passage

0.02.773.139 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6564.55 tokens per second)
0.02.773.142 I llama_perf_context_print:        load time =     490.24 ms
0.02.773.144 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.773.147 I llama_perf_context_print:        eval time =    2260.62 ms /    32 runs   (   70.64 ms per token,    14.16 tokens per second)
0.02.773.148 I llama_perf_context_print:       total time =    2280.98 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.567 I build: 3957 (6b844735) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.847 I main: load the model and apply lora adapter, if any
0.00.023.654 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.701 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.712 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.718 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.718 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.722 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.723 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.723 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.724 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.725 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.726 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.730 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.731 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.732 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.732 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.733 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.181 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.132.594 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.139.459 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.139.466 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.139.467 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.139.467 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.139.468 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.139.469 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.139.469 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.139.472 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.139.473 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.139.474 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.139.474 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.139.475 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.139.479 I llama_model_loader: - type  f32:   37 tensors
0.00.139.481 I llama_model_loader: - type q8_0:  127 tensors
0.00.234.958 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.289.101 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.289.860 I llm_load_vocab: special tokens cache size = 5
0.00.311.006 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.311.025 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.311.025 I llm_load_print_meta: arch             = gemma
0.00.311.026 I llm_load_print_meta: vocab type       = SPM
0.00.311.026 I llm_load_print_meta: n_vocab          = 256000
0.00.311.027 I llm_load_print_meta: n_merges         = 0
0.00.311.027 I llm_load_print_meta: vocab_only       = 0
0.00.311.028 I llm_load_print_meta: n_ctx_train      = 8192
0.00.311.028 I llm_load_print_meta: n_embd           = 2048
0.00.311.028 I llm_load_print_meta: n_layer          = 18
0.00.311.041 I llm_load_print_meta: n_head           = 8
0.00.311.042 I llm_load_print_meta: n_head_kv        = 1
0.00.311.042 I llm_load_print_meta: n_rot            = 256
0.00.311.042 I llm_load_print_meta: n_swa            = 0
0.00.311.043 I llm_load_print_meta: n_embd_head_k    = 256
0.00.311.043 I llm_load_print_meta: n_embd_head_v    = 256
0.00.311.044 I llm_load_print_meta: n_gqa            = 8
0.00.311.045 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.311.046 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.311.046 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.311.048 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.311.048 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.311.048 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.311.048 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.311.049 I llm_load_print_meta: n_ff             = 16384
0.00.311.050 I llm_load_print_meta: n_expert         = 0
0.00.311.051 I llm_load_print_meta: n_expert_used    = 0
0.00.311.051 I llm_load_print_meta: causal attn      = 1
0.00.311.052 I llm_load_print_meta: pooling type     = 0
0.00.311.052 I llm_load_print_meta: rope type        = 2
0.00.311.052 I llm_load_print_meta: rope scaling     = linear
0.00.311.054 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.311.054 I llm_load_print_meta: freq_scale_train = 1
0.00.311.055 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.311.055 I llm_load_print_meta: rope_finetuned   = unknown
0.00.311.055 I llm_load_print_meta: ssm_d_conv       = 0
0.00.311.056 I llm_load_print_meta: ssm_d_inner      = 0
0.00.311.056 I llm_load_print_meta: ssm_d_state      = 0
0.00.311.057 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.311.058 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.311.058 I llm_load_print_meta: model type       = 2B
0.00.311.059 I llm_load_print_meta: model ftype      = Q8_0
0.00.311.060 I llm_load_print_meta: model params     = 2.51 B
0.00.311.061 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.311.062 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.311.063 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.311.063 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.311.064 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.311.064 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.311.064 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.311.065 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.311.065 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.311.066 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.311.066 I llm_load_print_meta: max token length = 93
0.00.311.087 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.381.347 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.381.354 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.386.507 I llama_new_context_with_model: n_ctx      = 8192
0.00.386.514 I llama_new_context_with_model: n_batch    = 2048
0.00.386.514 I llama_new_context_with_model: n_ubatch   = 512
0.00.386.515 I llama_new_context_with_model: flash_attn = 0
0.00.386.518 I llama_new_context_with_model: freq_base  = 10000.0
0.00.386.519 I llama_new_context_with_model: freq_scale = 1
0.00.417.278 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.417.294 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.417.388 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.418.235 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.418.243 I llama_new_context_with_model: graph nodes  = 601
0.00.418.243 I llama_new_context_with_model: graph splits = 1
0.00.418.245 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.513.684 I main: llama threadpool init, n_threads = 4
0.00.513.698 I 
0.00.513.776 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.513.779 I 
0.00.513.817 I sampler seed: 2539229287
0.00.513.827 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.513.830 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.513.831 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.513.831 I 
 increasities, and the complex interactions between the sexes are all aspects of the study of _____.

a) Biology
b) Anthropology
c) Sociology


0.02.936.854 I llama_perf_sampler_print:    sampling time =       5.15 ms /    33 runs   (    0.16 ms per token,  6402.79 tokens per second)
0.02.936.856 I llama_perf_context_print:        load time =     511.81 ms
0.02.936.857 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.936.859 I llama_perf_context_print:        eval time =    2402.96 ms /    32 runs   (   75.09 ms per token,    13.32 tokens per second)
0.02.936.859 I llama_perf_context_print:       total time =    2423.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.888s
user	0m36.705s
sys	0m9.385s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3957 (6b844735)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31989.42 ms
main:    total time = 31989.42 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.540 I build: 3957 (6b844735) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.021.798 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.847 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.855 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.862 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.863 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.868 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.869 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.870 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.870 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.871 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.871 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.875 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.876 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.876 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.877 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.878 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.152 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.538 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.400 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.406 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.407 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.408 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.408 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.409 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.410 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.413 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.413 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.414 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.415 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.415 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.419 I llama_model_loader: - type  f32:   37 tensors
0.00.133.422 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.422 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.704 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.751 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.480 I llm_load_vocab: special tokens cache size = 5
0.00.267.446 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.465 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.466 I llm_load_print_meta: arch             = gemma
0.00.267.467 I llm_load_print_meta: vocab type       = SPM
0.00.267.468 I llm_load_print_meta: n_vocab          = 256000
0.00.267.468 I llm_load_print_meta: n_merges         = 0
0.00.267.468 I llm_load_print_meta: vocab_only       = 0
0.00.267.469 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.469 I llm_load_print_meta: n_embd           = 2048
0.00.267.469 I llm_load_print_meta: n_layer          = 18
0.00.267.489 I llm_load_print_meta: n_head           = 8
0.00.267.490 I llm_load_print_meta: n_head_kv        = 1
0.00.267.490 I llm_load_print_meta: n_rot            = 256
0.00.267.491 I llm_load_print_meta: n_swa            = 0
0.00.267.491 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.491 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.492 I llm_load_print_meta: n_gqa            = 8
0.00.267.493 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.494 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.495 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.497 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.497 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.498 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.498 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.500 I llm_load_print_meta: n_ff             = 16384
0.00.267.501 I llm_load_print_meta: n_expert         = 0
0.00.267.502 I llm_load_print_meta: n_expert_used    = 0
0.00.267.502 I llm_load_print_meta: causal attn      = 1
0.00.267.502 I llm_load_print_meta: pooling type     = 0
0.00.267.503 I llm_load_print_meta: rope type        = 2
0.00.267.503 I llm_load_print_meta: rope scaling     = linear
0.00.267.505 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.506 I llm_load_print_meta: freq_scale_train = 1
0.00.267.507 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.507 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.507 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.507 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.508 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.508 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.509 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.509 I llm_load_print_meta: model type       = 2B
0.00.267.510 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.267.511 I llm_load_print_meta: model params     = 2.51 B
0.00.267.512 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.267.512 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.513 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.513 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.514 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.514 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.514 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.515 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.515 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.516 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.517 I llm_load_print_meta: max token length = 93
0.00.267.545 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.161 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.325.170 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.325.171 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.325.171 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.325.172 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.325.173 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.330.149 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.156 I llama_new_context_with_model: n_batch    = 2048
0.00.330.156 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.157 I llama_new_context_with_model: flash_attn = 0
0.00.330.159 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.160 I llama_new_context_with_model: freq_scale = 1
0.00.359.068 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.082 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.174 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.071 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.079 I llama_new_context_with_model: graph nodes  = 601
0.00.360.079 I llama_new_context_with_model: graph splits = 1
0.00.360.081 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.130 I main: llama threadpool init, n_threads = 4
0.00.441.144 I 
0.00.441.219 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.223 I 
0.00.441.261 I sampler seed: 2735988766
0.00.441.272 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.274 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.441.275 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.275 I 
 increasities. 

I cannot answer this question as it contains sexually suggestive content and is therefore not appropriate for me to provide responses. [end of text]


0.01.854.402 I llama_perf_sampler_print:    sampling time =       4.18 ms /    29 runs   (    0.14 ms per token,  6944.44 tokens per second)
0.01.854.404 I llama_perf_context_print:        load time =     439.24 ms
0.01.854.405 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.854.407 I llama_perf_context_print:        eval time =    1395.83 ms /    28 runs   (   49.85 ms per token,    20.06 tokens per second)
0.01.854.407 I llama_perf_context_print:       total time =    1413.28 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3957 (6b844735)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32071.65 ms
main:    total time = 32071.65 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.578 I build: 3957 (6b844735) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.773 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.022.295 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.313 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.324 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.327 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.332 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.333 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.334 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.334 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.335 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.335 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.343 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.345 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.345 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.346 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.347 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.586 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.079 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.987 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.994 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.995 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.996 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.997 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.998 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.999 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.003 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.003 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.007 I llama_model_loader: - type  f32:   37 tensors
0.00.134.011 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.011 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.962 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.954 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.539 I llm_load_vocab: special tokens cache size = 5
0.00.278.355 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.370 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.371 I llm_load_print_meta: arch             = gemma
0.00.278.371 I llm_load_print_meta: vocab type       = SPM
0.00.278.372 I llm_load_print_meta: n_vocab          = 256000
0.00.278.372 I llm_load_print_meta: n_merges         = 0
0.00.278.373 I llm_load_print_meta: vocab_only       = 0
0.00.278.373 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.373 I llm_load_print_meta: n_embd           = 2048
0.00.278.374 I llm_load_print_meta: n_layer          = 18
0.00.278.385 I llm_load_print_meta: n_head           = 8
0.00.278.386 I llm_load_print_meta: n_head_kv        = 1
0.00.278.387 I llm_load_print_meta: n_rot            = 256
0.00.278.387 I llm_load_print_meta: n_swa            = 0
0.00.278.388 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.388 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.389 I llm_load_print_meta: n_gqa            = 8
0.00.278.390 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.391 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.392 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.393 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.393 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.394 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.394 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.395 I llm_load_print_meta: n_ff             = 16384
0.00.278.395 I llm_load_print_meta: n_expert         = 0
0.00.278.395 I llm_load_print_meta: n_expert_used    = 0
0.00.278.396 I llm_load_print_meta: causal attn      = 1
0.00.278.396 I llm_load_print_meta: pooling type     = 0
0.00.278.396 I llm_load_print_meta: rope type        = 2
0.00.278.397 I llm_load_print_meta: rope scaling     = linear
0.00.278.398 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.399 I llm_load_print_meta: freq_scale_train = 1
0.00.278.399 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.399 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.400 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.400 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.400 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.400 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.401 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.401 I llm_load_print_meta: model type       = 2B
0.00.278.402 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.278.402 I llm_load_print_meta: model params     = 2.51 B
0.00.278.403 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.278.403 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.404 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.404 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.404 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.405 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.405 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.405 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.406 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.406 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.406 I llm_load_print_meta: max token length = 93
0.00.278.425 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.846 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.339.849 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.855 I llama_new_context_with_model: n_batch    = 2048
0.00.339.856 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.856 I llama_new_context_with_model: flash_attn = 0
0.00.339.859 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.860 I llama_new_context_with_model: freq_scale = 1
0.00.368.983 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.368.998 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.087 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.369.926 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.369.934 I llama_new_context_with_model: graph nodes  = 601
0.00.369.935 I llama_new_context_with_model: graph splits = 1
0.00.369.937 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.560 I main: llama threadpool init, n_threads = 4
0.00.450.574 I 
0.00.450.654 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.657 I 
0.00.450.700 I sampler seed: 3341454090
0.00.450.710 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.714 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.450.714 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.715 I 
 squaRED.

I am unable to provide a response as the prompt contains inappropriate content. [end of text]


0.01.396.274 I llama_perf_sampler_print:    sampling time =       2.84 ms /    20 runs   (    0.14 ms per token,  7049.70 tokens per second)
0.01.396.276 I llama_perf_context_print:        load time =     448.68 ms
0.01.396.277 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.396.279 I llama_perf_context_print:        eval time =     933.84 ms /    19 runs   (   49.15 ms per token,    20.35 tokens per second)
0.01.396.279 I llama_perf_context_print:       total time =     945.72 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.540s
user	8m11.102s
sys	0m7.178s
