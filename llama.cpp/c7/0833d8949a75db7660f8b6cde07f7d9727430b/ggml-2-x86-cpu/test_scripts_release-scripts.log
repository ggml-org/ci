+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.544 I build: 4164 (c70833d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.750 I main: llama backend init
0.00.000.757 I main: load the model and apply lora adapter, if any
0.00.021.576 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.587 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.594 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.600 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.601 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.605 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.607 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.607 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.609 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.610 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.611 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.615 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.616 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.617 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.618 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.619 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.989 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.796 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.635 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.641 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.642 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.643 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.643 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.644 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.645 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.647 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.648 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.648 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.649 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.651 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.654 I llama_model_loader: - type  f32:   37 tensors
0.00.130.655 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.502 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.438 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.967 I llm_load_vocab: special tokens cache size = 5
0.00.260.681 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.697 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.697 I llm_load_print_meta: arch             = gemma
0.00.260.698 I llm_load_print_meta: vocab type       = SPM
0.00.260.698 I llm_load_print_meta: n_vocab          = 256000
0.00.260.699 I llm_load_print_meta: n_merges         = 0
0.00.260.699 I llm_load_print_meta: vocab_only       = 0
0.00.260.699 I llm_load_print_meta: n_ctx_train      = 8192
0.00.260.700 I llm_load_print_meta: n_embd           = 2048
0.00.260.700 I llm_load_print_meta: n_layer          = 18
0.00.260.711 I llm_load_print_meta: n_head           = 8
0.00.260.712 I llm_load_print_meta: n_head_kv        = 1
0.00.260.712 I llm_load_print_meta: n_rot            = 256
0.00.260.712 I llm_load_print_meta: n_swa            = 0
0.00.260.713 I llm_load_print_meta: n_embd_head_k    = 256
0.00.260.713 I llm_load_print_meta: n_embd_head_v    = 256
0.00.260.714 I llm_load_print_meta: n_gqa            = 8
0.00.260.715 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.260.716 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.260.716 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.260.717 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.260.718 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.260.718 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.260.719 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.260.720 I llm_load_print_meta: n_ff             = 16384
0.00.260.720 I llm_load_print_meta: n_expert         = 0
0.00.260.720 I llm_load_print_meta: n_expert_used    = 0
0.00.260.720 I llm_load_print_meta: causal attn      = 1
0.00.260.721 I llm_load_print_meta: pooling type     = 0
0.00.260.721 I llm_load_print_meta: rope type        = 2
0.00.260.721 I llm_load_print_meta: rope scaling     = linear
0.00.260.722 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.260.723 I llm_load_print_meta: freq_scale_train = 1
0.00.260.723 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.260.724 I llm_load_print_meta: rope_finetuned   = unknown
0.00.260.724 I llm_load_print_meta: ssm_d_conv       = 0
0.00.260.724 I llm_load_print_meta: ssm_d_inner      = 0
0.00.260.724 I llm_load_print_meta: ssm_d_state      = 0
0.00.260.724 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.260.725 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.260.725 I llm_load_print_meta: model type       = 2B
0.00.260.726 I llm_load_print_meta: model ftype      = Q8_0
0.00.260.726 I llm_load_print_meta: model params     = 2.51 B
0.00.260.727 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.260.728 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.260.728 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.260.728 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.260.729 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.260.729 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.260.729 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.260.729 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.260.730 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.260.730 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.260.731 I llm_load_print_meta: max token length = 93
0.00.362.909 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.362.917 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.362.918 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.362.919 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.362.920 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.362.920 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.368.266 I llama_new_context_with_model: n_seq_max     = 1
0.00.368.273 I llama_new_context_with_model: n_ctx         = 4096
0.00.368.273 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.368.274 I llama_new_context_with_model: n_batch       = 2048
0.00.368.274 I llama_new_context_with_model: n_ubatch      = 512
0.00.368.275 I llama_new_context_with_model: flash_attn    = 0
0.00.368.277 I llama_new_context_with_model: freq_base     = 10000.0
0.00.368.278 I llama_new_context_with_model: freq_scale    = 1
0.00.368.279 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.382.954 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.382.969 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.383.062 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.359 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.365 I llama_new_context_with_model: graph nodes  = 601
0.00.384.366 I llama_new_context_with_model: graph splits = 1
0.00.384.368 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.767 I main: llama threadpool init, n_threads = 4
0.00.473.781 I 
0.00.473.861 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.865 I 
0.00.473.913 I sampler seed: 3500252056
0.00.473.923 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.932 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.473.933 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.933 I 
 increasities.
I cannot answer this question as it contains sexually suggestive content that is not appropriate for me to provide. [end of text]


0.02.228.555 I llama_perf_sampler_print:    sampling time =       3.85 ms /    26 runs   (    0.15 ms per token,  6758.51 tokens per second)
0.02.228.557 I llama_perf_context_print:        load time =     472.99 ms
0.02.228.558 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.228.559 I llama_perf_context_print:        eval time =    1739.50 ms /    25 runs   (   69.58 ms per token,    14.37 tokens per second)
0.02.228.560 I llama_perf_context_print:       total time =    1754.79 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.570 I build: 4164 (c70833d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.780 I main: llama backend init
0.00.000.788 I main: load the model and apply lora adapter, if any
0.00.020.927 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.020.941 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.948 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.949 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.957 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.962 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.963 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.964 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.965 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.965 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.970 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.972 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.973 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.974 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.975 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.519 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.411 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.310 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.319 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.320 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.320 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.321 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.322 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.323 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.326 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.326 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.327 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.328 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.329 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.334 I llama_model_loader: - type  f32:   37 tensors
0.00.130.335 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.247 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.237.223 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.237.684 I llm_load_vocab: special tokens cache size = 5
0.00.258.271 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.258.286 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.258.287 I llm_load_print_meta: arch             = gemma
0.00.258.287 I llm_load_print_meta: vocab type       = SPM
0.00.258.288 I llm_load_print_meta: n_vocab          = 256000
0.00.258.288 I llm_load_print_meta: n_merges         = 0
0.00.258.289 I llm_load_print_meta: vocab_only       = 0
0.00.258.289 I llm_load_print_meta: n_ctx_train      = 8192
0.00.258.289 I llm_load_print_meta: n_embd           = 2048
0.00.258.290 I llm_load_print_meta: n_layer          = 18
0.00.258.300 I llm_load_print_meta: n_head           = 8
0.00.258.301 I llm_load_print_meta: n_head_kv        = 1
0.00.258.301 I llm_load_print_meta: n_rot            = 256
0.00.258.302 I llm_load_print_meta: n_swa            = 0
0.00.258.302 I llm_load_print_meta: n_embd_head_k    = 256
0.00.258.302 I llm_load_print_meta: n_embd_head_v    = 256
0.00.258.303 I llm_load_print_meta: n_gqa            = 8
0.00.258.304 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.258.305 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.258.306 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.258.307 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.258.308 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.258.308 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.258.308 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.258.309 I llm_load_print_meta: n_ff             = 16384
0.00.258.310 I llm_load_print_meta: n_expert         = 0
0.00.258.310 I llm_load_print_meta: n_expert_used    = 0
0.00.258.311 I llm_load_print_meta: causal attn      = 1
0.00.258.311 I llm_load_print_meta: pooling type     = 0
0.00.258.311 I llm_load_print_meta: rope type        = 2
0.00.258.312 I llm_load_print_meta: rope scaling     = linear
0.00.258.313 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.258.313 I llm_load_print_meta: freq_scale_train = 1
0.00.258.313 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.258.314 I llm_load_print_meta: rope_finetuned   = unknown
0.00.258.314 I llm_load_print_meta: ssm_d_conv       = 0
0.00.258.314 I llm_load_print_meta: ssm_d_inner      = 0
0.00.258.315 I llm_load_print_meta: ssm_d_state      = 0
0.00.258.315 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.258.315 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.258.316 I llm_load_print_meta: model type       = 2B
0.00.258.316 I llm_load_print_meta: model ftype      = Q8_0
0.00.258.317 I llm_load_print_meta: model params     = 2.51 B
0.00.258.318 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.258.318 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.258.319 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.258.319 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.258.319 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.258.319 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.258.320 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.258.320 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.258.320 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.258.321 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.258.321 I llm_load_print_meta: max token length = 93
0.00.353.677 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.358.844 I llama_new_context_with_model: n_seq_max     = 1
0.00.358.851 I llama_new_context_with_model: n_ctx         = 4096
0.00.358.852 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.358.852 I llama_new_context_with_model: n_batch       = 2048
0.00.358.852 I llama_new_context_with_model: n_ubatch      = 512
0.00.358.853 I llama_new_context_with_model: flash_attn    = 0
0.00.358.855 I llama_new_context_with_model: freq_base     = 10000.0
0.00.358.856 I llama_new_context_with_model: freq_scale    = 1
0.00.358.857 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.373.577 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.373.592 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.373.693 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.948 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.374.954 I llama_new_context_with_model: graph nodes  = 601
0.00.374.954 I llama_new_context_with_model: graph splits = 1
0.00.374.956 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.455.206 I main: llama threadpool init, n_threads = 4
0.00.455.220 I 
0.00.455.294 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.455.294 I 
0.00.455.339 I sampler seed: 3883676956
0.00.455.348 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.350 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.455.351 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.351 I 
 increasities and the various mechanisms involved in their suppression.

**Keywords:** Crescendo, Decrescendo, Suppression, Mechanisms

**Definition:** Crescendo and

0.02.604.554 I llama_perf_sampler_print:    sampling time =       5.09 ms /    33 runs   (    0.15 ms per token,  6484.57 tokens per second)
0.02.604.557 I llama_perf_context_print:        load time =     454.40 ms
0.02.604.558 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.604.560 I llama_perf_context_print:        eval time =    2129.99 ms /    32 runs   (   66.56 ms per token,    15.02 tokens per second)
0.02.604.561 I llama_perf_context_print:       total time =    2149.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.557 I build: 4164 (c70833d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.788 I main: llama backend init
0.00.000.795 I main: load the model and apply lora adapter, if any
0.00.021.388 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.399 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.406 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.417 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.422 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.427 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.429 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.430 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.431 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.432 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.433 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.438 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.439 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.440 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.441 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.442 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.163 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.305 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.144 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.151 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.152 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.152 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.153 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.154 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.154 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.156 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.157 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.158 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.158 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.159 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.163 I llama_model_loader: - type  f32:   37 tensors
0.00.131.165 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.650 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.576 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.112 I llm_load_vocab: special tokens cache size = 5
0.00.263.856 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.872 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.873 I llm_load_print_meta: arch             = gemma
0.00.263.873 I llm_load_print_meta: vocab type       = SPM
0.00.263.874 I llm_load_print_meta: n_vocab          = 256000
0.00.263.874 I llm_load_print_meta: n_merges         = 0
0.00.263.874 I llm_load_print_meta: vocab_only       = 0
0.00.263.875 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.875 I llm_load_print_meta: n_embd           = 2048
0.00.263.876 I llm_load_print_meta: n_layer          = 18
0.00.263.885 I llm_load_print_meta: n_head           = 8
0.00.263.886 I llm_load_print_meta: n_head_kv        = 1
0.00.263.886 I llm_load_print_meta: n_rot            = 256
0.00.263.886 I llm_load_print_meta: n_swa            = 0
0.00.263.887 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.887 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.888 I llm_load_print_meta: n_gqa            = 8
0.00.263.889 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.890 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.890 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.891 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.892 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.892 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.893 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.893 I llm_load_print_meta: n_ff             = 16384
0.00.263.894 I llm_load_print_meta: n_expert         = 0
0.00.263.894 I llm_load_print_meta: n_expert_used    = 0
0.00.263.894 I llm_load_print_meta: causal attn      = 1
0.00.263.895 I llm_load_print_meta: pooling type     = 0
0.00.263.895 I llm_load_print_meta: rope type        = 2
0.00.263.895 I llm_load_print_meta: rope scaling     = linear
0.00.263.897 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.897 I llm_load_print_meta: freq_scale_train = 1
0.00.263.898 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.898 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.898 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.899 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.899 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.899 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.899 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.900 I llm_load_print_meta: model type       = 2B
0.00.263.900 I llm_load_print_meta: model ftype      = Q8_0
0.00.263.901 I llm_load_print_meta: model params     = 2.51 B
0.00.263.902 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.263.902 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.903 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.903 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.903 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.904 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.904 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.904 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.905 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.905 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.906 I llm_load_print_meta: max token length = 93
0.00.337.183 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.337.190 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.337.191 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.337.191 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.337.192 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.337.192 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.342.483 I llama_new_context_with_model: n_seq_max     = 1
0.00.342.489 I llama_new_context_with_model: n_ctx         = 4096
0.00.342.489 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.342.490 I llama_new_context_with_model: n_batch       = 2048
0.00.342.490 I llama_new_context_with_model: n_ubatch      = 512
0.00.342.491 I llama_new_context_with_model: flash_attn    = 0
0.00.342.493 I llama_new_context_with_model: freq_base     = 10000.0
0.00.342.494 I llama_new_context_with_model: freq_scale    = 1
0.00.342.495 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.357.058 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.357.072 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.357.175 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.508 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.358.513 I llama_new_context_with_model: graph nodes  = 601
0.00.358.513 I llama_new_context_with_model: graph splits = 1
0.00.358.515 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.902 I main: llama threadpool init, n_threads = 4
0.00.442.917 I 
0.00.443.001 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.443.004 I 
0.00.443.049 I sampler seed: 388563961
0.00.443.060 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.443.064 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.443.065 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.443.066 I 
 seconary factors, and composite factors are defined. Give examples for each type.

**Secondary factors** are those that are not essential for the growth of a

0.02.718.072 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6948.83 tokens per second)
0.02.718.074 I llama_perf_context_print:        load time =     442.09 ms
0.02.718.076 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.718.077 I llama_perf_context_print:        eval time =    2256.76 ms /    32 runs   (   70.52 ms per token,    14.18 tokens per second)
0.02.718.078 I llama_perf_context_print:       total time =    2275.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.536 I build: 4164 (c70833d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.724 I main: llama backend init
0.00.000.731 I main: load the model and apply lora adapter, if any
0.00.021.050 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.059 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.067 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.076 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.080 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.084 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.084 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.085 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.085 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.086 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.086 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.090 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.090 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.091 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.092 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.092 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.591 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.383 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.158 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.164 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.165 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.165 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.166 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.167 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.168 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.170 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.171 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.171 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.172 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.130.173 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.176 I llama_model_loader: - type  f32:   37 tensors
0.00.130.178 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.194 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.785 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.362 I llm_load_vocab: special tokens cache size = 5
0.00.260.155 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.172 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.173 I llm_load_print_meta: arch             = gemma
0.00.260.174 I llm_load_print_meta: vocab type       = SPM
0.00.260.174 I llm_load_print_meta: n_vocab          = 256000
0.00.260.175 I llm_load_print_meta: n_merges         = 0
0.00.260.177 I llm_load_print_meta: vocab_only       = 0
0.00.260.177 I llm_load_print_meta: n_ctx_train      = 8192
0.00.260.178 I llm_load_print_meta: n_embd           = 2048
0.00.260.178 I llm_load_print_meta: n_layer          = 18
0.00.260.192 I llm_load_print_meta: n_head           = 8
0.00.260.194 I llm_load_print_meta: n_head_kv        = 1
0.00.260.194 I llm_load_print_meta: n_rot            = 256
0.00.260.195 I llm_load_print_meta: n_swa            = 0
0.00.260.196 I llm_load_print_meta: n_embd_head_k    = 256
0.00.260.196 I llm_load_print_meta: n_embd_head_v    = 256
0.00.260.198 I llm_load_print_meta: n_gqa            = 8
0.00.260.199 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.260.201 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.260.202 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.260.204 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.260.205 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.260.206 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.260.207 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.260.208 I llm_load_print_meta: n_ff             = 16384
0.00.260.209 I llm_load_print_meta: n_expert         = 0
0.00.260.210 I llm_load_print_meta: n_expert_used    = 0
0.00.260.210 I llm_load_print_meta: causal attn      = 1
0.00.260.211 I llm_load_print_meta: pooling type     = 0
0.00.260.211 I llm_load_print_meta: rope type        = 2
0.00.260.212 I llm_load_print_meta: rope scaling     = linear
0.00.260.213 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.260.214 I llm_load_print_meta: freq_scale_train = 1
0.00.260.215 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.260.215 I llm_load_print_meta: rope_finetuned   = unknown
0.00.260.216 I llm_load_print_meta: ssm_d_conv       = 0
0.00.260.216 I llm_load_print_meta: ssm_d_inner      = 0
0.00.260.219 I llm_load_print_meta: ssm_d_state      = 0
0.00.260.219 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.260.220 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.260.220 I llm_load_print_meta: model type       = 2B
0.00.260.221 I llm_load_print_meta: model ftype      = Q8_0
0.00.260.222 I llm_load_print_meta: model params     = 2.51 B
0.00.260.224 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.260.225 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.260.226 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.260.226 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.260.228 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.260.228 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.260.229 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.260.229 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.260.230 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.260.231 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.260.232 I llm_load_print_meta: max token length = 93
0.00.331.689 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.331.695 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.337.127 I llama_new_context_with_model: n_seq_max     = 1
0.00.337.133 I llama_new_context_with_model: n_ctx         = 4096
0.00.337.134 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.337.134 I llama_new_context_with_model: n_batch       = 2048
0.00.337.135 I llama_new_context_with_model: n_ubatch      = 512
0.00.337.135 I llama_new_context_with_model: flash_attn    = 0
0.00.337.138 I llama_new_context_with_model: freq_base     = 10000.0
0.00.337.139 I llama_new_context_with_model: freq_scale    = 1
0.00.337.140 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.351.757 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.351.771 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.351.870 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.155 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.353.162 I llama_new_context_with_model: graph nodes  = 601
0.00.353.162 I llama_new_context_with_model: graph splits = 1
0.00.353.165 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.421 I main: llama threadpool init, n_threads = 4
0.00.441.436 I 
0.00.441.519 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.521 I 
0.00.441.566 I sampler seed: 2395024431
0.00.441.579 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.583 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.441.584 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.585 I 
 increasities, and other related behaviors that may cause distress or impairment for the individual.

**Response:**

**Understanding the Impact of Disruptive Behaviors on Individuals

0.02.859.154 I llama_perf_sampler_print:    sampling time =       4.94 ms /    33 runs   (    0.15 ms per token,  6680.16 tokens per second)
0.02.859.157 I llama_perf_context_print:        load time =     440.67 ms
0.02.859.159 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.859.161 I llama_perf_context_print:        eval time =    2398.61 ms /    32 runs   (   74.96 ms per token,    13.34 tokens per second)
0.02.859.162 I llama_perf_context_print:       total time =    2417.74 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.757s
user	0m37.207s
sys	0m9.249s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4164 (c70833d8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40254.26 ms
main:    total time = 40254.26 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.588 I build: 4164 (c70833d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.784 I main: llama backend init
0.00.000.791 I main: load the model and apply lora adapter, if any
0.00.021.086 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.095 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.103 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.108 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.108 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.113 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.114 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.115 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.115 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.116 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.116 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.120 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.120 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.121 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.121 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.122 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.467 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.317 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.170 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.177 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.178 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.178 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.179 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.181 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.181 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.185 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.185 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.186 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.187 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.188 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.192 I llama_model_loader: - type  f32:   37 tensors
0.00.130.193 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.194 I llama_model_loader: - type q6_K:   19 tensors
0.00.200.434 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.506 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.061 I llm_load_vocab: special tokens cache size = 5
0.00.259.802 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.259.817 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.259.817 I llm_load_print_meta: arch             = gemma
0.00.259.818 I llm_load_print_meta: vocab type       = SPM
0.00.259.818 I llm_load_print_meta: n_vocab          = 256000
0.00.259.819 I llm_load_print_meta: n_merges         = 0
0.00.259.819 I llm_load_print_meta: vocab_only       = 0
0.00.259.819 I llm_load_print_meta: n_ctx_train      = 8192
0.00.259.820 I llm_load_print_meta: n_embd           = 2048
0.00.259.820 I llm_load_print_meta: n_layer          = 18
0.00.259.830 I llm_load_print_meta: n_head           = 8
0.00.259.831 I llm_load_print_meta: n_head_kv        = 1
0.00.259.832 I llm_load_print_meta: n_rot            = 256
0.00.259.832 I llm_load_print_meta: n_swa            = 0
0.00.259.832 I llm_load_print_meta: n_embd_head_k    = 256
0.00.259.832 I llm_load_print_meta: n_embd_head_v    = 256
0.00.259.833 I llm_load_print_meta: n_gqa            = 8
0.00.259.834 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.259.835 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.259.836 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.259.837 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.259.838 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.259.838 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.259.838 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.259.839 I llm_load_print_meta: n_ff             = 16384
0.00.259.840 I llm_load_print_meta: n_expert         = 0
0.00.259.840 I llm_load_print_meta: n_expert_used    = 0
0.00.259.840 I llm_load_print_meta: causal attn      = 1
0.00.259.840 I llm_load_print_meta: pooling type     = 0
0.00.259.841 I llm_load_print_meta: rope type        = 2
0.00.259.841 I llm_load_print_meta: rope scaling     = linear
0.00.259.842 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.259.843 I llm_load_print_meta: freq_scale_train = 1
0.00.259.843 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.259.844 I llm_load_print_meta: rope_finetuned   = unknown
0.00.259.844 I llm_load_print_meta: ssm_d_conv       = 0
0.00.259.845 I llm_load_print_meta: ssm_d_inner      = 0
0.00.259.845 I llm_load_print_meta: ssm_d_state      = 0
0.00.259.845 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.259.845 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.259.846 I llm_load_print_meta: model type       = 2B
0.00.259.846 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.259.847 I llm_load_print_meta: model params     = 2.51 B
0.00.259.848 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.259.848 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.259.849 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.259.849 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.259.849 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.259.849 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.259.849 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.259.850 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.259.850 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.259.851 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.259.851 I llm_load_print_meta: max token length = 93
0.00.319.888 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.319.894 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.319.895 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.319.895 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.319.896 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.319.896 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.325.059 I llama_new_context_with_model: n_seq_max     = 1
0.00.325.066 I llama_new_context_with_model: n_ctx         = 4096
0.00.325.066 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.325.067 I llama_new_context_with_model: n_batch       = 2048
0.00.325.067 I llama_new_context_with_model: n_ubatch      = 512
0.00.325.068 I llama_new_context_with_model: flash_attn    = 0
0.00.325.069 I llama_new_context_with_model: freq_base     = 10000.0
0.00.325.070 I llama_new_context_with_model: freq_scale    = 1
0.00.325.071 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.339.391 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.339.405 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.339.495 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.340.706 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.340.713 I llama_new_context_with_model: graph nodes  = 601
0.00.340.713 I llama_new_context_with_model: graph splits = 1
0.00.340.715 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.415.470 I main: llama threadpool init, n_threads = 4
0.00.415.483 I 
0.00.415.562 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.415.565 I 
0.00.415.614 I sampler seed: 917268795
0.00.415.624 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.415.627 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.415.627 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.415.628 I 
 seconally.

I am unable to generate a response as I am unable to access the necessary information. [end of text]


0.01.495.555 I llama_perf_sampler_print:    sampling time =       3.54 ms /    23 runs   (    0.15 ms per token,  6504.52 tokens per second)
0.01.495.558 I llama_perf_context_print:        load time =     414.66 ms
0.01.495.559 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.495.561 I llama_perf_context_print:        eval time =    1066.75 ms /    22 runs   (   48.49 ms per token,    20.62 tokens per second)
0.01.495.562 I llama_perf_context_print:       total time =    1080.09 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4164 (c70833d8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40179.38 ms
main:    total time = 40179.38 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.523 I build: 4164 (c70833d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.724 I main: llama backend init
0.00.000.731 I main: load the model and apply lora adapter, if any
0.00.020.997 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.011 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.017 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.019 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.023 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.023 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.024 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.025 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.026 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.027 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.031 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.032 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.033 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.033 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.034 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.999 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.552 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.332 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.338 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.339 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.339 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.340 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.341 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.341 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.343 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.344 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.348 I llama_model_loader: - type  f32:   37 tensors
0.00.130.349 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.349 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.139 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.805 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.506 I llm_load_vocab: special tokens cache size = 5
0.00.274.598 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.617 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.617 I llm_load_print_meta: arch             = gemma
0.00.274.618 I llm_load_print_meta: vocab type       = SPM
0.00.274.619 I llm_load_print_meta: n_vocab          = 256000
0.00.274.619 I llm_load_print_meta: n_merges         = 0
0.00.274.620 I llm_load_print_meta: vocab_only       = 0
0.00.274.620 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.620 I llm_load_print_meta: n_embd           = 2048
0.00.274.621 I llm_load_print_meta: n_layer          = 18
0.00.274.632 I llm_load_print_meta: n_head           = 8
0.00.274.633 I llm_load_print_meta: n_head_kv        = 1
0.00.274.633 I llm_load_print_meta: n_rot            = 256
0.00.274.634 I llm_load_print_meta: n_swa            = 0
0.00.274.634 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.634 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.635 I llm_load_print_meta: n_gqa            = 8
0.00.274.637 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.638 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.638 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.639 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.640 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.640 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.640 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.641 I llm_load_print_meta: n_ff             = 16384
0.00.274.641 I llm_load_print_meta: n_expert         = 0
0.00.274.642 I llm_load_print_meta: n_expert_used    = 0
0.00.274.642 I llm_load_print_meta: causal attn      = 1
0.00.274.642 I llm_load_print_meta: pooling type     = 0
0.00.274.643 I llm_load_print_meta: rope type        = 2
0.00.274.643 I llm_load_print_meta: rope scaling     = linear
0.00.274.645 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.645 I llm_load_print_meta: freq_scale_train = 1
0.00.274.646 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.646 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.646 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.646 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.647 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.647 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.647 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.648 I llm_load_print_meta: model type       = 2B
0.00.274.648 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.274.649 I llm_load_print_meta: model params     = 2.51 B
0.00.274.650 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.274.650 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.651 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.651 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.651 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.652 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.652 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.653 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.653 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.653 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.654 I llm_load_print_meta: max token length = 93
0.00.328.559 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.333.729 I llama_new_context_with_model: n_seq_max     = 1
0.00.333.734 I llama_new_context_with_model: n_ctx         = 4096
0.00.333.735 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.333.735 I llama_new_context_with_model: n_batch       = 2048
0.00.333.735 I llama_new_context_with_model: n_ubatch      = 512
0.00.333.736 I llama_new_context_with_model: flash_attn    = 0
0.00.333.739 I llama_new_context_with_model: freq_base     = 10000.0
0.00.333.739 I llama_new_context_with_model: freq_scale    = 1
0.00.333.740 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.348.322 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.348.337 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.348.443 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.752 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.349.757 I llama_new_context_with_model: graph nodes  = 601
0.00.349.758 I llama_new_context_with_model: graph splits = 1
0.00.349.759 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.424.693 I main: llama threadpool init, n_threads = 4
0.00.424.707 I 
0.00.424.799 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.424.802 I 
0.00.424.847 I sampler seed: 2547413562
0.00.424.858 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.424.862 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.424.864 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.424.864 I 
 seconally.

I'm so sorry, but I cannot generate responses that promote or facilitate harmful activities. [end of text]


0.01.537.443 I llama_perf_sampler_print:    sampling time =       3.54 ms /    24 runs   (    0.15 ms per token,  6770.10 tokens per second)
0.01.537.446 I llama_perf_context_print:        load time =     423.94 ms
0.01.537.447 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.537.449 I llama_perf_context_print:        eval time =    1098.95 ms /    23 runs   (   47.78 ms per token,    20.93 tokens per second)
0.01.537.449 I llama_perf_context_print:       total time =    1112.76 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.238s
user	10m20.084s
sys	0m6.925s
