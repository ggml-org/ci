+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.600 I build: 3903 (c7499c55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.001.953 I main: load the model and apply lora adapter, if any
0.00.022.518 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.567 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.579 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.585 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.586 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.590 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.594 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.594 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.595 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.595 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.596 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.601 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.602 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.602 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.603 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.603 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.761 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.364 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.221 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.229 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.230 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.230 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.231 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.233 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.234 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.237 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.238 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.239 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.240 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.241 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.245 I llama_model_loader: - type  f32:   37 tensors
0.00.134.248 I llama_model_loader: - type q8_0:  127 tensors
0.00.216.292 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.237.966 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.238.749 I llm_load_vocab: special tokens cache size = 5
0.00.259.460 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.259.476 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.259.477 I llm_load_print_meta: arch             = gemma
0.00.259.477 I llm_load_print_meta: vocab type       = SPM
0.00.259.478 I llm_load_print_meta: n_vocab          = 256000
0.00.259.479 I llm_load_print_meta: n_merges         = 0
0.00.259.479 I llm_load_print_meta: vocab_only       = 0
0.00.259.479 I llm_load_print_meta: n_ctx_train      = 8192
0.00.259.480 I llm_load_print_meta: n_embd           = 2048
0.00.259.480 I llm_load_print_meta: n_layer          = 18
0.00.259.493 I llm_load_print_meta: n_head           = 8
0.00.259.494 I llm_load_print_meta: n_head_kv        = 1
0.00.259.494 I llm_load_print_meta: n_rot            = 256
0.00.259.494 I llm_load_print_meta: n_swa            = 0
0.00.259.494 I llm_load_print_meta: n_embd_head_k    = 256
0.00.259.495 I llm_load_print_meta: n_embd_head_v    = 256
0.00.259.495 I llm_load_print_meta: n_gqa            = 8
0.00.259.496 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.259.497 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.259.498 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.259.499 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.259.500 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.259.500 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.259.500 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.259.501 I llm_load_print_meta: n_ff             = 16384
0.00.259.502 I llm_load_print_meta: n_expert         = 0
0.00.259.502 I llm_load_print_meta: n_expert_used    = 0
0.00.259.502 I llm_load_print_meta: causal attn      = 1
0.00.259.503 I llm_load_print_meta: pooling type     = 0
0.00.259.503 I llm_load_print_meta: rope type        = 2
0.00.259.503 I llm_load_print_meta: rope scaling     = linear
0.00.259.504 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.259.505 I llm_load_print_meta: freq_scale_train = 1
0.00.259.505 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.259.505 I llm_load_print_meta: rope_finetuned   = unknown
0.00.259.506 I llm_load_print_meta: ssm_d_conv       = 0
0.00.259.506 I llm_load_print_meta: ssm_d_inner      = 0
0.00.259.506 I llm_load_print_meta: ssm_d_state      = 0
0.00.259.507 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.259.507 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.259.508 I llm_load_print_meta: model type       = 2B
0.00.259.509 I llm_load_print_meta: model ftype      = Q8_0
0.00.259.509 I llm_load_print_meta: model params     = 2.51 B
0.00.259.510 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.259.510 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.259.511 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.259.511 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.259.512 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.259.512 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.259.513 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.259.513 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.259.513 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.259.514 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.259.514 I llm_load_print_meta: max token length = 93
0.00.259.536 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.357.151 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.357.161 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.357.162 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.357.163 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.357.163 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.357.164 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.362.444 I llama_new_context_with_model: n_ctx      = 8192
0.00.362.453 I llama_new_context_with_model: n_batch    = 2048
0.00.362.453 I llama_new_context_with_model: n_ubatch   = 512
0.00.362.454 I llama_new_context_with_model: flash_attn = 0
0.00.362.458 I llama_new_context_with_model: freq_base  = 10000.0
0.00.362.459 I llama_new_context_with_model: freq_scale = 1
0.00.393.774 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.393.788 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.393.892 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.394.775 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.394.782 I llama_new_context_with_model: graph nodes  = 601
0.00.394.783 I llama_new_context_with_model: graph splits = 1
0.00.394.784 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.562 I main: llama threadpool init, n_threads = 4
0.00.490.577 I 
0.00.490.657 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.490.661 I 
0.00.490.703 I sampler seed: 3115925507
0.00.490.713 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.716 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.490.717 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.717 I 
 increasities and the impact on human health

**Introduction**

Health is a complex and multifaceted concept that encompasses physical, mental, social, and spiritual well-

0.02.812.239 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7012.32 tokens per second)
0.02.812.241 I llama_perf_context_print:        load time =     488.54 ms
0.02.812.242 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.812.244 I llama_perf_context_print:        eval time =    2303.31 ms /    32 runs   (   71.98 ms per token,    13.89 tokens per second)
0.02.812.245 I llama_perf_context_print:       total time =    2321.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.570 I build: 3903 (c7499c55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.767 I main: llama backend init
0.00.001.897 I main: load the model and apply lora adapter, if any
0.00.022.675 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.688 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.696 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.697 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.701 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.701 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.702 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.703 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.705 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.705 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.711 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.711 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.712 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.712 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.713 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.431 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.813 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.677 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.684 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.685 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.685 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.686 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.687 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.688 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.692 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.692 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.693 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.693 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.695 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.698 I llama_model_loader: - type  f32:   37 tensors
0.00.133.701 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.601 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.227.330 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.228.117 I llm_load_vocab: special tokens cache size = 5
0.00.248.807 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.248.823 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.248.824 I llm_load_print_meta: arch             = gemma
0.00.248.825 I llm_load_print_meta: vocab type       = SPM
0.00.248.826 I llm_load_print_meta: n_vocab          = 256000
0.00.248.826 I llm_load_print_meta: n_merges         = 0
0.00.248.826 I llm_load_print_meta: vocab_only       = 0
0.00.248.827 I llm_load_print_meta: n_ctx_train      = 8192
0.00.248.827 I llm_load_print_meta: n_embd           = 2048
0.00.248.827 I llm_load_print_meta: n_layer          = 18
0.00.248.840 I llm_load_print_meta: n_head           = 8
0.00.248.841 I llm_load_print_meta: n_head_kv        = 1
0.00.248.842 I llm_load_print_meta: n_rot            = 256
0.00.248.842 I llm_load_print_meta: n_swa            = 0
0.00.248.842 I llm_load_print_meta: n_embd_head_k    = 256
0.00.248.842 I llm_load_print_meta: n_embd_head_v    = 256
0.00.248.843 I llm_load_print_meta: n_gqa            = 8
0.00.248.844 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.248.845 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.248.846 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.248.847 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.248.848 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.248.848 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.248.848 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.248.849 I llm_load_print_meta: n_ff             = 16384
0.00.248.850 I llm_load_print_meta: n_expert         = 0
0.00.248.850 I llm_load_print_meta: n_expert_used    = 0
0.00.248.850 I llm_load_print_meta: causal attn      = 1
0.00.248.851 I llm_load_print_meta: pooling type     = 0
0.00.248.851 I llm_load_print_meta: rope type        = 2
0.00.248.851 I llm_load_print_meta: rope scaling     = linear
0.00.248.852 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.248.853 I llm_load_print_meta: freq_scale_train = 1
0.00.248.853 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.248.854 I llm_load_print_meta: rope_finetuned   = unknown
0.00.248.854 I llm_load_print_meta: ssm_d_conv       = 0
0.00.248.854 I llm_load_print_meta: ssm_d_inner      = 0
0.00.248.855 I llm_load_print_meta: ssm_d_state      = 0
0.00.248.855 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.248.855 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.248.856 I llm_load_print_meta: model type       = 2B
0.00.248.856 I llm_load_print_meta: model ftype      = Q8_0
0.00.248.857 I llm_load_print_meta: model params     = 2.51 B
0.00.248.858 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.248.858 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.248.859 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.248.859 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.248.859 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.248.860 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.248.860 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.248.861 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.248.862 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.248.862 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.248.862 I llm_load_print_meta: max token length = 93
0.00.248.883 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.340.846 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.346.050 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.059 I llama_new_context_with_model: n_batch    = 2048
0.00.346.059 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.060 I llama_new_context_with_model: flash_attn = 0
0.00.346.063 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.064 I llama_new_context_with_model: freq_scale = 1
0.00.378.451 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.378.468 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.378.579 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.475 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.379.483 I llama_new_context_with_model: graph nodes  = 601
0.00.379.484 I llama_new_context_with_model: graph splits = 1
0.00.379.486 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.433 I main: llama threadpool init, n_threads = 4
0.00.469.447 I 
0.00.469.527 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.530 I 
0.00.469.569 I sampler seed: 4108567232
0.00.469.579 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.582 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.469.582 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.582 I 
 maneuvled,
a playful, mischievous creature.

**Answer:** Pixie [end of text]


0.01.670.579 I llama_perf_sampler_print:    sampling time =       2.56 ms /    18 runs   (    0.14 ms per token,  7045.01 tokens per second)
0.01.670.581 I llama_perf_context_print:        load time =     467.47 ms
0.01.670.582 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.670.584 I llama_perf_context_print:        eval time =    1191.02 ms /    17 runs   (   70.06 ms per token,    14.27 tokens per second)
0.01.670.584 I llama_perf_context_print:       total time =    1201.15 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.550 I build: 3903 (c7499c55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.796 I main: llama backend init
0.00.001.929 I main: load the model and apply lora adapter, if any
0.00.022.283 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.332 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.346 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.352 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.353 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.357 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.358 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.359 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.359 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.360 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.360 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.365 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.366 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.366 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.367 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.367 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.477 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.088 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.021 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.029 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.029 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.030 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.031 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.032 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.032 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.035 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.036 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.036 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.037 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.134.037 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.041 I llama_model_loader: - type  f32:   37 tensors
0.00.134.044 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.705 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.232.306 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.233.073 I llm_load_vocab: special tokens cache size = 5
0.00.253.653 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.253.670 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.253.671 I llm_load_print_meta: arch             = gemma
0.00.253.671 I llm_load_print_meta: vocab type       = SPM
0.00.253.672 I llm_load_print_meta: n_vocab          = 256000
0.00.253.672 I llm_load_print_meta: n_merges         = 0
0.00.253.673 I llm_load_print_meta: vocab_only       = 0
0.00.253.673 I llm_load_print_meta: n_ctx_train      = 8192
0.00.253.673 I llm_load_print_meta: n_embd           = 2048
0.00.253.673 I llm_load_print_meta: n_layer          = 18
0.00.253.688 I llm_load_print_meta: n_head           = 8
0.00.253.689 I llm_load_print_meta: n_head_kv        = 1
0.00.253.689 I llm_load_print_meta: n_rot            = 256
0.00.253.689 I llm_load_print_meta: n_swa            = 0
0.00.253.690 I llm_load_print_meta: n_embd_head_k    = 256
0.00.253.690 I llm_load_print_meta: n_embd_head_v    = 256
0.00.253.691 I llm_load_print_meta: n_gqa            = 8
0.00.253.692 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.253.693 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.253.694 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.253.695 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.253.696 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.253.696 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.253.696 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.253.697 I llm_load_print_meta: n_ff             = 16384
0.00.253.698 I llm_load_print_meta: n_expert         = 0
0.00.253.698 I llm_load_print_meta: n_expert_used    = 0
0.00.253.698 I llm_load_print_meta: causal attn      = 1
0.00.253.698 I llm_load_print_meta: pooling type     = 0
0.00.253.699 I llm_load_print_meta: rope type        = 2
0.00.253.699 I llm_load_print_meta: rope scaling     = linear
0.00.253.700 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.253.701 I llm_load_print_meta: freq_scale_train = 1
0.00.253.701 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.253.701 I llm_load_print_meta: rope_finetuned   = unknown
0.00.253.702 I llm_load_print_meta: ssm_d_conv       = 0
0.00.253.702 I llm_load_print_meta: ssm_d_inner      = 0
0.00.253.703 I llm_load_print_meta: ssm_d_state      = 0
0.00.253.703 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.253.703 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.253.704 I llm_load_print_meta: model type       = 2B
0.00.253.704 I llm_load_print_meta: model ftype      = Q8_0
0.00.253.705 I llm_load_print_meta: model params     = 2.51 B
0.00.253.706 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.253.706 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.253.707 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.253.707 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.253.707 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.253.707 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.253.708 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.253.708 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.253.709 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.253.709 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.253.710 I llm_load_print_meta: max token length = 93
0.00.253.730 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.959 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.329.967 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.329.968 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.329.968 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.329.969 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.329.970 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.335.008 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.017 I llama_new_context_with_model: n_batch    = 2048
0.00.335.017 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.018 I llama_new_context_with_model: flash_attn = 0
0.00.335.020 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.021 I llama_new_context_with_model: freq_scale = 1
0.00.364.679 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.712 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.802 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.676 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.684 I llama_new_context_with_model: graph nodes  = 601
0.00.365.685 I llama_new_context_with_model: graph splits = 1
0.00.365.687 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.145 I main: llama threadpool init, n_threads = 4
0.00.461.158 I 
0.00.461.239 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.242 I 
0.00.461.280 I sampler seed: 1453601509
0.00.461.291 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.295 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.461.296 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.296 I 
 increamically. [end of text]


0.00.758.672 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8103.73 tokens per second)
0.00.758.675 I llama_perf_context_print:        load time =     459.14 ms
0.00.758.676 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.758.677 I llama_perf_context_print:        eval time =     294.12 ms /     4 runs   (   73.53 ms per token,    13.60 tokens per second)
0.00.758.678 I llama_perf_context_print:       total time =     297.54 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.607 I build: 3903 (c7499c55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.823 I main: llama backend init
0.00.001.964 I main: load the model and apply lora adapter, if any
0.00.022.068 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.115 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.126 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.131 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.133 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.138 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.138 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.139 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.140 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.140 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.141 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.146 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.147 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.147 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.148 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.148 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.120 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.482 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.328 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.337 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.338 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.338 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.339 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.340 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.341 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.343 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.344 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.345 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.345 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.346 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.350 I llama_model_loader: - type  f32:   37 tensors
0.00.133.352 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.741 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.228.450 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.229.264 I llm_load_vocab: special tokens cache size = 5
0.00.249.794 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.249.809 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.249.810 I llm_load_print_meta: arch             = gemma
0.00.249.810 I llm_load_print_meta: vocab type       = SPM
0.00.249.811 I llm_load_print_meta: n_vocab          = 256000
0.00.249.811 I llm_load_print_meta: n_merges         = 0
0.00.249.812 I llm_load_print_meta: vocab_only       = 0
0.00.249.812 I llm_load_print_meta: n_ctx_train      = 8192
0.00.249.812 I llm_load_print_meta: n_embd           = 2048
0.00.249.813 I llm_load_print_meta: n_layer          = 18
0.00.249.825 I llm_load_print_meta: n_head           = 8
0.00.249.826 I llm_load_print_meta: n_head_kv        = 1
0.00.249.827 I llm_load_print_meta: n_rot            = 256
0.00.249.827 I llm_load_print_meta: n_swa            = 0
0.00.249.827 I llm_load_print_meta: n_embd_head_k    = 256
0.00.249.827 I llm_load_print_meta: n_embd_head_v    = 256
0.00.249.828 I llm_load_print_meta: n_gqa            = 8
0.00.249.829 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.249.830 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.249.831 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.249.832 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.249.833 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.249.833 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.249.834 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.249.835 I llm_load_print_meta: n_ff             = 16384
0.00.249.835 I llm_load_print_meta: n_expert         = 0
0.00.249.835 I llm_load_print_meta: n_expert_used    = 0
0.00.249.836 I llm_load_print_meta: causal attn      = 1
0.00.249.836 I llm_load_print_meta: pooling type     = 0
0.00.249.836 I llm_load_print_meta: rope type        = 2
0.00.249.837 I llm_load_print_meta: rope scaling     = linear
0.00.249.838 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.249.839 I llm_load_print_meta: freq_scale_train = 1
0.00.249.839 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.249.840 I llm_load_print_meta: rope_finetuned   = unknown
0.00.249.840 I llm_load_print_meta: ssm_d_conv       = 0
0.00.249.840 I llm_load_print_meta: ssm_d_inner      = 0
0.00.249.841 I llm_load_print_meta: ssm_d_state      = 0
0.00.249.841 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.249.842 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.249.842 I llm_load_print_meta: model type       = 2B
0.00.249.843 I llm_load_print_meta: model ftype      = Q8_0
0.00.249.844 I llm_load_print_meta: model params     = 2.51 B
0.00.249.845 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.249.845 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.249.847 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.249.847 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.249.848 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.249.848 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.249.858 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.249.859 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.249.860 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.249.865 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.249.865 I llm_load_print_meta: max token length = 93
0.00.249.889 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.274 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.320.282 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.325.354 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.360 I llama_new_context_with_model: n_batch    = 2048
0.00.325.360 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.361 I llama_new_context_with_model: flash_attn = 0
0.00.325.364 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.365 I llama_new_context_with_model: freq_scale = 1
0.00.355.047 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.355.061 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.355.154 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.022 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.031 I llama_new_context_with_model: graph nodes  = 601
0.00.356.031 I llama_new_context_with_model: graph splits = 1
0.00.356.033 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.863 I main: llama threadpool init, n_threads = 4
0.00.451.876 I 
0.00.451.956 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.959 I 
0.00.451.996 I sampler seed: 3966992951
0.00.452.006 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.014 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.452.014 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.014 I 
 increasities.

I cannot access the requested content as it is private and not available to me. [end of text]


0.02.094.274 I llama_perf_sampler_print:    sampling time =       3.32 ms /    22 runs   (    0.15 ms per token,  6634.50 tokens per second)
0.02.094.277 I llama_perf_context_print:        load time =     449.83 ms
0.02.094.278 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.094.280 I llama_perf_context_print:        eval time =    1629.46 ms /    21 runs   (   77.59 ms per token,    12.89 tokens per second)
0.02.094.281 I llama_perf_context_print:       total time =    1642.42 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.395s
user	0m24.798s
sys	0m9.663s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3903 (c7499c55)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32201.24 ms
main:    total time = 32201.24 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 3903 (c7499c55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.777 I main: llama backend init
0.00.001.860 I main: load the model and apply lora adapter, if any
0.00.022.307 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.354 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.367 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.373 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.376 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.384 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.384 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.385 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.386 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.386 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.387 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.392 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.392 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.393 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.393 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.394 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.804 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.199 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.038 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.046 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.047 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.048 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.048 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.049 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.050 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.054 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.057 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.058 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.059 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.060 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.063 I llama_model_loader: - type  f32:   37 tensors
0.00.134.066 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.067 I llama_model_loader: - type q6_K:   19 tensors
0.00.219.831 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.551 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.330 I llm_load_vocab: special tokens cache size = 5
0.00.263.090 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.107 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.107 I llm_load_print_meta: arch             = gemma
0.00.263.108 I llm_load_print_meta: vocab type       = SPM
0.00.263.108 I llm_load_print_meta: n_vocab          = 256000
0.00.263.109 I llm_load_print_meta: n_merges         = 0
0.00.263.110 I llm_load_print_meta: vocab_only       = 0
0.00.263.110 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.110 I llm_load_print_meta: n_embd           = 2048
0.00.263.110 I llm_load_print_meta: n_layer          = 18
0.00.263.123 I llm_load_print_meta: n_head           = 8
0.00.263.124 I llm_load_print_meta: n_head_kv        = 1
0.00.263.124 I llm_load_print_meta: n_rot            = 256
0.00.263.124 I llm_load_print_meta: n_swa            = 0
0.00.263.124 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.125 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.126 I llm_load_print_meta: n_gqa            = 8
0.00.263.127 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.128 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.129 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.130 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.131 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.131 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.132 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.132 I llm_load_print_meta: n_ff             = 16384
0.00.263.133 I llm_load_print_meta: n_expert         = 0
0.00.263.133 I llm_load_print_meta: n_expert_used    = 0
0.00.263.133 I llm_load_print_meta: causal attn      = 1
0.00.263.134 I llm_load_print_meta: pooling type     = 0
0.00.263.134 I llm_load_print_meta: rope type        = 2
0.00.263.134 I llm_load_print_meta: rope scaling     = linear
0.00.263.136 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.136 I llm_load_print_meta: freq_scale_train = 1
0.00.263.137 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.137 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.137 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.138 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.138 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.139 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.139 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.140 I llm_load_print_meta: model type       = 2B
0.00.263.140 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.141 I llm_load_print_meta: model params     = 2.51 B
0.00.263.141 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.142 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.142 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.142 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.143 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.143 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.144 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.144 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.145 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.145 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.146 I llm_load_print_meta: max token length = 93
0.00.263.168 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.069 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.320.078 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.320.079 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.320.079 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.320.080 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.320.081 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.325.220 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.228 I llama_new_context_with_model: n_batch    = 2048
0.00.325.228 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.229 I llama_new_context_with_model: flash_attn = 0
0.00.325.232 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.233 I llama_new_context_with_model: freq_scale = 1
0.00.355.534 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.355.552 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.355.642 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.530 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.540 I llama_new_context_with_model: graph nodes  = 601
0.00.356.540 I llama_new_context_with_model: graph splits = 1
0.00.356.542 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.741 I main: llama threadpool init, n_threads = 4
0.00.440.755 I 
0.00.440.832 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.836 I 
0.00.440.872 I sampler seed: 3465993368
0.00.440.882 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.890 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.890 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.891 I 
 increamically.

**Instructions:** Write the code snippet that solves the problem.

**Problem:**

Given a list of integers, find the longest increasing subsequence

0.02.134.462 I llama_perf_sampler_print:    sampling time =       4.84 ms /    33 runs   (    0.15 ms per token,  6813.96 tokens per second)
0.02.134.464 I llama_perf_context_print:        load time =     438.81 ms
0.02.134.465 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.134.467 I llama_perf_context_print:        eval time =    1674.66 ms /    32 runs   (   52.33 ms per token,    19.11 tokens per second)
0.02.134.468 I llama_perf_context_print:       total time =    1693.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3903 (c7499c55)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32121.56 ms
main:    total time = 32121.56 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.621 I build: 3903 (c7499c55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.822 I main: llama backend init
0.00.001.945 I main: load the model and apply lora adapter, if any
0.00.022.275 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.290 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.298 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.299 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.302 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.303 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.304 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.304 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.305 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.306 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.311 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.311 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.313 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.313 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.314 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.516 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.837 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.662 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.670 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.670 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.671 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.672 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.673 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.673 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.676 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.677 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.681 I llama_model_loader: - type  f32:   37 tensors
0.00.133.683 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.684 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.282 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.231.136 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.231.916 I llm_load_vocab: special tokens cache size = 5
0.00.252.527 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.252.545 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.252.545 I llm_load_print_meta: arch             = gemma
0.00.252.546 I llm_load_print_meta: vocab type       = SPM
0.00.252.547 I llm_load_print_meta: n_vocab          = 256000
0.00.252.547 I llm_load_print_meta: n_merges         = 0
0.00.252.548 I llm_load_print_meta: vocab_only       = 0
0.00.252.548 I llm_load_print_meta: n_ctx_train      = 8192
0.00.252.548 I llm_load_print_meta: n_embd           = 2048
0.00.252.549 I llm_load_print_meta: n_layer          = 18
0.00.252.562 I llm_load_print_meta: n_head           = 8
0.00.252.563 I llm_load_print_meta: n_head_kv        = 1
0.00.252.564 I llm_load_print_meta: n_rot            = 256
0.00.252.564 I llm_load_print_meta: n_swa            = 0
0.00.252.564 I llm_load_print_meta: n_embd_head_k    = 256
0.00.252.565 I llm_load_print_meta: n_embd_head_v    = 256
0.00.252.565 I llm_load_print_meta: n_gqa            = 8
0.00.252.566 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.252.567 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.252.568 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.252.569 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.252.570 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.252.570 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.252.570 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.252.571 I llm_load_print_meta: n_ff             = 16384
0.00.252.572 I llm_load_print_meta: n_expert         = 0
0.00.252.572 I llm_load_print_meta: n_expert_used    = 0
0.00.252.572 I llm_load_print_meta: causal attn      = 1
0.00.252.572 I llm_load_print_meta: pooling type     = 0
0.00.252.573 I llm_load_print_meta: rope type        = 2
0.00.252.573 I llm_load_print_meta: rope scaling     = linear
0.00.252.574 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.252.575 I llm_load_print_meta: freq_scale_train = 1
0.00.252.575 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.252.575 I llm_load_print_meta: rope_finetuned   = unknown
0.00.252.576 I llm_load_print_meta: ssm_d_conv       = 0
0.00.252.576 I llm_load_print_meta: ssm_d_inner      = 0
0.00.252.576 I llm_load_print_meta: ssm_d_state      = 0
0.00.252.576 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.252.577 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.252.577 I llm_load_print_meta: model type       = 2B
0.00.252.578 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.252.578 I llm_load_print_meta: model params     = 2.51 B
0.00.252.579 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.252.579 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.252.580 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.252.580 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.252.580 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.252.581 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.252.581 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.252.582 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.252.583 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.252.583 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.252.583 I llm_load_print_meta: max token length = 93
0.00.252.604 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.308.825 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.313.808 I llama_new_context_with_model: n_ctx      = 8192
0.00.313.817 I llama_new_context_with_model: n_batch    = 2048
0.00.313.817 I llama_new_context_with_model: n_ubatch   = 512
0.00.313.818 I llama_new_context_with_model: flash_attn = 0
0.00.313.821 I llama_new_context_with_model: freq_base  = 10000.0
0.00.313.822 I llama_new_context_with_model: freq_scale = 1
0.00.345.214 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.345.231 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.345.331 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.346.197 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.346.206 I llama_new_context_with_model: graph nodes  = 601
0.00.346.206 I llama_new_context_with_model: graph splits = 1
0.00.346.208 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.429.085 I main: llama threadpool init, n_threads = 4
0.00.429.099 I 
0.00.429.177 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.429.181 I 
0.00.429.218 I sampler seed: 1559886744
0.00.429.227 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.429.230 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.429.231 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.429.231 I 
 seconded, and then upvoted to the top of the queue. Explain the reason behind this behavior.

**Scenario:**

Consider a queue with 5 elements

0.02.130.280 I llama_perf_sampler_print:    sampling time =       4.85 ms /    33 runs   (    0.15 ms per token,  6806.93 tokens per second)
0.02.130.282 I llama_perf_context_print:        load time =     427.07 ms
0.02.130.283 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.130.285 I llama_perf_context_print:        eval time =    1682.89 ms /    32 runs   (   52.59 ms per token,    19.01 tokens per second)
0.02.130.286 I llama_perf_context_print:       total time =    1701.20 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m12.144s
user	8m16.007s
sys	0m7.319s
