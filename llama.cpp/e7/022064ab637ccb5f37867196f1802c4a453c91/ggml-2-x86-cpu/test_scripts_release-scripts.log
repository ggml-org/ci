+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.543 I build: 3901 (e7022064) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.001.841 I main: load the model and apply lora adapter, if any
0.00.022.146 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.193 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.202 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.207 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.208 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.212 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.213 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.213 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.214 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.214 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.215 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.220 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.220 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.221 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.221 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.222 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.004 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.488 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.811 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.821 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.822 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.823 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.823 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.824 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.825 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.827 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.828 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.828 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.829 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.830 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.834 I llama_model_loader: - type  f32:   37 tensors
0.00.133.837 I llama_model_loader: - type q8_0:  127 tensors
0.00.219.076 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.861 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.718 I llm_load_vocab: special tokens cache size = 5
0.00.260.462 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.479 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.480 I llm_load_print_meta: arch             = gemma
0.00.260.481 I llm_load_print_meta: vocab type       = SPM
0.00.260.482 I llm_load_print_meta: n_vocab          = 256000
0.00.260.482 I llm_load_print_meta: n_merges         = 0
0.00.260.483 I llm_load_print_meta: vocab_only       = 0
0.00.260.483 I llm_load_print_meta: n_ctx_train      = 8192
0.00.260.483 I llm_load_print_meta: n_embd           = 2048
0.00.260.483 I llm_load_print_meta: n_layer          = 18
0.00.260.499 I llm_load_print_meta: n_head           = 8
0.00.260.500 I llm_load_print_meta: n_head_kv        = 1
0.00.260.500 I llm_load_print_meta: n_rot            = 256
0.00.260.501 I llm_load_print_meta: n_swa            = 0
0.00.260.501 I llm_load_print_meta: n_embd_head_k    = 256
0.00.260.501 I llm_load_print_meta: n_embd_head_v    = 256
0.00.260.502 I llm_load_print_meta: n_gqa            = 8
0.00.260.503 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.260.504 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.260.504 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.260.506 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.260.506 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.260.506 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.260.507 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.260.508 I llm_load_print_meta: n_ff             = 16384
0.00.260.508 I llm_load_print_meta: n_expert         = 0
0.00.260.508 I llm_load_print_meta: n_expert_used    = 0
0.00.260.509 I llm_load_print_meta: causal attn      = 1
0.00.260.509 I llm_load_print_meta: pooling type     = 0
0.00.260.509 I llm_load_print_meta: rope type        = 2
0.00.260.509 I llm_load_print_meta: rope scaling     = linear
0.00.260.510 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.260.511 I llm_load_print_meta: freq_scale_train = 1
0.00.260.511 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.260.512 I llm_load_print_meta: rope_finetuned   = unknown
0.00.260.512 I llm_load_print_meta: ssm_d_conv       = 0
0.00.260.512 I llm_load_print_meta: ssm_d_inner      = 0
0.00.260.513 I llm_load_print_meta: ssm_d_state      = 0
0.00.260.513 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.260.513 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.260.514 I llm_load_print_meta: model type       = 2B
0.00.260.515 I llm_load_print_meta: model ftype      = Q8_0
0.00.260.516 I llm_load_print_meta: model params     = 2.51 B
0.00.260.517 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.260.517 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.260.517 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.260.517 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.260.518 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.260.518 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.260.519 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.260.520 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.260.520 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.260.520 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.260.521 I llm_load_print_meta: max token length = 93
0.00.260.551 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.359.344 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.359.353 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.359.353 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.359.354 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.359.354 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.359.355 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.364.680 I llama_new_context_with_model: n_ctx      = 8192
0.00.364.689 I llama_new_context_with_model: n_batch    = 2048
0.00.364.689 I llama_new_context_with_model: n_ubatch   = 512
0.00.364.690 I llama_new_context_with_model: flash_attn = 0
0.00.364.694 I llama_new_context_with_model: freq_base  = 10000.0
0.00.364.695 I llama_new_context_with_model: freq_scale = 1
0.00.394.987 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.395.003 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.395.096 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.032 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.396.038 I llama_new_context_with_model: graph nodes  = 601
0.00.396.038 I llama_new_context_with_model: graph splits = 1
0.00.396.040 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.290 I main: llama threadpool init, n_threads = 4
0.00.490.301 I 
0.00.490.382 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.490.385 I 
0.00.490.423 I sampler seed: 1667156254
0.00.490.433 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.436 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.490.436 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.436 I 
 increably!

I am unable to access the requested data due to insufficient permissions.

I would appreciate it if you could assist me in obtaining the necessary permissions

0.02.842.863 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6565.86 tokens per second)
0.02.842.866 I llama_perf_context_print:        load time =     488.38 ms
0.02.842.867 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.842.869 I llama_perf_context_print:        eval time =    2332.93 ms /    32 runs   (   72.90 ms per token,    13.72 tokens per second)
0.02.842.870 I llama_perf_context_print:       total time =    2352.58 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.548 I build: 3901 (e7022064) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.829 I main: load the model and apply lora adapter, if any
0.00.021.715 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.729 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.736 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.737 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.741 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.742 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.743 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.743 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.744 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.745 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.749 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.750 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.750 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.751 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.751 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.817 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.248 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.173 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.180 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.180 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.181 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.182 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.182 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.184 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.187 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.188 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.188 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.189 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.190 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.193 I llama_model_loader: - type  f32:   37 tensors
0.00.133.196 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.224 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.710 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.530 I llm_load_vocab: special tokens cache size = 5
0.00.235.216 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.230 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.231 I llm_load_print_meta: arch             = gemma
0.00.235.231 I llm_load_print_meta: vocab type       = SPM
0.00.235.232 I llm_load_print_meta: n_vocab          = 256000
0.00.235.233 I llm_load_print_meta: n_merges         = 0
0.00.235.233 I llm_load_print_meta: vocab_only       = 0
0.00.235.233 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.233 I llm_load_print_meta: n_embd           = 2048
0.00.235.234 I llm_load_print_meta: n_layer          = 18
0.00.235.246 I llm_load_print_meta: n_head           = 8
0.00.235.247 I llm_load_print_meta: n_head_kv        = 1
0.00.235.248 I llm_load_print_meta: n_rot            = 256
0.00.235.248 I llm_load_print_meta: n_swa            = 0
0.00.235.248 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.249 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.249 I llm_load_print_meta: n_gqa            = 8
0.00.235.250 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.251 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.252 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.253 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.254 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.254 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.254 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.255 I llm_load_print_meta: n_ff             = 16384
0.00.235.256 I llm_load_print_meta: n_expert         = 0
0.00.235.256 I llm_load_print_meta: n_expert_used    = 0
0.00.235.256 I llm_load_print_meta: causal attn      = 1
0.00.235.257 I llm_load_print_meta: pooling type     = 0
0.00.235.257 I llm_load_print_meta: rope type        = 2
0.00.235.257 I llm_load_print_meta: rope scaling     = linear
0.00.235.258 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.259 I llm_load_print_meta: freq_scale_train = 1
0.00.235.259 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.259 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.260 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.260 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.260 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.260 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.261 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.261 I llm_load_print_meta: model type       = 2B
0.00.235.262 I llm_load_print_meta: model ftype      = Q8_0
0.00.235.262 I llm_load_print_meta: model params     = 2.51 B
0.00.235.263 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.235.263 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.264 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.264 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.264 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.265 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.265 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.266 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.266 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.267 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.267 I llm_load_print_meta: max token length = 93
0.00.235.286 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.903 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.332.842 I llama_new_context_with_model: n_ctx      = 8192
0.00.332.848 I llama_new_context_with_model: n_batch    = 2048
0.00.332.849 I llama_new_context_with_model: n_ubatch   = 512
0.00.332.849 I llama_new_context_with_model: flash_attn = 0
0.00.332.852 I llama_new_context_with_model: freq_base  = 10000.0
0.00.332.853 I llama_new_context_with_model: freq_scale = 1
0.00.363.270 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.286 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.377 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.241 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.248 I llama_new_context_with_model: graph nodes  = 601
0.00.364.248 I llama_new_context_with_model: graph splits = 1
0.00.364.250 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.454.746 I main: llama threadpool init, n_threads = 4
0.00.454.759 I 
0.00.454.837 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.454.841 I 
0.00.454.877 I sampler seed: 4086843534
0.00.454.887 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.454.890 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.454.891 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.454.891 I 
 increasities to a woman, who claims the woman has been sexually assaulting her for several years.

**Response:**

Sexual assault is a serious matter and should

0.02.732.618 I llama_perf_sampler_print:    sampling time =       4.78 ms /    33 runs   (    0.14 ms per token,  6902.32 tokens per second)
0.02.732.621 I llama_perf_context_print:        load time =     452.85 ms
0.02.732.622 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.732.626 I llama_perf_context_print:        eval time =    2259.38 ms /    32 runs   (   70.61 ms per token,    14.16 tokens per second)
0.02.732.627 I llama_perf_context_print:       total time =    2277.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.576 I build: 3901 (e7022064) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.774 I main: llama backend init
0.00.001.935 I main: load the model and apply lora adapter, if any
0.00.022.444 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.495 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.502 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.512 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.516 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.524 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.524 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.525 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.526 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.526 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.528 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.533 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.533 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.534 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.535 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.535 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.433 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.967 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.842 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.851 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.852 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.853 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.853 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.854 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.855 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.859 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.860 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.861 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.861 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.862 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.865 I llama_model_loader: - type  f32:   37 tensors
0.00.133.868 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.903 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.183 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.017 I llm_load_vocab: special tokens cache size = 5
0.00.270.949 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.967 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.968 I llm_load_print_meta: arch             = gemma
0.00.270.968 I llm_load_print_meta: vocab type       = SPM
0.00.270.969 I llm_load_print_meta: n_vocab          = 256000
0.00.270.970 I llm_load_print_meta: n_merges         = 0
0.00.270.970 I llm_load_print_meta: vocab_only       = 0
0.00.270.970 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.971 I llm_load_print_meta: n_embd           = 2048
0.00.270.971 I llm_load_print_meta: n_layer          = 18
0.00.270.985 I llm_load_print_meta: n_head           = 8
0.00.270.986 I llm_load_print_meta: n_head_kv        = 1
0.00.270.986 I llm_load_print_meta: n_rot            = 256
0.00.270.987 I llm_load_print_meta: n_swa            = 0
0.00.270.987 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.987 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.988 I llm_load_print_meta: n_gqa            = 8
0.00.270.989 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.990 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.991 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.992 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.993 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.993 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.994 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.994 I llm_load_print_meta: n_ff             = 16384
0.00.270.995 I llm_load_print_meta: n_expert         = 0
0.00.270.995 I llm_load_print_meta: n_expert_used    = 0
0.00.270.995 I llm_load_print_meta: causal attn      = 1
0.00.270.996 I llm_load_print_meta: pooling type     = 0
0.00.270.996 I llm_load_print_meta: rope type        = 2
0.00.270.996 I llm_load_print_meta: rope scaling     = linear
0.00.270.997 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.998 I llm_load_print_meta: freq_scale_train = 1
0.00.270.998 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.999 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.999 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.999 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.000 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.000 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.000 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.001 I llm_load_print_meta: model type       = 2B
0.00.271.001 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.002 I llm_load_print_meta: model params     = 2.51 B
0.00.271.003 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.003 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.004 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.004 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.004 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.005 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.005 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.006 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.006 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.007 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.007 I llm_load_print_meta: max token length = 93
0.00.271.032 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.347.234 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.347.242 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.347.243 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.347.244 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.347.244 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.347.245 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.352.500 I llama_new_context_with_model: n_ctx      = 8192
0.00.352.508 I llama_new_context_with_model: n_batch    = 2048
0.00.352.509 I llama_new_context_with_model: n_ubatch   = 512
0.00.352.510 I llama_new_context_with_model: flash_attn = 0
0.00.352.512 I llama_new_context_with_model: freq_base  = 10000.0
0.00.352.513 I llama_new_context_with_model: freq_scale = 1
0.00.382.345 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.382.360 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.382.453 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.352 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.383.360 I llama_new_context_with_model: graph nodes  = 601
0.00.383.361 I llama_new_context_with_model: graph splits = 1
0.00.383.362 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.479.619 I main: llama threadpool init, n_threads = 4
0.00.479.634 I 
0.00.479.713 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.479.717 I 
0.00.479.753 I sampler seed: 1289268019
0.00.479.762 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.479.765 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.479.765 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.479.766 I 
 increasities:

The term "incredibility" is often used to describe something that is difficult to believe or accept. However, it can also be used

0.02.833.223 I llama_perf_sampler_print:    sampling time =       4.94 ms /    33 runs   (    0.15 ms per token,  6677.46 tokens per second)
0.02.833.225 I llama_perf_context_print:        load time =     477.61 ms
0.02.833.226 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.833.228 I llama_perf_context_print:        eval time =    2334.24 ms /    32 runs   (   72.95 ms per token,    13.71 tokens per second)
0.02.833.229 I llama_perf_context_print:       total time =    2353.61 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.566 I build: 3901 (e7022064) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.001.852 I main: load the model and apply lora adapter, if any
0.00.021.962 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.013 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.021 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.030 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.034 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.039 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.040 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.041 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.041 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.042 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.042 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.048 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.049 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.050 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.051 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.051 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.165 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.754 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.630 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.637 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.638 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.638 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.639 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.640 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.641 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.643 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.644 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.645 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.645 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.646 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.649 I llama_model_loader: - type  f32:   37 tensors
0.00.133.652 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.202 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.226.627 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.227.450 I llm_load_vocab: special tokens cache size = 5
0.00.248.347 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.248.365 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.248.366 I llm_load_print_meta: arch             = gemma
0.00.248.367 I llm_load_print_meta: vocab type       = SPM
0.00.248.368 I llm_load_print_meta: n_vocab          = 256000
0.00.248.368 I llm_load_print_meta: n_merges         = 0
0.00.248.369 I llm_load_print_meta: vocab_only       = 0
0.00.248.369 I llm_load_print_meta: n_ctx_train      = 8192
0.00.248.369 I llm_load_print_meta: n_embd           = 2048
0.00.248.370 I llm_load_print_meta: n_layer          = 18
0.00.248.383 I llm_load_print_meta: n_head           = 8
0.00.248.384 I llm_load_print_meta: n_head_kv        = 1
0.00.248.384 I llm_load_print_meta: n_rot            = 256
0.00.248.384 I llm_load_print_meta: n_swa            = 0
0.00.248.384 I llm_load_print_meta: n_embd_head_k    = 256
0.00.248.385 I llm_load_print_meta: n_embd_head_v    = 256
0.00.248.386 I llm_load_print_meta: n_gqa            = 8
0.00.248.387 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.248.387 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.248.388 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.248.391 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.248.391 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.248.392 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.248.392 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.248.393 I llm_load_print_meta: n_ff             = 16384
0.00.248.393 I llm_load_print_meta: n_expert         = 0
0.00.248.393 I llm_load_print_meta: n_expert_used    = 0
0.00.248.394 I llm_load_print_meta: causal attn      = 1
0.00.248.394 I llm_load_print_meta: pooling type     = 0
0.00.248.394 I llm_load_print_meta: rope type        = 2
0.00.248.394 I llm_load_print_meta: rope scaling     = linear
0.00.248.396 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.248.396 I llm_load_print_meta: freq_scale_train = 1
0.00.248.397 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.248.397 I llm_load_print_meta: rope_finetuned   = unknown
0.00.248.397 I llm_load_print_meta: ssm_d_conv       = 0
0.00.248.398 I llm_load_print_meta: ssm_d_inner      = 0
0.00.248.398 I llm_load_print_meta: ssm_d_state      = 0
0.00.248.398 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.248.398 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.248.399 I llm_load_print_meta: model type       = 2B
0.00.248.399 I llm_load_print_meta: model ftype      = Q8_0
0.00.248.400 I llm_load_print_meta: model params     = 2.51 B
0.00.248.401 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.248.401 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.248.402 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.248.402 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.248.402 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.248.402 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.248.403 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.248.403 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.248.404 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.248.404 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.248.405 I llm_load_print_meta: max token length = 93
0.00.248.426 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.318.483 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.318.490 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.323.638 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.643 I llama_new_context_with_model: n_batch    = 2048
0.00.323.643 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.644 I llama_new_context_with_model: flash_attn = 0
0.00.323.647 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.648 I llama_new_context_with_model: freq_scale = 1
0.00.354.025 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.040 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.133 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.004 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.355.011 I llama_new_context_with_model: graph nodes  = 601
0.00.355.012 I llama_new_context_with_model: graph splits = 1
0.00.355.014 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.453.957 I main: llama threadpool init, n_threads = 4
0.00.453.971 I 
0.00.454.046 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.454.050 I 
0.00.454.086 I sampler seed: 4220442503
0.00.454.096 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.454.098 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.454.099 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.454.100 I 
 increably, but the joy was short-lived.

The cause was a faulty pump. The consequences were swift and devastating. The water flooded the power station

0.02.981.830 I llama_perf_sampler_print:    sampling time =       5.27 ms /    33 runs   (    0.16 ms per token,  6258.30 tokens per second)
0.02.981.833 I llama_perf_context_print:        load time =     452.03 ms
0.02.981.834 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.981.836 I llama_perf_context_print:        eval time =    2507.71 ms /    32 runs   (   78.37 ms per token,    12.76 tokens per second)
0.02.981.836 I llama_perf_context_print:       total time =    2527.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m21.404s
user	0m41.028s
sys	0m9.652s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3901 (e7022064)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32092.46 ms
main:    total time = 32092.46 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.565 I build: 3901 (e7022064) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.765 I main: llama backend init
0.00.001.884 I main: load the model and apply lora adapter, if any
0.00.022.132 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.180 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.191 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.196 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.197 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.202 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.202 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.212 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.213 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.214 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.214 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.219 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.219 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.220 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.221 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.239 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.129 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.597 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.460 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.468 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.468 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.469 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.469 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.471 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.471 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.475 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.476 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.476 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.477 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.478 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.481 I llama_model_loader: - type  f32:   37 tensors
0.00.133.484 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.484 I llama_model_loader: - type q6_K:   19 tensors
0.00.219.994 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.172 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.997 I llm_load_vocab: special tokens cache size = 5
0.00.265.754 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.772 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.773 I llm_load_print_meta: arch             = gemma
0.00.265.773 I llm_load_print_meta: vocab type       = SPM
0.00.265.774 I llm_load_print_meta: n_vocab          = 256000
0.00.265.775 I llm_load_print_meta: n_merges         = 0
0.00.265.775 I llm_load_print_meta: vocab_only       = 0
0.00.265.775 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.776 I llm_load_print_meta: n_embd           = 2048
0.00.265.776 I llm_load_print_meta: n_layer          = 18
0.00.265.789 I llm_load_print_meta: n_head           = 8
0.00.265.790 I llm_load_print_meta: n_head_kv        = 1
0.00.265.790 I llm_load_print_meta: n_rot            = 256
0.00.265.790 I llm_load_print_meta: n_swa            = 0
0.00.265.790 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.791 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.792 I llm_load_print_meta: n_gqa            = 8
0.00.265.793 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.794 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.795 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.797 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.798 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.798 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.799 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.800 I llm_load_print_meta: n_ff             = 16384
0.00.265.801 I llm_load_print_meta: n_expert         = 0
0.00.265.801 I llm_load_print_meta: n_expert_used    = 0
0.00.265.802 I llm_load_print_meta: causal attn      = 1
0.00.265.802 I llm_load_print_meta: pooling type     = 0
0.00.265.802 I llm_load_print_meta: rope type        = 2
0.00.265.803 I llm_load_print_meta: rope scaling     = linear
0.00.265.804 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.805 I llm_load_print_meta: freq_scale_train = 1
0.00.265.805 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.806 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.806 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.807 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.807 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.807 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.808 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.809 I llm_load_print_meta: model type       = 2B
0.00.265.809 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.265.810 I llm_load_print_meta: model params     = 2.51 B
0.00.265.811 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.265.811 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.811 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.812 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.812 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.813 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.815 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.816 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.816 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.816 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.817 I llm_load_print_meta: max token length = 93
0.00.265.847 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.323.987 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.323.998 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.323.998 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.323.999 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.323.999 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.324.000 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.329.082 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.088 I llama_new_context_with_model: n_batch    = 2048
0.00.329.088 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.089 I llama_new_context_with_model: flash_attn = 0
0.00.329.092 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.093 I llama_new_context_with_model: freq_scale = 1
0.00.359.778 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.794 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.890 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.808 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.816 I llama_new_context_with_model: graph nodes  = 601
0.00.360.817 I llama_new_context_with_model: graph splits = 1
0.00.360.818 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.933 I main: llama threadpool init, n_threads = 4
0.00.447.948 I 
0.00.448.039 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.448.044 I 
0.00.448.086 I sampler seed: 597819185
0.00.448.098 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.103 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.448.107 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.107 I 
 encompassing the key elements of the question:

**Question:**

Discuss the key differences between traditional and modern marketing communications.

**Key elements to discuss:**

0.02.184.556 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6669.36 tokens per second)
0.02.184.558 I llama_perf_context_print:        load time =     445.98 ms
0.02.184.559 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.184.561 I llama_perf_context_print:        eval time =    1717.12 ms /    32 runs   (   53.66 ms per token,    18.64 tokens per second)
0.02.184.562 I llama_perf_context_print:       total time =    1736.63 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3901 (e7022064)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32197.64 ms
main:    total time = 32197.64 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.564 I build: 3901 (e7022064) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.850 I main: load the model and apply lora adapter, if any
0.00.022.266 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.281 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.289 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.290 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.294 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.295 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.296 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.296 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.297 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.298 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.302 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.303 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.304 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.304 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.305 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.003 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.346 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.240 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.249 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.250 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.250 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.251 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.251 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.252 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.255 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.255 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.260 I llama_model_loader: - type  f32:   37 tensors
0.00.133.262 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.263 I llama_model_loader: - type q6_K:   19 tensors
0.00.214.940 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.235.728 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.236.541 I llm_load_vocab: special tokens cache size = 5
0.00.257.197 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.257.215 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.257.215 I llm_load_print_meta: arch             = gemma
0.00.257.216 I llm_load_print_meta: vocab type       = SPM
0.00.257.217 I llm_load_print_meta: n_vocab          = 256000
0.00.257.217 I llm_load_print_meta: n_merges         = 0
0.00.257.217 I llm_load_print_meta: vocab_only       = 0
0.00.257.218 I llm_load_print_meta: n_ctx_train      = 8192
0.00.257.218 I llm_load_print_meta: n_embd           = 2048
0.00.257.218 I llm_load_print_meta: n_layer          = 18
0.00.257.232 I llm_load_print_meta: n_head           = 8
0.00.257.233 I llm_load_print_meta: n_head_kv        = 1
0.00.257.233 I llm_load_print_meta: n_rot            = 256
0.00.257.234 I llm_load_print_meta: n_swa            = 0
0.00.257.234 I llm_load_print_meta: n_embd_head_k    = 256
0.00.257.234 I llm_load_print_meta: n_embd_head_v    = 256
0.00.257.235 I llm_load_print_meta: n_gqa            = 8
0.00.257.236 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.257.237 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.257.238 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.257.239 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.257.239 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.257.240 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.257.240 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.257.241 I llm_load_print_meta: n_ff             = 16384
0.00.257.241 I llm_load_print_meta: n_expert         = 0
0.00.257.242 I llm_load_print_meta: n_expert_used    = 0
0.00.257.242 I llm_load_print_meta: causal attn      = 1
0.00.257.242 I llm_load_print_meta: pooling type     = 0
0.00.257.243 I llm_load_print_meta: rope type        = 2
0.00.257.243 I llm_load_print_meta: rope scaling     = linear
0.00.257.244 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.257.245 I llm_load_print_meta: freq_scale_train = 1
0.00.257.245 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.257.246 I llm_load_print_meta: rope_finetuned   = unknown
0.00.257.246 I llm_load_print_meta: ssm_d_conv       = 0
0.00.257.246 I llm_load_print_meta: ssm_d_inner      = 0
0.00.257.247 I llm_load_print_meta: ssm_d_state      = 0
0.00.257.248 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.257.248 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.257.249 I llm_load_print_meta: model type       = 2B
0.00.257.249 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.257.250 I llm_load_print_meta: model params     = 2.51 B
0.00.257.251 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.257.251 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.257.252 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.257.253 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.257.253 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.257.254 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.257.254 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.257.255 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.257.255 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.257.256 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.257.257 I llm_load_print_meta: max token length = 93
0.00.257.285 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.582.258 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.587.282 I llama_new_context_with_model: n_ctx      = 8192
0.00.587.288 I llama_new_context_with_model: n_batch    = 2048
0.00.587.289 I llama_new_context_with_model: n_ubatch   = 512
0.00.587.290 I llama_new_context_with_model: flash_attn = 0
0.00.587.293 I llama_new_context_with_model: freq_base  = 10000.0
0.00.587.294 I llama_new_context_with_model: freq_scale = 1
0.00.617.349 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.617.365 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.617.460 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.618.335 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.618.343 I llama_new_context_with_model: graph nodes  = 601
0.00.618.343 I llama_new_context_with_model: graph splits = 1
0.00.618.345 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.704.094 I main: llama threadpool init, n_threads = 4
0.00.704.106 I 
0.00.704.191 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.704.196 I 
0.00.704.241 I sampler seed: 3934264343
0.00.704.250 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.704.253 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.704.254 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.704.254 I 
 seconded sentences from various sources to create a longer passage.

The human body is a complex and interconnected system of organs, tissues, and cells. It is

0.02.410.774 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7012.32 tokens per second)
0.02.410.777 I llama_perf_context_print:        load time =     702.17 ms
0.02.410.778 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.410.779 I llama_perf_context_print:        eval time =    1687.73 ms /    32 runs   (   52.74 ms per token,    18.96 tokens per second)
0.02.410.780 I llama_perf_context_print:       total time =    1706.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.776s
user	8m16.698s
sys	0m7.414s
