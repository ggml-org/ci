+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.656 I build: 3930 (9e041024) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.870 I main: llama backend init
0.00.002.808 I main: load the model and apply lora adapter, if any
0.00.027.899 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.028.112 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.028.200 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.028.210 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.028.212 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.028.215 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.028.216 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.028.218 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.028.220 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.028.221 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.028.222 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.028.228 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.028.230 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.028.230 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.028.231 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.028.232 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.900 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.253.084 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.140 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.150 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.151 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.152 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.153 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.154 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.155 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.158 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.159 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.160 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.161 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.162 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.172 I llama_model_loader: - type  f32:   37 tensors
0.00.271.176 I llama_model_loader: - type q8_0:  127 tensors
0.00.450.416 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.492.237 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.494.021 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.499.353 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.510.803 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.789 I llm_load_vocab: special tokens cache size = 5
0.00.605.364 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.605.434 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.605.435 I llm_load_print_meta: arch             = gemma
0.00.605.436 I llm_load_print_meta: vocab type       = SPM
0.00.605.436 I llm_load_print_meta: n_vocab          = 256000
0.00.605.439 I llm_load_print_meta: n_merges         = 0
0.00.605.439 I llm_load_print_meta: vocab_only       = 0
0.00.605.440 I llm_load_print_meta: n_ctx_train      = 8192
0.00.605.440 I llm_load_print_meta: n_embd           = 2048
0.00.605.440 I llm_load_print_meta: n_layer          = 18
0.00.605.501 I llm_load_print_meta: n_head           = 8
0.00.605.508 I llm_load_print_meta: n_head_kv        = 1
0.00.605.509 I llm_load_print_meta: n_rot            = 256
0.00.605.509 I llm_load_print_meta: n_swa            = 0
0.00.605.509 I llm_load_print_meta: n_embd_head_k    = 256
0.00.605.510 I llm_load_print_meta: n_embd_head_v    = 256
0.00.605.515 I llm_load_print_meta: n_gqa            = 8
0.00.605.520 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.605.525 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.605.526 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.605.528 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.605.529 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.605.530 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.605.530 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.605.535 I llm_load_print_meta: n_ff             = 16384
0.00.605.536 I llm_load_print_meta: n_expert         = 0
0.00.605.541 I llm_load_print_meta: n_expert_used    = 0
0.00.605.541 I llm_load_print_meta: causal attn      = 1
0.00.605.542 I llm_load_print_meta: pooling type     = 0
0.00.605.542 I llm_load_print_meta: rope type        = 2
0.00.605.543 I llm_load_print_meta: rope scaling     = linear
0.00.605.545 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.605.546 I llm_load_print_meta: freq_scale_train = 1
0.00.605.546 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.605.547 I llm_load_print_meta: rope_finetuned   = unknown
0.00.605.547 I llm_load_print_meta: ssm_d_conv       = 0
0.00.605.548 I llm_load_print_meta: ssm_d_inner      = 0
0.00.605.548 I llm_load_print_meta: ssm_d_state      = 0
0.00.605.549 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.605.549 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.605.551 I llm_load_print_meta: model type       = 2B
0.00.605.552 I llm_load_print_meta: model ftype      = Q8_0
0.00.605.552 I llm_load_print_meta: model params     = 2.51 B
0.00.605.553 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.605.554 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.605.557 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.605.557 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.605.558 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.605.558 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.605.559 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.605.559 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.605.564 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.605.565 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.605.566 I llm_load_print_meta: max token length = 93
0.00.605.727 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.705.591 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.705.602 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.705.603 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.705.604 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.705.605 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.705.605 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.711.327 I llama_new_context_with_model: n_ctx      = 8192
0.00.711.335 I llama_new_context_with_model: n_batch    = 2048
0.00.711.335 I llama_new_context_with_model: n_ubatch   = 512
0.00.711.336 I llama_new_context_with_model: flash_attn = 0
0.00.711.339 I llama_new_context_with_model: freq_base  = 10000.0
0.00.711.340 I llama_new_context_with_model: freq_scale = 1
0.00.741.516 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.741.558 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.741.672 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.743.055 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.743.061 I llama_new_context_with_model: graph nodes  = 601
0.00.743.061 I llama_new_context_with_model: graph splits = 1
0.00.743.079 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.354.437 I main: llama threadpool init, n_threads = 4
0.01.354.449 I 
0.01.354.552 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.354.557 I 
0.01.354.737 I sampler seed: 2773165677
0.01.354.748 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.354.756 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.354.757 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.354.757 I 
 increasities with the following information:

**Information:**
- The average time it takes to resolve a support request is 10 minutes.
- The

0.14.922.349 I llama_perf_sampler_print:    sampling time =      49.07 ms /    33 runs   (    1.49 ms per token,   672.51 tokens per second)
0.14.922.353 I llama_perf_context_print:        load time =    1351.54 ms
0.14.922.355 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.922.357 I llama_perf_context_print:        eval time =   13486.24 ms /    32 runs   (  421.45 ms per token,     2.37 tokens per second)
0.14.922.359 I llama_perf_context_print:       total time =   13567.92 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.642 I build: 3930 (9e041024) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.849 I main: llama backend init
0.00.002.779 I main: load the model and apply lora adapter, if any
0.00.024.824 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.921 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.935 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.939 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.944 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.946 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.955 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.957 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.965 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.969 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.976 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.977 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.978 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.979 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.980 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.319 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.120 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.119 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.127 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.128 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.129 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.130 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.131 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.133 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.137 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.138 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.140 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.141 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.142 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.151 I llama_model_loader: - type  f32:   37 tensors
0.00.268.155 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.340 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.494.049 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.496.110 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.502.391 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.515.659 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.516.638 I llm_load_vocab: special tokens cache size = 5
0.00.614.276 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.614.346 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.614.347 I llm_load_print_meta: arch             = gemma
0.00.614.348 I llm_load_print_meta: vocab type       = SPM
0.00.614.349 I llm_load_print_meta: n_vocab          = 256000
0.00.614.352 I llm_load_print_meta: n_merges         = 0
0.00.614.352 I llm_load_print_meta: vocab_only       = 0
0.00.614.353 I llm_load_print_meta: n_ctx_train      = 8192
0.00.614.353 I llm_load_print_meta: n_embd           = 2048
0.00.614.353 I llm_load_print_meta: n_layer          = 18
0.00.614.417 I llm_load_print_meta: n_head           = 8
0.00.614.424 I llm_load_print_meta: n_head_kv        = 1
0.00.614.424 I llm_load_print_meta: n_rot            = 256
0.00.614.425 I llm_load_print_meta: n_swa            = 0
0.00.614.426 I llm_load_print_meta: n_embd_head_k    = 256
0.00.614.426 I llm_load_print_meta: n_embd_head_v    = 256
0.00.614.431 I llm_load_print_meta: n_gqa            = 8
0.00.614.436 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.614.441 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.614.443 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.614.444 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.614.445 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.614.445 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.614.445 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.614.450 I llm_load_print_meta: n_ff             = 16384
0.00.614.451 I llm_load_print_meta: n_expert         = 0
0.00.614.452 I llm_load_print_meta: n_expert_used    = 0
0.00.614.453 I llm_load_print_meta: causal attn      = 1
0.00.614.453 I llm_load_print_meta: pooling type     = 0
0.00.614.454 I llm_load_print_meta: rope type        = 2
0.00.614.454 I llm_load_print_meta: rope scaling     = linear
0.00.614.456 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.614.457 I llm_load_print_meta: freq_scale_train = 1
0.00.614.457 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.614.462 I llm_load_print_meta: rope_finetuned   = unknown
0.00.614.462 I llm_load_print_meta: ssm_d_conv       = 0
0.00.614.462 I llm_load_print_meta: ssm_d_inner      = 0
0.00.614.463 I llm_load_print_meta: ssm_d_state      = 0
0.00.614.463 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.614.463 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.614.472 I llm_load_print_meta: model type       = 2B
0.00.614.473 I llm_load_print_meta: model ftype      = Q8_0
0.00.614.474 I llm_load_print_meta: model params     = 2.51 B
0.00.614.475 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.614.475 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.614.476 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.614.477 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.614.478 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.614.478 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.614.478 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.614.482 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.614.488 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.614.489 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.614.490 I llm_load_print_meta: max token length = 93
0.00.614.657 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.710.247 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.715.873 I llama_new_context_with_model: n_ctx      = 8192
0.00.715.880 I llama_new_context_with_model: n_batch    = 2048
0.00.715.880 I llama_new_context_with_model: n_ubatch   = 512
0.00.715.881 I llama_new_context_with_model: flash_attn = 0
0.00.715.884 I llama_new_context_with_model: freq_base  = 10000.0
0.00.715.885 I llama_new_context_with_model: freq_scale = 1
0.00.746.904 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.746.945 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.747.058 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.748.442 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.748.447 I llama_new_context_with_model: graph nodes  = 601
0.00.748.448 I llama_new_context_with_model: graph splits = 1
0.00.748.463 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.360.173 I main: llama threadpool init, n_threads = 4
0.01.360.184 I 
0.01.360.288 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.360.292 I 
0.01.360.468 I sampler seed: 93825496
0.01.360.480 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.360.488 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.360.488 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.360.489 I 
 increably. [end of text]


0.03.057.213 I llama_perf_sampler_print:    sampling time =       6.23 ms /     5 runs   (    1.25 ms per token,   802.31 tokens per second)
0.03.057.234 I llama_perf_context_print:        load time =    1357.29 ms
0.03.057.235 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.057.237 I llama_perf_context_print:        eval time =    1685.03 ms /     4 runs   (  421.26 ms per token,     2.37 tokens per second)
0.03.057.238 I llama_perf_context_print:       total time =    1697.05 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.640 I build: 3930 (9e041024) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.859 I main: llama backend init
0.00.002.790 I main: load the model and apply lora adapter, if any
0.00.024.568 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.788 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.887 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.899 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.901 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.906 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.909 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.910 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.911 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.912 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.913 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.920 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.922 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.923 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.924 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.925 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.757 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.275 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.271 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.281 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.282 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.284 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.285 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.286 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.287 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.300 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.302 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.303 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.304 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.269.305 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.315 I llama_model_loader: - type  f32:   37 tensors
0.00.269.320 I llama_model_loader: - type q8_0:  127 tensors
0.00.444.769 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.488.900 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.490.680 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.495.903 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.507.766 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.508.734 I llm_load_vocab: special tokens cache size = 5
0.00.601.779 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.851 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.852 I llm_load_print_meta: arch             = gemma
0.00.601.853 I llm_load_print_meta: vocab type       = SPM
0.00.601.854 I llm_load_print_meta: n_vocab          = 256000
0.00.601.856 I llm_load_print_meta: n_merges         = 0
0.00.601.856 I llm_load_print_meta: vocab_only       = 0
0.00.601.857 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.857 I llm_load_print_meta: n_embd           = 2048
0.00.601.858 I llm_load_print_meta: n_layer          = 18
0.00.601.921 I llm_load_print_meta: n_head           = 8
0.00.601.928 I llm_load_print_meta: n_head_kv        = 1
0.00.601.929 I llm_load_print_meta: n_rot            = 256
0.00.601.929 I llm_load_print_meta: n_swa            = 0
0.00.601.930 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.930 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.935 I llm_load_print_meta: n_gqa            = 8
0.00.601.963 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.969 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.970 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.972 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.972 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.980 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.981 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.986 I llm_load_print_meta: n_ff             = 16384
0.00.601.987 I llm_load_print_meta: n_expert         = 0
0.00.601.994 I llm_load_print_meta: n_expert_used    = 0
0.00.601.995 I llm_load_print_meta: causal attn      = 1
0.00.601.996 I llm_load_print_meta: pooling type     = 0
0.00.601.996 I llm_load_print_meta: rope type        = 2
0.00.601.997 I llm_load_print_meta: rope scaling     = linear
0.00.601.999 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.999 I llm_load_print_meta: freq_scale_train = 1
0.00.602.000 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.602.000 I llm_load_print_meta: rope_finetuned   = unknown
0.00.602.001 I llm_load_print_meta: ssm_d_conv       = 0
0.00.602.002 I llm_load_print_meta: ssm_d_inner      = 0
0.00.602.002 I llm_load_print_meta: ssm_d_state      = 0
0.00.602.002 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.602.003 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.602.004 I llm_load_print_meta: model type       = 2B
0.00.602.005 I llm_load_print_meta: model ftype      = Q8_0
0.00.602.006 I llm_load_print_meta: model params     = 2.51 B
0.00.602.007 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.602.007 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.602.008 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.602.009 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.602.010 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.602.010 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.602.017 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.602.024 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.602.030 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.602.032 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.602.033 I llm_load_print_meta: max token length = 93
0.00.602.201 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.679.678 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.679.689 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.679.690 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.679.691 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.679.691 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.679.692 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.685.376 I llama_new_context_with_model: n_ctx      = 8192
0.00.685.382 I llama_new_context_with_model: n_batch    = 2048
0.00.685.383 I llama_new_context_with_model: n_ubatch   = 512
0.00.685.383 I llama_new_context_with_model: flash_attn = 0
0.00.685.386 I llama_new_context_with_model: freq_base  = 10000.0
0.00.685.386 I llama_new_context_with_model: freq_scale = 1
0.00.715.116 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.715.161 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.715.268 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.716.642 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.716.647 I llama_new_context_with_model: graph nodes  = 601
0.00.716.647 I llama_new_context_with_model: graph splits = 1
0.00.716.663 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.327.087 I main: llama threadpool init, n_threads = 4
0.01.327.098 I 
0.01.327.203 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.327.207 I 
0.01.327.381 I sampler seed: 3889769731
0.01.327.392 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.327.400 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.327.401 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.327.401 I 
 increasities, but I do not know how to proceed.

I am unsure of the appropriate action to take regarding a situation where a friend expresses their feelings for

0.14.825.154 I llama_perf_sampler_print:    sampling time =      49.10 ms /    33 runs   (    1.49 ms per token,   672.08 tokens per second)
0.14.825.157 I llama_perf_context_print:        load time =    1324.21 ms
0.14.825.158 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.825.171 I llama_perf_context_print:        eval time =   13415.84 ms /    32 runs   (  419.24 ms per token,     2.39 tokens per second)
0.14.825.173 I llama_perf_context_print:       total time =   13498.08 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.678 I build: 3930 (9e041024) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.911 I main: llama backend init
0.00.002.862 I main: load the model and apply lora adapter, if any
0.00.024.723 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.949 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.050 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.061 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.063 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.067 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.071 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.073 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.075 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.077 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.079 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.090 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.095 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.096 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.098 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.100 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.678 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.462 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.422 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.433 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.434 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.435 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.436 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.437 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.438 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.442 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.443 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.444 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.444 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.268.446 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.455 I llama_model_loader: - type  f32:   37 tensors
0.00.268.460 I llama_model_loader: - type q8_0:  127 tensors
0.00.452.752 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.497.658 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.499.737 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.506.072 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.519.394 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.520.447 I llm_load_vocab: special tokens cache size = 5
0.00.613.579 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.613.651 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.613.652 I llm_load_print_meta: arch             = gemma
0.00.613.653 I llm_load_print_meta: vocab type       = SPM
0.00.613.654 I llm_load_print_meta: n_vocab          = 256000
0.00.613.656 I llm_load_print_meta: n_merges         = 0
0.00.613.657 I llm_load_print_meta: vocab_only       = 0
0.00.613.657 I llm_load_print_meta: n_ctx_train      = 8192
0.00.613.657 I llm_load_print_meta: n_embd           = 2048
0.00.613.658 I llm_load_print_meta: n_layer          = 18
0.00.613.721 I llm_load_print_meta: n_head           = 8
0.00.613.728 I llm_load_print_meta: n_head_kv        = 1
0.00.613.729 I llm_load_print_meta: n_rot            = 256
0.00.613.730 I llm_load_print_meta: n_swa            = 0
0.00.613.730 I llm_load_print_meta: n_embd_head_k    = 256
0.00.613.756 I llm_load_print_meta: n_embd_head_v    = 256
0.00.613.764 I llm_load_print_meta: n_gqa            = 8
0.00.613.773 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.613.778 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.613.780 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.613.782 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.613.782 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.613.782 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.613.783 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.613.788 I llm_load_print_meta: n_ff             = 16384
0.00.613.788 I llm_load_print_meta: n_expert         = 0
0.00.613.789 I llm_load_print_meta: n_expert_used    = 0
0.00.613.790 I llm_load_print_meta: causal attn      = 1
0.00.613.790 I llm_load_print_meta: pooling type     = 0
0.00.613.791 I llm_load_print_meta: rope type        = 2
0.00.613.792 I llm_load_print_meta: rope scaling     = linear
0.00.613.794 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.613.794 I llm_load_print_meta: freq_scale_train = 1
0.00.613.795 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.613.804 I llm_load_print_meta: rope_finetuned   = unknown
0.00.613.805 I llm_load_print_meta: ssm_d_conv       = 0
0.00.613.805 I llm_load_print_meta: ssm_d_inner      = 0
0.00.613.805 I llm_load_print_meta: ssm_d_state      = 0
0.00.613.806 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.613.806 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.613.809 I llm_load_print_meta: model type       = 2B
0.00.613.811 I llm_load_print_meta: model ftype      = Q8_0
0.00.613.811 I llm_load_print_meta: model params     = 2.51 B
0.00.613.812 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.613.813 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.613.814 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.613.814 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.613.814 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.613.815 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.613.815 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.613.816 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.613.821 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.613.823 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.613.824 I llm_load_print_meta: max token length = 93
0.00.614.014 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.684.671 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.684.679 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.690.402 I llama_new_context_with_model: n_ctx      = 8192
0.00.690.410 I llama_new_context_with_model: n_batch    = 2048
0.00.690.410 I llama_new_context_with_model: n_ubatch   = 512
0.00.690.411 I llama_new_context_with_model: flash_attn = 0
0.00.690.414 I llama_new_context_with_model: freq_base  = 10000.0
0.00.690.414 I llama_new_context_with_model: freq_scale = 1
0.00.719.940 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.719.982 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.720.094 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.721.544 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.721.549 I llama_new_context_with_model: graph nodes  = 601
0.00.721.550 I llama_new_context_with_model: graph splits = 1
0.00.721.566 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.335.009 I main: llama threadpool init, n_threads = 4
0.01.335.019 I 
0.01.335.132 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.335.138 I 
0.01.335.329 I sampler seed: 3054560714
0.01.335.342 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.335.349 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.335.353 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.335.353 I 
 increasities to prevent the spread of disease. [end of text]


0.05.560.410 I llama_perf_sampler_print:    sampling time =      15.42 ms /    11 runs   (    1.40 ms per token,   713.17 tokens per second)
0.05.560.413 I llama_perf_context_print:        load time =    1332.04 ms
0.05.560.414 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.560.438 I llama_perf_context_print:        eval time =    4198.22 ms /    10 runs   (  419.82 ms per token,     2.38 tokens per second)
0.05.560.439 I llama_perf_context_print:       total time =    4225.41 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m47.978s
user	2m24.631s
sys	0m9.446s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3930 (9e041024)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198793.95 ms
main:    total time = 198793.95 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.653 I build: 3930 (9e041024) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.798 I main: load the model and apply lora adapter, if any
0.00.025.480 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.683 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.769 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.780 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.781 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.785 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.786 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.788 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.790 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.790 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.791 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.797 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.801 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.802 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.803 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.804 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.750 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.871 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.872 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.880 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.881 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.882 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.883 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.884 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.885 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.888 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.889 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.890 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.891 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.892 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.901 I llama_model_loader: - type  f32:   37 tensors
0.00.268.904 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.905 I llama_model_loader: - type q6_K:   19 tensors
0.00.446.837 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.491.082 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.493.071 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.499.455 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.514.111 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.138 I llm_load_vocab: special tokens cache size = 5
0.00.622.083 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.622.152 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.622.156 I llm_load_print_meta: arch             = gemma
0.00.622.157 I llm_load_print_meta: vocab type       = SPM
0.00.622.158 I llm_load_print_meta: n_vocab          = 256000
0.00.622.160 I llm_load_print_meta: n_merges         = 0
0.00.622.161 I llm_load_print_meta: vocab_only       = 0
0.00.622.161 I llm_load_print_meta: n_ctx_train      = 8192
0.00.622.161 I llm_load_print_meta: n_embd           = 2048
0.00.622.162 I llm_load_print_meta: n_layer          = 18
0.00.622.225 I llm_load_print_meta: n_head           = 8
0.00.622.234 I llm_load_print_meta: n_head_kv        = 1
0.00.622.236 I llm_load_print_meta: n_rot            = 256
0.00.622.237 I llm_load_print_meta: n_swa            = 0
0.00.622.237 I llm_load_print_meta: n_embd_head_k    = 256
0.00.622.238 I llm_load_print_meta: n_embd_head_v    = 256
0.00.622.243 I llm_load_print_meta: n_gqa            = 8
0.00.622.247 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.622.253 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.254 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.256 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.256 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.257 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.257 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.263 I llm_load_print_meta: n_ff             = 16384
0.00.622.264 I llm_load_print_meta: n_expert         = 0
0.00.622.264 I llm_load_print_meta: n_expert_used    = 0
0.00.622.283 I llm_load_print_meta: causal attn      = 1
0.00.622.286 I llm_load_print_meta: pooling type     = 0
0.00.622.287 I llm_load_print_meta: rope type        = 2
0.00.622.287 I llm_load_print_meta: rope scaling     = linear
0.00.622.288 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.289 I llm_load_print_meta: freq_scale_train = 1
0.00.622.289 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.290 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.290 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.290 I llm_load_print_meta: ssm_d_inner      = 0
0.00.622.291 I llm_load_print_meta: ssm_d_state      = 0
0.00.622.291 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.622.291 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.622.292 I llm_load_print_meta: model type       = 2B
0.00.622.293 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.622.294 I llm_load_print_meta: model params     = 2.51 B
0.00.622.294 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.622.296 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.622.296 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.622.297 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.622.297 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.622.298 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.622.298 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.622.299 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.622.305 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.622.307 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.622.307 I llm_load_print_meta: max token length = 93
0.00.622.472 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.682.988 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.683.001 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.683.001 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.683.002 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.683.003 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.683.003 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.688.689 I llama_new_context_with_model: n_ctx      = 8192
0.00.688.697 I llama_new_context_with_model: n_batch    = 2048
0.00.688.697 I llama_new_context_with_model: n_ubatch   = 512
0.00.688.698 I llama_new_context_with_model: flash_attn = 0
0.00.688.701 I llama_new_context_with_model: freq_base  = 10000.0
0.00.688.701 I llama_new_context_with_model: freq_scale = 1
0.00.719.090 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.719.134 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.719.246 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.720.651 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.720.656 I llama_new_context_with_model: graph nodes  = 601
0.00.720.656 I llama_new_context_with_model: graph splits = 1
0.00.720.673 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.297.037 I main: llama threadpool init, n_threads = 4
0.01.297.049 I 
0.01.297.155 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.297.159 I 
0.01.297.337 I sampler seed: 1331656802
0.01.297.348 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.297.356 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.297.356 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.297.356 I 
 encompsively.

**The Importance of Mindfulness**

Mindfulness is an essential practice for personal well-being, promoting mental and physical health, and reducing stress

0.12.197.711 I llama_perf_sampler_print:    sampling time =      48.97 ms /    33 runs   (    1.48 ms per token,   673.88 tokens per second)
0.12.197.714 I llama_perf_context_print:        load time =    1294.15 ms
0.12.197.715 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.197.717 I llama_perf_context_print:        eval time =   10818.58 ms /    32 runs   (  338.08 ms per token,     2.96 tokens per second)
0.12.197.718 I llama_perf_context_print:       total time =   10900.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3930 (9e041024)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198763.86 ms
main:    total time = 198763.86 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.661 I build: 3930 (9e041024) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.861 I main: llama backend init
0.00.002.794 I main: load the model and apply lora adapter, if any
0.00.024.984 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.076 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.091 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.092 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.097 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.099 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.100 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.101 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.102 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.103 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.109 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.111 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.112 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.113 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.114 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.284 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.262 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.037 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.045 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.046 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.047 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.048 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.049 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.051 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.054 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.055 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.064 I llama_model_loader: - type  f32:   37 tensors
0.00.268.067 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.068 I llama_model_loader: - type q6_K:   19 tensors
0.00.450.466 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.495.064 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.496.951 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.502.596 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.514.225 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.102 I llm_load_vocab: special tokens cache size = 5
0.00.626.042 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.626.113 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.626.114 I llm_load_print_meta: arch             = gemma
0.00.626.115 I llm_load_print_meta: vocab type       = SPM
0.00.626.116 I llm_load_print_meta: n_vocab          = 256000
0.00.626.118 I llm_load_print_meta: n_merges         = 0
0.00.626.118 I llm_load_print_meta: vocab_only       = 0
0.00.626.118 I llm_load_print_meta: n_ctx_train      = 8192
0.00.626.119 I llm_load_print_meta: n_embd           = 2048
0.00.626.119 I llm_load_print_meta: n_layer          = 18
0.00.626.184 I llm_load_print_meta: n_head           = 8
0.00.626.191 I llm_load_print_meta: n_head_kv        = 1
0.00.626.191 I llm_load_print_meta: n_rot            = 256
0.00.626.192 I llm_load_print_meta: n_swa            = 0
0.00.626.193 I llm_load_print_meta: n_embd_head_k    = 256
0.00.626.194 I llm_load_print_meta: n_embd_head_v    = 256
0.00.626.199 I llm_load_print_meta: n_gqa            = 8
0.00.626.203 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.626.208 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.626.210 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.626.212 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.626.213 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.626.223 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.626.224 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.626.229 I llm_load_print_meta: n_ff             = 16384
0.00.626.230 I llm_load_print_meta: n_expert         = 0
0.00.626.230 I llm_load_print_meta: n_expert_used    = 0
0.00.626.231 I llm_load_print_meta: causal attn      = 1
0.00.626.231 I llm_load_print_meta: pooling type     = 0
0.00.626.231 I llm_load_print_meta: rope type        = 2
0.00.626.236 I llm_load_print_meta: rope scaling     = linear
0.00.626.238 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.626.238 I llm_load_print_meta: freq_scale_train = 1
0.00.626.239 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.626.240 I llm_load_print_meta: rope_finetuned   = unknown
0.00.626.240 I llm_load_print_meta: ssm_d_conv       = 0
0.00.626.241 I llm_load_print_meta: ssm_d_inner      = 0
0.00.626.241 I llm_load_print_meta: ssm_d_state      = 0
0.00.626.242 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.626.242 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.626.256 I llm_load_print_meta: model type       = 2B
0.00.626.258 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.626.259 I llm_load_print_meta: model params     = 2.51 B
0.00.626.260 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.626.260 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.626.261 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.626.262 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.626.262 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.626.263 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.626.264 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.626.264 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.626.269 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.626.271 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.626.271 I llm_load_print_meta: max token length = 93
0.00.626.435 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.684.661 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.690.218 I llama_new_context_with_model: n_ctx      = 8192
0.00.690.225 I llama_new_context_with_model: n_batch    = 2048
0.00.690.226 I llama_new_context_with_model: n_ubatch   = 512
0.00.690.226 I llama_new_context_with_model: flash_attn = 0
0.00.690.229 I llama_new_context_with_model: freq_base  = 10000.0
0.00.690.230 I llama_new_context_with_model: freq_scale = 1
0.00.719.362 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.719.406 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.719.522 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.720.925 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.720.930 I llama_new_context_with_model: graph nodes  = 601
0.00.720.930 I llama_new_context_with_model: graph splits = 1
0.00.720.946 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.300.954 I main: llama threadpool init, n_threads = 4
0.01.300.966 I 
0.01.301.073 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.301.077 I 
0.01.301.255 I sampler seed: 4096401376
0.01.301.266 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.301.274 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.301.275 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.301.275 I 
 increasities and natural selection together to sculpt the diversity of life on Earth.

**a) Discuss the role of natural selection in shaping biodiversity.**

**b

0.12.180.489 I llama_perf_sampler_print:    sampling time =      49.01 ms /    33 runs   (    1.49 ms per token,   673.32 tokens per second)
0.12.180.495 I llama_perf_context_print:        load time =    1298.07 ms
0.12.180.496 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.180.498 I llama_perf_context_print:        eval time =   10798.27 ms /    32 runs   (  337.45 ms per token,     2.96 tokens per second)
0.12.180.500 I llama_perf_context_print:       total time =   10879.55 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m4.871s
user	50m6.954s
sys	0m6.301s
