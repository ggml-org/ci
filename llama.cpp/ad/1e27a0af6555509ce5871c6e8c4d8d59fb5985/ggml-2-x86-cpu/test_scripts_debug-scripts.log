+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.646 I build: 4159 (ad1e27a0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.701 E ggml_backend_load: failed to load build/ggml/src/ggml-amx/libggml-amx.so: build/ggml/src/ggml-amx/libggml-amx.so: cannot open shared object file: No such file or directory
0.00.000.706 E ggml_backend_load: failed to load build/ggml/src/ggml-blas/libggml-blas.so: build/ggml/src/ggml-blas/libggml-blas.so: cannot open shared object file: No such file or directory
0.00.000.712 E ggml_backend_load: failed to load build/ggml/src/ggml-cann/libggml-cann.so: build/ggml/src/ggml-cann/libggml-cann.so: cannot open shared object file: No such file or directory
0.00.000.714 E ggml_backend_load: failed to load build/ggml/src/ggml-cuda/libggml-cuda.so: build/ggml/src/ggml-cuda/libggml-cuda.so: cannot open shared object file: No such file or directory
0.00.000.717 E ggml_backend_load: failed to load build/ggml/src/ggml-hip/libggml-hip.so: build/ggml/src/ggml-hip/libggml-hip.so: cannot open shared object file: No such file or directory
0.00.000.720 E ggml_backend_load: failed to load build/ggml/src/ggml-kompute/libggml-kompute.so: build/ggml/src/ggml-kompute/libggml-kompute.so: cannot open shared object file: No such file or directory
0.00.000.723 E ggml_backend_load: failed to load build/ggml/src/ggml-metal/libggml-metal.so: build/ggml/src/ggml-metal/libggml-metal.so: cannot open shared object file: No such file or directory
0.00.000.726 E ggml_backend_load: failed to load build/ggml/src/ggml-rpc/libggml-rpc.so: build/ggml/src/ggml-rpc/libggml-rpc.so: cannot open shared object file: No such file or directory
0.00.000.728 E ggml_backend_load: failed to load build/ggml/src/ggml-sycl/libggml-sycl.so: build/ggml/src/ggml-sycl/libggml-sycl.so: cannot open shared object file: No such file or directory
0.00.000.739 E ggml_backend_load: failed to load build/ggml/src/ggml-vulkan/libggml-vulkan.so: build/ggml/src/ggml-vulkan/libggml-vulkan.so: cannot open shared object file: No such file or directory
0.00.000.742 E ggml_backend_load: failed to load build/ggml/src/ggml-musa/libggml-musa.so: build/ggml/src/ggml-musa/libggml-musa.so: cannot open shared object file: No such file or directory
0.00.000.747 E ggml_backend_load: failed to load build/ggml/src/ggml-cpu/libggml-cpu.so: build/ggml/src/ggml-cpu/libggml-cpu.so: cannot open shared object file: No such file or directory
0.00.000.938 I main: llama backend init
0.00.000.945 I main: load the model and apply lora adapter, if any
0.00.023.303 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.314 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.399 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.411 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.412 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.417 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.421 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.422 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.423 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.424 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.426 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.435 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.436 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.444 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.446 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.447 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.180 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.767 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.136 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.144 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.145 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.147 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.148 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.149 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.150 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.154 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.155 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.157 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.157 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.159 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.167 I llama_model_loader: - type  f32:   37 tensors
0.00.271.169 I llama_model_loader: - type q8_0:  127 tensors
0.00.466.793 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.528.207 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.529.111 I llm_load_vocab: special tokens cache size = 5
0.00.625.557 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.625.628 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.625.629 I llm_load_print_meta: arch             = gemma
0.00.625.630 I llm_load_print_meta: vocab type       = SPM
0.00.625.631 I llm_load_print_meta: n_vocab          = 256000
0.00.625.633 I llm_load_print_meta: n_merges         = 0
0.00.625.634 I llm_load_print_meta: vocab_only       = 0
0.00.625.634 I llm_load_print_meta: n_ctx_train      = 8192
0.00.625.634 I llm_load_print_meta: n_embd           = 2048
0.00.625.635 I llm_load_print_meta: n_layer          = 18
0.00.625.699 I llm_load_print_meta: n_head           = 8
0.00.625.706 I llm_load_print_meta: n_head_kv        = 1
0.00.625.708 I llm_load_print_meta: n_rot            = 256
0.00.625.709 I llm_load_print_meta: n_swa            = 0
0.00.625.717 I llm_load_print_meta: n_embd_head_k    = 256
0.00.625.718 I llm_load_print_meta: n_embd_head_v    = 256
0.00.625.723 I llm_load_print_meta: n_gqa            = 8
0.00.625.734 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.625.741 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.625.742 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.625.743 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.625.745 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.625.745 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.625.745 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.625.751 I llm_load_print_meta: n_ff             = 16384
0.00.625.751 I llm_load_print_meta: n_expert         = 0
0.00.625.762 I llm_load_print_meta: n_expert_used    = 0
0.00.625.765 I llm_load_print_meta: causal attn      = 1
0.00.625.765 I llm_load_print_meta: pooling type     = 0
0.00.625.766 I llm_load_print_meta: rope type        = 2
0.00.625.766 I llm_load_print_meta: rope scaling     = linear
0.00.625.768 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.625.769 I llm_load_print_meta: freq_scale_train = 1
0.00.625.769 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.625.769 I llm_load_print_meta: rope_finetuned   = unknown
0.00.625.770 I llm_load_print_meta: ssm_d_conv       = 0
0.00.625.770 I llm_load_print_meta: ssm_d_inner      = 0
0.00.625.770 I llm_load_print_meta: ssm_d_state      = 0
0.00.625.771 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.625.771 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.625.772 I llm_load_print_meta: model type       = 2B
0.00.625.773 I llm_load_print_meta: model ftype      = Q8_0
0.00.625.774 I llm_load_print_meta: model params     = 2.51 B
0.00.625.791 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.625.799 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.625.802 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.625.802 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.625.802 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.625.803 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.625.803 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.625.804 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.625.810 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.625.811 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.625.819 I llm_load_print_meta: max token length = 93
0.00.729.506 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.729.515 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.729.516 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.729.517 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.729.518 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.729.519 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.735.333 I llama_new_context_with_model: n_seq_max     = 1
0.00.735.341 I llama_new_context_with_model: n_ctx         = 4096
0.00.735.341 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.735.342 I llama_new_context_with_model: n_batch       = 2048
0.00.735.342 I llama_new_context_with_model: n_ubatch      = 512
0.00.735.342 I llama_new_context_with_model: flash_attn    = 0
0.00.735.345 I llama_new_context_with_model: freq_base     = 10000.0
0.00.735.346 I llama_new_context_with_model: freq_scale    = 1
0.00.735.347 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.750.799 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.750.842 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.750.962 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.753.532 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.753.536 I llama_new_context_with_model: graph nodes  = 601
0.00.753.537 I llama_new_context_with_model: graph splits = 1
0.00.753.561 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.362.777 I main: llama threadpool init, n_threads = 4
0.01.362.792 I 
0.01.362.891 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.362.895 I 
0.01.363.128 I sampler seed: 2056833545
0.01.363.141 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.363.148 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.363.151 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.363.151 I 
 increasities.

I am unable to generate a response that meets the safety and ethical guidelines because it involves sexually suggestive or inappropriate content. [end of text]


0.13.168.668 I llama_perf_sampler_print:    sampling time =      43.09 ms /    29 runs   (    1.49 ms per token,   673.06 tokens per second)
0.13.168.671 I llama_perf_context_print:        load time =    1361.74 ms
0.13.168.672 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.13.168.689 I llama_perf_context_print:        eval time =   11727.32 ms /    28 runs   (  418.83 ms per token,     2.39 tokens per second)
0.13.168.690 I llama_perf_context_print:       total time =   11805.90 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.621 I build: 4159 (ad1e27a0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.704 E ggml_backend_load: failed to load build/ggml/src/ggml-amx/libggml-amx.so: build/ggml/src/ggml-amx/libggml-amx.so: cannot open shared object file: No such file or directory
0.00.000.710 E ggml_backend_load: failed to load build/ggml/src/ggml-blas/libggml-blas.so: build/ggml/src/ggml-blas/libggml-blas.so: cannot open shared object file: No such file or directory
0.00.000.713 E ggml_backend_load: failed to load build/ggml/src/ggml-cann/libggml-cann.so: build/ggml/src/ggml-cann/libggml-cann.so: cannot open shared object file: No such file or directory
0.00.000.715 E ggml_backend_load: failed to load build/ggml/src/ggml-cuda/libggml-cuda.so: build/ggml/src/ggml-cuda/libggml-cuda.so: cannot open shared object file: No such file or directory
0.00.000.718 E ggml_backend_load: failed to load build/ggml/src/ggml-hip/libggml-hip.so: build/ggml/src/ggml-hip/libggml-hip.so: cannot open shared object file: No such file or directory
0.00.000.721 E ggml_backend_load: failed to load build/ggml/src/ggml-kompute/libggml-kompute.so: build/ggml/src/ggml-kompute/libggml-kompute.so: cannot open shared object file: No such file or directory
0.00.000.724 E ggml_backend_load: failed to load build/ggml/src/ggml-metal/libggml-metal.so: build/ggml/src/ggml-metal/libggml-metal.so: cannot open shared object file: No such file or directory
0.00.000.726 E ggml_backend_load: failed to load build/ggml/src/ggml-rpc/libggml-rpc.so: build/ggml/src/ggml-rpc/libggml-rpc.so: cannot open shared object file: No such file or directory
0.00.000.728 E ggml_backend_load: failed to load build/ggml/src/ggml-sycl/libggml-sycl.so: build/ggml/src/ggml-sycl/libggml-sycl.so: cannot open shared object file: No such file or directory
0.00.000.731 E ggml_backend_load: failed to load build/ggml/src/ggml-vulkan/libggml-vulkan.so: build/ggml/src/ggml-vulkan/libggml-vulkan.so: cannot open shared object file: No such file or directory
0.00.000.734 E ggml_backend_load: failed to load build/ggml/src/ggml-musa/libggml-musa.so: build/ggml/src/ggml-musa/libggml-musa.so: cannot open shared object file: No such file or directory
0.00.000.737 E ggml_backend_load: failed to load build/ggml/src/ggml-cpu/libggml-cpu.so: build/ggml/src/ggml-cpu/libggml-cpu.so: cannot open shared object file: No such file or directory
0.00.000.915 I main: llama backend init
0.00.000.923 I main: load the model and apply lora adapter, if any
0.00.023.236 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.334 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.348 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.352 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.357 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.359 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.360 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.362 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.363 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.364 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.371 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.372 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.373 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.374 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.375 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.585 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.008 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.273.471 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.273.482 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.273.484 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.273.485 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.273.486 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.273.487 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.273.489 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.273.492 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.273.493 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.273.495 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.273.512 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.273.515 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.273.525 I llama_model_loader: - type  f32:   37 tensors
0.00.273.528 I llama_model_loader: - type q8_0:  127 tensors
0.00.456.462 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.518.792 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.519.771 I llm_load_vocab: special tokens cache size = 5
0.00.622.915 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.622.986 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.622.987 I llm_load_print_meta: arch             = gemma
0.00.622.987 I llm_load_print_meta: vocab type       = SPM
0.00.622.988 I llm_load_print_meta: n_vocab          = 256000
0.00.622.990 I llm_load_print_meta: n_merges         = 0
0.00.622.990 I llm_load_print_meta: vocab_only       = 0
0.00.622.991 I llm_load_print_meta: n_ctx_train      = 8192
0.00.622.991 I llm_load_print_meta: n_embd           = 2048
0.00.622.991 I llm_load_print_meta: n_layer          = 18
0.00.623.057 I llm_load_print_meta: n_head           = 8
0.00.623.065 I llm_load_print_meta: n_head_kv        = 1
0.00.623.065 I llm_load_print_meta: n_rot            = 256
0.00.623.066 I llm_load_print_meta: n_swa            = 0
0.00.623.066 I llm_load_print_meta: n_embd_head_k    = 256
0.00.623.066 I llm_load_print_meta: n_embd_head_v    = 256
0.00.623.071 I llm_load_print_meta: n_gqa            = 8
0.00.623.076 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.623.080 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.623.081 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.623.083 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.623.083 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.623.085 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.623.085 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.623.089 I llm_load_print_meta: n_ff             = 16384
0.00.623.090 I llm_load_print_meta: n_expert         = 0
0.00.623.090 I llm_load_print_meta: n_expert_used    = 0
0.00.623.091 I llm_load_print_meta: causal attn      = 1
0.00.623.091 I llm_load_print_meta: pooling type     = 0
0.00.623.092 I llm_load_print_meta: rope type        = 2
0.00.623.092 I llm_load_print_meta: rope scaling     = linear
0.00.623.094 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.623.094 I llm_load_print_meta: freq_scale_train = 1
0.00.623.094 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.623.095 I llm_load_print_meta: rope_finetuned   = unknown
0.00.623.096 I llm_load_print_meta: ssm_d_conv       = 0
0.00.623.097 I llm_load_print_meta: ssm_d_inner      = 0
0.00.623.097 I llm_load_print_meta: ssm_d_state      = 0
0.00.623.098 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.623.098 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.623.099 I llm_load_print_meta: model type       = 2B
0.00.623.100 I llm_load_print_meta: model ftype      = Q8_0
0.00.623.101 I llm_load_print_meta: model params     = 2.51 B
0.00.623.111 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.623.112 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.623.112 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.623.113 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.623.114 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.623.114 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.623.115 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.623.115 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.623.121 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.623.123 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.623.123 I llm_load_print_meta: max token length = 93
0.00.718.727 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.724.583 I llama_new_context_with_model: n_seq_max     = 1
0.00.724.590 I llama_new_context_with_model: n_ctx         = 4096
0.00.724.591 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.724.591 I llama_new_context_with_model: n_batch       = 2048
0.00.724.592 I llama_new_context_with_model: n_ubatch      = 512
0.00.724.592 I llama_new_context_with_model: flash_attn    = 0
0.00.724.594 I llama_new_context_with_model: freq_base     = 10000.0
0.00.724.595 I llama_new_context_with_model: freq_scale    = 1
0.00.724.596 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.739.345 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.739.388 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.739.510 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.742.120 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.742.124 I llama_new_context_with_model: graph nodes  = 601
0.00.742.124 I llama_new_context_with_model: graph splits = 1
0.00.742.148 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.350.618 I main: llama threadpool init, n_threads = 4
0.01.350.635 I 
0.01.350.745 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.350.749 I 
0.01.350.978 I sampler seed: 1987505889
0.01.350.993 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.351.000 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.351.003 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.351.003 I 
 increably and with a mischievous grin.

"I'm not a riddle, my dear. I'm a puzzle waiting to be solved."

What

0.14.839.838 I llama_perf_sampler_print:    sampling time =      49.26 ms /    33 runs   (    1.49 ms per token,   669.98 tokens per second)
0.14.839.841 I llama_perf_context_print:        load time =    1349.61 ms
0.14.839.843 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.839.845 I llama_perf_context_print:        eval time =   13400.29 ms /    32 runs   (  418.76 ms per token,     2.39 tokens per second)
0.14.839.847 I llama_perf_context_print:       total time =   13489.23 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.635 I build: 4159 (ad1e27a0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.692 E ggml_backend_load: failed to load build/ggml/src/ggml-amx/libggml-amx.so: build/ggml/src/ggml-amx/libggml-amx.so: cannot open shared object file: No such file or directory
0.00.000.697 E ggml_backend_load: failed to load build/ggml/src/ggml-blas/libggml-blas.so: build/ggml/src/ggml-blas/libggml-blas.so: cannot open shared object file: No such file or directory
0.00.000.702 E ggml_backend_load: failed to load build/ggml/src/ggml-cann/libggml-cann.so: build/ggml/src/ggml-cann/libggml-cann.so: cannot open shared object file: No such file or directory
0.00.000.704 E ggml_backend_load: failed to load build/ggml/src/ggml-cuda/libggml-cuda.so: build/ggml/src/ggml-cuda/libggml-cuda.so: cannot open shared object file: No such file or directory
0.00.000.707 E ggml_backend_load: failed to load build/ggml/src/ggml-hip/libggml-hip.so: build/ggml/src/ggml-hip/libggml-hip.so: cannot open shared object file: No such file or directory
0.00.000.710 E ggml_backend_load: failed to load build/ggml/src/ggml-kompute/libggml-kompute.so: build/ggml/src/ggml-kompute/libggml-kompute.so: cannot open shared object file: No such file or directory
0.00.000.713 E ggml_backend_load: failed to load build/ggml/src/ggml-metal/libggml-metal.so: build/ggml/src/ggml-metal/libggml-metal.so: cannot open shared object file: No such file or directory
0.00.000.715 E ggml_backend_load: failed to load build/ggml/src/ggml-rpc/libggml-rpc.so: build/ggml/src/ggml-rpc/libggml-rpc.so: cannot open shared object file: No such file or directory
0.00.000.718 E ggml_backend_load: failed to load build/ggml/src/ggml-sycl/libggml-sycl.so: build/ggml/src/ggml-sycl/libggml-sycl.so: cannot open shared object file: No such file or directory
0.00.000.721 E ggml_backend_load: failed to load build/ggml/src/ggml-vulkan/libggml-vulkan.so: build/ggml/src/ggml-vulkan/libggml-vulkan.so: cannot open shared object file: No such file or directory
0.00.000.729 E ggml_backend_load: failed to load build/ggml/src/ggml-musa/libggml-musa.so: build/ggml/src/ggml-musa/libggml-musa.so: cannot open shared object file: No such file or directory
0.00.000.732 E ggml_backend_load: failed to load build/ggml/src/ggml-cpu/libggml-cpu.so: build/ggml/src/ggml-cpu/libggml-cpu.so: cannot open shared object file: No such file or directory
0.00.000.910 I main: llama backend init
0.00.000.917 I main: load the model and apply lora adapter, if any
0.00.023.679 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.691 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.781 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.793 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.796 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.802 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.803 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.804 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.806 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.807 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.808 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.814 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.815 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.816 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.817 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.818 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.301 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.416 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.801 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.809 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.810 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.811 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.812 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.814 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.815 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.819 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.820 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.821 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.822 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.272.823 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.831 I llama_model_loader: - type  f32:   37 tensors
0.00.272.833 I llama_model_loader: - type q8_0:  127 tensors
0.00.470.849 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.533.593 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.534.527 I llm_load_vocab: special tokens cache size = 5
0.00.631.898 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.631.974 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.631.975 I llm_load_print_meta: arch             = gemma
0.00.631.975 I llm_load_print_meta: vocab type       = SPM
0.00.631.976 I llm_load_print_meta: n_vocab          = 256000
0.00.631.979 I llm_load_print_meta: n_merges         = 0
0.00.631.979 I llm_load_print_meta: vocab_only       = 0
0.00.631.980 I llm_load_print_meta: n_ctx_train      = 8192
0.00.631.980 I llm_load_print_meta: n_embd           = 2048
0.00.631.980 I llm_load_print_meta: n_layer          = 18
0.00.632.047 I llm_load_print_meta: n_head           = 8
0.00.632.054 I llm_load_print_meta: n_head_kv        = 1
0.00.632.055 I llm_load_print_meta: n_rot            = 256
0.00.632.056 I llm_load_print_meta: n_swa            = 0
0.00.632.056 I llm_load_print_meta: n_embd_head_k    = 256
0.00.632.056 I llm_load_print_meta: n_embd_head_v    = 256
0.00.632.061 I llm_load_print_meta: n_gqa            = 8
0.00.632.067 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.632.074 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.632.076 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.632.078 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.632.092 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.632.093 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.632.109 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.632.117 I llm_load_print_meta: n_ff             = 16384
0.00.632.119 I llm_load_print_meta: n_expert         = 0
0.00.632.120 I llm_load_print_meta: n_expert_used    = 0
0.00.632.121 I llm_load_print_meta: causal attn      = 1
0.00.632.127 I llm_load_print_meta: pooling type     = 0
0.00.632.128 I llm_load_print_meta: rope type        = 2
0.00.632.128 I llm_load_print_meta: rope scaling     = linear
0.00.632.130 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.632.131 I llm_load_print_meta: freq_scale_train = 1
0.00.632.132 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.632.132 I llm_load_print_meta: rope_finetuned   = unknown
0.00.632.133 I llm_load_print_meta: ssm_d_conv       = 0
0.00.632.134 I llm_load_print_meta: ssm_d_inner      = 0
0.00.632.134 I llm_load_print_meta: ssm_d_state      = 0
0.00.632.135 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.632.136 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.632.137 I llm_load_print_meta: model type       = 2B
0.00.632.138 I llm_load_print_meta: model ftype      = Q8_0
0.00.632.140 I llm_load_print_meta: model params     = 2.51 B
0.00.632.151 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.632.152 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.632.154 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.632.155 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.632.155 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.632.157 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.632.158 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.632.158 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.632.166 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.632.168 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.632.169 I llm_load_print_meta: max token length = 93
0.00.707.647 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.707.656 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.707.657 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.707.658 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.707.658 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.707.659 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.713.719 I llama_new_context_with_model: n_seq_max     = 1
0.00.713.727 I llama_new_context_with_model: n_ctx         = 4096
0.00.713.728 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.713.728 I llama_new_context_with_model: n_batch       = 2048
0.00.713.728 I llama_new_context_with_model: n_ubatch      = 512
0.00.713.729 I llama_new_context_with_model: flash_attn    = 0
0.00.713.731 I llama_new_context_with_model: freq_base     = 10000.0
0.00.713.732 I llama_new_context_with_model: freq_scale    = 1
0.00.713.733 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.728.337 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.728.382 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.728.506 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.731.130 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.731.134 I llama_new_context_with_model: graph nodes  = 601
0.00.731.135 I llama_new_context_with_model: graph splits = 1
0.00.731.161 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.341.553 I main: llama threadpool init, n_threads = 4
0.01.341.571 I 
0.01.341.696 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.341.702 I 
0.01.341.994 I sampler seed: 3847706002
0.01.342.008 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.342.018 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.342.018 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.342.019 I 
 increamentalism, it is the belief that the development of a society is a series of stages that are predetermined and unchanging. This belief is often held by religious

0.14.927.111 I llama_perf_sampler_print:    sampling time =      49.29 ms /    33 runs   (    1.49 ms per token,   669.47 tokens per second)
0.14.927.115 I llama_perf_context_print:        load time =    1340.55 ms
0.14.927.117 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.927.119 I llama_perf_context_print:        eval time =   13496.15 ms /    32 runs   (  421.75 ms per token,     2.37 tokens per second)
0.14.927.120 I llama_perf_context_print:       total time =   13585.57 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.587 I build: 4159 (ad1e27a0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.643 E ggml_backend_load: failed to load build/ggml/src/ggml-amx/libggml-amx.so: build/ggml/src/ggml-amx/libggml-amx.so: cannot open shared object file: No such file or directory
0.00.000.647 E ggml_backend_load: failed to load build/ggml/src/ggml-blas/libggml-blas.so: build/ggml/src/ggml-blas/libggml-blas.so: cannot open shared object file: No such file or directory
0.00.000.650 E ggml_backend_load: failed to load build/ggml/src/ggml-cann/libggml-cann.so: build/ggml/src/ggml-cann/libggml-cann.so: cannot open shared object file: No such file or directory
0.00.000.653 E ggml_backend_load: failed to load build/ggml/src/ggml-cuda/libggml-cuda.so: build/ggml/src/ggml-cuda/libggml-cuda.so: cannot open shared object file: No such file or directory
0.00.000.663 E ggml_backend_load: failed to load build/ggml/src/ggml-hip/libggml-hip.so: build/ggml/src/ggml-hip/libggml-hip.so: cannot open shared object file: No such file or directory
0.00.000.667 E ggml_backend_load: failed to load build/ggml/src/ggml-kompute/libggml-kompute.so: build/ggml/src/ggml-kompute/libggml-kompute.so: cannot open shared object file: No such file or directory
0.00.000.672 E ggml_backend_load: failed to load build/ggml/src/ggml-metal/libggml-metal.so: build/ggml/src/ggml-metal/libggml-metal.so: cannot open shared object file: No such file or directory
0.00.000.676 E ggml_backend_load: failed to load build/ggml/src/ggml-rpc/libggml-rpc.so: build/ggml/src/ggml-rpc/libggml-rpc.so: cannot open shared object file: No such file or directory
0.00.000.680 E ggml_backend_load: failed to load build/ggml/src/ggml-sycl/libggml-sycl.so: build/ggml/src/ggml-sycl/libggml-sycl.so: cannot open shared object file: No such file or directory
0.00.000.685 E ggml_backend_load: failed to load build/ggml/src/ggml-vulkan/libggml-vulkan.so: build/ggml/src/ggml-vulkan/libggml-vulkan.so: cannot open shared object file: No such file or directory
0.00.000.692 E ggml_backend_load: failed to load build/ggml/src/ggml-musa/libggml-musa.so: build/ggml/src/ggml-musa/libggml-musa.so: cannot open shared object file: No such file or directory
0.00.000.696 E ggml_backend_load: failed to load build/ggml/src/ggml-cpu/libggml-cpu.so: build/ggml/src/ggml-cpu/libggml-cpu.so: cannot open shared object file: No such file or directory
0.00.000.884 I main: llama backend init
0.00.000.892 I main: load the model and apply lora adapter, if any
0.00.023.175 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.185 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.283 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.295 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.296 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.302 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.304 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.306 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.308 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.310 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.312 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.326 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.339 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.342 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.343 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.347 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.374 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.831 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.229 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.239 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.240 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.241 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.242 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.244 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.245 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.249 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.250 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.251 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.252 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.272.253 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.262 I llama_model_loader: - type  f32:   37 tensors
0.00.272.264 I llama_model_loader: - type q8_0:  127 tensors
0.00.459.352 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.526.455 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.527.375 I llm_load_vocab: special tokens cache size = 5
0.00.638.506 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.638.580 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.638.580 I llm_load_print_meta: arch             = gemma
0.00.638.581 I llm_load_print_meta: vocab type       = SPM
0.00.638.582 I llm_load_print_meta: n_vocab          = 256000
0.00.638.584 I llm_load_print_meta: n_merges         = 0
0.00.638.585 I llm_load_print_meta: vocab_only       = 0
0.00.638.585 I llm_load_print_meta: n_ctx_train      = 8192
0.00.638.586 I llm_load_print_meta: n_embd           = 2048
0.00.638.586 I llm_load_print_meta: n_layer          = 18
0.00.638.676 I llm_load_print_meta: n_head           = 8
0.00.638.686 I llm_load_print_meta: n_head_kv        = 1
0.00.638.687 I llm_load_print_meta: n_rot            = 256
0.00.638.687 I llm_load_print_meta: n_swa            = 0
0.00.638.688 I llm_load_print_meta: n_embd_head_k    = 256
0.00.638.689 I llm_load_print_meta: n_embd_head_v    = 256
0.00.638.694 I llm_load_print_meta: n_gqa            = 8
0.00.638.698 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.638.703 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.638.705 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.638.706 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.638.707 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.638.708 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.638.708 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.638.713 I llm_load_print_meta: n_ff             = 16384
0.00.638.718 I llm_load_print_meta: n_expert         = 0
0.00.638.718 I llm_load_print_meta: n_expert_used    = 0
0.00.638.719 I llm_load_print_meta: causal attn      = 1
0.00.638.719 I llm_load_print_meta: pooling type     = 0
0.00.638.719 I llm_load_print_meta: rope type        = 2
0.00.638.728 I llm_load_print_meta: rope scaling     = linear
0.00.638.730 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.638.731 I llm_load_print_meta: freq_scale_train = 1
0.00.638.731 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.638.732 I llm_load_print_meta: rope_finetuned   = unknown
0.00.638.739 I llm_load_print_meta: ssm_d_conv       = 0
0.00.638.740 I llm_load_print_meta: ssm_d_inner      = 0
0.00.638.740 I llm_load_print_meta: ssm_d_state      = 0
0.00.638.747 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.638.748 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.638.749 I llm_load_print_meta: model type       = 2B
0.00.638.757 I llm_load_print_meta: model ftype      = Q8_0
0.00.638.765 I llm_load_print_meta: model params     = 2.51 B
0.00.638.774 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.638.776 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.638.776 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.638.777 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.638.777 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.638.778 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.638.778 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.638.778 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.638.784 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.638.786 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.638.786 I llm_load_print_meta: max token length = 93
0.00.711.750 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.711.761 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.717.785 I llama_new_context_with_model: n_seq_max     = 1
0.00.717.793 I llama_new_context_with_model: n_ctx         = 4096
0.00.717.794 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.717.794 I llama_new_context_with_model: n_batch       = 2048
0.00.717.795 I llama_new_context_with_model: n_ubatch      = 512
0.00.717.795 I llama_new_context_with_model: flash_attn    = 0
0.00.717.797 I llama_new_context_with_model: freq_base     = 10000.0
0.00.717.798 I llama_new_context_with_model: freq_scale    = 1
0.00.717.799 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.732.283 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.732.324 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.732.447 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.735.072 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.735.076 I llama_new_context_with_model: graph nodes  = 601
0.00.735.076 I llama_new_context_with_model: graph splits = 1
0.00.735.098 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.344.160 I main: llama threadpool init, n_threads = 4
0.01.344.177 I 
0.01.344.287 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.344.291 I 
0.01.344.521 I sampler seed: 3655903904
0.01.344.535 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.344.543 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.344.546 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.344.546 I 
 increasities, a captivating display of athleticism, artistry, and athleticism.

**Answer:** Gymnastics [end of text]


0.10.625.716 I llama_perf_sampler_print:    sampling time =      33.87 ms /    23 runs   (    1.47 ms per token,   679.03 tokens per second)
0.10.625.719 I llama_perf_context_print:        load time =    1343.17 ms
0.10.625.720 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.625.735 I llama_perf_context_print:        eval time =    9220.04 ms /    22 runs   (  419.09 ms per token,     2.39 tokens per second)
0.10.625.736 I llama_perf_context_print:       total time =    9281.56 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m3.160s
user	3m25.437s
sys	0m9.327s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4159 (ad1e27a0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 185852.57 ms
main:    total time = 185852.57 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.677 I build: 4159 (ad1e27a0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.741 E ggml_backend_load: failed to load build/ggml/src/ggml-amx/libggml-amx.so: build/ggml/src/ggml-amx/libggml-amx.so: cannot open shared object file: No such file or directory
0.00.000.746 E ggml_backend_load: failed to load build/ggml/src/ggml-blas/libggml-blas.so: build/ggml/src/ggml-blas/libggml-blas.so: cannot open shared object file: No such file or directory
0.00.000.749 E ggml_backend_load: failed to load build/ggml/src/ggml-cann/libggml-cann.so: build/ggml/src/ggml-cann/libggml-cann.so: cannot open shared object file: No such file or directory
0.00.000.751 E ggml_backend_load: failed to load build/ggml/src/ggml-cuda/libggml-cuda.so: build/ggml/src/ggml-cuda/libggml-cuda.so: cannot open shared object file: No such file or directory
0.00.000.753 E ggml_backend_load: failed to load build/ggml/src/ggml-hip/libggml-hip.so: build/ggml/src/ggml-hip/libggml-hip.so: cannot open shared object file: No such file or directory
0.00.000.756 E ggml_backend_load: failed to load build/ggml/src/ggml-kompute/libggml-kompute.so: build/ggml/src/ggml-kompute/libggml-kompute.so: cannot open shared object file: No such file or directory
0.00.000.760 E ggml_backend_load: failed to load build/ggml/src/ggml-metal/libggml-metal.so: build/ggml/src/ggml-metal/libggml-metal.so: cannot open shared object file: No such file or directory
0.00.000.763 E ggml_backend_load: failed to load build/ggml/src/ggml-rpc/libggml-rpc.so: build/ggml/src/ggml-rpc/libggml-rpc.so: cannot open shared object file: No such file or directory
0.00.000.768 E ggml_backend_load: failed to load build/ggml/src/ggml-sycl/libggml-sycl.so: build/ggml/src/ggml-sycl/libggml-sycl.so: cannot open shared object file: No such file or directory
0.00.000.771 E ggml_backend_load: failed to load build/ggml/src/ggml-vulkan/libggml-vulkan.so: build/ggml/src/ggml-vulkan/libggml-vulkan.so: cannot open shared object file: No such file or directory
0.00.000.773 E ggml_backend_load: failed to load build/ggml/src/ggml-musa/libggml-musa.so: build/ggml/src/ggml-musa/libggml-musa.so: cannot open shared object file: No such file or directory
0.00.000.776 E ggml_backend_load: failed to load build/ggml/src/ggml-cpu/libggml-cpu.so: build/ggml/src/ggml-cpu/libggml-cpu.so: cannot open shared object file: No such file or directory
0.00.000.959 I main: llama backend init
0.00.000.967 I main: load the model and apply lora adapter, if any
0.00.023.335 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.346 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.448 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.460 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.462 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.468 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.472 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.473 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.474 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.475 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.476 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.488 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.490 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.492 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.493 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.494 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.621 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.082 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.531 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.538 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.539 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.541 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.541 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.543 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.545 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.549 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.550 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.552 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.553 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.554 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.562 I llama_model_loader: - type  f32:   37 tensors
0.00.271.565 I llama_model_loader: - type q4_K:  108 tensors
0.00.271.565 I llama_model_loader: - type q6_K:   19 tensors
0.00.454.519 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.514.309 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.252 I llm_load_vocab: special tokens cache size = 5
0.00.610.043 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.610.110 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.610.114 I llm_load_print_meta: arch             = gemma
0.00.610.115 I llm_load_print_meta: vocab type       = SPM
0.00.610.116 I llm_load_print_meta: n_vocab          = 256000
0.00.610.118 I llm_load_print_meta: n_merges         = 0
0.00.610.119 I llm_load_print_meta: vocab_only       = 0
0.00.610.119 I llm_load_print_meta: n_ctx_train      = 8192
0.00.610.120 I llm_load_print_meta: n_embd           = 2048
0.00.610.120 I llm_load_print_meta: n_layer          = 18
0.00.610.186 I llm_load_print_meta: n_head           = 8
0.00.610.195 I llm_load_print_meta: n_head_kv        = 1
0.00.610.196 I llm_load_print_meta: n_rot            = 256
0.00.610.196 I llm_load_print_meta: n_swa            = 0
0.00.610.197 I llm_load_print_meta: n_embd_head_k    = 256
0.00.610.198 I llm_load_print_meta: n_embd_head_v    = 256
0.00.610.202 I llm_load_print_meta: n_gqa            = 8
0.00.610.207 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.610.212 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.610.214 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.610.216 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.610.216 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.610.216 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.610.217 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.610.221 I llm_load_print_meta: n_ff             = 16384
0.00.610.222 I llm_load_print_meta: n_expert         = 0
0.00.610.222 I llm_load_print_meta: n_expert_used    = 0
0.00.610.223 I llm_load_print_meta: causal attn      = 1
0.00.610.224 I llm_load_print_meta: pooling type     = 0
0.00.610.224 I llm_load_print_meta: rope type        = 2
0.00.610.225 I llm_load_print_meta: rope scaling     = linear
0.00.610.226 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.610.227 I llm_load_print_meta: freq_scale_train = 1
0.00.610.228 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.610.229 I llm_load_print_meta: rope_finetuned   = unknown
0.00.610.229 I llm_load_print_meta: ssm_d_conv       = 0
0.00.610.239 I llm_load_print_meta: ssm_d_inner      = 0
0.00.610.240 I llm_load_print_meta: ssm_d_state      = 0
0.00.610.240 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.610.240 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.610.241 I llm_load_print_meta: model type       = 2B
0.00.610.243 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.610.243 I llm_load_print_meta: model params     = 2.51 B
0.00.610.252 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.610.261 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.610.261 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.610.262 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.610.263 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.610.263 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.610.264 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.610.264 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.610.273 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.610.275 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.610.277 I llm_load_print_meta: max token length = 93
0.00.673.216 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.673.224 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.673.225 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.673.226 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.673.227 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.673.227 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.678.959 I llama_new_context_with_model: n_seq_max     = 1
0.00.678.966 I llama_new_context_with_model: n_ctx         = 4096
0.00.678.966 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.678.967 I llama_new_context_with_model: n_batch       = 2048
0.00.678.967 I llama_new_context_with_model: n_ubatch      = 512
0.00.678.967 I llama_new_context_with_model: flash_attn    = 0
0.00.678.970 I llama_new_context_with_model: freq_base     = 10000.0
0.00.678.971 I llama_new_context_with_model: freq_scale    = 1
0.00.678.972 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.693.605 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.693.645 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.693.772 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.696.324 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.696.328 I llama_new_context_with_model: graph nodes  = 601
0.00.696.329 I llama_new_context_with_model: graph splits = 1
0.00.696.354 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.288.311 I main: llama threadpool init, n_threads = 4
0.01.288.330 I 
0.01.288.438 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.288.442 I 
0.01.288.673 I sampler seed: 965195059
0.01.288.686 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.288.695 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.288.696 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.288.697 I 
 seconally, and so the riddle was forgotten.

What is the riddle?

The riddle is a phrase that is forgotten quickly. [end of text]


0.11.005.453 I llama_perf_sampler_print:    sampling time =      43.03 ms /    29 runs   (    1.48 ms per token,   673.96 tokens per second)
0.11.005.457 I llama_perf_context_print:        load time =    1287.24 ms
0.11.005.458 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.005.459 I llama_perf_context_print:        eval time =    9639.07 ms /    28 runs   (  344.25 ms per token,     2.90 tokens per second)
0.11.005.460 I llama_perf_context_print:       total time =    9717.15 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4159 (ad1e27a0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 185704.16 ms
main:    total time = 185704.16 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.657 I build: 4159 (ad1e27a0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.757 E ggml_backend_load: failed to load build/ggml/src/ggml-amx/libggml-amx.so: build/ggml/src/ggml-amx/libggml-amx.so: cannot open shared object file: No such file or directory
0.00.000.773 E ggml_backend_load: failed to load build/ggml/src/ggml-blas/libggml-blas.so: build/ggml/src/ggml-blas/libggml-blas.so: cannot open shared object file: No such file or directory
0.00.000.784 E ggml_backend_load: failed to load build/ggml/src/ggml-cann/libggml-cann.so: build/ggml/src/ggml-cann/libggml-cann.so: cannot open shared object file: No such file or directory
0.00.000.787 E ggml_backend_load: failed to load build/ggml/src/ggml-cuda/libggml-cuda.so: build/ggml/src/ggml-cuda/libggml-cuda.so: cannot open shared object file: No such file or directory
0.00.000.790 E ggml_backend_load: failed to load build/ggml/src/ggml-hip/libggml-hip.so: build/ggml/src/ggml-hip/libggml-hip.so: cannot open shared object file: No such file or directory
0.00.000.793 E ggml_backend_load: failed to load build/ggml/src/ggml-kompute/libggml-kompute.so: build/ggml/src/ggml-kompute/libggml-kompute.so: cannot open shared object file: No such file or directory
0.00.000.796 E ggml_backend_load: failed to load build/ggml/src/ggml-metal/libggml-metal.so: build/ggml/src/ggml-metal/libggml-metal.so: cannot open shared object file: No such file or directory
0.00.000.799 E ggml_backend_load: failed to load build/ggml/src/ggml-rpc/libggml-rpc.so: build/ggml/src/ggml-rpc/libggml-rpc.so: cannot open shared object file: No such file or directory
0.00.000.808 E ggml_backend_load: failed to load build/ggml/src/ggml-sycl/libggml-sycl.so: build/ggml/src/ggml-sycl/libggml-sycl.so: cannot open shared object file: No such file or directory
0.00.000.811 E ggml_backend_load: failed to load build/ggml/src/ggml-vulkan/libggml-vulkan.so: build/ggml/src/ggml-vulkan/libggml-vulkan.so: cannot open shared object file: No such file or directory
0.00.000.813 E ggml_backend_load: failed to load build/ggml/src/ggml-musa/libggml-musa.so: build/ggml/src/ggml-musa/libggml-musa.so: cannot open shared object file: No such file or directory
0.00.000.815 E ggml_backend_load: failed to load build/ggml/src/ggml-cpu/libggml-cpu.so: build/ggml/src/ggml-cpu/libggml-cpu.so: cannot open shared object file: No such file or directory
0.00.001.001 I main: llama backend init
0.00.001.009 I main: load the model and apply lora adapter, if any
0.00.022.987 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.089 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.104 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.106 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.112 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.116 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.117 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.118 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.119 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.121 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.130 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.132 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.133 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.134 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.135 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.339 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.003 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.392 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.400 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.401 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.403 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.404 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.405 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.406 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.409 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.410 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.419 I llama_model_loader: - type  f32:   37 tensors
0.00.270.422 I llama_model_loader: - type q4_K:  108 tensors
0.00.270.423 I llama_model_loader: - type q6_K:   19 tensors
0.00.449.033 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.516.993 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.518.019 I llm_load_vocab: special tokens cache size = 5
0.00.614.659 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.614.726 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.614.727 I llm_load_print_meta: arch             = gemma
0.00.614.728 I llm_load_print_meta: vocab type       = SPM
0.00.614.729 I llm_load_print_meta: n_vocab          = 256000
0.00.614.731 I llm_load_print_meta: n_merges         = 0
0.00.614.732 I llm_load_print_meta: vocab_only       = 0
0.00.614.732 I llm_load_print_meta: n_ctx_train      = 8192
0.00.614.732 I llm_load_print_meta: n_embd           = 2048
0.00.614.733 I llm_load_print_meta: n_layer          = 18
0.00.614.796 I llm_load_print_meta: n_head           = 8
0.00.614.805 I llm_load_print_meta: n_head_kv        = 1
0.00.614.808 I llm_load_print_meta: n_rot            = 256
0.00.614.808 I llm_load_print_meta: n_swa            = 0
0.00.614.809 I llm_load_print_meta: n_embd_head_k    = 256
0.00.614.809 I llm_load_print_meta: n_embd_head_v    = 256
0.00.614.814 I llm_load_print_meta: n_gqa            = 8
0.00.614.819 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.614.824 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.614.826 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.614.827 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.614.829 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.614.829 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.614.838 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.614.844 I llm_load_print_meta: n_ff             = 16384
0.00.614.847 I llm_load_print_meta: n_expert         = 0
0.00.614.847 I llm_load_print_meta: n_expert_used    = 0
0.00.614.848 I llm_load_print_meta: causal attn      = 1
0.00.614.848 I llm_load_print_meta: pooling type     = 0
0.00.614.848 I llm_load_print_meta: rope type        = 2
0.00.614.849 I llm_load_print_meta: rope scaling     = linear
0.00.614.850 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.614.851 I llm_load_print_meta: freq_scale_train = 1
0.00.614.851 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.614.851 I llm_load_print_meta: rope_finetuned   = unknown
0.00.614.852 I llm_load_print_meta: ssm_d_conv       = 0
0.00.614.852 I llm_load_print_meta: ssm_d_inner      = 0
0.00.614.852 I llm_load_print_meta: ssm_d_state      = 0
0.00.614.853 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.614.853 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.614.854 I llm_load_print_meta: model type       = 2B
0.00.614.855 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.614.856 I llm_load_print_meta: model params     = 2.51 B
0.00.614.865 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.614.866 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.614.867 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.614.867 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.614.868 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.614.868 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.614.869 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.614.869 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.614.875 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.614.877 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.614.888 I llm_load_print_meta: max token length = 93
0.00.671.279 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.676.859 I llama_new_context_with_model: n_seq_max     = 1
0.00.676.864 I llama_new_context_with_model: n_ctx         = 4096
0.00.676.865 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.676.865 I llama_new_context_with_model: n_batch       = 2048
0.00.676.865 I llama_new_context_with_model: n_ubatch      = 512
0.00.676.866 I llama_new_context_with_model: flash_attn    = 0
0.00.676.868 I llama_new_context_with_model: freq_base     = 10000.0
0.00.676.869 I llama_new_context_with_model: freq_scale    = 1
0.00.676.870 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.691.499 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.691.541 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.691.660 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.694.236 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.694.239 I llama_new_context_with_model: graph nodes  = 601
0.00.694.240 I llama_new_context_with_model: graph splits = 1
0.00.694.262 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.275.062 I main: llama threadpool init, n_threads = 4
0.01.275.077 I 
0.01.275.186 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.275.190 I 
0.01.275.423 I sampler seed: 1839807366
0.01.275.437 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.275.447 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.275.448 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.275.448 I 
 increamically!

I am unable to generate a response that contains offensive or inappropriate content. [end of text]


0.07.886.979 I llama_perf_sampler_print:    sampling time =      29.33 ms /    20 runs   (    1.47 ms per token,   681.85 tokens per second)
0.07.886.982 I llama_perf_context_print:        load time =    1273.96 ms
0.07.886.983 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.07.886.985 I llama_perf_context_print:        eval time =    6558.27 ms /    19 runs   (  345.17 ms per token,     2.90 tokens per second)
0.07.886.999 I llama_perf_context_print:       total time =    6611.93 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m33.335s
user	46m18.853s
sys	0m6.385s
