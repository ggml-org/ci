+ ./bin/llama-cli --model ../models-mnt/pythia/2.8B/ggml-model-q5_k.gguf -t 1 -ngl 99 -c 0 -s 1234 -n 256 --ignore-eos -p 'I believe the meaning of life is'
ggml_vulkan: Found 1 Vulkan devices:
ggml_vulkan: 0 = Tesla T4 (NVIDIA) | uma: 0 | fp16: 1 | warp size: 32 | matrix cores: KHR_coopmat
0.00.000.097 I build: 4438 (eb21dd1e) with cc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0 for x86_64-linux-gnu
0.00.000.359 I main: llama backend init
0.00.000.368 I main: load the model and apply lora adapter, if any
0.00.000.544 I llama_model_load_from_file: using device Vulkan0 (Tesla T4) - 16384 MiB free
0.00.014.928 I llama_model_loader: loaded meta data with 23 key-value pairs and 388 tensors from ../models-mnt/pythia/2.8B/ggml-model-q5_k.gguf (version GGUF V3 (latest))
0.00.014.946 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.014.953 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.014.955 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.014.956 I llama_model_loader: - kv   2:                               general.name str              = 2.8B
0.00.014.956 I llama_model_loader: - kv   3:                           general.finetune str              = 2.8B
0.00.014.956 I llama_model_loader: - kv   4:                         general.size_label str              = 2.8B
0.00.014.959 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.014.960 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2560
0.00.014.960 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 32
0.00.014.961 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 10240
0.00.014.962 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 20
0.00.014.962 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 32
0.00.014.963 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.014.966 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.014.967 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.014.967 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.023.377 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.025.245 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.032.935 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.032.941 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.032.941 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.032.942 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.032.942 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.032.943 I llama_model_loader: - kv  22:                          general.file_type u32              = 17
0.00.032.945 I llama_model_loader: - type  f32:  258 tensors
0.00.032.945 I llama_model_loader: - type q5_K:   81 tensors
0.00.032.945 I llama_model_loader: - type q6_K:   49 tensors
0.00.032.947 I print_info: file format = GGUF V3 (latest)
0.00.032.948 I print_info: file type   = Q5_K - Medium
0.00.032.949 I print_info: file size   = 1.93 GiB (5.96 BPW) 
0.00.083.329 I load_vocab: special tokens cache size = 25
0.00.105.646 I load_vocab: token to piece cache size = 0.2984 MB
0.00.105.659 I print_info: arch             = gptneox
0.00.105.661 I print_info: vocab type       = BPE
0.00.105.661 I print_info: n_vocab          = 50304
0.00.105.662 I print_info: n_merges         = 50009
0.00.105.662 I print_info: vocab_only       = 0
0.00.105.662 I print_info: n_ctx_train      = 2048
0.00.105.663 I print_info: n_embd           = 2560
0.00.105.663 I print_info: n_layer          = 32
0.00.105.674 I print_info: n_head           = 32
0.00.105.676 I print_info: n_head_kv        = 32
0.00.105.676 I print_info: n_rot            = 20
0.00.105.676 I print_info: n_swa            = 0
0.00.105.677 I print_info: n_embd_head_k    = 80
0.00.105.677 I print_info: n_embd_head_v    = 80
0.00.105.679 I print_info: n_gqa            = 1
0.00.105.681 I print_info: n_embd_k_gqa     = 2560
0.00.105.683 I print_info: n_embd_v_gqa     = 2560
0.00.105.684 I print_info: f_norm_eps       = 1.0e-05
0.00.105.686 I print_info: f_norm_rms_eps   = 0.0e+00
0.00.105.686 I print_info: f_clamp_kqv      = 0.0e+00
0.00.105.686 I print_info: f_max_alibi_bias = 0.0e+00
0.00.105.687 I print_info: f_logit_scale    = 0.0e+00
0.00.105.688 I print_info: n_ff             = 10240
0.00.105.688 I print_info: n_expert         = 0
0.00.105.689 I print_info: n_expert_used    = 0
0.00.105.689 I print_info: causal attn      = 1
0.00.105.689 I print_info: pooling type     = 0
0.00.105.689 I print_info: rope type        = 2
0.00.105.690 I print_info: rope scaling     = linear
0.00.105.691 I print_info: freq_base_train  = 10000.0
0.00.105.692 I print_info: freq_scale_train = 1
0.00.105.692 I print_info: n_ctx_orig_yarn  = 2048
0.00.105.693 I print_info: rope_finetuned   = unknown
0.00.105.693 I print_info: ssm_d_conv       = 0
0.00.105.693 I print_info: ssm_d_inner      = 0
0.00.105.694 I print_info: ssm_d_state      = 0
0.00.105.694 I print_info: ssm_dt_rank      = 0
0.00.105.694 I print_info: ssm_dt_b_c_rms   = 0
0.00.105.695 I print_info: model type       = 2.8B
0.00.105.696 I print_info: model params     = 2.78 B
0.00.105.696 I print_info: general.name     = 2.8B
0.00.105.696 I print_info: BOS token        = 0 '<|endoftext|>'
0.00.105.697 I print_info: EOS token        = 0 '<|endoftext|>'
0.00.105.697 I print_info: EOT token        = 0 '<|endoftext|>'
0.00.105.697 I print_info: UNK token        = 0 '<|endoftext|>'
0.00.105.698 I print_info: LF token         = 128 'Ä'
0.00.105.698 I print_info: EOG token        = 0 '<|endoftext|>'
0.00.105.698 I print_info: max token length = 1024
ggml_vulkan: Compiling shaders...................................................Done!
0.10.196.468 I load_tensors: offloading 32 repeating layers to GPU
0.10.196.477 I load_tensors: offloading output layer to GPU
0.10.196.478 I load_tensors: offloaded 33/33 layers to GPU
0.10.196.484 I load_tensors:      Vulkan0 model buffer size =  1887.64 MiB
0.10.196.485 I load_tensors:   CPU_Mapped model buffer size =    84.43 MiB
0.10.973.987 I llama_new_context_with_model: n_seq_max     = 1
0.10.973.996 I llama_new_context_with_model: n_ctx         = 2048
0.10.973.996 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.10.973.997 I llama_new_context_with_model: n_batch       = 2048
0.10.973.997 I llama_new_context_with_model: n_ubatch      = 512
0.10.973.997 I llama_new_context_with_model: flash_attn    = 0
0.10.974.001 I llama_new_context_with_model: freq_base     = 10000.0
0.10.974.002 I llama_new_context_with_model: freq_scale    = 1
0.10.974.628 I llama_kv_cache_init: kv_size = 2048, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 32, can_shift = 1
0.11.017.255 I llama_kv_cache_init:    Vulkan0 KV buffer size =   640.00 MiB
0.11.017.266 I llama_new_context_with_model: KV self size  =  640.00 MiB, K (f16):  320.00 MiB, V (f16):  320.00 MiB
0.11.017.876 I llama_new_context_with_model: Vulkan_Host  output buffer size =     0.19 MiB
0.11.029.476 I llama_new_context_with_model:    Vulkan0 compute buffer size =   162.00 MiB
0.11.029.483 I llama_new_context_with_model: Vulkan_Host compute buffer size =     9.01 MiB
0.11.029.484 I llama_new_context_with_model: graph nodes  = 1287
0.11.029.484 I llama_new_context_with_model: graph splits = 2
0.11.029.492 I common_init_from_params: added <|endoftext|> logit bias = -inf
0.11.029.881 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 2048
0.11.029.885 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.11.073.372 I main: llama threadpool init, n_threads = 1
0.11.073.383 I 
0.11.073.459 I system_info: n_threads = 1 (n_threads_batch = 1) / 4 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.11.073.463 I 
0.11.073.576 I sampler seed: 1234
0.11.073.587 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 2048
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.11.073.592 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.11.073.592 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 256, n_keep = 0
0.11.073.592 I 
I believe the meaning of life is to create beauty. It's not a competition. It's not a contest. It's not a competition.

(To the audience)

If you don't like to be challenged, don't go to art school.

# The Secret Language

_I have to go to a party. I'm going to be late, and I don't have any money. I'll take the bus. I'll go down to the street, find a taxi, and it'll cost you. I'll go to the subway, and it'll cost you. I'll go down to the street and buy a subway ticket, and it'll cost you. I'll take a cab, and it'll cost you. I'll take a bus, and it'll cost you. I'll take the subway, and it'll cost you. I'll take a taxi, and it'll cost you. I'll take the bus, and it'll cost you._

_I'll go to the party. I'll be late._

_I'll take the bus. I'll go down to the street, find a taxi, and it'll cost you. I'll go to the subway, and it'll cost you. I'll go down to the

0.14.773.389 I llama_perf_sampler_print:    sampling time =      12.60 ms /   263 runs   (    0.05 ms per token, 20876.33 tokens per second)
0.14.773.391 I llama_perf_context_print:        load time =   11072.82 ms
0.14.773.393 I llama_perf_context_print: prompt eval time =      36.67 ms /     7 tokens (    5.24 ms per token,   190.90 tokens per second)
0.14.773.394 I llama_perf_context_print:        eval time =    3633.17 ms /   255 runs   (   14.25 ms per token,    70.19 tokens per second)
0.14.773.395 I llama_perf_context_print:       total time =    3700.02 ms /   262 tokens

real	0m15.087s
user	0m1.147s
sys	0m1.931s
