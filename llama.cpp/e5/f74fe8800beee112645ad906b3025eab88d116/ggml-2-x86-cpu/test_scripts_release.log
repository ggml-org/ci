+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.539 I build: 3913 (e5f74fe8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.734 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.384 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.433 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.444 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.449 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.453 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.456 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.457 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.458 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.458 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.459 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.459 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.463 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.464 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.464 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.465 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.465 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.418 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.802 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.735 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.743 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.744 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.745 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.746 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.747 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.748 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.751 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.752 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.753 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.753 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.755 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.759 I llama_model_loader: - type  f32:   37 tensors
0.00.132.761 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.637 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.950 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.718 I llm_load_vocab: special tokens cache size = 5
0.00.272.541 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.559 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.560 I llm_load_print_meta: arch             = gemma
0.00.272.560 I llm_load_print_meta: vocab type       = SPM
0.00.272.561 I llm_load_print_meta: n_vocab          = 256000
0.00.272.561 I llm_load_print_meta: n_merges         = 0
0.00.272.562 I llm_load_print_meta: vocab_only       = 0
0.00.272.562 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.562 I llm_load_print_meta: n_embd           = 2048
0.00.272.563 I llm_load_print_meta: n_layer          = 18
0.00.272.574 I llm_load_print_meta: n_head           = 8
0.00.272.575 I llm_load_print_meta: n_head_kv        = 1
0.00.272.575 I llm_load_print_meta: n_rot            = 256
0.00.272.575 I llm_load_print_meta: n_swa            = 0
0.00.272.576 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.576 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.577 I llm_load_print_meta: n_gqa            = 8
0.00.272.578 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.579 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.580 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.581 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.581 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.582 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.582 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.583 I llm_load_print_meta: n_ff             = 16384
0.00.272.584 I llm_load_print_meta: n_expert         = 0
0.00.272.584 I llm_load_print_meta: n_expert_used    = 0
0.00.272.584 I llm_load_print_meta: causal attn      = 1
0.00.272.584 I llm_load_print_meta: pooling type     = 0
0.00.272.584 I llm_load_print_meta: rope type        = 2
0.00.272.585 I llm_load_print_meta: rope scaling     = linear
0.00.272.586 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.587 I llm_load_print_meta: freq_scale_train = 1
0.00.272.587 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.588 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.588 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.588 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.588 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.589 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.589 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.589 I llm_load_print_meta: model type       = 2B
0.00.272.590 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.591 I llm_load_print_meta: model params     = 2.51 B
0.00.272.592 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.592 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.592 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.593 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.593 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.594 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.594 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.595 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.595 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.595 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.596 I llm_load_print_meta: max token length = 93
0.00.272.616 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.372.237 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.372.245 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.372.246 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.372.246 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.372.247 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.372.247 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.377.401 I llama_new_context_with_model: n_ctx      = 8192
0.00.377.408 I llama_new_context_with_model: n_batch    = 2048
0.00.377.408 I llama_new_context_with_model: n_ubatch   = 512
0.00.377.409 I llama_new_context_with_model: flash_attn = 0
0.00.377.411 I llama_new_context_with_model: freq_base  = 10000.0
0.00.377.412 I llama_new_context_with_model: freq_scale = 1
0.00.405.837 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.405.850 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.405.937 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.406.818 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.406.826 I llama_new_context_with_model: graph nodes  = 601
0.00.406.826 I llama_new_context_with_model: graph splits = 1
0.00.406.828 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.498.032 I main: llama threadpool init, n_threads = 4
0.00.498.044 I 
0.00.498.121 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.498.125 I 
0.00.498.161 I sampler seed: 3226062503
0.00.498.171 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.174 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.498.175 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.175 I 
 increasities, and her desire to bring the war to an end.

**Analysis:**

The provided text depicts a character with complex motivations and a desire to

0.02.759.797 I llama_perf_sampler_print:    sampling time =       4.72 ms /    33 runs   (    0.14 ms per token,  6987.08 tokens per second)
0.02.759.799 I llama_perf_context_print:        load time =     496.14 ms
0.02.759.800 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.759.802 I llama_perf_context_print:        eval time =    2243.34 ms /    32 runs   (   70.10 ms per token,    14.26 tokens per second)
0.02.759.802 I llama_perf_context_print:       total time =    2261.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.541 I build: 3913 (e5f74fe8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.890 I main: load the model and apply lora adapter, if any
0.00.022.225 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.235 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.243 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.243 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.247 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.247 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.248 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.249 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.250 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.251 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.255 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.255 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.256 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.256 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.257 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.857 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.667 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.512 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.519 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.520 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.520 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.521 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.522 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.522 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.525 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.525 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.526 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.527 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.528 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.530 I llama_model_loader: - type  f32:   37 tensors
0.00.132.533 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.649 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.643 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.457 I llm_load_vocab: special tokens cache size = 5
0.00.274.598 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.617 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.617 I llm_load_print_meta: arch             = gemma
0.00.274.618 I llm_load_print_meta: vocab type       = SPM
0.00.274.619 I llm_load_print_meta: n_vocab          = 256000
0.00.274.619 I llm_load_print_meta: n_merges         = 0
0.00.274.620 I llm_load_print_meta: vocab_only       = 0
0.00.274.620 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.620 I llm_load_print_meta: n_embd           = 2048
0.00.274.620 I llm_load_print_meta: n_layer          = 18
0.00.274.633 I llm_load_print_meta: n_head           = 8
0.00.274.634 I llm_load_print_meta: n_head_kv        = 1
0.00.274.634 I llm_load_print_meta: n_rot            = 256
0.00.274.635 I llm_load_print_meta: n_swa            = 0
0.00.274.635 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.635 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.636 I llm_load_print_meta: n_gqa            = 8
0.00.274.637 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.638 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.639 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.640 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.641 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.641 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.641 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.642 I llm_load_print_meta: n_ff             = 16384
0.00.274.642 I llm_load_print_meta: n_expert         = 0
0.00.274.643 I llm_load_print_meta: n_expert_used    = 0
0.00.274.643 I llm_load_print_meta: causal attn      = 1
0.00.274.643 I llm_load_print_meta: pooling type     = 0
0.00.274.643 I llm_load_print_meta: rope type        = 2
0.00.274.644 I llm_load_print_meta: rope scaling     = linear
0.00.274.645 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.646 I llm_load_print_meta: freq_scale_train = 1
0.00.274.646 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.647 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.647 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.647 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.647 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.648 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.648 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.648 I llm_load_print_meta: model type       = 2B
0.00.274.649 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.650 I llm_load_print_meta: model params     = 2.51 B
0.00.274.650 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.651 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.651 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.652 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.652 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.652 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.653 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.653 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.654 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.654 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.654 I llm_load_print_meta: max token length = 93
0.00.274.677 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.369.547 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.374.605 I llama_new_context_with_model: n_ctx      = 8192
0.00.374.611 I llama_new_context_with_model: n_batch    = 2048
0.00.374.612 I llama_new_context_with_model: n_ubatch   = 512
0.00.374.612 I llama_new_context_with_model: flash_attn = 0
0.00.374.614 I llama_new_context_with_model: freq_base  = 10000.0
0.00.374.615 I llama_new_context_with_model: freq_scale = 1
0.00.404.952 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.404.970 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.405.075 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.928 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.405.935 I llama_new_context_with_model: graph nodes  = 601
0.00.405.936 I llama_new_context_with_model: graph splits = 1
0.00.405.938 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.709 I main: llama threadpool init, n_threads = 4
0.00.493.720 I 
0.00.493.797 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.493.800 I 
0.00.493.837 I sampler seed: 2152828337
0.00.493.846 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.493.848 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.493.849 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.493.849 I 
 increably. 

I am unable to access the text you provided as I am unable to access external websites. [end of text]


0.02.140.670 I llama_perf_sampler_print:    sampling time =       3.56 ms /    25 runs   (    0.14 ms per token,  7026.42 tokens per second)
0.02.140.673 I llama_perf_context_print:        load time =     491.79 ms
0.02.140.674 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.140.676 I llama_perf_context_print:        eval time =    1633.06 ms /    24 runs   (   68.04 ms per token,    14.70 tokens per second)
0.02.140.678 I llama_perf_context_print:       total time =    1646.97 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.576 I build: 3913 (e5f74fe8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.799 I main: llama backend init
0.00.001.896 I main: load the model and apply lora adapter, if any
0.00.022.003 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.051 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.061 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.066 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.067 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.071 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.071 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.072 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.073 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.073 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.073 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.077 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.078 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.078 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.079 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.079 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.227 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.967 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.868 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.874 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.875 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.876 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.876 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.878 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.878 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.881 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.881 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.882 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.882 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.883 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.888 I llama_model_loader: - type  f32:   37 tensors
0.00.132.891 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.160 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.193 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.940 I llm_load_vocab: special tokens cache size = 5
0.00.267.757 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.771 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.772 I llm_load_print_meta: arch             = gemma
0.00.267.773 I llm_load_print_meta: vocab type       = SPM
0.00.267.773 I llm_load_print_meta: n_vocab          = 256000
0.00.267.774 I llm_load_print_meta: n_merges         = 0
0.00.267.774 I llm_load_print_meta: vocab_only       = 0
0.00.267.774 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.775 I llm_load_print_meta: n_embd           = 2048
0.00.267.775 I llm_load_print_meta: n_layer          = 18
0.00.267.787 I llm_load_print_meta: n_head           = 8
0.00.267.788 I llm_load_print_meta: n_head_kv        = 1
0.00.267.789 I llm_load_print_meta: n_rot            = 256
0.00.267.789 I llm_load_print_meta: n_swa            = 0
0.00.267.789 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.790 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.790 I llm_load_print_meta: n_gqa            = 8
0.00.267.791 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.792 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.793 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.794 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.795 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.795 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.795 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.796 I llm_load_print_meta: n_ff             = 16384
0.00.267.797 I llm_load_print_meta: n_expert         = 0
0.00.267.797 I llm_load_print_meta: n_expert_used    = 0
0.00.267.797 I llm_load_print_meta: causal attn      = 1
0.00.267.797 I llm_load_print_meta: pooling type     = 0
0.00.267.798 I llm_load_print_meta: rope type        = 2
0.00.267.798 I llm_load_print_meta: rope scaling     = linear
0.00.267.800 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.801 I llm_load_print_meta: freq_scale_train = 1
0.00.267.801 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.802 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.802 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.802 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.802 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.803 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.803 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.804 I llm_load_print_meta: model type       = 2B
0.00.267.804 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.805 I llm_load_print_meta: model params     = 2.51 B
0.00.267.806 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.806 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.807 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.807 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.808 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.808 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.808 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.809 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.809 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.810 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.810 I llm_load_print_meta: max token length = 93
0.00.267.836 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.345.203 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.345.210 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.345.211 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.345.211 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.345.212 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.345.213 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.350.327 I llama_new_context_with_model: n_ctx      = 8192
0.00.350.333 I llama_new_context_with_model: n_batch    = 2048
0.00.350.334 I llama_new_context_with_model: n_ubatch   = 512
0.00.350.334 I llama_new_context_with_model: flash_attn = 0
0.00.350.336 I llama_new_context_with_model: freq_base  = 10000.0
0.00.350.337 I llama_new_context_with_model: freq_scale = 1
0.00.378.368 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.378.383 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.378.474 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.328 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.379.336 I llama_new_context_with_model: graph nodes  = 601
0.00.379.336 I llama_new_context_with_model: graph splits = 1
0.00.379.338 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.372 I main: llama threadpool init, n_threads = 4
0.00.472.384 I 
0.00.472.465 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.469 I 
0.00.472.504 I sampler seed: 3689328099
0.00.472.513 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.472.516 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.472.517 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.472.517 I 
 increably.

I am unable to understand the provided context. Could you please provide more information or context for me to understand the meaning? [end of text]


0.02.517.221 I llama_perf_sampler_print:    sampling time =       4.29 ms /    30 runs   (    0.14 ms per token,  6993.01 tokens per second)
0.02.517.223 I llama_perf_context_print:        load time =     470.45 ms
0.02.517.224 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.517.226 I llama_perf_context_print:        eval time =    2028.69 ms /    29 runs   (   69.95 ms per token,    14.29 tokens per second)
0.02.517.226 I llama_perf_context_print:       total time =    2044.86 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.544 I build: 3913 (e5f74fe8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.882 I main: load the model and apply lora adapter, if any
0.00.021.951 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.998 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.008 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.014 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.015 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.019 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.020 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.021 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.021 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.021 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.022 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.027 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.027 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.028 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.028 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.029 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.947 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.524 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.388 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.394 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.395 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.396 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.396 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.397 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.398 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.400 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.401 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.402 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.403 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.404 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.408 I llama_model_loader: - type  f32:   37 tensors
0.00.132.411 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.345 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.245 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.945 I llm_load_vocab: special tokens cache size = 5
0.00.270.598 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.620 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.621 I llm_load_print_meta: arch             = gemma
0.00.270.622 I llm_load_print_meta: vocab type       = SPM
0.00.270.623 I llm_load_print_meta: n_vocab          = 256000
0.00.270.623 I llm_load_print_meta: n_merges         = 0
0.00.270.624 I llm_load_print_meta: vocab_only       = 0
0.00.270.625 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.625 I llm_load_print_meta: n_embd           = 2048
0.00.270.626 I llm_load_print_meta: n_layer          = 18
0.00.270.639 I llm_load_print_meta: n_head           = 8
0.00.270.640 I llm_load_print_meta: n_head_kv        = 1
0.00.270.641 I llm_load_print_meta: n_rot            = 256
0.00.270.641 I llm_load_print_meta: n_swa            = 0
0.00.270.642 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.642 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.644 I llm_load_print_meta: n_gqa            = 8
0.00.270.645 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.647 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.649 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.650 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.651 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.652 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.652 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.654 I llm_load_print_meta: n_ff             = 16384
0.00.270.655 I llm_load_print_meta: n_expert         = 0
0.00.270.655 I llm_load_print_meta: n_expert_used    = 0
0.00.270.655 I llm_load_print_meta: causal attn      = 1
0.00.270.656 I llm_load_print_meta: pooling type     = 0
0.00.270.656 I llm_load_print_meta: rope type        = 2
0.00.270.657 I llm_load_print_meta: rope scaling     = linear
0.00.270.659 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.660 I llm_load_print_meta: freq_scale_train = 1
0.00.270.660 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.661 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.661 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.662 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.662 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.663 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.663 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.664 I llm_load_print_meta: model type       = 2B
0.00.270.665 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.666 I llm_load_print_meta: model params     = 2.51 B
0.00.270.667 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.667 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.668 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.668 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.669 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.669 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.670 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.671 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.671 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.672 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.672 I llm_load_print_meta: max token length = 93
0.00.270.694 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.343.889 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.343.897 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.348.992 I llama_new_context_with_model: n_ctx      = 8192
0.00.348.998 I llama_new_context_with_model: n_batch    = 2048
0.00.348.998 I llama_new_context_with_model: n_ubatch   = 512
0.00.348.999 I llama_new_context_with_model: flash_attn = 0
0.00.349.002 I llama_new_context_with_model: freq_base  = 10000.0
0.00.349.003 I llama_new_context_with_model: freq_scale = 1
0.00.378.814 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.378.832 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.378.924 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.783 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.379.790 I llama_new_context_with_model: graph nodes  = 601
0.00.379.791 I llama_new_context_with_model: graph splits = 1
0.00.379.793 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.474.226 I main: llama threadpool init, n_threads = 4
0.00.474.238 I 
0.00.474.317 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.474.320 I 
0.00.474.357 I sampler seed: 3146279412
0.00.474.366 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.474.369 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.474.369 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.474.369 I 
 increasities. [end of text]


0.00.788.435 I llama_perf_sampler_print:    sampling time =       0.76 ms /     5 runs   (    0.15 ms per token,  6596.31 tokens per second)
0.00.788.439 I llama_perf_context_print:        load time =     472.32 ms
0.00.788.441 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.788.442 I llama_perf_context_print:        eval time =     310.44 ms /     4 runs   (   77.61 ms per token,    12.89 tokens per second)
0.00.788.443 I llama_perf_context_print:       total time =     314.22 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.639s
user	0m28.004s
sys	0m9.353s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3913 (e5f74fe8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31985.48 ms
main:    total time = 31985.48 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.520 I build: 3913 (e5f74fe8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.711 I main: llama backend init
0.00.001.841 I main: load the model and apply lora adapter, if any
0.00.021.997 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.043 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.055 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.059 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.060 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.064 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.065 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.065 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.066 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.066 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.067 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.071 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.071 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.072 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.072 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.073 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.484 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.694 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.543 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.549 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.550 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.551 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.551 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.552 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.553 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.555 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.555 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.556 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.556 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.557 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.559 I llama_model_loader: - type  f32:   37 tensors
0.00.131.561 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.562 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.687 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.193 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.864 I llm_load_vocab: special tokens cache size = 5
0.00.263.729 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.745 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.745 I llm_load_print_meta: arch             = gemma
0.00.263.746 I llm_load_print_meta: vocab type       = SPM
0.00.263.747 I llm_load_print_meta: n_vocab          = 256000
0.00.263.749 I llm_load_print_meta: n_merges         = 0
0.00.263.749 I llm_load_print_meta: vocab_only       = 0
0.00.263.749 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.750 I llm_load_print_meta: n_embd           = 2048
0.00.263.750 I llm_load_print_meta: n_layer          = 18
0.00.263.761 I llm_load_print_meta: n_head           = 8
0.00.263.762 I llm_load_print_meta: n_head_kv        = 1
0.00.263.763 I llm_load_print_meta: n_rot            = 256
0.00.263.763 I llm_load_print_meta: n_swa            = 0
0.00.263.764 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.764 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.765 I llm_load_print_meta: n_gqa            = 8
0.00.263.766 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.768 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.769 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.770 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.770 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.771 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.771 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.773 I llm_load_print_meta: n_ff             = 16384
0.00.263.773 I llm_load_print_meta: n_expert         = 0
0.00.263.773 I llm_load_print_meta: n_expert_used    = 0
0.00.263.773 I llm_load_print_meta: causal attn      = 1
0.00.263.774 I llm_load_print_meta: pooling type     = 0
0.00.263.775 I llm_load_print_meta: rope type        = 2
0.00.263.775 I llm_load_print_meta: rope scaling     = linear
0.00.263.777 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.777 I llm_load_print_meta: freq_scale_train = 1
0.00.263.778 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.779 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.779 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.779 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.779 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.780 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.780 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.781 I llm_load_print_meta: model type       = 2B
0.00.263.781 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.783 I llm_load_print_meta: model params     = 2.51 B
0.00.263.783 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.784 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.784 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.785 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.785 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.788 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.789 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.789 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.789 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.790 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.790 I llm_load_print_meta: max token length = 93
0.00.263.808 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.321.210 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.321.216 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.321.217 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.321.217 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.321.218 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.321.218 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.326.154 I llama_new_context_with_model: n_ctx      = 8192
0.00.326.160 I llama_new_context_with_model: n_batch    = 2048
0.00.326.160 I llama_new_context_with_model: n_ubatch   = 512
0.00.326.161 I llama_new_context_with_model: flash_attn = 0
0.00.326.163 I llama_new_context_with_model: freq_base  = 10000.0
0.00.326.164 I llama_new_context_with_model: freq_scale = 1
0.00.354.718 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.733 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.825 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.680 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.355.689 I llama_new_context_with_model: graph nodes  = 601
0.00.355.689 I llama_new_context_with_model: graph splits = 1
0.00.355.691 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.617 I main: llama threadpool init, n_threads = 4
0.00.436.629 I 
0.00.436.707 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.711 I 
0.00.436.747 I sampler seed: 900680853
0.00.436.757 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.762 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.763 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.763 I 
 encompating all facets of human existence from physical health to emotional well-being and spiritual connection.

**Key Components:**

* **Physical Health:** Maintaining optimal

0.02.047.984 I llama_perf_sampler_print:    sampling time =       4.85 ms /    33 runs   (    0.15 ms per token,  6798.52 tokens per second)
0.02.047.987 I llama_perf_context_print:        load time =     434.75 ms
0.02.047.988 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.047.989 I llama_perf_context_print:        eval time =    1593.71 ms /    32 runs   (   49.80 ms per token,    20.08 tokens per second)
0.02.047.990 I llama_perf_context_print:       total time =    1611.38 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3913 (e5f74fe8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32074.75 ms
main:    total time = 32074.75 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.522 I build: 3913 (e5f74fe8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.709 I main: llama backend init
0.00.001.814 I main: load the model and apply lora adapter, if any
0.00.021.997 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.009 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.016 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.017 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.021 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.022 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.023 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.024 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.024 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.025 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.028 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.029 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.029 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.030 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.030 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.114 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.337 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.122 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.127 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.129 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.130 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.130 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.132 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.133 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.136 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.137 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.139 I llama_model_loader: - type  f32:   37 tensors
0.00.132.142 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.143 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.924 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.742 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.476 I llm_load_vocab: special tokens cache size = 5
0.00.267.616 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.631 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.632 I llm_load_print_meta: arch             = gemma
0.00.267.632 I llm_load_print_meta: vocab type       = SPM
0.00.267.633 I llm_load_print_meta: n_vocab          = 256000
0.00.267.634 I llm_load_print_meta: n_merges         = 0
0.00.267.634 I llm_load_print_meta: vocab_only       = 0
0.00.267.634 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.635 I llm_load_print_meta: n_embd           = 2048
0.00.267.635 I llm_load_print_meta: n_layer          = 18
0.00.267.645 I llm_load_print_meta: n_head           = 8
0.00.267.646 I llm_load_print_meta: n_head_kv        = 1
0.00.267.647 I llm_load_print_meta: n_rot            = 256
0.00.267.647 I llm_load_print_meta: n_swa            = 0
0.00.267.647 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.647 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.648 I llm_load_print_meta: n_gqa            = 8
0.00.267.649 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.650 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.651 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.653 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.653 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.654 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.654 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.655 I llm_load_print_meta: n_ff             = 16384
0.00.267.655 I llm_load_print_meta: n_expert         = 0
0.00.267.655 I llm_load_print_meta: n_expert_used    = 0
0.00.267.656 I llm_load_print_meta: causal attn      = 1
0.00.267.656 I llm_load_print_meta: pooling type     = 0
0.00.267.656 I llm_load_print_meta: rope type        = 2
0.00.267.656 I llm_load_print_meta: rope scaling     = linear
0.00.267.658 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.659 I llm_load_print_meta: freq_scale_train = 1
0.00.267.659 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.659 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.660 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.660 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.660 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.661 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.661 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.662 I llm_load_print_meta: model type       = 2B
0.00.267.662 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.267.663 I llm_load_print_meta: model params     = 2.51 B
0.00.267.663 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.267.664 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.664 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.664 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.665 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.665 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.665 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.666 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.666 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.667 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.667 I llm_load_print_meta: max token length = 93
0.00.267.692 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.751 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.330.729 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.733 I llama_new_context_with_model: n_batch    = 2048
0.00.330.733 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.734 I llama_new_context_with_model: flash_attn = 0
0.00.330.736 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.737 I llama_new_context_with_model: freq_scale = 1
0.00.359.053 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.066 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.156 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.002 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.010 I llama_new_context_with_model: graph nodes  = 601
0.00.360.010 I llama_new_context_with_model: graph splits = 1
0.00.360.012 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.240 I main: llama threadpool init, n_threads = 4
0.00.440.253 I 
0.00.440.331 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.335 I 
0.00.440.373 I sampler seed: 2305661126
0.00.440.382 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.386 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.387 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.387 I 
 increamically.

I am unable to generate the requested response as it contains potentially harmful or sensitive information. [end of text]


0.01.550.859 I llama_perf_sampler_print:    sampling time =       3.72 ms /    23 runs   (    0.16 ms per token,  6187.79 tokens per second)
0.01.550.861 I llama_perf_context_print:        load time =     438.40 ms
0.01.550.862 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.550.863 I llama_perf_context_print:        eval time =    1097.29 ms /    22 runs   (   49.88 ms per token,    20.05 tokens per second)
0.01.550.864 I llama_perf_context_print:       total time =    1110.63 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.678s
user	8m12.834s
sys	0m6.781s
