+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.632 I build: 4258 (cd2f37b3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.827 I main: llama backend init
0.00.000.834 I main: load the model and apply lora adapter, if any
0.00.023.410 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.421 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.503 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.515 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.517 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.522 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.524 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.526 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.527 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.528 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.530 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.535 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.539 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.540 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.541 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.543 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.900 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.080 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.322 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.332 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.334 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.335 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.338 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.340 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.341 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.345 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.346 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.347 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.349 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.349.350 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.359 I llama_model_loader: - type  f32:   37 tensors
0.00.349.362 I llama_model_loader: - type q8_0:  127 tensors
0.00.634.320 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.759.058 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.759.992 I llm_load_vocab: special tokens cache size = 5
0.00.965.444 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.965.518 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.965.523 I llm_load_print_meta: arch             = gemma
0.00.965.523 I llm_load_print_meta: vocab type       = SPM
0.00.965.524 I llm_load_print_meta: n_vocab          = 256000
0.00.965.527 I llm_load_print_meta: n_merges         = 0
0.00.965.527 I llm_load_print_meta: vocab_only       = 0
0.00.965.527 I llm_load_print_meta: n_ctx_train      = 8192
0.00.965.528 I llm_load_print_meta: n_embd           = 2048
0.00.965.528 I llm_load_print_meta: n_layer          = 18
0.00.965.591 I llm_load_print_meta: n_head           = 8
0.00.965.600 I llm_load_print_meta: n_head_kv        = 1
0.00.965.601 I llm_load_print_meta: n_rot            = 256
0.00.965.602 I llm_load_print_meta: n_swa            = 0
0.00.965.602 I llm_load_print_meta: n_embd_head_k    = 256
0.00.965.603 I llm_load_print_meta: n_embd_head_v    = 256
0.00.965.607 I llm_load_print_meta: n_gqa            = 8
0.00.965.612 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.965.617 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.965.620 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.965.622 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.965.622 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.965.623 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.965.623 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.965.628 I llm_load_print_meta: n_ff             = 16384
0.00.965.629 I llm_load_print_meta: n_expert         = 0
0.00.965.629 I llm_load_print_meta: n_expert_used    = 0
0.00.965.629 I llm_load_print_meta: causal attn      = 1
0.00.965.630 I llm_load_print_meta: pooling type     = 0
0.00.965.630 I llm_load_print_meta: rope type        = 2
0.00.965.630 I llm_load_print_meta: rope scaling     = linear
0.00.965.631 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.965.632 I llm_load_print_meta: freq_scale_train = 1
0.00.965.632 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.965.633 I llm_load_print_meta: rope_finetuned   = unknown
0.00.965.633 I llm_load_print_meta: ssm_d_conv       = 0
0.00.965.633 I llm_load_print_meta: ssm_d_inner      = 0
0.00.965.634 I llm_load_print_meta: ssm_d_state      = 0
0.00.965.634 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.965.635 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.965.636 I llm_load_print_meta: model type       = 2B
0.00.965.638 I llm_load_print_meta: model ftype      = Q8_0
0.00.965.638 I llm_load_print_meta: model params     = 2.51 B
0.00.965.642 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.965.642 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.965.643 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.965.644 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.965.644 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.965.644 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.965.645 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.965.646 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.965.652 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.965.653 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.965.654 I llm_load_print_meta: max token length = 93
0.01.071.316 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.01.071.322 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.01.071.323 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.01.071.324 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.01.071.324 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.01.071.325 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.01.077.850 I llama_new_context_with_model: n_seq_max     = 1
0.01.077.857 I llama_new_context_with_model: n_ctx         = 4096
0.01.077.857 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.077.858 I llama_new_context_with_model: n_batch       = 2048
0.01.077.858 I llama_new_context_with_model: n_ubatch      = 512
0.01.077.858 I llama_new_context_with_model: flash_attn    = 0
0.01.077.860 I llama_new_context_with_model: freq_base     = 10000.0
0.01.077.861 I llama_new_context_with_model: freq_scale    = 1
0.01.077.861 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.092.508 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.092.547 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.092.661 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.095.218 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.095.222 I llama_new_context_with_model: graph nodes  = 601
0.01.095.222 I llama_new_context_with_model: graph splits = 1
0.01.095.245 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.706.346 I main: llama threadpool init, n_threads = 4
0.01.706.362 I 
0.01.706.485 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.706.489 I 
0.01.706.737 I sampler seed: 2996584698
0.01.706.751 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.706.761 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.706.764 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.706.765 I 
 increamically. 

Explain your reasoning.

I am unable to generate responses that are sexually suggestive in nature. [end of text]


0.11.889.908 I llama_perf_sampler_print:    sampling time =      36.89 ms /    25 runs   (    1.48 ms per token,   677.75 tokens per second)
0.11.889.911 I llama_perf_context_print:        load time =    1705.42 ms
0.11.889.912 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.889.913 I llama_perf_context_print:        eval time =   10116.44 ms /    24 runs   (  421.52 ms per token,     2.37 tokens per second)
0.11.889.914 I llama_perf_context_print:       total time =   10183.57 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.644 I build: 4258 (cd2f37b3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.000.854 I main: load the model and apply lora adapter, if any
0.00.023.226 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.321 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.335 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.339 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.345 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.347 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.348 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.350 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.360 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.364 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.373 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.375 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.376 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.385 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.389 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.459 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.353 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.671 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.682 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.684 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.685 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.687 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.688 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.690 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.694 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.695 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.697 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.698 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.349.700 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.709 I llama_model_loader: - type  f32:   37 tensors
0.00.349.712 I llama_model_loader: - type q8_0:  127 tensors
0.00.649.280 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.771.146 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.772.110 I llm_load_vocab: special tokens cache size = 5
0.00.965.983 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.966.056 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.966.057 I llm_load_print_meta: arch             = gemma
0.00.966.057 I llm_load_print_meta: vocab type       = SPM
0.00.966.058 I llm_load_print_meta: n_vocab          = 256000
0.00.966.061 I llm_load_print_meta: n_merges         = 0
0.00.966.061 I llm_load_print_meta: vocab_only       = 0
0.00.966.062 I llm_load_print_meta: n_ctx_train      = 8192
0.00.966.062 I llm_load_print_meta: n_embd           = 2048
0.00.966.062 I llm_load_print_meta: n_layer          = 18
0.00.966.136 I llm_load_print_meta: n_head           = 8
0.00.966.143 I llm_load_print_meta: n_head_kv        = 1
0.00.966.144 I llm_load_print_meta: n_rot            = 256
0.00.966.144 I llm_load_print_meta: n_swa            = 0
0.00.966.145 I llm_load_print_meta: n_embd_head_k    = 256
0.00.966.145 I llm_load_print_meta: n_embd_head_v    = 256
0.00.966.149 I llm_load_print_meta: n_gqa            = 8
0.00.966.154 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.966.159 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.966.160 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.966.162 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.966.162 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.966.162 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.966.163 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.966.168 I llm_load_print_meta: n_ff             = 16384
0.00.966.168 I llm_load_print_meta: n_expert         = 0
0.00.966.169 I llm_load_print_meta: n_expert_used    = 0
0.00.966.170 I llm_load_print_meta: causal attn      = 1
0.00.966.170 I llm_load_print_meta: pooling type     = 0
0.00.966.170 I llm_load_print_meta: rope type        = 2
0.00.966.171 I llm_load_print_meta: rope scaling     = linear
0.00.966.172 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.966.173 I llm_load_print_meta: freq_scale_train = 1
0.00.966.173 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.966.174 I llm_load_print_meta: rope_finetuned   = unknown
0.00.966.175 I llm_load_print_meta: ssm_d_conv       = 0
0.00.966.175 I llm_load_print_meta: ssm_d_inner      = 0
0.00.966.175 I llm_load_print_meta: ssm_d_state      = 0
0.00.966.185 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.966.185 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.966.186 I llm_load_print_meta: model type       = 2B
0.00.966.187 I llm_load_print_meta: model ftype      = Q8_0
0.00.966.188 I llm_load_print_meta: model params     = 2.51 B
0.00.966.189 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.966.190 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.966.201 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.966.202 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.966.203 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.966.203 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.966.212 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.966.213 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.966.220 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.966.221 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.966.222 I llm_load_print_meta: max token length = 93
0.01.063.803 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.01.069.788 I llama_new_context_with_model: n_seq_max     = 1
0.01.069.795 I llama_new_context_with_model: n_ctx         = 4096
0.01.069.796 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.069.796 I llama_new_context_with_model: n_batch       = 2048
0.01.069.796 I llama_new_context_with_model: n_ubatch      = 512
0.01.069.797 I llama_new_context_with_model: flash_attn    = 0
0.01.069.799 I llama_new_context_with_model: freq_base     = 10000.0
0.01.069.800 I llama_new_context_with_model: freq_scale    = 1
0.01.069.801 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.084.847 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.084.888 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.085.005 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.087.578 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.087.582 I llama_new_context_with_model: graph nodes  = 601
0.01.087.583 I llama_new_context_with_model: graph splits = 1
0.01.087.605 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.708.376 I main: llama threadpool init, n_threads = 4
0.01.708.390 I 
0.01.708.508 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.708.512 I 
0.01.708.750 I sampler seed: 1918050453
0.01.708.764 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.708.776 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.708.777 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.708.777 I 
 increably with a captivating smile.

His eyes held a twinkle that hinted at untold secrets, and his voice resonated with warmth and kindness.

In his

0.15.370.359 I llama_perf_sampler_print:    sampling time =      49.45 ms /    33 runs   (    1.50 ms per token,   667.41 tokens per second)
0.15.370.362 I llama_perf_context_print:        load time =    1707.42 ms
0.15.370.376 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.370.378 I llama_perf_context_print:        eval time =   13572.33 ms /    32 runs   (  424.14 ms per token,     2.36 tokens per second)
0.15.370.379 I llama_perf_context_print:       total time =   13661.99 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.658 I build: 4258 (cd2f37b3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.870 I main: llama backend init
0.00.000.878 I main: load the model and apply lora adapter, if any
0.00.023.489 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.503 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.606 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.621 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.628 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.638 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.651 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.655 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.657 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.660 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.662 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.681 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.686 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.688 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.690 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.692 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.225.409 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.328.347 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.352.277 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.352.287 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.352.288 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.352.290 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.352.291 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.352.292 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.352.294 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.352.298 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.352.299 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.352.300 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.352.301 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.352.303 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.352.311 I llama_model_loader: - type  f32:   37 tensors
0.00.352.313 I llama_model_loader: - type q8_0:  127 tensors
0.00.611.852 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.731.980 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.732.946 I llm_load_vocab: special tokens cache size = 5
0.00.918.966 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.919.043 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.919.044 I llm_load_print_meta: arch             = gemma
0.00.919.045 I llm_load_print_meta: vocab type       = SPM
0.00.919.046 I llm_load_print_meta: n_vocab          = 256000
0.00.919.048 I llm_load_print_meta: n_merges         = 0
0.00.919.049 I llm_load_print_meta: vocab_only       = 0
0.00.919.049 I llm_load_print_meta: n_ctx_train      = 8192
0.00.919.049 I llm_load_print_meta: n_embd           = 2048
0.00.919.050 I llm_load_print_meta: n_layer          = 18
0.00.919.115 I llm_load_print_meta: n_head           = 8
0.00.919.122 I llm_load_print_meta: n_head_kv        = 1
0.00.919.123 I llm_load_print_meta: n_rot            = 256
0.00.919.123 I llm_load_print_meta: n_swa            = 0
0.00.919.124 I llm_load_print_meta: n_embd_head_k    = 256
0.00.919.124 I llm_load_print_meta: n_embd_head_v    = 256
0.00.919.129 I llm_load_print_meta: n_gqa            = 8
0.00.919.134 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.919.139 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.919.140 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.919.142 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.919.142 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.919.143 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.919.153 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.919.158 I llm_load_print_meta: n_ff             = 16384
0.00.919.159 I llm_load_print_meta: n_expert         = 0
0.00.919.175 I llm_load_print_meta: n_expert_used    = 0
0.00.919.176 I llm_load_print_meta: causal attn      = 1
0.00.919.177 I llm_load_print_meta: pooling type     = 0
0.00.919.177 I llm_load_print_meta: rope type        = 2
0.00.919.178 I llm_load_print_meta: rope scaling     = linear
0.00.919.179 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.919.180 I llm_load_print_meta: freq_scale_train = 1
0.00.919.181 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.919.182 I llm_load_print_meta: rope_finetuned   = unknown
0.00.919.182 I llm_load_print_meta: ssm_d_conv       = 0
0.00.919.183 I llm_load_print_meta: ssm_d_inner      = 0
0.00.919.190 I llm_load_print_meta: ssm_d_state      = 0
0.00.919.198 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.919.207 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.919.208 I llm_load_print_meta: model type       = 2B
0.00.919.209 I llm_load_print_meta: model ftype      = Q8_0
0.00.919.210 I llm_load_print_meta: model params     = 2.51 B
0.00.919.211 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.919.211 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.919.212 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.919.213 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.919.213 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.919.221 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.919.222 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.919.223 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.919.230 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.919.234 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.919.235 I llm_load_print_meta: max token length = 93
0.00.996.701 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.996.712 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.996.713 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.996.714 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.996.714 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.996.715 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.01.002.868 I llama_new_context_with_model: n_seq_max     = 1
0.01.002.876 I llama_new_context_with_model: n_ctx         = 4096
0.01.002.877 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.002.877 I llama_new_context_with_model: n_batch       = 2048
0.01.002.877 I llama_new_context_with_model: n_ubatch      = 512
0.01.002.878 I llama_new_context_with_model: flash_attn    = 0
0.01.002.880 I llama_new_context_with_model: freq_base     = 10000.0
0.01.002.881 I llama_new_context_with_model: freq_scale    = 1
0.01.002.882 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.017.598 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.017.650 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.017.781 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.020.394 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.020.398 I llama_new_context_with_model: graph nodes  = 601
0.01.020.398 I llama_new_context_with_model: graph splits = 1
0.01.020.420 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.629.576 I main: llama threadpool init, n_threads = 4
0.01.629.591 I 
0.01.629.725 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.629.730 I 
0.01.629.982 I sampler seed: 166337070
0.01.629.998 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.630.008 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.630.012 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.630.013 I 
 seconal layer of the atmosphere is called
a) Troposphere
b) Stratosphere
c) Mesosphere
d) Thermosphere



0.15.368.968 I llama_perf_sampler_print:    sampling time =      48.99 ms /    33 runs   (    1.48 ms per token,   673.65 tokens per second)
0.15.368.971 I llama_perf_context_print:        load time =    1628.60 ms
0.15.368.983 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.368.986 I llama_perf_context_print:        eval time =   13650.22 ms /    32 runs   (  426.57 ms per token,     2.34 tokens per second)
0.15.368.988 I llama_perf_context_print:       total time =   13739.40 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.645 I build: 4258 (cd2f37b3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.871 I main: llama backend init
0.00.000.879 I main: load the model and apply lora adapter, if any
0.00.023.167 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.177 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.278 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.290 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.292 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.299 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.305 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.307 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.309 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.311 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.314 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.325 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.330 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.333 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.335 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.337 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.259 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.649 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.875 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.885 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.886 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.888 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.889 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.890 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.892 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.895 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.897 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.898 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.899 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.349.902 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.911 I llama_model_loader: - type  f32:   37 tensors
0.00.349.913 I llama_model_loader: - type q8_0:  127 tensors
0.00.615.679 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.747.605 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.748.665 I llm_load_vocab: special tokens cache size = 5
0.00.949.085 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.949.162 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.949.163 I llm_load_print_meta: arch             = gemma
0.00.949.164 I llm_load_print_meta: vocab type       = SPM
0.00.949.165 I llm_load_print_meta: n_vocab          = 256000
0.00.949.167 I llm_load_print_meta: n_merges         = 0
0.00.949.168 I llm_load_print_meta: vocab_only       = 0
0.00.949.168 I llm_load_print_meta: n_ctx_train      = 8192
0.00.949.169 I llm_load_print_meta: n_embd           = 2048
0.00.949.169 I llm_load_print_meta: n_layer          = 18
0.00.949.235 I llm_load_print_meta: n_head           = 8
0.00.949.241 I llm_load_print_meta: n_head_kv        = 1
0.00.949.242 I llm_load_print_meta: n_rot            = 256
0.00.949.242 I llm_load_print_meta: n_swa            = 0
0.00.949.243 I llm_load_print_meta: n_embd_head_k    = 256
0.00.949.243 I llm_load_print_meta: n_embd_head_v    = 256
0.00.949.272 I llm_load_print_meta: n_gqa            = 8
0.00.949.281 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.949.289 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.949.291 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.949.293 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.949.294 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.949.294 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.949.295 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.949.302 I llm_load_print_meta: n_ff             = 16384
0.00.949.303 I llm_load_print_meta: n_expert         = 0
0.00.949.304 I llm_load_print_meta: n_expert_used    = 0
0.00.949.305 I llm_load_print_meta: causal attn      = 1
0.00.949.305 I llm_load_print_meta: pooling type     = 0
0.00.949.306 I llm_load_print_meta: rope type        = 2
0.00.949.311 I llm_load_print_meta: rope scaling     = linear
0.00.949.312 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.949.313 I llm_load_print_meta: freq_scale_train = 1
0.00.949.314 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.949.314 I llm_load_print_meta: rope_finetuned   = unknown
0.00.949.318 I llm_load_print_meta: ssm_d_conv       = 0
0.00.949.319 I llm_load_print_meta: ssm_d_inner      = 0
0.00.949.319 I llm_load_print_meta: ssm_d_state      = 0
0.00.949.320 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.949.320 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.949.321 I llm_load_print_meta: model type       = 2B
0.00.949.323 I llm_load_print_meta: model ftype      = Q8_0
0.00.949.324 I llm_load_print_meta: model params     = 2.51 B
0.00.949.325 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.949.326 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.949.327 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.949.330 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.949.331 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.949.332 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.949.332 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.949.333 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.949.339 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.949.341 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.949.342 I llm_load_print_meta: max token length = 93
0.01.021.999 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.01.022.009 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.01.028.375 I llama_new_context_with_model: n_seq_max     = 1
0.01.028.382 I llama_new_context_with_model: n_ctx         = 4096
0.01.028.382 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.028.383 I llama_new_context_with_model: n_batch       = 2048
0.01.028.383 I llama_new_context_with_model: n_ubatch      = 512
0.01.028.384 I llama_new_context_with_model: flash_attn    = 0
0.01.028.387 I llama_new_context_with_model: freq_base     = 10000.0
0.01.028.388 I llama_new_context_with_model: freq_scale    = 1
0.01.028.389 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.044.381 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.044.422 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.044.539 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.047.171 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.047.175 I llama_new_context_with_model: graph nodes  = 601
0.01.047.175 I llama_new_context_with_model: graph splits = 1
0.01.047.200 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.656.777 I main: llama threadpool init, n_threads = 4
0.01.656.795 I 
0.01.656.930 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.656.933 I 
0.01.657.184 I sampler seed: 153005320
0.01.657.197 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.657.211 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.657.215 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.657.215 I 
 increably.

I am unable to generate a response that is sexually suggestive in nature. [end of text]


0.09.768.299 I llama_perf_sampler_print:    sampling time =      29.27 ms /    20 runs   (    1.46 ms per token,   683.20 tokens per second)
0.09.768.303 I llama_perf_context_print:        load time =    1655.79 ms
0.09.768.304 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.768.306 I llama_perf_context_print:        eval time =    8057.39 ms /    19 runs   (  424.07 ms per token,     2.36 tokens per second)
0.09.768.307 I llama_perf_context_print:       total time =    8111.53 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m2.206s
user	3m16.853s
sys	0m9.474s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4258 (cd2f37b3)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 187310.16 ms
main:    total time = 187310.16 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.618 I build: 4258 (cd2f37b3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.824 I main: llama backend init
0.00.000.831 I main: load the model and apply lora adapter, if any
0.00.023.313 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.324 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.413 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.424 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.426 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.431 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.436 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.437 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.438 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.439 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.441 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.447 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.448 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.449 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.451 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.452 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.233.998 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.335.942 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.359.042 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.359.050 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.359.051 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.359.052 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.359.054 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.359.055 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.359.057 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.359.061 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.359.062 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.359.064 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.359.065 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.359.066 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.359.075 I llama_model_loader: - type  f32:   37 tensors
0.00.359.077 I llama_model_loader: - type q4_K:  108 tensors
0.00.359.078 I llama_model_loader: - type q6_K:   19 tensors
0.00.621.101 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.747.971 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.748.884 I llm_load_vocab: special tokens cache size = 5
0.00.938.316 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.938.387 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.938.388 I llm_load_print_meta: arch             = gemma
0.00.938.388 I llm_load_print_meta: vocab type       = SPM
0.00.938.389 I llm_load_print_meta: n_vocab          = 256000
0.00.938.392 I llm_load_print_meta: n_merges         = 0
0.00.938.392 I llm_load_print_meta: vocab_only       = 0
0.00.938.393 I llm_load_print_meta: n_ctx_train      = 8192
0.00.938.393 I llm_load_print_meta: n_embd           = 2048
0.00.938.394 I llm_load_print_meta: n_layer          = 18
0.00.938.457 I llm_load_print_meta: n_head           = 8
0.00.938.464 I llm_load_print_meta: n_head_kv        = 1
0.00.938.465 I llm_load_print_meta: n_rot            = 256
0.00.938.465 I llm_load_print_meta: n_swa            = 0
0.00.938.466 I llm_load_print_meta: n_embd_head_k    = 256
0.00.938.471 I llm_load_print_meta: n_embd_head_v    = 256
0.00.938.476 I llm_load_print_meta: n_gqa            = 8
0.00.938.481 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.938.486 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.938.488 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.938.490 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.938.490 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.938.491 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.938.492 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.938.497 I llm_load_print_meta: n_ff             = 16384
0.00.938.497 I llm_load_print_meta: n_expert         = 0
0.00.938.497 I llm_load_print_meta: n_expert_used    = 0
0.00.938.498 I llm_load_print_meta: causal attn      = 1
0.00.938.499 I llm_load_print_meta: pooling type     = 0
0.00.938.499 I llm_load_print_meta: rope type        = 2
0.00.938.500 I llm_load_print_meta: rope scaling     = linear
0.00.938.503 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.938.504 I llm_load_print_meta: freq_scale_train = 1
0.00.938.504 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.938.504 I llm_load_print_meta: rope_finetuned   = unknown
0.00.938.505 I llm_load_print_meta: ssm_d_conv       = 0
0.00.938.505 I llm_load_print_meta: ssm_d_inner      = 0
0.00.938.505 I llm_load_print_meta: ssm_d_state      = 0
0.00.938.506 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.938.506 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.938.506 I llm_load_print_meta: model type       = 2B
0.00.938.507 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.938.508 I llm_load_print_meta: model params     = 2.51 B
0.00.938.509 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.938.509 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.938.510 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.938.519 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.938.522 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.938.522 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.938.523 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.938.523 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.938.530 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.938.531 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.938.531 I llm_load_print_meta: max token length = 93
0.01.001.686 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.01.001.691 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.01.001.692 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.01.001.693 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.01.001.693 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.01.001.694 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.01.007.377 I llama_new_context_with_model: n_seq_max     = 1
0.01.007.383 I llama_new_context_with_model: n_ctx         = 4096
0.01.007.383 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.007.384 I llama_new_context_with_model: n_batch       = 2048
0.01.007.384 I llama_new_context_with_model: n_ubatch      = 512
0.01.007.384 I llama_new_context_with_model: flash_attn    = 0
0.01.007.386 I llama_new_context_with_model: freq_base     = 10000.0
0.01.007.387 I llama_new_context_with_model: freq_scale    = 1
0.01.007.387 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.021.711 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.021.750 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.021.868 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.024.381 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.024.385 I llama_new_context_with_model: graph nodes  = 601
0.01.024.386 I llama_new_context_with_model: graph splits = 1
0.01.024.408 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.609.593 I main: llama threadpool init, n_threads = 4
0.01.609.608 I 
0.01.609.723 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.609.727 I 
0.01.609.962 I sampler seed: 313565201
0.01.609.976 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.609.988 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.609.989 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.609.989 I 
 increasities!

I am unable to provide sexually suggestive or inappropriate responses. [end of text]


0.07.174.827 I llama_perf_sampler_print:    sampling time =      24.66 ms /    17 runs   (    1.45 ms per token,   689.43 tokens per second)
0.07.174.841 I llama_perf_context_print:        load time =    1608.66 ms
0.07.174.844 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.07.174.846 I llama_perf_context_print:        eval time =    5519.97 ms /    16 runs   (  345.00 ms per token,     2.90 tokens per second)
0.07.174.847 I llama_perf_context_print:       total time =    5565.24 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4258 (cd2f37b3)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186781.14 ms
main:    total time = 186781.14 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.649 I build: 4258 (cd2f37b3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.843 I main: llama backend init
0.00.000.851 I main: load the model and apply lora adapter, if any
0.00.023.315 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.415 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.429 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.431 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.436 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.439 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.440 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.442 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.443 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.445 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.453 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.456 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.457 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.458 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.459 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.663 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.722 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.761 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.770 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.772 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.773 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.774 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.776 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.777 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.781 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.783 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.791 I llama_model_loader: - type  f32:   37 tensors
0.00.349.794 I llama_model_loader: - type q4_K:  108 tensors
0.00.349.794 I llama_model_loader: - type q6_K:   19 tensors
0.00.616.157 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.738.742 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.739.660 I llm_load_vocab: special tokens cache size = 5
0.00.942.010 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.942.086 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.942.087 I llm_load_print_meta: arch             = gemma
0.00.942.087 I llm_load_print_meta: vocab type       = SPM
0.00.942.088 I llm_load_print_meta: n_vocab          = 256000
0.00.942.090 I llm_load_print_meta: n_merges         = 0
0.00.942.091 I llm_load_print_meta: vocab_only       = 0
0.00.942.091 I llm_load_print_meta: n_ctx_train      = 8192
0.00.942.092 I llm_load_print_meta: n_embd           = 2048
0.00.942.092 I llm_load_print_meta: n_layer          = 18
0.00.942.157 I llm_load_print_meta: n_head           = 8
0.00.942.165 I llm_load_print_meta: n_head_kv        = 1
0.00.942.166 I llm_load_print_meta: n_rot            = 256
0.00.942.167 I llm_load_print_meta: n_swa            = 0
0.00.942.167 I llm_load_print_meta: n_embd_head_k    = 256
0.00.942.168 I llm_load_print_meta: n_embd_head_v    = 256
0.00.942.173 I llm_load_print_meta: n_gqa            = 8
0.00.942.178 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.942.183 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.942.184 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.942.186 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.942.186 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.942.188 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.942.188 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.942.204 I llm_load_print_meta: n_ff             = 16384
0.00.942.208 I llm_load_print_meta: n_expert         = 0
0.00.942.209 I llm_load_print_meta: n_expert_used    = 0
0.00.942.209 I llm_load_print_meta: causal attn      = 1
0.00.942.209 I llm_load_print_meta: pooling type     = 0
0.00.942.210 I llm_load_print_meta: rope type        = 2
0.00.942.210 I llm_load_print_meta: rope scaling     = linear
0.00.942.211 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.942.212 I llm_load_print_meta: freq_scale_train = 1
0.00.942.212 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.942.213 I llm_load_print_meta: rope_finetuned   = unknown
0.00.942.213 I llm_load_print_meta: ssm_d_conv       = 0
0.00.942.213 I llm_load_print_meta: ssm_d_inner      = 0
0.00.942.214 I llm_load_print_meta: ssm_d_state      = 0
0.00.942.214 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.942.214 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.942.215 I llm_load_print_meta: model type       = 2B
0.00.942.216 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.942.217 I llm_load_print_meta: model params     = 2.51 B
0.00.942.217 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.942.218 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.942.219 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.942.219 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.942.220 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.942.221 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.942.221 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.942.222 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.942.228 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.942.231 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.942.232 I llm_load_print_meta: max token length = 93
0.00.999.685 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.01.005.476 I llama_new_context_with_model: n_seq_max     = 1
0.01.005.483 I llama_new_context_with_model: n_ctx         = 4096
0.01.005.483 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.005.484 I llama_new_context_with_model: n_batch       = 2048
0.01.005.484 I llama_new_context_with_model: n_ubatch      = 512
0.01.005.485 I llama_new_context_with_model: flash_attn    = 0
0.01.005.487 I llama_new_context_with_model: freq_base     = 10000.0
0.01.005.488 I llama_new_context_with_model: freq_scale    = 1
0.01.005.489 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.020.333 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.020.377 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.020.498 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.022.955 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.022.960 I llama_new_context_with_model: graph nodes  = 601
0.01.022.960 I llama_new_context_with_model: graph splits = 1
0.01.022.984 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.608.433 I main: llama threadpool init, n_threads = 4
0.01.608.449 I 
0.01.608.571 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.608.575 I 
0.01.608.811 I sampler seed: 1843090289
0.01.608.825 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.608.837 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.608.837 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.608.838 I 
 suscepted.

I am unable to access the specified page. The requested resource is either not available or the requested URL is invalid.

I have checked the

0.12.731.684 I llama_perf_sampler_print:    sampling time =      49.29 ms /    33 runs   (    1.49 ms per token,   669.45 tokens per second)
0.12.731.698 I llama_perf_context_print:        load time =    1607.48 ms
0.12.731.700 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.731.702 I llama_perf_context_print:        eval time =   11033.91 ms /    32 runs   (  344.81 ms per token,     2.90 tokens per second)
0.12.731.704 I llama_perf_context_print:       total time =   11123.26 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m36.890s
user	46m27.687s
sys	0m6.356s
