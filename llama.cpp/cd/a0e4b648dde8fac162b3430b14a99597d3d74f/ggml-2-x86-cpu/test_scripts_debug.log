+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.637 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.838 I main: llama backend init
0.00.002.784 I main: load the model and apply lora adapter, if any
0.00.024.676 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.885 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.971 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.982 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.983 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.988 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.992 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.993 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.995 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.996 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.997 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.004 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.005 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.014 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.016 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.024 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.777 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.463 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.733 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.741 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.742 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.743 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.744 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.745 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.746 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.750 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.751 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.752 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.753 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.266.755 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.762 I llama_model_loader: - type  f32:   37 tensors
0.00.266.766 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.323 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.503.793 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.504.790 I llm_load_vocab: special tokens cache size = 5
0.00.599.387 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.599.458 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.599.462 I llm_load_print_meta: arch             = gemma
0.00.599.463 I llm_load_print_meta: vocab type       = SPM
0.00.599.463 I llm_load_print_meta: n_vocab          = 256000
0.00.599.466 I llm_load_print_meta: n_merges         = 0
0.00.599.466 I llm_load_print_meta: vocab_only       = 0
0.00.599.467 I llm_load_print_meta: n_ctx_train      = 8192
0.00.599.467 I llm_load_print_meta: n_embd           = 2048
0.00.599.468 I llm_load_print_meta: n_layer          = 18
0.00.599.531 I llm_load_print_meta: n_head           = 8
0.00.599.540 I llm_load_print_meta: n_head_kv        = 1
0.00.599.541 I llm_load_print_meta: n_rot            = 256
0.00.599.542 I llm_load_print_meta: n_swa            = 0
0.00.599.543 I llm_load_print_meta: n_embd_head_k    = 256
0.00.599.543 I llm_load_print_meta: n_embd_head_v    = 256
0.00.599.548 I llm_load_print_meta: n_gqa            = 8
0.00.599.553 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.599.560 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.599.561 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.599.572 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.599.573 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.599.574 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.599.574 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.599.579 I llm_load_print_meta: n_ff             = 16384
0.00.599.580 I llm_load_print_meta: n_expert         = 0
0.00.599.580 I llm_load_print_meta: n_expert_used    = 0
0.00.599.581 I llm_load_print_meta: causal attn      = 1
0.00.599.581 I llm_load_print_meta: pooling type     = 0
0.00.599.581 I llm_load_print_meta: rope type        = 2
0.00.599.582 I llm_load_print_meta: rope scaling     = linear
0.00.599.597 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.599.601 I llm_load_print_meta: freq_scale_train = 1
0.00.599.601 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.599.601 I llm_load_print_meta: rope_finetuned   = unknown
0.00.599.602 I llm_load_print_meta: ssm_d_conv       = 0
0.00.599.602 I llm_load_print_meta: ssm_d_inner      = 0
0.00.599.602 I llm_load_print_meta: ssm_d_state      = 0
0.00.599.602 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.599.603 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.599.603 I llm_load_print_meta: model type       = 2B
0.00.599.605 I llm_load_print_meta: model ftype      = Q8_0
0.00.599.605 I llm_load_print_meta: model params     = 2.51 B
0.00.599.606 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.599.607 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.599.608 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.599.608 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.599.609 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.599.609 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.599.610 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.599.611 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.599.616 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.599.618 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.599.618 I llm_load_print_meta: max token length = 93
0.00.599.790 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.701.048 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.701.058 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.701.058 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.701.059 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.701.060 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.701.060 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.706.747 I llama_new_context_with_model: n_ctx      = 8192
0.00.706.754 I llama_new_context_with_model: n_batch    = 2048
0.00.706.754 I llama_new_context_with_model: n_ubatch   = 512
0.00.706.755 I llama_new_context_with_model: flash_attn = 0
0.00.706.757 I llama_new_context_with_model: freq_base  = 10000.0
0.00.706.758 I llama_new_context_with_model: freq_scale = 1
0.00.735.745 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.735.784 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.735.903 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.737.306 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.737.311 I llama_new_context_with_model: graph nodes  = 601
0.00.737.311 I llama_new_context_with_model: graph splits = 1
0.00.737.328 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.347.945 I main: llama threadpool init, n_threads = 4
0.01.347.957 I 
0.01.348.065 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.348.068 I 
0.01.348.244 I sampler seed: 1418650797
0.01.348.257 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.348.264 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.348.267 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.348.267 I 
 increasities in the form of a poem:

In halls of gilded cages, shadows creep,
Where whispers turn to chilling secrets deep.
A tapestry of

0.14.793.994 I llama_perf_sampler_print:    sampling time =      49.38 ms /    33 runs   (    1.50 ms per token,   668.31 tokens per second)
0.14.793.997 I llama_perf_context_print:        load time =    1345.08 ms
0.14.793.998 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.794.013 I llama_perf_context_print:        eval time =   13351.34 ms /    32 runs   (  417.23 ms per token,     2.40 tokens per second)
0.14.794.014 I llama_perf_context_print:       total time =   13446.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.640 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.836 I main: llama backend init
0.00.002.799 I main: load the model and apply lora adapter, if any
0.00.024.771 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.861 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.875 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.877 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.881 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.882 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.884 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.885 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.886 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.887 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.894 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.895 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.896 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.897 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.898 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.161.295 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.261.083 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.279.514 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.279.521 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.279.522 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.279.523 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.279.524 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.279.526 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.279.527 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.279.531 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.279.532 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.279.533 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.279.534 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.279.535 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.279.543 I llama_model_loader: - type  f32:   37 tensors
0.00.279.547 I llama_model_loader: - type q8_0:  127 tensors
0.00.443.845 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.502.102 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.503.018 I llm_load_vocab: special tokens cache size = 5
0.00.607.934 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.608.008 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.608.008 I llm_load_print_meta: arch             = gemma
0.00.608.009 I llm_load_print_meta: vocab type       = SPM
0.00.608.010 I llm_load_print_meta: n_vocab          = 256000
0.00.608.012 I llm_load_print_meta: n_merges         = 0
0.00.608.013 I llm_load_print_meta: vocab_only       = 0
0.00.608.013 I llm_load_print_meta: n_ctx_train      = 8192
0.00.608.013 I llm_load_print_meta: n_embd           = 2048
0.00.608.014 I llm_load_print_meta: n_layer          = 18
0.00.608.078 I llm_load_print_meta: n_head           = 8
0.00.608.085 I llm_load_print_meta: n_head_kv        = 1
0.00.608.085 I llm_load_print_meta: n_rot            = 256
0.00.608.086 I llm_load_print_meta: n_swa            = 0
0.00.608.086 I llm_load_print_meta: n_embd_head_k    = 256
0.00.608.086 I llm_load_print_meta: n_embd_head_v    = 256
0.00.608.091 I llm_load_print_meta: n_gqa            = 8
0.00.608.095 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.608.100 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.608.101 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.608.103 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.608.103 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.608.103 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.608.104 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.608.109 I llm_load_print_meta: n_ff             = 16384
0.00.608.109 I llm_load_print_meta: n_expert         = 0
0.00.608.110 I llm_load_print_meta: n_expert_used    = 0
0.00.608.110 I llm_load_print_meta: causal attn      = 1
0.00.608.110 I llm_load_print_meta: pooling type     = 0
0.00.608.111 I llm_load_print_meta: rope type        = 2
0.00.608.111 I llm_load_print_meta: rope scaling     = linear
0.00.608.112 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.608.113 I llm_load_print_meta: freq_scale_train = 1
0.00.608.113 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.608.114 I llm_load_print_meta: rope_finetuned   = unknown
0.00.608.114 I llm_load_print_meta: ssm_d_conv       = 0
0.00.608.114 I llm_load_print_meta: ssm_d_inner      = 0
0.00.608.114 I llm_load_print_meta: ssm_d_state      = 0
0.00.608.115 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.608.115 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.608.116 I llm_load_print_meta: model type       = 2B
0.00.608.116 I llm_load_print_meta: model ftype      = Q8_0
0.00.608.117 I llm_load_print_meta: model params     = 2.51 B
0.00.608.118 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.608.118 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.608.119 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.608.119 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.608.120 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.608.120 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.608.120 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.608.121 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.608.126 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.608.127 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.608.128 I llm_load_print_meta: max token length = 93
0.00.608.295 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.702.540 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.708.276 I llama_new_context_with_model: n_ctx      = 8192
0.00.708.285 I llama_new_context_with_model: n_batch    = 2048
0.00.708.285 I llama_new_context_with_model: n_ubatch   = 512
0.00.708.286 I llama_new_context_with_model: flash_attn = 0
0.00.708.288 I llama_new_context_with_model: freq_base  = 10000.0
0.00.708.289 I llama_new_context_with_model: freq_scale = 1
0.00.737.484 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.737.530 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.737.644 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.739.007 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.739.012 I llama_new_context_with_model: graph nodes  = 601
0.00.739.013 I llama_new_context_with_model: graph splits = 1
0.00.739.029 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.355.370 I main: llama threadpool init, n_threads = 4
0.01.355.383 I 
0.01.355.491 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.355.495 I 
0.01.355.671 I sampler seed: 826971804
0.01.355.683 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.355.690 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.355.690 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.355.691 I 
 increasities.

I am unable to generate responses that are sexually suggestive in nature. [end of text]


0.08.898.593 I llama_perf_sampler_print:    sampling time =      27.79 ms /    19 runs   (    1.46 ms per token,   683.77 tokens per second)
0.08.898.596 I llama_perf_context_print:        load time =    1352.48 ms
0.08.898.598 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.898.609 I llama_perf_context_print:        eval time =    7489.31 ms /    18 runs   (  416.07 ms per token,     2.40 tokens per second)
0.08.898.611 I llama_perf_context_print:       total time =    7543.23 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.652 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.863 I main: llama backend init
0.00.002.812 I main: load the model and apply lora adapter, if any
0.00.024.995 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.214 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.306 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.317 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.319 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.324 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.328 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.330 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.332 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.333 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.335 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.343 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.345 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.347 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.349 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.351 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.428 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.955 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.392 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.403 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.404 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.405 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.406 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.407 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.408 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.412 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.413 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.414 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.415 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.269.417 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.425 I llama_model_loader: - type  f32:   37 tensors
0.00.269.429 I llama_model_loader: - type q8_0:  127 tensors
0.00.446.724 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.508.407 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.509.415 I llm_load_vocab: special tokens cache size = 5
0.00.607.345 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.607.416 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.607.417 I llm_load_print_meta: arch             = gemma
0.00.607.418 I llm_load_print_meta: vocab type       = SPM
0.00.607.418 I llm_load_print_meta: n_vocab          = 256000
0.00.607.421 I llm_load_print_meta: n_merges         = 0
0.00.607.421 I llm_load_print_meta: vocab_only       = 0
0.00.607.422 I llm_load_print_meta: n_ctx_train      = 8192
0.00.607.422 I llm_load_print_meta: n_embd           = 2048
0.00.607.423 I llm_load_print_meta: n_layer          = 18
0.00.607.485 I llm_load_print_meta: n_head           = 8
0.00.607.491 I llm_load_print_meta: n_head_kv        = 1
0.00.607.492 I llm_load_print_meta: n_rot            = 256
0.00.607.493 I llm_load_print_meta: n_swa            = 0
0.00.607.493 I llm_load_print_meta: n_embd_head_k    = 256
0.00.607.493 I llm_load_print_meta: n_embd_head_v    = 256
0.00.607.498 I llm_load_print_meta: n_gqa            = 8
0.00.607.502 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.607.507 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.607.519 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.607.521 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.607.521 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.607.522 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.607.522 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.607.527 I llm_load_print_meta: n_ff             = 16384
0.00.607.528 I llm_load_print_meta: n_expert         = 0
0.00.607.528 I llm_load_print_meta: n_expert_used    = 0
0.00.607.528 I llm_load_print_meta: causal attn      = 1
0.00.607.529 I llm_load_print_meta: pooling type     = 0
0.00.607.530 I llm_load_print_meta: rope type        = 2
0.00.607.530 I llm_load_print_meta: rope scaling     = linear
0.00.607.532 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.607.532 I llm_load_print_meta: freq_scale_train = 1
0.00.607.533 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.607.533 I llm_load_print_meta: rope_finetuned   = unknown
0.00.607.534 I llm_load_print_meta: ssm_d_conv       = 0
0.00.607.534 I llm_load_print_meta: ssm_d_inner      = 0
0.00.607.535 I llm_load_print_meta: ssm_d_state      = 0
0.00.607.536 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.607.537 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.607.538 I llm_load_print_meta: model type       = 2B
0.00.607.541 I llm_load_print_meta: model ftype      = Q8_0
0.00.607.542 I llm_load_print_meta: model params     = 2.51 B
0.00.607.543 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.607.544 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.607.545 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.607.559 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.607.560 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.607.561 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.607.562 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.607.563 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.607.570 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.607.572 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.607.583 I llm_load_print_meta: max token length = 93
0.00.607.779 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.684.861 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.684.869 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.684.870 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.684.871 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.684.871 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.684.872 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.690.812 I llama_new_context_with_model: n_ctx      = 8192
0.00.690.821 I llama_new_context_with_model: n_batch    = 2048
0.00.690.821 I llama_new_context_with_model: n_ubatch   = 512
0.00.690.822 I llama_new_context_with_model: flash_attn = 0
0.00.690.825 I llama_new_context_with_model: freq_base  = 10000.0
0.00.690.826 I llama_new_context_with_model: freq_scale = 1
0.00.720.086 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.720.131 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.720.252 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.721.676 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.721.680 I llama_new_context_with_model: graph nodes  = 601
0.00.721.681 I llama_new_context_with_model: graph splits = 1
0.00.721.698 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.330.709 I main: llama threadpool init, n_threads = 4
0.01.330.722 I 
0.01.330.844 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.330.848 I 
0.01.331.037 I sampler seed: 4046131485
0.01.331.048 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.331.057 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.331.058 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.331.059 I 
 increasities with the protagonist's lover, and his actions are revealed to be a betrayal of trust.

**Possible interpretations:**

* The protagonist's

0.14.911.022 I llama_perf_sampler_print:    sampling time =      49.82 ms /    33 runs   (    1.51 ms per token,   662.41 tokens per second)
0.14.911.026 I llama_perf_context_print:        load time =    1327.81 ms
0.14.911.028 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.911.041 I llama_perf_context_print:        eval time =   13483.48 ms /    32 runs   (  421.36 ms per token,     2.37 tokens per second)
0.14.911.042 I llama_perf_context_print:       total time =   13580.32 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.674 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.871 I main: llama backend init
0.00.002.805 I main: load the model and apply lora adapter, if any
0.00.025.081 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.287 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.377 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.388 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.389 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.393 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.394 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.396 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.397 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.397 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.398 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.406 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.410 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.411 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.413 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.414 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.107 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.930 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.243 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.254 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.255 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.257 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.258 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.259 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.260 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.280 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.283 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.284 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.286 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.268.287 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.297 I llama_model_loader: - type  f32:   37 tensors
0.00.268.302 I llama_model_loader: - type q8_0:  127 tensors
0.00.451.383 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.509.600 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.510.524 I llm_load_vocab: special tokens cache size = 5
0.00.604.303 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.604.380 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.604.381 I llm_load_print_meta: arch             = gemma
0.00.604.382 I llm_load_print_meta: vocab type       = SPM
0.00.604.383 I llm_load_print_meta: n_vocab          = 256000
0.00.604.385 I llm_load_print_meta: n_merges         = 0
0.00.604.385 I llm_load_print_meta: vocab_only       = 0
0.00.604.386 I llm_load_print_meta: n_ctx_train      = 8192
0.00.604.386 I llm_load_print_meta: n_embd           = 2048
0.00.604.387 I llm_load_print_meta: n_layer          = 18
0.00.604.453 I llm_load_print_meta: n_head           = 8
0.00.604.460 I llm_load_print_meta: n_head_kv        = 1
0.00.604.461 I llm_load_print_meta: n_rot            = 256
0.00.604.462 I llm_load_print_meta: n_swa            = 0
0.00.604.462 I llm_load_print_meta: n_embd_head_k    = 256
0.00.604.462 I llm_load_print_meta: n_embd_head_v    = 256
0.00.604.467 I llm_load_print_meta: n_gqa            = 8
0.00.604.472 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.604.477 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.604.478 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.604.480 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.604.481 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.604.481 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.604.482 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.604.487 I llm_load_print_meta: n_ff             = 16384
0.00.604.487 I llm_load_print_meta: n_expert         = 0
0.00.604.489 I llm_load_print_meta: n_expert_used    = 0
0.00.604.489 I llm_load_print_meta: causal attn      = 1
0.00.604.500 I llm_load_print_meta: pooling type     = 0
0.00.604.500 I llm_load_print_meta: rope type        = 2
0.00.604.514 I llm_load_print_meta: rope scaling     = linear
0.00.604.516 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.604.517 I llm_load_print_meta: freq_scale_train = 1
0.00.604.517 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.604.517 I llm_load_print_meta: rope_finetuned   = unknown
0.00.604.526 I llm_load_print_meta: ssm_d_conv       = 0
0.00.604.527 I llm_load_print_meta: ssm_d_inner      = 0
0.00.604.528 I llm_load_print_meta: ssm_d_state      = 0
0.00.604.528 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.604.528 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.604.537 I llm_load_print_meta: model type       = 2B
0.00.604.538 I llm_load_print_meta: model ftype      = Q8_0
0.00.604.539 I llm_load_print_meta: model params     = 2.51 B
0.00.604.540 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.604.541 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.604.542 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.604.542 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.604.543 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.604.544 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.604.544 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.604.545 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.604.551 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.604.552 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.604.553 I llm_load_print_meta: max token length = 93
0.00.604.721 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.675.672 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.675.684 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.681.340 I llama_new_context_with_model: n_ctx      = 8192
0.00.681.347 I llama_new_context_with_model: n_batch    = 2048
0.00.681.348 I llama_new_context_with_model: n_ubatch   = 512
0.00.681.348 I llama_new_context_with_model: flash_attn = 0
0.00.681.351 I llama_new_context_with_model: freq_base  = 10000.0
0.00.681.352 I llama_new_context_with_model: freq_scale = 1
0.00.710.898 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.710.940 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.711.057 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.712.437 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.712.442 I llama_new_context_with_model: graph nodes  = 601
0.00.712.443 I llama_new_context_with_model: graph splits = 1
0.00.712.459 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.323.542 I main: llama threadpool init, n_threads = 4
0.01.323.555 I 
0.01.323.659 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.323.663 I 
0.01.323.837 I sampler seed: 4265741157
0.01.323.848 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.323.855 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.323.856 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.323.859 I 
 increadibly. [end of text]


0.03.009.856 I llama_perf_sampler_print:    sampling time =       6.26 ms /     5 runs   (    1.25 ms per token,   798.98 tokens per second)
0.03.009.859 I llama_perf_context_print:        load time =    1320.65 ms
0.03.009.861 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.009.885 I llama_perf_context_print:        eval time =    1672.68 ms /     4 runs   (  418.17 ms per token,     2.39 tokens per second)
0.03.009.887 I llama_perf_context_print:       total time =    1686.33 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m51.324s
user	2m37.694s
sys	0m9.427s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3943 (cda0e4b6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198404.95 ms
main:    total time = 198404.95 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.629 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.828 I main: llama backend init
0.00.002.773 I main: load the model and apply lora adapter, if any
0.00.024.891 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.111 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.206 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.219 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.221 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.226 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.230 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.231 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.232 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.233 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.234 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.242 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.243 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.244 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.245 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.249 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.448 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.298 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.649 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.657 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.658 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.659 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.660 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.661 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.662 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.666 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.667 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.668 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.669 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.670 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.678 I llama_model_loader: - type  f32:   37 tensors
0.00.267.682 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.683 I llama_model_loader: - type q6_K:   19 tensors
0.00.444.219 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.505.092 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.506.062 I llm_load_vocab: special tokens cache size = 5
0.00.600.106 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.600.179 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.600.180 I llm_load_print_meta: arch             = gemma
0.00.600.181 I llm_load_print_meta: vocab type       = SPM
0.00.600.182 I llm_load_print_meta: n_vocab          = 256000
0.00.600.184 I llm_load_print_meta: n_merges         = 0
0.00.600.185 I llm_load_print_meta: vocab_only       = 0
0.00.600.185 I llm_load_print_meta: n_ctx_train      = 8192
0.00.600.185 I llm_load_print_meta: n_embd           = 2048
0.00.600.186 I llm_load_print_meta: n_layer          = 18
0.00.600.249 I llm_load_print_meta: n_head           = 8
0.00.600.256 I llm_load_print_meta: n_head_kv        = 1
0.00.600.257 I llm_load_print_meta: n_rot            = 256
0.00.600.257 I llm_load_print_meta: n_swa            = 0
0.00.600.257 I llm_load_print_meta: n_embd_head_k    = 256
0.00.600.258 I llm_load_print_meta: n_embd_head_v    = 256
0.00.600.262 I llm_load_print_meta: n_gqa            = 8
0.00.600.267 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.600.272 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.600.273 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.600.274 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.600.275 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.600.275 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.600.276 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.600.281 I llm_load_print_meta: n_ff             = 16384
0.00.600.281 I llm_load_print_meta: n_expert         = 0
0.00.600.282 I llm_load_print_meta: n_expert_used    = 0
0.00.600.282 I llm_load_print_meta: causal attn      = 1
0.00.600.282 I llm_load_print_meta: pooling type     = 0
0.00.600.283 I llm_load_print_meta: rope type        = 2
0.00.600.283 I llm_load_print_meta: rope scaling     = linear
0.00.600.284 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.600.285 I llm_load_print_meta: freq_scale_train = 1
0.00.600.285 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.600.286 I llm_load_print_meta: rope_finetuned   = unknown
0.00.600.286 I llm_load_print_meta: ssm_d_conv       = 0
0.00.600.286 I llm_load_print_meta: ssm_d_inner      = 0
0.00.600.286 I llm_load_print_meta: ssm_d_state      = 0
0.00.600.287 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.600.287 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.600.288 I llm_load_print_meta: model type       = 2B
0.00.600.289 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.600.289 I llm_load_print_meta: model params     = 2.51 B
0.00.600.290 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.600.290 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.600.291 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.600.291 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.600.291 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.600.292 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.600.292 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.600.292 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.600.298 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.600.299 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.600.300 I llm_load_print_meta: max token length = 93
0.00.600.465 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.661.019 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.661.030 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.661.030 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.661.031 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.661.032 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.661.032 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.666.672 I llama_new_context_with_model: n_ctx      = 8192
0.00.666.680 I llama_new_context_with_model: n_batch    = 2048
0.00.666.681 I llama_new_context_with_model: n_ubatch   = 512
0.00.666.681 I llama_new_context_with_model: flash_attn = 0
0.00.666.684 I llama_new_context_with_model: freq_base  = 10000.0
0.00.666.685 I llama_new_context_with_model: freq_scale = 1
0.00.695.931 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.695.975 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.696.085 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.697.483 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.697.488 I llama_new_context_with_model: graph nodes  = 601
0.00.697.488 I llama_new_context_with_model: graph splits = 1
0.00.697.506 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.276.804 I main: llama threadpool init, n_threads = 4
0.01.276.817 I 
0.01.276.927 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.276.931 I 
0.01.277.110 I sampler seed: 450993099
0.01.277.120 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.277.137 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.277.141 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.277.141 I 
 seconally:

**Part 1**

- Introduction to the concept of "mind-body connection".
- Explanation of the physical and emotional aspects of

0.12.209.659 I llama_perf_sampler_print:    sampling time =      49.37 ms /    33 runs   (    1.50 ms per token,   668.38 tokens per second)
0.12.209.663 I llama_perf_context_print:        load time =    1273.93 ms
0.12.209.664 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.209.666 I llama_perf_context_print:        eval time =   10837.26 ms /    32 runs   (  338.66 ms per token,     2.95 tokens per second)
0.12.209.668 I llama_perf_context_print:       total time =   10932.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3943 (cda0e4b6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198312.70 ms
main:    total time = 198312.70 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.621 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.823 I main: llama backend init
0.00.002.760 I main: load the model and apply lora adapter, if any
0.00.024.600 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.696 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.711 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.715 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.719 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.721 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.722 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.723 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.724 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.725 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.731 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.732 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.733 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.734 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.736 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.848 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.696 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.187 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.204 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.205 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.206 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.207 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.208 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.210 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.213 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.214 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.222 I llama_model_loader: - type  f32:   37 tensors
0.00.267.226 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.227 I llama_model_loader: - type q6_K:   19 tensors
0.00.436.366 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.499.442 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.500.403 I llm_load_vocab: special tokens cache size = 5
0.00.595.580 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.595.650 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.595.654 I llm_load_print_meta: arch             = gemma
0.00.595.655 I llm_load_print_meta: vocab type       = SPM
0.00.595.655 I llm_load_print_meta: n_vocab          = 256000
0.00.595.658 I llm_load_print_meta: n_merges         = 0
0.00.595.658 I llm_load_print_meta: vocab_only       = 0
0.00.595.659 I llm_load_print_meta: n_ctx_train      = 8192
0.00.595.659 I llm_load_print_meta: n_embd           = 2048
0.00.595.659 I llm_load_print_meta: n_layer          = 18
0.00.595.723 I llm_load_print_meta: n_head           = 8
0.00.595.732 I llm_load_print_meta: n_head_kv        = 1
0.00.595.734 I llm_load_print_meta: n_rot            = 256
0.00.595.734 I llm_load_print_meta: n_swa            = 0
0.00.595.734 I llm_load_print_meta: n_embd_head_k    = 256
0.00.595.735 I llm_load_print_meta: n_embd_head_v    = 256
0.00.595.739 I llm_load_print_meta: n_gqa            = 8
0.00.595.744 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.595.749 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.595.751 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.595.753 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.595.753 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.595.755 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.595.755 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.595.760 I llm_load_print_meta: n_ff             = 16384
0.00.595.761 I llm_load_print_meta: n_expert         = 0
0.00.595.761 I llm_load_print_meta: n_expert_used    = 0
0.00.595.761 I llm_load_print_meta: causal attn      = 1
0.00.595.762 I llm_load_print_meta: pooling type     = 0
0.00.595.762 I llm_load_print_meta: rope type        = 2
0.00.595.763 I llm_load_print_meta: rope scaling     = linear
0.00.595.764 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.595.765 I llm_load_print_meta: freq_scale_train = 1
0.00.595.766 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.595.769 I llm_load_print_meta: rope_finetuned   = unknown
0.00.595.769 I llm_load_print_meta: ssm_d_conv       = 0
0.00.595.769 I llm_load_print_meta: ssm_d_inner      = 0
0.00.595.769 I llm_load_print_meta: ssm_d_state      = 0
0.00.595.770 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.595.770 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.595.771 I llm_load_print_meta: model type       = 2B
0.00.595.771 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.595.772 I llm_load_print_meta: model params     = 2.51 B
0.00.595.773 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.595.773 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.595.774 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.595.774 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.595.774 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.595.775 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.595.775 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.595.776 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.595.782 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.595.784 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.595.784 I llm_load_print_meta: max token length = 93
0.00.595.951 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.652.970 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.658.499 I llama_new_context_with_model: n_ctx      = 8192
0.00.658.507 I llama_new_context_with_model: n_batch    = 2048
0.00.658.507 I llama_new_context_with_model: n_ubatch   = 512
0.00.658.508 I llama_new_context_with_model: flash_attn = 0
0.00.658.511 I llama_new_context_with_model: freq_base  = 10000.0
0.00.658.512 I llama_new_context_with_model: freq_scale = 1
0.00.688.209 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.688.253 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.688.366 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.689.701 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.689.706 I llama_new_context_with_model: graph nodes  = 601
0.00.689.707 I llama_new_context_with_model: graph splits = 1
0.00.689.722 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.269.395 I main: llama threadpool init, n_threads = 4
0.01.269.408 I 
0.01.269.517 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.269.521 I 
0.01.269.701 I sampler seed: 2644866093
0.01.269.713 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.269.721 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.269.722 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.269.722 I 
 increamically, and then sighed deeply. She sat cross-legged on the tatami mat, her gaze fixed on the empty space in front of her.



0.12.177.108 I llama_perf_sampler_print:    sampling time =      49.23 ms /    33 runs   (    1.49 ms per token,   670.34 tokens per second)
0.12.177.123 I llama_perf_context_print:        load time =    1266.55 ms
0.12.177.125 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.177.127 I llama_perf_context_print:        eval time =   10812.28 ms /    32 runs   (  337.88 ms per token,     2.96 tokens per second)
0.12.177.128 I llama_perf_context_print:       total time =   10907.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m3.976s
user	50m5.427s
sys	0m6.385s
