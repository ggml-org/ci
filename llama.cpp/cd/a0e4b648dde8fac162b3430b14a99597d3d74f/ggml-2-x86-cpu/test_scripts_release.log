+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.538 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.754 I main: llama backend init
0.00.001.889 I main: load the model and apply lora adapter, if any
0.00.022.432 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.479 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.486 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.491 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.493 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.497 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.497 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.498 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.499 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.499 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.500 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.503 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.504 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.505 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.505 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.506 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.604 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.748 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.556 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.562 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.563 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.564 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.565 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.566 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.567 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.570 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.571 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.572 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.573 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.574 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.578 I llama_model_loader: - type  f32:   37 tensors
0.00.134.580 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.716 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.179 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.706 I llm_load_vocab: special tokens cache size = 5
0.00.267.345 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.368 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.369 I llm_load_print_meta: arch             = gemma
0.00.267.370 I llm_load_print_meta: vocab type       = SPM
0.00.267.370 I llm_load_print_meta: n_vocab          = 256000
0.00.267.371 I llm_load_print_meta: n_merges         = 0
0.00.267.371 I llm_load_print_meta: vocab_only       = 0
0.00.267.371 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.372 I llm_load_print_meta: n_embd           = 2048
0.00.267.372 I llm_load_print_meta: n_layer          = 18
0.00.267.384 I llm_load_print_meta: n_head           = 8
0.00.267.385 I llm_load_print_meta: n_head_kv        = 1
0.00.267.385 I llm_load_print_meta: n_rot            = 256
0.00.267.385 I llm_load_print_meta: n_swa            = 0
0.00.267.386 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.386 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.387 I llm_load_print_meta: n_gqa            = 8
0.00.267.388 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.389 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.390 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.391 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.391 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.392 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.392 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.393 I llm_load_print_meta: n_ff             = 16384
0.00.267.394 I llm_load_print_meta: n_expert         = 0
0.00.267.394 I llm_load_print_meta: n_expert_used    = 0
0.00.267.394 I llm_load_print_meta: causal attn      = 1
0.00.267.395 I llm_load_print_meta: pooling type     = 0
0.00.267.395 I llm_load_print_meta: rope type        = 2
0.00.267.395 I llm_load_print_meta: rope scaling     = linear
0.00.267.397 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.397 I llm_load_print_meta: freq_scale_train = 1
0.00.267.398 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.398 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.398 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.399 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.399 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.399 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.399 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.400 I llm_load_print_meta: model type       = 2B
0.00.267.400 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.401 I llm_load_print_meta: model params     = 2.51 B
0.00.267.402 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.402 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.403 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.403 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.403 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.404 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.404 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.405 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.405 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.405 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.405 I llm_load_print_meta: max token length = 93
0.00.267.430 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.368.247 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.368.257 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.368.258 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.368.258 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.368.259 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.368.260 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.373.443 I llama_new_context_with_model: n_ctx      = 8192
0.00.373.450 I llama_new_context_with_model: n_batch    = 2048
0.00.373.451 I llama_new_context_with_model: n_ubatch   = 512
0.00.373.451 I llama_new_context_with_model: flash_attn = 0
0.00.373.454 I llama_new_context_with_model: freq_base  = 10000.0
0.00.373.455 I llama_new_context_with_model: freq_scale = 1
0.00.402.510 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.402.525 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.402.617 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.403.533 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.403.540 I llama_new_context_with_model: graph nodes  = 601
0.00.403.540 I llama_new_context_with_model: graph splits = 1
0.00.403.542 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.494.539 I main: llama threadpool init, n_threads = 4
0.00.494.552 I 
0.00.494.630 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.494.633 I 
0.00.494.673 I sampler seed: 358517405
0.00.494.683 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.494.686 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.494.686 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.494.686 I 
 increasities, and a desire to understand their motivations.

I am particularly interested in the role of social comparison in these dynamics, and how it influences the way

0.02.748.556 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6935.69 tokens per second)
0.02.748.558 I llama_perf_context_print:        load time =     492.63 ms
0.02.748.560 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.748.562 I llama_perf_context_print:        eval time =    2234.26 ms /    32 runs   (   69.82 ms per token,    14.32 tokens per second)
0.02.748.563 I llama_perf_context_print:       total time =    2254.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.534 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.754 I main: llama backend init
0.00.001.871 I main: load the model and apply lora adapter, if any
0.00.022.496 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.508 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.516 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.517 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.521 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.522 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.523 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.524 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.526 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.527 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.534 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.534 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.535 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.536 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.537 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.522 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.713 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.556 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.561 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.562 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.562 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.563 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.564 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.564 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.567 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.567 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.568 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.568 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.134.570 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.574 I llama_model_loader: - type  f32:   37 tensors
0.00.134.578 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.139 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.314 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.823 I llm_load_vocab: special tokens cache size = 5
0.00.267.439 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.453 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.453 I llm_load_print_meta: arch             = gemma
0.00.267.454 I llm_load_print_meta: vocab type       = SPM
0.00.267.454 I llm_load_print_meta: n_vocab          = 256000
0.00.267.455 I llm_load_print_meta: n_merges         = 0
0.00.267.455 I llm_load_print_meta: vocab_only       = 0
0.00.267.456 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.456 I llm_load_print_meta: n_embd           = 2048
0.00.267.456 I llm_load_print_meta: n_layer          = 18
0.00.267.466 I llm_load_print_meta: n_head           = 8
0.00.267.467 I llm_load_print_meta: n_head_kv        = 1
0.00.267.467 I llm_load_print_meta: n_rot            = 256
0.00.267.468 I llm_load_print_meta: n_swa            = 0
0.00.267.468 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.468 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.469 I llm_load_print_meta: n_gqa            = 8
0.00.267.470 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.471 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.472 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.473 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.473 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.474 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.474 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.475 I llm_load_print_meta: n_ff             = 16384
0.00.267.475 I llm_load_print_meta: n_expert         = 0
0.00.267.476 I llm_load_print_meta: n_expert_used    = 0
0.00.267.476 I llm_load_print_meta: causal attn      = 1
0.00.267.476 I llm_load_print_meta: pooling type     = 0
0.00.267.477 I llm_load_print_meta: rope type        = 2
0.00.267.477 I llm_load_print_meta: rope scaling     = linear
0.00.267.478 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.479 I llm_load_print_meta: freq_scale_train = 1
0.00.267.479 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.479 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.480 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.480 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.480 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.480 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.481 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.481 I llm_load_print_meta: model type       = 2B
0.00.267.482 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.483 I llm_load_print_meta: model params     = 2.51 B
0.00.267.483 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.484 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.484 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.484 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.485 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.485 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.485 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.485 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.486 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.486 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.487 I llm_load_print_meta: max token length = 93
0.00.267.505 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.362.180 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.367.217 I llama_new_context_with_model: n_ctx      = 8192
0.00.367.222 I llama_new_context_with_model: n_batch    = 2048
0.00.367.223 I llama_new_context_with_model: n_ubatch   = 512
0.00.367.223 I llama_new_context_with_model: flash_attn = 0
0.00.367.225 I llama_new_context_with_model: freq_base  = 10000.0
0.00.367.226 I llama_new_context_with_model: freq_scale = 1
0.00.395.819 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.395.834 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.395.926 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.795 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.396.803 I llama_new_context_with_model: graph nodes  = 601
0.00.396.804 I llama_new_context_with_model: graph splits = 1
0.00.396.806 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.691 I main: llama threadpool init, n_threads = 4
0.00.483.705 I 
0.00.483.782 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.483.782 I 
0.00.483.823 I sampler seed: 3484515294
0.00.483.831 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.483.834 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.483.835 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.483.835 I 
 increasities are the most common form of sexually transmitted infection (STI) in the United States.

**Question:** What is the most common form of sexually transmitted

0.02.650.026 I llama_perf_sampler_print:    sampling time =       4.90 ms /    33 runs   (    0.15 ms per token,  6740.20 tokens per second)
0.02.650.029 I llama_perf_context_print:        load time =     481.80 ms
0.02.650.030 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.650.033 I llama_perf_context_print:        eval time =    2145.83 ms /    32 runs   (   67.06 ms per token,    14.91 tokens per second)
0.02.650.034 I llama_perf_context_print:       total time =    2166.34 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.527 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.715 I main: llama backend init
0.00.001.782 I main: load the model and apply lora adapter, if any
0.00.021.647 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.696 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.703 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.707 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.708 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.711 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.711 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.712 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.713 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.713 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.713 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.717 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.718 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.718 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.719 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.719 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.155 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.499 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.296 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.303 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.304 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.304 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.305 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.306 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.306 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.309 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.309 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.310 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.310 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.311 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.314 I llama_model_loader: - type  f32:   37 tensors
0.00.133.318 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.967 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.799 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.295 I llm_load_vocab: special tokens cache size = 5
0.00.267.085 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.100 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.100 I llm_load_print_meta: arch             = gemma
0.00.267.101 I llm_load_print_meta: vocab type       = SPM
0.00.267.101 I llm_load_print_meta: n_vocab          = 256000
0.00.267.102 I llm_load_print_meta: n_merges         = 0
0.00.267.102 I llm_load_print_meta: vocab_only       = 0
0.00.267.102 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.102 I llm_load_print_meta: n_embd           = 2048
0.00.267.103 I llm_load_print_meta: n_layer          = 18
0.00.267.114 I llm_load_print_meta: n_head           = 8
0.00.267.115 I llm_load_print_meta: n_head_kv        = 1
0.00.267.115 I llm_load_print_meta: n_rot            = 256
0.00.267.116 I llm_load_print_meta: n_swa            = 0
0.00.267.116 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.116 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.117 I llm_load_print_meta: n_gqa            = 8
0.00.267.118 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.119 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.120 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.121 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.122 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.122 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.122 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.123 I llm_load_print_meta: n_ff             = 16384
0.00.267.124 I llm_load_print_meta: n_expert         = 0
0.00.267.124 I llm_load_print_meta: n_expert_used    = 0
0.00.267.124 I llm_load_print_meta: causal attn      = 1
0.00.267.125 I llm_load_print_meta: pooling type     = 0
0.00.267.125 I llm_load_print_meta: rope type        = 2
0.00.267.125 I llm_load_print_meta: rope scaling     = linear
0.00.267.127 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.127 I llm_load_print_meta: freq_scale_train = 1
0.00.267.128 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.128 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.128 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.129 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.129 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.129 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.129 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.130 I llm_load_print_meta: model type       = 2B
0.00.267.131 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.132 I llm_load_print_meta: model params     = 2.51 B
0.00.267.133 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.133 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.133 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.134 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.134 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.134 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.135 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.135 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.135 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.136 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.136 I llm_load_print_meta: max token length = 93
0.00.267.156 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.342.461 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.342.468 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.342.469 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.342.470 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.342.470 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.342.471 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.348.559 I llama_new_context_with_model: n_ctx      = 8192
0.00.348.565 I llama_new_context_with_model: n_batch    = 2048
0.00.348.565 I llama_new_context_with_model: n_ubatch   = 512
0.00.348.566 I llama_new_context_with_model: flash_attn = 0
0.00.348.569 I llama_new_context_with_model: freq_base  = 10000.0
0.00.348.570 I llama_new_context_with_model: freq_scale = 1
0.00.379.687 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.379.702 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.379.813 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.729 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.380.737 I llama_new_context_with_model: graph nodes  = 601
0.00.380.737 I llama_new_context_with_model: graph splits = 1
0.00.380.739 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.739 I main: llama threadpool init, n_threads = 4
0.00.473.752 I 
0.00.473.827 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.830 I 
0.00.473.869 I sampler seed: 703263913
0.00.473.879 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.883 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.473.884 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.884 I 
 increasities, the young woman was quick to embrace them.

This passage describes a person who is easily seduced by physical attraction and superficiality. What psychological term

0.02.767.458 I llama_perf_sampler_print:    sampling time =       5.12 ms /    33 runs   (    0.15 ms per token,  6451.61 tokens per second)
0.02.767.460 I llama_perf_context_print:        load time =     471.93 ms
0.02.767.461 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.767.463 I llama_perf_context_print:        eval time =    2274.10 ms /    32 runs   (   71.07 ms per token,    14.07 tokens per second)
0.02.767.464 I llama_perf_context_print:       total time =    2293.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.552 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.837 I main: load the model and apply lora adapter, if any
0.00.024.108 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.174 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.186 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.193 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.194 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.199 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.201 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.202 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.202 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.203 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.204 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.210 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.210 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.211 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.212 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.213 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.180 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.139.594 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.146.433 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.146.440 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.146.441 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.146.441 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.146.442 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.146.443 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.146.443 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.146.446 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.146.446 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.146.447 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.146.447 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.146.448 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.146.451 I llama_model_loader: - type  f32:   37 tensors
0.00.146.454 I llama_model_loader: - type q8_0:  127 tensors
0.00.229.387 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.276.617 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.277.306 I llm_load_vocab: special tokens cache size = 5
0.00.298.538 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.298.557 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.298.558 I llm_load_print_meta: arch             = gemma
0.00.298.559 I llm_load_print_meta: vocab type       = SPM
0.00.298.560 I llm_load_print_meta: n_vocab          = 256000
0.00.298.560 I llm_load_print_meta: n_merges         = 0
0.00.298.560 I llm_load_print_meta: vocab_only       = 0
0.00.298.560 I llm_load_print_meta: n_ctx_train      = 8192
0.00.298.561 I llm_load_print_meta: n_embd           = 2048
0.00.298.561 I llm_load_print_meta: n_layer          = 18
0.00.298.574 I llm_load_print_meta: n_head           = 8
0.00.298.575 I llm_load_print_meta: n_head_kv        = 1
0.00.298.576 I llm_load_print_meta: n_rot            = 256
0.00.298.576 I llm_load_print_meta: n_swa            = 0
0.00.298.576 I llm_load_print_meta: n_embd_head_k    = 256
0.00.298.576 I llm_load_print_meta: n_embd_head_v    = 256
0.00.298.577 I llm_load_print_meta: n_gqa            = 8
0.00.298.578 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.298.579 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.298.580 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.298.581 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.298.582 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.298.582 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.298.582 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.298.583 I llm_load_print_meta: n_ff             = 16384
0.00.298.583 I llm_load_print_meta: n_expert         = 0
0.00.298.584 I llm_load_print_meta: n_expert_used    = 0
0.00.298.584 I llm_load_print_meta: causal attn      = 1
0.00.298.585 I llm_load_print_meta: pooling type     = 0
0.00.298.585 I llm_load_print_meta: rope type        = 2
0.00.298.585 I llm_load_print_meta: rope scaling     = linear
0.00.298.587 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.298.587 I llm_load_print_meta: freq_scale_train = 1
0.00.298.587 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.298.588 I llm_load_print_meta: rope_finetuned   = unknown
0.00.298.588 I llm_load_print_meta: ssm_d_conv       = 0
0.00.298.588 I llm_load_print_meta: ssm_d_inner      = 0
0.00.298.588 I llm_load_print_meta: ssm_d_state      = 0
0.00.298.589 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.298.589 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.298.589 I llm_load_print_meta: model type       = 2B
0.00.298.590 I llm_load_print_meta: model ftype      = Q8_0
0.00.298.591 I llm_load_print_meta: model params     = 2.51 B
0.00.298.592 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.298.592 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.298.593 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.298.593 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.298.593 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.298.594 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.298.594 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.298.595 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.298.595 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.298.595 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.298.596 I llm_load_print_meta: max token length = 93
0.00.298.616 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.369.406 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.369.415 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.374.511 I llama_new_context_with_model: n_ctx      = 8192
0.00.374.519 I llama_new_context_with_model: n_batch    = 2048
0.00.374.519 I llama_new_context_with_model: n_ubatch   = 512
0.00.374.520 I llama_new_context_with_model: flash_attn = 0
0.00.374.522 I llama_new_context_with_model: freq_base  = 10000.0
0.00.374.523 I llama_new_context_with_model: freq_scale = 1
0.00.403.650 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.403.666 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.403.770 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.404.615 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.404.624 I llama_new_context_with_model: graph nodes  = 601
0.00.404.624 I llama_new_context_with_model: graph splits = 1
0.00.404.626 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.500.096 I main: llama threadpool init, n_threads = 4
0.00.500.110 I 
0.00.500.202 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.500.205 I 
0.00.500.251 I sampler seed: 4227272
0.00.500.261 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.500.264 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.500.265 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.500.265 I 
 increasements in a controlled manner through a dedicated team.

**Step 1: Assess the need for increasements**

* Conduct stakeholder interviews and surveys


0.02.924.783 I llama_perf_sampler_print:    sampling time =       4.66 ms /    33 runs   (    0.14 ms per token,  7078.51 tokens per second)
0.02.924.786 I llama_perf_context_print:        load time =     498.24 ms
0.02.924.787 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.924.788 I llama_perf_context_print:        eval time =    2405.18 ms /    32 runs   (   75.16 ms per token,    13.30 tokens per second)
0.02.924.789 I llama_perf_context_print:       total time =    2424.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.523s
user	0m39.514s
sys	0m9.314s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3943 (cda0e4b6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32009.62 ms
main:    total time = 32009.62 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.555 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.021.935 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.985 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.996 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.001 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.004 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.009 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.009 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.010 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.011 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.011 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.012 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.016 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.016 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.017 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.017 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.018 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.794 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.906 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.734 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.740 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.741 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.741 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.742 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.743 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.743 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.746 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.746 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.747 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.747 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.748 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.751 I llama_model_loader: - type  f32:   37 tensors
0.00.133.754 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.754 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.291 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.442 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.023 I llm_load_vocab: special tokens cache size = 5
0.00.267.861 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.878 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.879 I llm_load_print_meta: arch             = gemma
0.00.267.879 I llm_load_print_meta: vocab type       = SPM
0.00.267.880 I llm_load_print_meta: n_vocab          = 256000
0.00.267.880 I llm_load_print_meta: n_merges         = 0
0.00.267.881 I llm_load_print_meta: vocab_only       = 0
0.00.267.881 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.881 I llm_load_print_meta: n_embd           = 2048
0.00.267.882 I llm_load_print_meta: n_layer          = 18
0.00.267.901 I llm_load_print_meta: n_head           = 8
0.00.267.903 I llm_load_print_meta: n_head_kv        = 1
0.00.267.903 I llm_load_print_meta: n_rot            = 256
0.00.267.903 I llm_load_print_meta: n_swa            = 0
0.00.267.904 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.904 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.905 I llm_load_print_meta: n_gqa            = 8
0.00.267.906 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.907 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.908 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.910 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.910 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.910 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.910 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.912 I llm_load_print_meta: n_ff             = 16384
0.00.267.912 I llm_load_print_meta: n_expert         = 0
0.00.267.912 I llm_load_print_meta: n_expert_used    = 0
0.00.267.913 I llm_load_print_meta: causal attn      = 1
0.00.267.913 I llm_load_print_meta: pooling type     = 0
0.00.267.913 I llm_load_print_meta: rope type        = 2
0.00.267.914 I llm_load_print_meta: rope scaling     = linear
0.00.267.915 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.916 I llm_load_print_meta: freq_scale_train = 1
0.00.267.916 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.917 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.917 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.917 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.917 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.917 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.918 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.918 I llm_load_print_meta: model type       = 2B
0.00.267.919 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.267.920 I llm_load_print_meta: model params     = 2.51 B
0.00.267.921 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.267.921 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.921 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.922 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.922 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.922 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.922 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.923 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.923 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.923 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.924 I llm_load_print_meta: max token length = 93
0.00.267.942 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.126 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.327.132 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.327.133 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.327.134 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.327.134 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.327.135 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.332.100 I llama_new_context_with_model: n_ctx      = 8192
0.00.332.105 I llama_new_context_with_model: n_batch    = 2048
0.00.332.105 I llama_new_context_with_model: n_ubatch   = 512
0.00.332.106 I llama_new_context_with_model: flash_attn = 0
0.00.332.108 I llama_new_context_with_model: freq_base  = 10000.0
0.00.332.108 I llama_new_context_with_model: freq_scale = 1
0.00.360.507 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.360.523 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.360.613 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.361.469 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.361.478 I llama_new_context_with_model: graph nodes  = 601
0.00.361.478 I llama_new_context_with_model: graph splits = 1
0.00.361.480 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.443.583 I main: llama threadpool init, n_threads = 4
0.00.443.598 I 
0.00.443.680 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.443.683 I 
0.00.443.725 I sampler seed: 2233007184
0.00.443.736 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.443.739 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.443.740 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.443.740 I 
 seconally. [end of text]


0.00.652.684 I llama_perf_sampler_print:    sampling time =       0.59 ms /     5 runs   (    0.12 ms per token,  8431.70 tokens per second)
0.00.652.686 I llama_perf_context_print:        load time =     441.70 ms
0.00.652.688 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.652.690 I llama_perf_context_print:        eval time =     205.80 ms /     4 runs   (   51.45 ms per token,    19.44 tokens per second)
0.00.652.691 I llama_perf_context_print:       total time =     209.11 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3943 (cda0e4b6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32210.14 ms
main:    total time = 32210.14 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.560 I build: 3943 (cda0e4b6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.879 I main: load the model and apply lora adapter, if any
0.00.021.999 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.014 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.021 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.022 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.026 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.027 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.027 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.028 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.028 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.029 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.033 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.033 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.034 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.034 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.035 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.737 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.288 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.049 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.055 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.055 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.056 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.057 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.058 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.058 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.061 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.061 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.064 I llama_model_loader: - type  f32:   37 tensors
0.00.134.067 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.068 I llama_model_loader: - type q6_K:   19 tensors
0.00.215.474 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.263.427 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.264.028 I llm_load_vocab: special tokens cache size = 5
0.00.284.875 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.892 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.892 I llm_load_print_meta: arch             = gemma
0.00.284.893 I llm_load_print_meta: vocab type       = SPM
0.00.284.894 I llm_load_print_meta: n_vocab          = 256000
0.00.284.894 I llm_load_print_meta: n_merges         = 0
0.00.284.894 I llm_load_print_meta: vocab_only       = 0
0.00.284.895 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.895 I llm_load_print_meta: n_embd           = 2048
0.00.284.895 I llm_load_print_meta: n_layer          = 18
0.00.284.908 I llm_load_print_meta: n_head           = 8
0.00.284.909 I llm_load_print_meta: n_head_kv        = 1
0.00.284.909 I llm_load_print_meta: n_rot            = 256
0.00.284.910 I llm_load_print_meta: n_swa            = 0
0.00.284.910 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.910 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.911 I llm_load_print_meta: n_gqa            = 8
0.00.284.912 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.913 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.914 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.915 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.915 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.915 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.916 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.917 I llm_load_print_meta: n_ff             = 16384
0.00.284.917 I llm_load_print_meta: n_expert         = 0
0.00.284.918 I llm_load_print_meta: n_expert_used    = 0
0.00.284.918 I llm_load_print_meta: causal attn      = 1
0.00.284.918 I llm_load_print_meta: pooling type     = 0
0.00.284.919 I llm_load_print_meta: rope type        = 2
0.00.284.919 I llm_load_print_meta: rope scaling     = linear
0.00.284.921 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.921 I llm_load_print_meta: freq_scale_train = 1
0.00.284.922 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.922 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.922 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.923 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.923 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.923 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.923 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.924 I llm_load_print_meta: model type       = 2B
0.00.284.924 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.284.925 I llm_load_print_meta: model params     = 2.51 B
0.00.284.926 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.284.926 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.927 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.927 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.927 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.928 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.928 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.928 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.928 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.929 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.929 I llm_load_print_meta: max token length = 93
0.00.284.949 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.342.736 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.347.772 I llama_new_context_with_model: n_ctx      = 8192
0.00.347.777 I llama_new_context_with_model: n_batch    = 2048
0.00.347.778 I llama_new_context_with_model: n_ubatch   = 512
0.00.347.778 I llama_new_context_with_model: flash_attn = 0
0.00.347.780 I llama_new_context_with_model: freq_base  = 10000.0
0.00.347.781 I llama_new_context_with_model: freq_scale = 1
0.00.376.759 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.376.775 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.376.867 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.377.693 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.377.701 I llama_new_context_with_model: graph nodes  = 601
0.00.377.702 I llama_new_context_with_model: graph splits = 1
0.00.377.703 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.131 I main: llama threadpool init, n_threads = 4
0.00.458.145 I 
0.00.458.225 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.229 I 
0.00.458.265 I sampler seed: 3666631718
0.00.458.277 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.288 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.458.289 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.290 I 
 maneuvously, casting a playful smile and mischievous gleam in his eyes. [end of text]


0.01.255.874 I llama_perf_sampler_print:    sampling time =       2.40 ms /    17 runs   (    0.14 ms per token,  7074.49 tokens per second)
0.01.255.877 I llama_perf_context_print:        load time =     456.23 ms
0.01.255.879 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.255.881 I llama_perf_context_print:        eval time =     787.18 ms /    16 runs   (   49.20 ms per token,    20.33 tokens per second)
0.01.255.882 I llama_perf_context_print:       total time =     797.75 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m8.953s
user	8m5.799s
sys	0m6.983s
