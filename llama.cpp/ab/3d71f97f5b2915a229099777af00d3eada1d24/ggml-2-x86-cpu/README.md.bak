### ctest_debug

Runs ctest in debug mode
- status: 0
```
+ ctest --output-on-failure -L main -E test-opt
Test project /home/ggml/work/llama.cpp/build-ci-debug
      Start  1: test-tokenizer-0-bert-bge
 1/28 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.09 sec
      Start  2: test-tokenizer-0-command-r
 2/28 Test  #2: test-tokenizer-0-command-r ........   Passed    2.00 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/28 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.29 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/28 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    0.78 sec
      Start  5: test-tokenizer-0-falcon
 5/28 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.47 sec
      Start  6: test-tokenizer-0-gpt-2
 6/28 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.35 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/28 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    1.41 sec
      Start  8: test-tokenizer-0-llama-spm
 8/28 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.09 sec
      Start  9: test-tokenizer-0-mpt
 9/28 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.36 sec
      Start 10: test-tokenizer-0-phi-3
10/28 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.09 sec
      Start 11: test-tokenizer-0-qwen2
11/28 Test #11: test-tokenizer-0-qwen2 ............   Passed    1.29 sec
      Start 12: test-tokenizer-0-refact
12/28 Test #12: test-tokenizer-0-refact ...........   Passed    0.37 sec
      Start 13: test-tokenizer-0-starcoder
13/28 Test #13: test-tokenizer-0-starcoder ........   Passed    0.36 sec
      Start 14: test-tokenizer-1-llama-spm
14/28 Test #14: test-tokenizer-1-llama-spm ........   Passed    1.45 sec
      Start 15: test-log
15/28 Test #15: test-log ..........................   Passed    0.02 sec
      Start 16: test-arg-parser
16/28 Test #16: test-arg-parser ...................   Passed    0.02 sec
      Start 17: test-quantize-fns
17/28 Test #17: test-quantize-fns .................   Passed   30.92 sec
      Start 18: test-quantize-perf
18/28 Test #18: test-quantize-perf ................   Passed    9.12 sec
      Start 19: test-sampling
19/28 Test #19: test-sampling .....................   Passed    6.38 sec
      Start 20: test-chat-template
20/28 Test #20: test-chat-template ................   Passed    0.00 sec
      Start 21: test-grammar-parser
21/28 Test #21: test-grammar-parser ...............   Passed    0.00 sec
      Start 22: test-llama-grammar
22/28 Test #22: test-llama-grammar ................   Passed    0.00 sec
      Start 23: test-grammar-integration
23/28 Test #23: test-grammar-integration ..........   Passed    0.03 sec
      Start 24: test-grad0
24/28 Test #24: test-grad0 ........................   Passed    0.53 sec
      Start 25: test-barrier
25/28 Test #25: test-barrier ......................   Passed    1.31 sec
      Start 26: test-backend-ops
26/28 Test #26: test-backend-ops ..................   Passed    0.00 sec
      Start 27: test-rope
27/28 Test #27: test-rope .........................   Passed    0.05 sec
      Start 30: test-json-schema-to-grammar
28/28 Test #30: test-json-schema-to-grammar .......   Passed    1.98 sec

100% tests passed, 0 tests failed out of 28

Label Time Summary:
main    =  59.76 sec*proc (28 tests)

Total Test time (real) =  59.77 sec

real	0m59.841s
user	1m13.594s
sys	0m0.684s
```

### ctest_release

Runs ctest in release mode
- status: 0
```
+ ctest --output-on-failure -L main
Test project /home/ggml/work/llama.cpp/build-ci-release
      Start  1: test-tokenizer-0-bert-bge
 1/28 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.03 sec
      Start  2: test-tokenizer-0-command-r
 2/28 Test  #2: test-tokenizer-0-command-r ........   Passed    0.61 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/28 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.07 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/28 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    0.20 sec
      Start  5: test-tokenizer-0-falcon
 5/28 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.12 sec
      Start  6: test-tokenizer-0-gpt-2
 6/28 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.09 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/28 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    0.41 sec
      Start  8: test-tokenizer-0-llama-spm
 8/28 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.04 sec
      Start  9: test-tokenizer-0-mpt
 9/28 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.09 sec
      Start 10: test-tokenizer-0-phi-3
10/28 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.04 sec
      Start 11: test-tokenizer-0-qwen2
11/28 Test #11: test-tokenizer-0-qwen2 ............   Passed    0.33 sec
      Start 12: test-tokenizer-0-refact
12/28 Test #12: test-tokenizer-0-refact ...........   Passed    0.10 sec
      Start 13: test-tokenizer-0-starcoder
13/28 Test #13: test-tokenizer-0-starcoder ........   Passed    0.10 sec
      Start 14: test-tokenizer-1-llama-spm
14/28 Test #14: test-tokenizer-1-llama-spm ........   Passed    0.23 sec
      Start 15: test-log
15/28 Test #15: test-log ..........................   Passed    0.02 sec
      Start 16: test-arg-parser
16/28 Test #16: test-arg-parser ...................   Passed    0.01 sec
      Start 17: test-quantize-fns
17/28 Test #17: test-quantize-fns .................   Passed   15.97 sec
      Start 18: test-quantize-perf
18/28 Test #18: test-quantize-perf ................   Passed    4.45 sec
      Start 19: test-sampling
19/28 Test #19: test-sampling .....................   Passed    1.27 sec
      Start 20: test-chat-template
20/28 Test #20: test-chat-template ................   Passed    0.00 sec
      Start 21: test-grammar-parser
21/28 Test #21: test-grammar-parser ...............   Passed    0.00 sec
      Start 22: test-llama-grammar
22/28 Test #22: test-llama-grammar ................   Passed    0.00 sec
      Start 23: test-grammar-integration
23/28 Test #23: test-grammar-integration ..........   Passed    0.01 sec
      Start 24: test-grad0
24/28 Test #24: test-grad0 ........................   Passed    0.33 sec
      Start 25: test-barrier
25/28 Test #25: test-barrier ......................   Passed    0.32 sec
      Start 26: test-backend-ops
26/28 Test #26: test-backend-ops ..................   Passed    0.00 sec
      Start 27: test-rope
27/28 Test #27: test-rope .........................   Passed    0.04 sec
      Start 30: test-json-schema-to-grammar
28/28 Test #30: test-json-schema-to-grammar .......   Passed    1.93 sec

100% tests passed, 0 tests failed out of 28

Label Time Summary:
main    =  26.81 sec*proc (28 tests)

Total Test time (real) =  26.82 sec

real	0m26.890s
user	0m29.355s
sys	0m0.808s
```
### embd_bge_small

BGE Small (BERT):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-f16.gguf -p 'I believe the meaning of life is'
0.00.000.557 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.005.054 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.005.068 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.005.073 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.005.075 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.005.076 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.005.076 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.005.077 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.005.081 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.005.081 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.005.082 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.005.082 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.005.083 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.005.086 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.005.086 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.005.088 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.005.088 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.005.089 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.005.089 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.005.089 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.008.458 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.009.273 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.009.277 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.009.278 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.009.278 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.009.279 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.009.279 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.009.279 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.009.281 I llama_model_loader: - type  f32:  124 tensors
0.00.009.281 I llama_model_loader: - type  f16:   73 tensors
0.00.020.823 I llm_load_vocab: special tokens cache size = 5
0.00.023.425 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.023.435 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.023.436 I llm_load_print_meta: arch             = bert
0.00.023.437 I llm_load_print_meta: vocab type       = WPM
0.00.023.437 I llm_load_print_meta: n_vocab          = 30522
0.00.023.437 I llm_load_print_meta: n_merges         = 0
0.00.023.438 I llm_load_print_meta: vocab_only       = 0
0.00.023.438 I llm_load_print_meta: n_ctx_train      = 512
0.00.023.438 I llm_load_print_meta: n_embd           = 384
0.00.023.438 I llm_load_print_meta: n_layer          = 12
0.00.023.445 I llm_load_print_meta: n_head           = 12
0.00.023.446 I llm_load_print_meta: n_head_kv        = 12
0.00.023.447 I llm_load_print_meta: n_rot            = 32
0.00.023.448 I llm_load_print_meta: n_swa            = 0
0.00.023.448 I llm_load_print_meta: n_embd_head_k    = 32
0.00.023.448 I llm_load_print_meta: n_embd_head_v    = 32
0.00.023.449 I llm_load_print_meta: n_gqa            = 1
0.00.023.450 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.023.451 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.023.452 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.023.453 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.023.453 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.023.454 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.023.454 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.023.455 I llm_load_print_meta: n_ff             = 1536
0.00.023.455 I llm_load_print_meta: n_expert         = 0
0.00.023.455 I llm_load_print_meta: n_expert_used    = 0
0.00.023.456 I llm_load_print_meta: causal attn      = 0
0.00.023.456 I llm_load_print_meta: pooling type     = 2
0.00.023.456 I llm_load_print_meta: rope type        = 2
0.00.023.457 I llm_load_print_meta: rope scaling     = linear
0.00.023.458 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.023.458 I llm_load_print_meta: freq_scale_train = 1
0.00.023.459 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.023.459 I llm_load_print_meta: rope_finetuned   = unknown
0.00.023.459 I llm_load_print_meta: ssm_d_conv       = 0
0.00.023.459 I llm_load_print_meta: ssm_d_inner      = 0
0.00.023.460 I llm_load_print_meta: ssm_d_state      = 0
0.00.023.460 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.023.460 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.023.461 I llm_load_print_meta: model type       = 33M
0.00.023.461 I llm_load_print_meta: model ftype      = F16
0.00.023.462 I llm_load_print_meta: model params     = 33.21 M
0.00.023.463 I llm_load_print_meta: model size       = 63.84 MiB (16.12 BPW) 
0.00.023.464 I llm_load_print_meta: general.name     = Bge Small
0.00.023.465 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.023.465 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.023.465 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.023.466 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.023.467 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.023.467 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.023.467 I llm_load_print_meta: max token length = 21
0.00.027.924 I llm_load_tensors: CPU_Mapped model buffer size =    63.84 MiB
...............................................
0.00.028.885 I llama_new_context_with_model: n_ctx      = 512
0.00.028.889 I llama_new_context_with_model: n_batch    = 2048
0.00.028.889 I llama_new_context_with_model: n_ubatch   = 2048
0.00.028.890 I llama_new_context_with_model: flash_attn = 0
0.00.028.891 I llama_new_context_with_model: freq_base  = 10000.0
0.00.028.892 I llama_new_context_with_model: freq_scale = 1
0.00.031.291 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.031.300 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.031.305 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.033.313 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.033.318 I llama_new_context_with_model: graph nodes  = 429
0.00.033.318 I llama_new_context_with_model: graph splits = 1
0.00.033.319 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.036.614 I 
0.00.036.698 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.038.246 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.043973 -0.019884  0.007663 -0.000832  0.001384 -0.037043  0.109429  0.042574  0.092058 -0.015914  0.006789 -0.035678 -0.017887  0.015052  0.018120  0.015864 -0.011303  0.010416 -0.085217 -0.008459  0.091368 -0.017066 -0.060342 -0.024485  0.027517  0.076064  0.027980 -0.014553  0.017654 -0.033284 -0.037870 -0.019001  0.068665 -0.009841 -0.025040  0.072343 -0.046558  0.011024 -0.050261  0.047714  0.032397 -0.011754  0.022052  0.049640  0.010463  0.005795 -0.028866  0.008928 -0.018515 -0.051481 -0.046042  0.030482 -0.035420  0.054201 -0.069654  0.044251  0.029795  0.046303  0.073405 -0.042586  0.076105  0.038853 -0.181174  0.082502  0.042270 -0.064541 -0.060107 -0.017848  0.006475  0.005892  0.017173 -0.026633  0.064562  0.112599  0.035151 -0.067415  0.027091 -0.067278 -0.033467 -0.033234  0.033242  0.013524 -0.003332 -0.037479 -0.052062  0.055152 -0.001983 -0.038292  0.064450  0.028822 -0.043335 -0.029236 -0.039466  0.036323  0.008385 -0.015454 -0.036588  0.018146  0.028599  0.342831 -0.044468  0.056102  0.017633 -0.020863 -0.066805  0.000153 -0.037913 -0.030070 -0.008535 -0.021581  0.000536 -0.003216  0.004011  0.018916 -0.008553  0.025823  0.049441  0.000086  0.050940 -0.042480 -0.031904  0.023602  0.030694 -0.023159 -0.046273 -0.079267  0.115187  0.046755  0.027834 -0.040731  0.067789 -0.022965  0.010318 -0.032958 -0.018309  0.043840  0.024264  0.052404  0.007477  0.008893  0.011243 -0.074647 -0.065566 -0.026746 -0.041198 -0.023884  0.026735  0.006897  0.027740  0.052873 -0.036658  0.057698 -0.000190  0.031754 -0.019768 -0.022072  0.041040 -0.058903  0.019613  0.043147  0.043596  0.041578 -0.022522  0.027046 -0.021826  0.005442 -0.041315 -0.001239  0.024448  0.002091  0.044333 -0.022737  0.043669  0.064759  0.055422  0.037072 -0.000922  0.046112  0.045813 -0.008493  0.063045 -0.073248 -0.011937  0.032114  0.023951  0.014719 -0.033687  0.001091 -0.015830 -0.019010  0.047874  0.110820  0.028442  0.031366 -0.013284 -0.057521  0.006649  0.005148 -0.012254 -0.051442 -0.000977 -0.017648 -0.019446 -0.040925  0.009197 -0.057945  0.050966  0.052339 -0.009609 -0.040256 -0.014084 -0.024882 -0.017266  0.006298  0.006585 -0.026933  0.015609  0.030761  0.002575  0.023214 -0.022196 -0.098554 -0.051096 -0.278019 -0.014999 -0.061565 -0.027230  0.017666 -0.010951 -0.017081  0.035055  0.046988 -0.015427  0.015238 -0.025470  0.047851 -0.005957 -0.000740 -0.061026 -0.068936 -0.060387 -0.035954  0.043319 -0.055047  0.015081  0.000537 -0.058199 -0.010453  0.012636  0.151510  0.127100 -0.013604  0.042001 -0.025672  0.014032 -0.001047 -0.150463  0.044849  0.005319 -0.036276 -0.029802 -0.020196 -0.034877  0.010222  0.033545 -0.048174 -0.051790 -0.017458 -0.023487  0.047366  0.052076 -0.016779 -0.055451  0.025834 -0.005708  0.010712  0.038702  0.008203 -0.009765 -0.105785 -0.027435 -0.096103  0.025061 -0.011241  0.092367  0.056101  0.003778  0.027793  0.002078 -0.051088 -0.039881 -0.013534 -0.044976 -0.015329  0.002925 -0.043513 -0.077945  0.065223 -0.006822 -0.001606 -0.014654  0.071549  0.023720 -0.037171  0.009171  0.001546 -0.032265  0.015457  0.037872  0.000355 -0.053208  0.021320 -0.039827  0.000033  0.013409  0.019808 -0.057879  0.006475 -0.049533 -0.267845  0.039154 -0.067969  0.038242 -0.012330  0.041493 -0.016116  0.052391 -0.071351  0.011368  0.024714 -0.007231  0.082101  0.028538 -0.021506  0.040491 -0.004553 -0.074596 -0.014756  0.020032  0.002299  0.023152  0.197216 -0.043224 -0.025986 -0.004957 -0.019280  0.074267  0.001719 -0.031988 -0.036599 -0.045077  0.000546 -0.011566  0.018121 -0.029470 -0.008458  0.006416  0.050807 -0.014958  0.006174  0.026088 -0.030801  0.048051  0.114089 -0.040818 -0.011478  0.005393 -0.003589  0.025162 -0.059140  0.013761 -0.010407  0.038699  0.051454  0.035408  0.035042 -0.017040  0.026373 -0.014498 -0.050023  0.003218  0.054131  0.039731 -0.039132 

0.00.041.943 I llama_perf_context_print:        load time =      34.86 ms
0.00.041.945 I llama_perf_context_print: prompt eval time =       3.31 ms /     9 tokens (    0.37 ms per token,  2714.93 tokens per second)
0.00.041.947 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.041.948 I llama_perf_context_print:       total time =       5.33 ms /    10 tokens

real	0m0.051s
user	0m0.074s
sys	0m0.012s
```
- q8_0:
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-q8_0.gguf -p 'I believe the meaning of life is'
0.00.000.549 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.005.018 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.005.030 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.005.035 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.005.036 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.005.037 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.005.037 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.005.038 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.005.041 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.005.041 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.005.042 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.005.043 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.005.044 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.005.047 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.005.048 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.005.048 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.005.049 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.005.049 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.005.050 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.005.051 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.008.438 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.009.236 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.009.241 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.009.242 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.009.242 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.009.243 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.009.243 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.009.243 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.009.245 I llama_model_loader: - type  f32:  124 tensors
0.00.009.246 I llama_model_loader: - type q8_0:   73 tensors
0.00.020.653 I llm_load_vocab: special tokens cache size = 5
0.00.023.268 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.023.279 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.023.279 I llm_load_print_meta: arch             = bert
0.00.023.281 I llm_load_print_meta: vocab type       = WPM
0.00.023.281 I llm_load_print_meta: n_vocab          = 30522
0.00.023.282 I llm_load_print_meta: n_merges         = 0
0.00.023.282 I llm_load_print_meta: vocab_only       = 0
0.00.023.282 I llm_load_print_meta: n_ctx_train      = 512
0.00.023.282 I llm_load_print_meta: n_embd           = 384
0.00.023.283 I llm_load_print_meta: n_layer          = 12
0.00.023.290 I llm_load_print_meta: n_head           = 12
0.00.023.291 I llm_load_print_meta: n_head_kv        = 12
0.00.023.291 I llm_load_print_meta: n_rot            = 32
0.00.023.292 I llm_load_print_meta: n_swa            = 0
0.00.023.292 I llm_load_print_meta: n_embd_head_k    = 32
0.00.023.292 I llm_load_print_meta: n_embd_head_v    = 32
0.00.023.293 I llm_load_print_meta: n_gqa            = 1
0.00.023.294 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.023.295 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.023.296 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.023.297 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.023.298 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.023.299 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.023.299 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.023.301 I llm_load_print_meta: n_ff             = 1536
0.00.023.302 I llm_load_print_meta: n_expert         = 0
0.00.023.303 I llm_load_print_meta: n_expert_used    = 0
0.00.023.304 I llm_load_print_meta: causal attn      = 0
0.00.023.305 I llm_load_print_meta: pooling type     = 2
0.00.023.305 I llm_load_print_meta: rope type        = 2
0.00.023.306 I llm_load_print_meta: rope scaling     = linear
0.00.023.307 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.023.308 I llm_load_print_meta: freq_scale_train = 1
0.00.023.309 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.023.309 I llm_load_print_meta: rope_finetuned   = unknown
0.00.023.310 I llm_load_print_meta: ssm_d_conv       = 0
0.00.023.311 I llm_load_print_meta: ssm_d_inner      = 0
0.00.023.311 I llm_load_print_meta: ssm_d_state      = 0
0.00.023.311 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.023.312 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.023.313 I llm_load_print_meta: model type       = 33M
0.00.023.314 I llm_load_print_meta: model ftype      = Q8_0
0.00.023.316 I llm_load_print_meta: model params     = 33.21 M
0.00.023.317 I llm_load_print_meta: model size       = 34.38 MiB (8.68 BPW) 
0.00.023.318 I llm_load_print_meta: general.name     = Bge Small
0.00.023.318 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.023.319 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.023.320 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.023.320 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.023.321 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.023.322 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.023.322 I llm_load_print_meta: max token length = 21
0.00.026.295 I llm_load_tensors: CPU_Mapped model buffer size =    34.38 MiB
.................................................
0.00.027.550 I llama_new_context_with_model: n_ctx      = 512
0.00.027.554 I llama_new_context_with_model: n_batch    = 2048
0.00.027.555 I llama_new_context_with_model: n_ubatch   = 2048
0.00.027.555 I llama_new_context_with_model: flash_attn = 0
0.00.027.557 I llama_new_context_with_model: freq_base  = 10000.0
0.00.027.557 I llama_new_context_with_model: freq_scale = 1
0.00.030.059 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.030.068 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.030.074 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.032.188 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.032.195 I llama_new_context_with_model: graph nodes  = 429
0.00.032.195 I llama_new_context_with_model: graph splits = 1
0.00.032.196 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.035.336 I 
0.00.035.411 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.036.711 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.044922 -0.019413  0.009515 -0.002102  0.002819 -0.037346  0.108884  0.042320  0.092050 -0.015802  0.006203 -0.037483 -0.019315  0.014838  0.017312  0.014293 -0.014406  0.012199 -0.084337 -0.007969  0.092391 -0.017228 -0.062058 -0.024418  0.027417  0.077134  0.028219 -0.014623  0.017895 -0.035334 -0.038133 -0.018044  0.068934 -0.010808 -0.024000  0.071910 -0.045750  0.011734 -0.050866  0.050023  0.032255 -0.012384  0.022736  0.051037  0.009457  0.005324 -0.028037  0.007784 -0.019140 -0.054168 -0.047119  0.029088 -0.036035  0.053016 -0.067690  0.044014  0.029616  0.047229  0.073648 -0.043168  0.075918  0.037900 -0.183180  0.081508  0.042762 -0.066165 -0.059699 -0.017308  0.007110  0.005047  0.016962 -0.027730  0.064833  0.111964  0.034996 -0.068446  0.026829 -0.066310 -0.034038 -0.035547  0.032486  0.014914 -0.004339 -0.037040 -0.051606  0.053873 -0.002577 -0.037109  0.062467  0.029008 -0.041969 -0.029640 -0.039698  0.037257  0.007866 -0.014732 -0.036933  0.018711  0.029345  0.345662 -0.043828  0.055518  0.015965 -0.021585 -0.062967  0.000030 -0.037829 -0.031117 -0.008600 -0.019632  0.000917 -0.003949  0.004752  0.017646 -0.010475  0.024866  0.048859 -0.001073  0.050841 -0.042711 -0.029936  0.023056  0.031158 -0.023216 -0.044477 -0.079865  0.114434  0.046968  0.027606 -0.040895  0.067793 -0.022368  0.009769 -0.034681 -0.016154  0.044193  0.022540  0.051639  0.007797  0.007391  0.010083 -0.074316 -0.064372 -0.025101 -0.041340 -0.024550  0.027224  0.005440  0.026617  0.051940 -0.036700  0.058742  0.001461  0.032451 -0.020921 -0.021366  0.040976 -0.059863  0.019722  0.043085  0.042850  0.040582 -0.022107  0.029685 -0.022324  0.007497 -0.040081  0.000397  0.023739  0.002122  0.044315 -0.022987  0.043469  0.064731  0.056117  0.038352  0.000367  0.048953  0.045241 -0.009339  0.060821 -0.073344 -0.011166  0.032674  0.022647  0.014999 -0.033428  0.000347 -0.015448 -0.018743  0.048620  0.110470  0.029597  0.030962 -0.011328 -0.056829  0.006497  0.004694 -0.012985 -0.051779 -0.003150 -0.017702 -0.019727 -0.040388  0.009924 -0.059078  0.050095  0.052471 -0.010575 -0.039471 -0.015563 -0.023734 -0.016019  0.005706  0.007087 -0.027253  0.016754  0.030656  0.001635  0.023381 -0.021934 -0.097271 -0.050370 -0.277306 -0.014223 -0.061428 -0.027445  0.017050 -0.009608 -0.017319  0.033824  0.048471 -0.016368  0.016177 -0.022949  0.049435 -0.005335  0.000750 -0.060800 -0.068838 -0.059804 -0.036057  0.042588 -0.054961  0.014508 -0.000423 -0.059416 -0.009816  0.010768  0.150426  0.126644 -0.011118  0.042668 -0.025554  0.015019 -0.000210 -0.150502  0.042745  0.005784 -0.036606 -0.029014 -0.019236 -0.034275  0.009913  0.034990 -0.049935 -0.053754 -0.017105 -0.024232  0.048749  0.050670 -0.016684 -0.056609  0.023764 -0.005639  0.011582  0.038581  0.006578 -0.008041 -0.106921 -0.027615 -0.097465  0.025000 -0.011210  0.092479  0.055639  0.005293  0.026939  0.001806 -0.051768 -0.038913 -0.013483 -0.046246 -0.014757  0.001830 -0.044614 -0.077737  0.066446 -0.006428 -0.000018 -0.014871  0.071112  0.024387 -0.036434  0.008250  0.001929 -0.033247  0.017147  0.038480  0.001671 -0.051957  0.021081 -0.038685  0.000496  0.012745  0.021241 -0.057647  0.004903 -0.049491 -0.267161  0.038997 -0.067915  0.037074 -0.011075  0.043293 -0.015534  0.050443 -0.070772  0.012405  0.024955 -0.006946  0.082643  0.029026 -0.022356  0.042367 -0.003229 -0.074061 -0.015830  0.020035  0.002637  0.023772  0.196120 -0.044049 -0.024944 -0.004666 -0.017908  0.073222  0.001813 -0.031931 -0.035815 -0.044377 -0.000573 -0.011445  0.018698 -0.027002 -0.010099  0.005813  0.048950 -0.014805  0.006814  0.027005 -0.030880  0.048526  0.111968 -0.039582 -0.012955  0.004347 -0.002677  0.025424 -0.060709  0.014993 -0.008847  0.037792  0.050273  0.035482  0.036962 -0.017363  0.025554 -0.016189 -0.050841  0.003358  0.054623  0.039363 -0.039516 

0.00.039.851 I llama_perf_context_print:        load time =      33.54 ms
0.00.039.854 I llama_perf_context_print: prompt eval time =       2.81 ms /     9 tokens (    0.31 ms per token,  3197.16 tokens per second)
0.00.039.856 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.039.856 I llama_perf_context_print:       total time =       4.51 ms /    10 tokens

real	0m0.047s
user	0m0.065s
sys	0m0.016s
```
### rerank_tiny

Rerank Tiny (Jina):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/rerank-tiny/ggml-model-f16.gguf -p 'what is panda?</s></s>hi\nwhat is panda?</s></s>it'\''s a bear\nwhat is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.' --pooling rank --embd-normalize -1 --verbose-prompt
0.00.000.544 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.578 I llama_model_loader: loaded meta data with 29 key-value pairs and 70 tensors from ../models-mnt/rerank-tiny/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.009.590 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.597 I llama_model_loader: - kv   0:                       general.architecture str              = jina-bert-v2
0.00.009.598 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.599 I llama_model_loader: - kv   2:                               general.name str              = Jina Bert Implementation
0.00.009.600 I llama_model_loader: - kv   3:                       general.organization str              = Jinaai
0.00.009.600 I llama_model_loader: - kv   4:                         general.size_label str              = 33M
0.00.009.603 I llama_model_loader: - kv   5:                   jina-bert-v2.block_count u32              = 4
0.00.009.606 I llama_model_loader: - kv   6:                jina-bert-v2.context_length u32              = 8192
0.00.009.606 I llama_model_loader: - kv   7:              jina-bert-v2.embedding_length u32              = 384
0.00.009.607 I llama_model_loader: - kv   8:           jina-bert-v2.feed_forward_length u32              = 1536
0.00.009.608 I llama_model_loader: - kv   9:          jina-bert-v2.attention.head_count u32              = 12
0.00.009.612 I llama_model_loader: - kv  10:  jina-bert-v2.attention.layer_norm_epsilon f32              = 0.000000
0.00.009.612 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.009.613 I llama_model_loader: - kv  12:              jina-bert-v2.attention.causal bool             = false
0.00.009.613 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.614 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = jina-v1-en
0.00.015.952 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,61056]   = ["<s>", "<pad>", "</s>", "<unk>", "<m...
0.00.017.551 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,61056]   = [3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.468 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,39382]   = ["t h", "i n", "a n", "e r", "th e", ...
0.00.021.474 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.474 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 2
0.00.021.475 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.021.475 I llama_model_loader: - kv  21:          tokenizer.ggml.seperator_token_id u32              = 2
0.00.021.476 I llama_model_loader: - kv  22:            tokenizer.ggml.padding_token_id u32              = 1
0.00.021.476 I llama_model_loader: - kv  23:                tokenizer.ggml.cls_token_id u32              = 0
0.00.021.477 I llama_model_loader: - kv  24:               tokenizer.ggml.mask_token_id u32              = 4
0.00.021.477 I llama_model_loader: - kv  25:            tokenizer.ggml.token_type_count u32              = 2
0.00.021.478 I llama_model_loader: - kv  26:               tokenizer.ggml.add_bos_token bool             = true
0.00.021.478 I llama_model_loader: - kv  27:               tokenizer.ggml.add_eos_token bool             = true
0.00.021.479 I llama_model_loader: - kv  28:               general.quantization_version u32              = 2
0.00.021.481 I llama_model_loader: - type  f32:   41 tensors
0.00.021.482 I llama_model_loader: - type  f16:   29 tensors
0.00.040.948 W llm_load_vocab: empty token at index 5
0.00.051.359 W llm_load_vocab: model vocab missing newline token, using special_pad_id instead
0.00.067.745 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.067.888 I llm_load_vocab: special tokens cache size = 5
0.00.425.788 I llm_load_vocab: token to piece cache size = 1.5060 MB
0.00.425.807 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.425.808 I llm_load_print_meta: arch             = jina-bert-v2
0.00.425.808 I llm_load_print_meta: vocab type       = BPE
0.00.425.809 I llm_load_print_meta: n_vocab          = 61056
0.00.425.809 I llm_load_print_meta: n_merges         = 39382
0.00.425.810 I llm_load_print_meta: vocab_only       = 0
0.00.425.810 I llm_load_print_meta: n_ctx_train      = 8192
0.00.425.811 I llm_load_print_meta: n_embd           = 384
0.00.425.811 I llm_load_print_meta: n_layer          = 4
0.00.425.822 I llm_load_print_meta: n_head           = 12
0.00.425.823 I llm_load_print_meta: n_head_kv        = 12
0.00.425.823 I llm_load_print_meta: n_rot            = 32
0.00.425.824 I llm_load_print_meta: n_swa            = 0
0.00.425.824 I llm_load_print_meta: n_embd_head_k    = 32
0.00.425.824 I llm_load_print_meta: n_embd_head_v    = 32
0.00.425.825 I llm_load_print_meta: n_gqa            = 1
0.00.425.826 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.425.827 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.425.828 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.425.829 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.425.829 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.425.830 I llm_load_print_meta: f_max_alibi_bias = 8.0e+00
0.00.425.830 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.425.830 I llm_load_print_meta: n_ff             = 1536
0.00.425.831 I llm_load_print_meta: n_expert         = 0
0.00.425.831 I llm_load_print_meta: n_expert_used    = 0
0.00.425.831 I llm_load_print_meta: causal attn      = 0
0.00.425.832 I llm_load_print_meta: pooling type     = -1
0.00.425.832 I llm_load_print_meta: rope type        = -1
0.00.425.832 I llm_load_print_meta: rope scaling     = linear
0.00.425.833 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.425.834 I llm_load_print_meta: freq_scale_train = 1
0.00.425.834 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.425.834 I llm_load_print_meta: rope_finetuned   = unknown
0.00.425.835 I llm_load_print_meta: ssm_d_conv       = 0
0.00.425.835 I llm_load_print_meta: ssm_d_inner      = 0
0.00.425.835 I llm_load_print_meta: ssm_d_state      = 0
0.00.425.835 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.425.835 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.425.836 I llm_load_print_meta: model type       = 33M
0.00.425.837 I llm_load_print_meta: model ftype      = F16
0.00.425.838 I llm_load_print_meta: model params     = 32.90 M
0.00.425.839 I llm_load_print_meta: model size       = 62.78 MiB (16.01 BPW) 
0.00.425.840 I llm_load_print_meta: general.name     = Jina Bert Implementation
0.00.425.842 I llm_load_print_meta: BOS token        = 0 '<s>'
0.00.425.842 I llm_load_print_meta: EOS token        = 2 '</s>'
0.00.425.843 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.425.843 I llm_load_print_meta: SEP token        = 2 '</s>'
0.00.425.843 I llm_load_print_meta: PAD token        = 1 '<pad>'
0.00.425.844 I llm_load_print_meta: CLS token        = 0 '<s>'
0.00.425.844 I llm_load_print_meta: MASK token       = 4 '<mask>'
0.00.425.845 I llm_load_print_meta: EOG token        = 2 '</s>'
0.00.425.845 I llm_load_print_meta: max token length = 45
0.00.429.544 I llm_load_tensors: CPU_Mapped model buffer size =    62.78 MiB
......................
0.00.431.644 I llama_new_context_with_model: n_ctx      = 8192
0.00.431.649 I llama_new_context_with_model: n_batch    = 2048
0.00.431.649 I llama_new_context_with_model: n_ubatch   = 2048
0.00.431.650 I llama_new_context_with_model: flash_attn = 0
0.00.431.652 I llama_new_context_with_model: freq_base  = 10000.0
0.00.431.653 I llama_new_context_with_model: freq_scale = 1
0.00.441.994 I llama_kv_cache_init:        CPU KV buffer size =    48.00 MiB
0.00.442.006 I llama_new_context_with_model: KV self size  =   48.00 MiB, K (f16):   24.00 MiB, V (f16):   24.00 MiB
0.00.442.016 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.444.230 I llama_new_context_with_model:        CPU compute buffer size =   220.02 MiB
0.00.444.236 I llama_new_context_with_model: graph nodes  = 154
0.00.444.237 I llama_new_context_with_model: graph splits = 1
0.00.444.239 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.994 I 
0.00.452.075 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.324 I main: prompt 0: 'what is panda?</s></s>hi'
0.00.452.327 I main: number of tokens in prompt = 9
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 23233 -> 'hi'
     2 -> '</s>'


0.00.452.332 I main: prompt 1: 'what is panda?</s></s>it's a bear'
0.00.452.332 I main: number of tokens in prompt = 13
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21153 -> 'it'
    37 -> '''
    87 -> 's'
    69 -> 'a'
 25706 -> 'bear'
     2 -> '</s>'


0.00.452.339 I main: prompt 2: 'what is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.'
0.00.452.339 I main: number of tokens in prompt = 40
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21215 -> 'he'
 28390 -> 'giant'
 49990 -> 'panda'
    38 -> '('
 21163 -> 'il'
 26237 -> 'uro'
 21223 -> 'po'
 23179 -> 'da'
 36906 -> 'melan'
 26791 -> 'ole'
    89 -> 'u'
 21402 -> 'ca'
 21686 -> '),'
 23314 -> 'sometimes'
 22517 -> 'called'
    69 -> 'a'
 49990 -> 'panda'
 25706 -> 'bear'
 21142 -> 'or'
 22810 -> 'simply'
 49990 -> 'panda'
    42 -> ','
 21152 -> 'is'
    69 -> 'a'
 25706 -> 'bear'
 25677 -> 'species'
 28930 -> 'ende'
 22024 -> 'mic'
 21148 -> 'to'
    76 -> 'h'
 22344 -> 'ina'
    44 -> '.'
     2 -> '</s>'


0.00.456.135 I batch_decode: n_tokens = 62, n_seq = 3

rerank score 0:    0.023
rerank score 1:    0.024
rerank score 2:    0.199

0.00.466.412 I llama_perf_context_print:        load time =     450.25 ms
0.00.466.415 I llama_perf_context_print: prompt eval time =      10.10 ms /    62 tokens (    0.16 ms per token,  6141.05 tokens per second)
0.00.466.416 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.466.417 I llama_perf_context_print:       total time =      14.42 ms /    63 tokens

real	0m0.484s
user	0m0.522s
sys	0m0.028s
  - rerank score 0 @ 0.023 OK
  - rerank score 1 @ 0.024 OK
  - rerank score 2 @ 0.199 OK
```
### test_scripts_debug

Runs test scripts in debug mode
- status: 1
```
+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.664 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.870 I main: llama backend init
0.00.002.830 I main: load the model and apply lora adapter, if any
0.00.025.726 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.737 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.836 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.848 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.850 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.854 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.856 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.857 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.858 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.859 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.860 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.873 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.875 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.876 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.877 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.878 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.452 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.310 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.048 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.059 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.061 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.062 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.063 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.064 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.065 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.070 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.071 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.072 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.073 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.074 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.085 I llama_model_loader: - type  f32:   37 tensors
0.00.271.088 I llama_model_loader: - type q8_0:  127 tensors
0.00.456.663 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.526.313 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.527.307 I llm_load_vocab: special tokens cache size = 5
0.00.622.966 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.623.033 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.623.037 I llm_load_print_meta: arch             = gemma
0.00.623.038 I llm_load_print_meta: vocab type       = SPM
0.00.623.039 I llm_load_print_meta: n_vocab          = 256000
0.00.623.041 I llm_load_print_meta: n_merges         = 0
0.00.623.042 I llm_load_print_meta: vocab_only       = 0
0.00.623.042 I llm_load_print_meta: n_ctx_train      = 8192
0.00.623.043 I llm_load_print_meta: n_embd           = 2048
0.00.623.043 I llm_load_print_meta: n_layer          = 18
0.00.623.109 I llm_load_print_meta: n_head           = 8
0.00.623.118 I llm_load_print_meta: n_head_kv        = 1
0.00.623.121 I llm_load_print_meta: n_rot            = 256
0.00.623.121 I llm_load_print_meta: n_swa            = 0
0.00.623.121 I llm_load_print_meta: n_embd_head_k    = 256
0.00.623.122 I llm_load_print_meta: n_embd_head_v    = 256
0.00.623.126 I llm_load_print_meta: n_gqa            = 8
0.00.623.131 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.623.136 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.623.137 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.623.139 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.623.140 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.623.140 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.623.141 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.623.145 I llm_load_print_meta: n_ff             = 16384
0.00.623.146 I llm_load_print_meta: n_expert         = 0
0.00.623.146 I llm_load_print_meta: n_expert_used    = 0
0.00.623.148 I llm_load_print_meta: causal attn      = 1
0.00.623.148 I llm_load_print_meta: pooling type     = 0
0.00.623.149 I llm_load_print_meta: rope type        = 2
0.00.623.149 I llm_load_print_meta: rope scaling     = linear
0.00.623.151 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.623.152 I llm_load_print_meta: freq_scale_train = 1
0.00.623.152 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.623.163 I llm_load_print_meta: rope_finetuned   = unknown
0.00.623.163 I llm_load_print_meta: ssm_d_conv       = 0
0.00.623.164 I llm_load_print_meta: ssm_d_inner      = 0
0.00.623.164 I llm_load_print_meta: ssm_d_state      = 0
0.00.623.164 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.623.165 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.623.165 I llm_load_print_meta: model type       = 2B
0.00.623.167 I llm_load_print_meta: model ftype      = Q8_0
0.00.623.168 I llm_load_print_meta: model params     = 2.51 B
0.00.623.169 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.623.169 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.623.170 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.623.170 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.623.183 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.623.184 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.623.185 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.623.185 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.623.192 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.623.194 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.623.198 I llm_load_print_meta: max token length = 93
0.00.731.701 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.731.711 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.731.712 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.731.713 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.731.713 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.731.714 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.737.828 I llama_new_context_with_model: n_ctx      = 8192
0.00.737.836 I llama_new_context_with_model: n_batch    = 2048
0.00.737.836 I llama_new_context_with_model: n_ubatch   = 512
0.00.737.837 I llama_new_context_with_model: flash_attn = 0
0.00.737.840 I llama_new_context_with_model: freq_base  = 10000.0
0.00.737.841 I llama_new_context_with_model: freq_scale = 1
0.00.768.048 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.768.086 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.768.205 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.771.369 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.771.374 I llama_new_context_with_model: graph nodes  = 601
0.00.771.374 I llama_new_context_with_model: graph splits = 1
0.00.771.390 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.382.884 I main: llama threadpool init, n_threads = 4
0.01.382.898 I 
0.01.383.010 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.383.014 I 
0.01.383.266 I sampler seed: 3307958257
0.01.383.280 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.383.288 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.383.291 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.383.292 I 
 increasively.

I am sorry, but I am unable to generate responses that are sexually suggestive in nature. My purpose is to assist with tasks and provide information

0.14.870.547 I llama_perf_sampler_print:    sampling time =      49.20 ms /    33 runs   (    1.49 ms per token,   670.69 tokens per second)
0.14.870.562 I llama_perf_context_print:        load time =    1379.94 ms
0.14.870.564 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.870.566 I llama_perf_context_print:        eval time =   13392.04 ms /    32 runs   (  418.50 ms per token,     2.39 tokens per second)
0.14.870.567 I llama_perf_context_print:       total time =   13487.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.662 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.861 I main: llama backend init
0.00.002.811 I main: load the model and apply lora adapter, if any
0.00.025.212 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.310 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.323 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.328 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.332 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.333 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.335 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.337 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.338 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.339 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.350 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.354 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.355 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.356 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.357 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.279 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.304 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.932 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.940 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.941 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.942 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.943 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.944 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.945 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.949 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.950 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.951 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.952 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.267.953 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.960 I llama_model_loader: - type  f32:   37 tensors
0.00.267.962 I llama_model_loader: - type q8_0:  127 tensors
0.00.442.573 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.505.899 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.506.920 I llm_load_vocab: special tokens cache size = 5
0.00.602.684 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.602.758 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.602.759 I llm_load_print_meta: arch             = gemma
0.00.602.759 I llm_load_print_meta: vocab type       = SPM
0.00.602.760 I llm_load_print_meta: n_vocab          = 256000
0.00.602.763 I llm_load_print_meta: n_merges         = 0
0.00.602.763 I llm_load_print_meta: vocab_only       = 0
0.00.602.764 I llm_load_print_meta: n_ctx_train      = 8192
0.00.602.764 I llm_load_print_meta: n_embd           = 2048
0.00.602.765 I llm_load_print_meta: n_layer          = 18
0.00.602.833 I llm_load_print_meta: n_head           = 8
0.00.602.839 I llm_load_print_meta: n_head_kv        = 1
0.00.602.840 I llm_load_print_meta: n_rot            = 256
0.00.602.840 I llm_load_print_meta: n_swa            = 0
0.00.602.841 I llm_load_print_meta: n_embd_head_k    = 256
0.00.602.841 I llm_load_print_meta: n_embd_head_v    = 256
0.00.602.846 I llm_load_print_meta: n_gqa            = 8
0.00.602.850 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.602.877 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.602.879 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.602.880 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.602.881 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.602.881 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.602.882 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.602.888 I llm_load_print_meta: n_ff             = 16384
0.00.602.889 I llm_load_print_meta: n_expert         = 0
0.00.602.889 I llm_load_print_meta: n_expert_used    = 0
0.00.602.890 I llm_load_print_meta: causal attn      = 1
0.00.602.890 I llm_load_print_meta: pooling type     = 0
0.00.602.890 I llm_load_print_meta: rope type        = 2
0.00.602.891 I llm_load_print_meta: rope scaling     = linear
0.00.602.893 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.602.894 I llm_load_print_meta: freq_scale_train = 1
0.00.602.895 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.602.895 I llm_load_print_meta: rope_finetuned   = unknown
0.00.602.895 I llm_load_print_meta: ssm_d_conv       = 0
0.00.602.896 I llm_load_print_meta: ssm_d_inner      = 0
0.00.602.897 I llm_load_print_meta: ssm_d_state      = 0
0.00.602.897 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.602.898 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.602.898 I llm_load_print_meta: model type       = 2B
0.00.602.899 I llm_load_print_meta: model ftype      = Q8_0
0.00.602.900 I llm_load_print_meta: model params     = 2.51 B
0.00.602.901 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.602.901 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.602.902 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.602.902 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.602.903 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.602.903 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.602.904 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.602.904 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.602.910 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.602.911 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.602.912 I llm_load_print_meta: max token length = 93
0.00.701.272 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.707.241 I llama_new_context_with_model: n_ctx      = 8192
0.00.707.248 I llama_new_context_with_model: n_batch    = 2048
0.00.707.248 I llama_new_context_with_model: n_ubatch   = 512
0.00.707.249 I llama_new_context_with_model: flash_attn = 0
0.00.707.252 I llama_new_context_with_model: freq_base  = 10000.0
0.00.707.253 I llama_new_context_with_model: freq_scale = 1
0.00.737.449 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.737.492 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.737.609 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.740.696 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.740.700 I llama_new_context_with_model: graph nodes  = 601
0.00.740.701 I llama_new_context_with_model: graph splits = 1
0.00.740.716 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.353.819 I main: llama threadpool init, n_threads = 4
0.01.353.840 I 
0.01.353.945 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.353.949 I 
0.01.354.180 I sampler seed: 1184307543
0.01.354.194 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.354.199 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.354.200 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.354.201 I 
 increamically and then answer the questions.

**What is the difference between a virus and a bacterium?**

**Answer:**

A virus is a tiny

0.14.978.685 I llama_perf_sampler_print:    sampling time =      49.38 ms /    33 runs   (    1.50 ms per token,   668.33 tokens per second)
0.14.978.699 I llama_perf_context_print:        load time =    1350.91 ms
0.14.978.701 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.978.703 I llama_perf_context_print:        eval time =   13528.34 ms /    32 runs   (  422.76 ms per token,     2.37 tokens per second)
0.14.978.704 I llama_perf_context_print:       total time =   13624.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.714 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.915 I main: llama backend init
0.00.002.860 I main: load the model and apply lora adapter, if any
0.00.025.261 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.273 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.366 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.378 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.380 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.384 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.388 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.389 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.390 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.392 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.394 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.404 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.408 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.409 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.410 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.411 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.186 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.860 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.475 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.484 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.485 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.486 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.487 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.489 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.490 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.494 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.495 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.496 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.497 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.270.498 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.506 I llama_model_loader: - type  f32:   37 tensors
0.00.270.509 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.311 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.511.408 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.359 I llm_load_vocab: special tokens cache size = 5
0.00.608.673 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.608.743 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.608.744 I llm_load_print_meta: arch             = gemma
0.00.608.745 I llm_load_print_meta: vocab type       = SPM
0.00.608.747 I llm_load_print_meta: n_vocab          = 256000
0.00.608.749 I llm_load_print_meta: n_merges         = 0
0.00.608.750 I llm_load_print_meta: vocab_only       = 0
0.00.608.750 I llm_load_print_meta: n_ctx_train      = 8192
0.00.608.751 I llm_load_print_meta: n_embd           = 2048
0.00.608.751 I llm_load_print_meta: n_layer          = 18
0.00.608.814 I llm_load_print_meta: n_head           = 8
0.00.608.821 I llm_load_print_meta: n_head_kv        = 1
0.00.608.822 I llm_load_print_meta: n_rot            = 256
0.00.608.822 I llm_load_print_meta: n_swa            = 0
0.00.608.822 I llm_load_print_meta: n_embd_head_k    = 256
0.00.608.824 I llm_load_print_meta: n_embd_head_v    = 256
0.00.608.828 I llm_load_print_meta: n_gqa            = 8
0.00.608.833 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.608.839 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.608.840 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.608.842 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.608.842 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.608.843 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.608.843 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.608.848 I llm_load_print_meta: n_ff             = 16384
0.00.608.848 I llm_load_print_meta: n_expert         = 0
0.00.608.849 I llm_load_print_meta: n_expert_used    = 0
0.00.608.849 I llm_load_print_meta: causal attn      = 1
0.00.608.850 I llm_load_print_meta: pooling type     = 0
0.00.608.855 I llm_load_print_meta: rope type        = 2
0.00.608.855 I llm_load_print_meta: rope scaling     = linear
0.00.608.857 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.608.858 I llm_load_print_meta: freq_scale_train = 1
0.00.608.858 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.608.860 I llm_load_print_meta: rope_finetuned   = unknown
0.00.608.860 I llm_load_print_meta: ssm_d_conv       = 0
0.00.608.860 I llm_load_print_meta: ssm_d_inner      = 0
0.00.608.861 I llm_load_print_meta: ssm_d_state      = 0
0.00.608.861 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.608.861 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.608.863 I llm_load_print_meta: model type       = 2B
0.00.608.864 I llm_load_print_meta: model ftype      = Q8_0
0.00.608.865 I llm_load_print_meta: model params     = 2.51 B
0.00.608.866 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.608.866 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.608.867 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.608.867 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.608.868 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.608.868 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.608.869 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.608.872 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.608.878 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.608.879 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.608.880 I llm_load_print_meta: max token length = 93
0.00.706.068 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.706.079 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.706.080 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.706.081 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.706.082 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.706.082 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.711.938 I llama_new_context_with_model: n_ctx      = 8192
0.00.711.946 I llama_new_context_with_model: n_batch    = 2048
0.00.711.946 I llama_new_context_with_model: n_ubatch   = 512
0.00.711.947 I llama_new_context_with_model: flash_attn = 0
0.00.711.950 I llama_new_context_with_model: freq_base  = 10000.0
0.00.711.951 I llama_new_context_with_model: freq_scale = 1
0.00.742.041 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.742.079 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.742.195 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.745.385 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.745.389 I llama_new_context_with_model: graph nodes  = 601
0.00.745.389 I llama_new_context_with_model: graph splits = 1
0.00.745.406 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.357.454 I main: llama threadpool init, n_threads = 4
0.01.357.468 I 
0.01.357.571 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.357.574 I 
0.01.357.806 I sampler seed: 3456067558
0.01.357.819 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.357.827 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.357.828 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.357.828 I 
 seconary effects of the COVID-19 pandemic include an increased prevalence of mental health disorders.

**a) True**
**b) False**



0.14.914.373 I llama_perf_sampler_print:    sampling time =      49.11 ms /    33 runs   (    1.49 ms per token,   672.00 tokens per second)
0.14.914.377 I llama_perf_context_print:        load time =    1354.49 ms
0.14.914.390 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.914.392 I llama_perf_context_print:        eval time =   13459.58 ms /    32 runs   (  420.61 ms per token,     2.38 tokens per second)
0.14.914.394 I llama_perf_context_print:       total time =   13556.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.886 I main: llama backend init
0.00.002.833 I main: load the model and apply lora adapter, if any
0.00.025.141 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.152 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.251 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.263 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.265 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.270 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.272 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.278 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.283 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.285 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.287 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.301 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.305 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.306 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.308 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.309 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.168.111 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.267.451 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.286.070 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.286.079 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.286.080 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.286.081 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.286.082 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.286.083 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.286.085 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.286.089 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.286.090 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.286.091 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.286.092 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.286.094 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.286.102 I llama_model_loader: - type  f32:   37 tensors
0.00.286.116 I llama_model_loader: - type q8_0:  127 tensors
0.00.461.595 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.523.041 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.524.027 I llm_load_vocab: special tokens cache size = 5
0.00.631.068 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.631.143 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.631.144 I llm_load_print_meta: arch             = gemma
0.00.631.145 I llm_load_print_meta: vocab type       = SPM
0.00.631.146 I llm_load_print_meta: n_vocab          = 256000
0.00.631.148 I llm_load_print_meta: n_merges         = 0
0.00.631.148 I llm_load_print_meta: vocab_only       = 0
0.00.631.149 I llm_load_print_meta: n_ctx_train      = 8192
0.00.631.150 I llm_load_print_meta: n_embd           = 2048
0.00.631.150 I llm_load_print_meta: n_layer          = 18
0.00.631.214 I llm_load_print_meta: n_head           = 8
0.00.631.221 I llm_load_print_meta: n_head_kv        = 1
0.00.631.221 I llm_load_print_meta: n_rot            = 256
0.00.631.221 I llm_load_print_meta: n_swa            = 0
0.00.631.222 I llm_load_print_meta: n_embd_head_k    = 256
0.00.631.222 I llm_load_print_meta: n_embd_head_v    = 256
0.00.631.227 I llm_load_print_meta: n_gqa            = 8
0.00.631.232 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.631.237 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.631.238 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.631.239 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.631.239 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.631.240 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.631.240 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.631.245 I llm_load_print_meta: n_ff             = 16384
0.00.631.245 I llm_load_print_meta: n_expert         = 0
0.00.631.246 I llm_load_print_meta: n_expert_used    = 0
0.00.631.246 I llm_load_print_meta: causal attn      = 1
0.00.631.246 I llm_load_print_meta: pooling type     = 0
0.00.631.247 I llm_load_print_meta: rope type        = 2
0.00.631.247 I llm_load_print_meta: rope scaling     = linear
0.00.631.273 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.631.274 I llm_load_print_meta: freq_scale_train = 1
0.00.631.275 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.631.275 I llm_load_print_meta: rope_finetuned   = unknown
0.00.631.275 I llm_load_print_meta: ssm_d_conv       = 0
0.00.631.276 I llm_load_print_meta: ssm_d_inner      = 0
0.00.631.276 I llm_load_print_meta: ssm_d_state      = 0
0.00.631.276 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.631.277 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.631.277 I llm_load_print_meta: model type       = 2B
0.00.631.278 I llm_load_print_meta: model ftype      = Q8_0
0.00.631.279 I llm_load_print_meta: model params     = 2.51 B
0.00.631.280 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.631.281 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.631.289 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.631.306 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.631.307 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.631.315 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.631.322 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.631.324 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.631.334 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.631.335 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.631.336 I llm_load_print_meta: max token length = 93
0.00.720.172 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.720.181 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.726.361 I llama_new_context_with_model: n_ctx      = 8192
0.00.726.369 I llama_new_context_with_model: n_batch    = 2048
0.00.726.369 I llama_new_context_with_model: n_ubatch   = 512
0.00.726.370 I llama_new_context_with_model: flash_attn = 0
0.00.726.372 I llama_new_context_with_model: freq_base  = 10000.0
0.00.726.373 I llama_new_context_with_model: freq_scale = 1
0.00.755.435 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.755.471 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.755.587 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.758.630 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.758.635 I llama_new_context_with_model: graph nodes  = 601
0.00.758.635 I llama_new_context_with_model: graph splits = 1
0.00.758.652 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.367.655 I main: llama threadpool init, n_threads = 4
0.01.367.668 I 
0.01.367.795 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.367.800 I 
0.01.368.050 I sampler seed: 2349006993
0.01.368.063 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.368.070 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.368.071 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.368.071 I 
 seconary to a master's degree in business administration.

**Problem Statement:**

The purpose of this study is to analyze the impact of social media marketing

0.14.929.946 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.83 tokens per second)
0.14.929.950 I llama_perf_context_print:        load time =    1364.72 ms
0.14.929.952 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.929.954 I llama_perf_context_print:        eval time =   13466.04 ms /    32 runs   (  420.81 ms per token,     2.38 tokens per second)
0.14.929.955 I llama_perf_context_print:       total time =   13562.30 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m9.894s
user	3m49.685s
sys	0m9.731s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3999 (ab3d71f9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200765.42 ms
main:    total time = 200765.42 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.657 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.858 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.024.354 E llama_model_load: error loading model: tensor 'token_embd.weight' data is not within the file bounds, model is corrupted or incomplete
0.00.024.369 E llama_load_model_from_file: failed to load model
0.00.024.479 E common_init_from_params: failed to load model '/mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf'
0.00.024.482 E main: error: unable to load model

real	3m22.967s
user	24m25.127s
sys	0m4.068s
```

