+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.664 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.870 I main: llama backend init
0.00.002.830 I main: load the model and apply lora adapter, if any
0.00.025.726 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.737 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.836 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.848 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.850 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.854 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.856 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.857 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.858 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.859 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.860 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.873 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.875 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.876 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.877 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.878 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.452 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.310 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.048 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.059 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.061 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.062 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.063 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.064 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.065 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.070 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.071 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.072 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.073 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.074 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.085 I llama_model_loader: - type  f32:   37 tensors
0.00.271.088 I llama_model_loader: - type q8_0:  127 tensors
0.00.456.663 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.526.313 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.527.307 I llm_load_vocab: special tokens cache size = 5
0.00.622.966 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.623.033 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.623.037 I llm_load_print_meta: arch             = gemma
0.00.623.038 I llm_load_print_meta: vocab type       = SPM
0.00.623.039 I llm_load_print_meta: n_vocab          = 256000
0.00.623.041 I llm_load_print_meta: n_merges         = 0
0.00.623.042 I llm_load_print_meta: vocab_only       = 0
0.00.623.042 I llm_load_print_meta: n_ctx_train      = 8192
0.00.623.043 I llm_load_print_meta: n_embd           = 2048
0.00.623.043 I llm_load_print_meta: n_layer          = 18
0.00.623.109 I llm_load_print_meta: n_head           = 8
0.00.623.118 I llm_load_print_meta: n_head_kv        = 1
0.00.623.121 I llm_load_print_meta: n_rot            = 256
0.00.623.121 I llm_load_print_meta: n_swa            = 0
0.00.623.121 I llm_load_print_meta: n_embd_head_k    = 256
0.00.623.122 I llm_load_print_meta: n_embd_head_v    = 256
0.00.623.126 I llm_load_print_meta: n_gqa            = 8
0.00.623.131 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.623.136 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.623.137 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.623.139 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.623.140 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.623.140 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.623.141 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.623.145 I llm_load_print_meta: n_ff             = 16384
0.00.623.146 I llm_load_print_meta: n_expert         = 0
0.00.623.146 I llm_load_print_meta: n_expert_used    = 0
0.00.623.148 I llm_load_print_meta: causal attn      = 1
0.00.623.148 I llm_load_print_meta: pooling type     = 0
0.00.623.149 I llm_load_print_meta: rope type        = 2
0.00.623.149 I llm_load_print_meta: rope scaling     = linear
0.00.623.151 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.623.152 I llm_load_print_meta: freq_scale_train = 1
0.00.623.152 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.623.163 I llm_load_print_meta: rope_finetuned   = unknown
0.00.623.163 I llm_load_print_meta: ssm_d_conv       = 0
0.00.623.164 I llm_load_print_meta: ssm_d_inner      = 0
0.00.623.164 I llm_load_print_meta: ssm_d_state      = 0
0.00.623.164 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.623.165 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.623.165 I llm_load_print_meta: model type       = 2B
0.00.623.167 I llm_load_print_meta: model ftype      = Q8_0
0.00.623.168 I llm_load_print_meta: model params     = 2.51 B
0.00.623.169 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.623.169 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.623.170 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.623.170 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.623.183 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.623.184 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.623.185 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.623.185 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.623.192 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.623.194 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.623.198 I llm_load_print_meta: max token length = 93
0.00.731.701 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.731.711 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.731.712 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.731.713 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.731.713 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.731.714 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.737.828 I llama_new_context_with_model: n_ctx      = 8192
0.00.737.836 I llama_new_context_with_model: n_batch    = 2048
0.00.737.836 I llama_new_context_with_model: n_ubatch   = 512
0.00.737.837 I llama_new_context_with_model: flash_attn = 0
0.00.737.840 I llama_new_context_with_model: freq_base  = 10000.0
0.00.737.841 I llama_new_context_with_model: freq_scale = 1
0.00.768.048 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.768.086 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.768.205 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.771.369 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.771.374 I llama_new_context_with_model: graph nodes  = 601
0.00.771.374 I llama_new_context_with_model: graph splits = 1
0.00.771.390 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.382.884 I main: llama threadpool init, n_threads = 4
0.01.382.898 I 
0.01.383.010 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.383.014 I 
0.01.383.266 I sampler seed: 3307958257
0.01.383.280 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.383.288 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.383.291 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.383.292 I 
 increasively.

I am sorry, but I am unable to generate responses that are sexually suggestive in nature. My purpose is to assist with tasks and provide information

0.14.870.547 I llama_perf_sampler_print:    sampling time =      49.20 ms /    33 runs   (    1.49 ms per token,   670.69 tokens per second)
0.14.870.562 I llama_perf_context_print:        load time =    1379.94 ms
0.14.870.564 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.870.566 I llama_perf_context_print:        eval time =   13392.04 ms /    32 runs   (  418.50 ms per token,     2.39 tokens per second)
0.14.870.567 I llama_perf_context_print:       total time =   13487.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.662 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.861 I main: llama backend init
0.00.002.811 I main: load the model and apply lora adapter, if any
0.00.025.212 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.310 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.323 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.328 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.332 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.333 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.335 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.337 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.338 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.339 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.350 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.354 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.355 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.356 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.357 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.279 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.304 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.932 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.940 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.941 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.942 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.943 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.944 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.945 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.949 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.950 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.951 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.952 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.267.953 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.960 I llama_model_loader: - type  f32:   37 tensors
0.00.267.962 I llama_model_loader: - type q8_0:  127 tensors
0.00.442.573 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.505.899 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.506.920 I llm_load_vocab: special tokens cache size = 5
0.00.602.684 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.602.758 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.602.759 I llm_load_print_meta: arch             = gemma
0.00.602.759 I llm_load_print_meta: vocab type       = SPM
0.00.602.760 I llm_load_print_meta: n_vocab          = 256000
0.00.602.763 I llm_load_print_meta: n_merges         = 0
0.00.602.763 I llm_load_print_meta: vocab_only       = 0
0.00.602.764 I llm_load_print_meta: n_ctx_train      = 8192
0.00.602.764 I llm_load_print_meta: n_embd           = 2048
0.00.602.765 I llm_load_print_meta: n_layer          = 18
0.00.602.833 I llm_load_print_meta: n_head           = 8
0.00.602.839 I llm_load_print_meta: n_head_kv        = 1
0.00.602.840 I llm_load_print_meta: n_rot            = 256
0.00.602.840 I llm_load_print_meta: n_swa            = 0
0.00.602.841 I llm_load_print_meta: n_embd_head_k    = 256
0.00.602.841 I llm_load_print_meta: n_embd_head_v    = 256
0.00.602.846 I llm_load_print_meta: n_gqa            = 8
0.00.602.850 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.602.877 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.602.879 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.602.880 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.602.881 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.602.881 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.602.882 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.602.888 I llm_load_print_meta: n_ff             = 16384
0.00.602.889 I llm_load_print_meta: n_expert         = 0
0.00.602.889 I llm_load_print_meta: n_expert_used    = 0
0.00.602.890 I llm_load_print_meta: causal attn      = 1
0.00.602.890 I llm_load_print_meta: pooling type     = 0
0.00.602.890 I llm_load_print_meta: rope type        = 2
0.00.602.891 I llm_load_print_meta: rope scaling     = linear
0.00.602.893 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.602.894 I llm_load_print_meta: freq_scale_train = 1
0.00.602.895 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.602.895 I llm_load_print_meta: rope_finetuned   = unknown
0.00.602.895 I llm_load_print_meta: ssm_d_conv       = 0
0.00.602.896 I llm_load_print_meta: ssm_d_inner      = 0
0.00.602.897 I llm_load_print_meta: ssm_d_state      = 0
0.00.602.897 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.602.898 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.602.898 I llm_load_print_meta: model type       = 2B
0.00.602.899 I llm_load_print_meta: model ftype      = Q8_0
0.00.602.900 I llm_load_print_meta: model params     = 2.51 B
0.00.602.901 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.602.901 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.602.902 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.602.902 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.602.903 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.602.903 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.602.904 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.602.904 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.602.910 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.602.911 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.602.912 I llm_load_print_meta: max token length = 93
0.00.701.272 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.707.241 I llama_new_context_with_model: n_ctx      = 8192
0.00.707.248 I llama_new_context_with_model: n_batch    = 2048
0.00.707.248 I llama_new_context_with_model: n_ubatch   = 512
0.00.707.249 I llama_new_context_with_model: flash_attn = 0
0.00.707.252 I llama_new_context_with_model: freq_base  = 10000.0
0.00.707.253 I llama_new_context_with_model: freq_scale = 1
0.00.737.449 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.737.492 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.737.609 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.740.696 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.740.700 I llama_new_context_with_model: graph nodes  = 601
0.00.740.701 I llama_new_context_with_model: graph splits = 1
0.00.740.716 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.353.819 I main: llama threadpool init, n_threads = 4
0.01.353.840 I 
0.01.353.945 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.353.949 I 
0.01.354.180 I sampler seed: 1184307543
0.01.354.194 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.354.199 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.354.200 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.354.201 I 
 increamically and then answer the questions.

**What is the difference between a virus and a bacterium?**

**Answer:**

A virus is a tiny

0.14.978.685 I llama_perf_sampler_print:    sampling time =      49.38 ms /    33 runs   (    1.50 ms per token,   668.33 tokens per second)
0.14.978.699 I llama_perf_context_print:        load time =    1350.91 ms
0.14.978.701 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.978.703 I llama_perf_context_print:        eval time =   13528.34 ms /    32 runs   (  422.76 ms per token,     2.37 tokens per second)
0.14.978.704 I llama_perf_context_print:       total time =   13624.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.714 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.915 I main: llama backend init
0.00.002.860 I main: load the model and apply lora adapter, if any
0.00.025.261 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.273 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.366 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.378 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.380 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.384 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.388 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.389 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.390 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.392 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.394 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.404 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.408 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.409 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.410 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.411 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.186 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.860 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.475 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.484 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.485 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.486 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.487 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.489 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.490 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.494 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.495 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.496 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.497 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.270.498 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.506 I llama_model_loader: - type  f32:   37 tensors
0.00.270.509 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.311 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.511.408 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.359 I llm_load_vocab: special tokens cache size = 5
0.00.608.673 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.608.743 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.608.744 I llm_load_print_meta: arch             = gemma
0.00.608.745 I llm_load_print_meta: vocab type       = SPM
0.00.608.747 I llm_load_print_meta: n_vocab          = 256000
0.00.608.749 I llm_load_print_meta: n_merges         = 0
0.00.608.750 I llm_load_print_meta: vocab_only       = 0
0.00.608.750 I llm_load_print_meta: n_ctx_train      = 8192
0.00.608.751 I llm_load_print_meta: n_embd           = 2048
0.00.608.751 I llm_load_print_meta: n_layer          = 18
0.00.608.814 I llm_load_print_meta: n_head           = 8
0.00.608.821 I llm_load_print_meta: n_head_kv        = 1
0.00.608.822 I llm_load_print_meta: n_rot            = 256
0.00.608.822 I llm_load_print_meta: n_swa            = 0
0.00.608.822 I llm_load_print_meta: n_embd_head_k    = 256
0.00.608.824 I llm_load_print_meta: n_embd_head_v    = 256
0.00.608.828 I llm_load_print_meta: n_gqa            = 8
0.00.608.833 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.608.839 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.608.840 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.608.842 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.608.842 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.608.843 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.608.843 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.608.848 I llm_load_print_meta: n_ff             = 16384
0.00.608.848 I llm_load_print_meta: n_expert         = 0
0.00.608.849 I llm_load_print_meta: n_expert_used    = 0
0.00.608.849 I llm_load_print_meta: causal attn      = 1
0.00.608.850 I llm_load_print_meta: pooling type     = 0
0.00.608.855 I llm_load_print_meta: rope type        = 2
0.00.608.855 I llm_load_print_meta: rope scaling     = linear
0.00.608.857 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.608.858 I llm_load_print_meta: freq_scale_train = 1
0.00.608.858 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.608.860 I llm_load_print_meta: rope_finetuned   = unknown
0.00.608.860 I llm_load_print_meta: ssm_d_conv       = 0
0.00.608.860 I llm_load_print_meta: ssm_d_inner      = 0
0.00.608.861 I llm_load_print_meta: ssm_d_state      = 0
0.00.608.861 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.608.861 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.608.863 I llm_load_print_meta: model type       = 2B
0.00.608.864 I llm_load_print_meta: model ftype      = Q8_0
0.00.608.865 I llm_load_print_meta: model params     = 2.51 B
0.00.608.866 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.608.866 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.608.867 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.608.867 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.608.868 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.608.868 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.608.869 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.608.872 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.608.878 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.608.879 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.608.880 I llm_load_print_meta: max token length = 93
0.00.706.068 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.706.079 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.706.080 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.706.081 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.706.082 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.706.082 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.711.938 I llama_new_context_with_model: n_ctx      = 8192
0.00.711.946 I llama_new_context_with_model: n_batch    = 2048
0.00.711.946 I llama_new_context_with_model: n_ubatch   = 512
0.00.711.947 I llama_new_context_with_model: flash_attn = 0
0.00.711.950 I llama_new_context_with_model: freq_base  = 10000.0
0.00.711.951 I llama_new_context_with_model: freq_scale = 1
0.00.742.041 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.742.079 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.742.195 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.745.385 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.745.389 I llama_new_context_with_model: graph nodes  = 601
0.00.745.389 I llama_new_context_with_model: graph splits = 1
0.00.745.406 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.357.454 I main: llama threadpool init, n_threads = 4
0.01.357.468 I 
0.01.357.571 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.357.574 I 
0.01.357.806 I sampler seed: 3456067558
0.01.357.819 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.357.827 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.357.828 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.357.828 I 
 seconary effects of the COVID-19 pandemic include an increased prevalence of mental health disorders.

**a) True**
**b) False**



0.14.914.373 I llama_perf_sampler_print:    sampling time =      49.11 ms /    33 runs   (    1.49 ms per token,   672.00 tokens per second)
0.14.914.377 I llama_perf_context_print:        load time =    1354.49 ms
0.14.914.390 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.914.392 I llama_perf_context_print:        eval time =   13459.58 ms /    32 runs   (  420.61 ms per token,     2.38 tokens per second)
0.14.914.394 I llama_perf_context_print:       total time =   13556.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.886 I main: llama backend init
0.00.002.833 I main: load the model and apply lora adapter, if any
0.00.025.141 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.152 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.251 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.263 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.265 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.270 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.272 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.278 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.283 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.285 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.287 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.301 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.305 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.306 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.308 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.309 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.168.111 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.267.451 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.286.070 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.286.079 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.286.080 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.286.081 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.286.082 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.286.083 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.286.085 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.286.089 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.286.090 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.286.091 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.286.092 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.286.094 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.286.102 I llama_model_loader: - type  f32:   37 tensors
0.00.286.116 I llama_model_loader: - type q8_0:  127 tensors
0.00.461.595 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.523.041 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.524.027 I llm_load_vocab: special tokens cache size = 5
0.00.631.068 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.631.143 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.631.144 I llm_load_print_meta: arch             = gemma
0.00.631.145 I llm_load_print_meta: vocab type       = SPM
0.00.631.146 I llm_load_print_meta: n_vocab          = 256000
0.00.631.148 I llm_load_print_meta: n_merges         = 0
0.00.631.148 I llm_load_print_meta: vocab_only       = 0
0.00.631.149 I llm_load_print_meta: n_ctx_train      = 8192
0.00.631.150 I llm_load_print_meta: n_embd           = 2048
0.00.631.150 I llm_load_print_meta: n_layer          = 18
0.00.631.214 I llm_load_print_meta: n_head           = 8
0.00.631.221 I llm_load_print_meta: n_head_kv        = 1
0.00.631.221 I llm_load_print_meta: n_rot            = 256
0.00.631.221 I llm_load_print_meta: n_swa            = 0
0.00.631.222 I llm_load_print_meta: n_embd_head_k    = 256
0.00.631.222 I llm_load_print_meta: n_embd_head_v    = 256
0.00.631.227 I llm_load_print_meta: n_gqa            = 8
0.00.631.232 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.631.237 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.631.238 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.631.239 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.631.239 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.631.240 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.631.240 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.631.245 I llm_load_print_meta: n_ff             = 16384
0.00.631.245 I llm_load_print_meta: n_expert         = 0
0.00.631.246 I llm_load_print_meta: n_expert_used    = 0
0.00.631.246 I llm_load_print_meta: causal attn      = 1
0.00.631.246 I llm_load_print_meta: pooling type     = 0
0.00.631.247 I llm_load_print_meta: rope type        = 2
0.00.631.247 I llm_load_print_meta: rope scaling     = linear
0.00.631.273 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.631.274 I llm_load_print_meta: freq_scale_train = 1
0.00.631.275 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.631.275 I llm_load_print_meta: rope_finetuned   = unknown
0.00.631.275 I llm_load_print_meta: ssm_d_conv       = 0
0.00.631.276 I llm_load_print_meta: ssm_d_inner      = 0
0.00.631.276 I llm_load_print_meta: ssm_d_state      = 0
0.00.631.276 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.631.277 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.631.277 I llm_load_print_meta: model type       = 2B
0.00.631.278 I llm_load_print_meta: model ftype      = Q8_0
0.00.631.279 I llm_load_print_meta: model params     = 2.51 B
0.00.631.280 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.631.281 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.631.289 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.631.306 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.631.307 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.631.315 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.631.322 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.631.324 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.631.334 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.631.335 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.631.336 I llm_load_print_meta: max token length = 93
0.00.720.172 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.720.181 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.726.361 I llama_new_context_with_model: n_ctx      = 8192
0.00.726.369 I llama_new_context_with_model: n_batch    = 2048
0.00.726.369 I llama_new_context_with_model: n_ubatch   = 512
0.00.726.370 I llama_new_context_with_model: flash_attn = 0
0.00.726.372 I llama_new_context_with_model: freq_base  = 10000.0
0.00.726.373 I llama_new_context_with_model: freq_scale = 1
0.00.755.435 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.755.471 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.755.587 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.758.630 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.758.635 I llama_new_context_with_model: graph nodes  = 601
0.00.758.635 I llama_new_context_with_model: graph splits = 1
0.00.758.652 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.367.655 I main: llama threadpool init, n_threads = 4
0.01.367.668 I 
0.01.367.795 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.367.800 I 
0.01.368.050 I sampler seed: 2349006993
0.01.368.063 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.368.070 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.368.071 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.368.071 I 
 seconary to a master's degree in business administration.

**Problem Statement:**

The purpose of this study is to analyze the impact of social media marketing

0.14.929.946 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.83 tokens per second)
0.14.929.950 I llama_perf_context_print:        load time =    1364.72 ms
0.14.929.952 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.929.954 I llama_perf_context_print:        eval time =   13466.04 ms /    32 runs   (  420.81 ms per token,     2.38 tokens per second)
0.14.929.955 I llama_perf_context_print:       total time =   13562.30 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m9.894s
user	3m49.685s
sys	0m9.731s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3999 (ab3d71f9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200765.42 ms
main:    total time = 200765.42 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.657 I build: 3999 (ab3d71f9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.858 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.024.354 E llama_model_load: error loading model: tensor 'token_embd.weight' data is not within the file bounds, model is corrupted or incomplete
0.00.024.369 E llama_load_model_from_file: failed to load model
0.00.024.479 E common_init_from_params: failed to load model '/mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf'
0.00.024.482 E main: error: unable to load model

real	3m22.967s
user	24m25.127s
sys	0m4.068s
