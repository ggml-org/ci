+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.646 I build: 3856 (cad341d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.851 I main: llama backend init
0.00.002.796 I main: load the model and apply lora adapter, if any
0.00.024.835 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.028 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.121 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.133 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.134 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.138 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.140 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.141 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.143 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.143 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.145 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.152 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.161 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.162 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.163 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.165 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.901 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.182.202 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.194.217 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.194.226 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.194.227 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.194.228 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.194.229 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.194.230 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.194.231 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.194.234 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.194.234 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.194.235 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.194.236 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.194.237 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.194.245 I llama_model_loader: - type  f32:   37 tensors
0.00.194.249 I llama_model_loader: - type q8_0:  127 tensors
0.00.331.196 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.359.377 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.360.392 I llm_load_vocab: special tokens cache size = 5
0.00.418.172 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.418.235 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.418.236 I llm_load_print_meta: arch             = gemma
0.00.418.237 I llm_load_print_meta: vocab type       = SPM
0.00.418.238 I llm_load_print_meta: n_vocab          = 256000
0.00.418.240 I llm_load_print_meta: n_merges         = 0
0.00.418.241 I llm_load_print_meta: vocab_only       = 0
0.00.418.241 I llm_load_print_meta: n_ctx_train      = 8192
0.00.418.242 I llm_load_print_meta: n_embd           = 2048
0.00.418.242 I llm_load_print_meta: n_layer          = 18
0.00.418.307 I llm_load_print_meta: n_head           = 8
0.00.418.313 I llm_load_print_meta: n_head_kv        = 1
0.00.418.314 I llm_load_print_meta: n_rot            = 256
0.00.418.314 I llm_load_print_meta: n_swa            = 0
0.00.418.315 I llm_load_print_meta: n_embd_head_k    = 256
0.00.418.315 I llm_load_print_meta: n_embd_head_v    = 256
0.00.418.332 I llm_load_print_meta: n_gqa            = 8
0.00.418.336 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.418.341 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.418.343 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.418.344 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.418.344 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.418.345 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.418.345 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.418.352 I llm_load_print_meta: n_ff             = 16384
0.00.418.353 I llm_load_print_meta: n_expert         = 0
0.00.418.353 I llm_load_print_meta: n_expert_used    = 0
0.00.418.353 I llm_load_print_meta: causal attn      = 1
0.00.418.354 I llm_load_print_meta: pooling type     = 0
0.00.418.354 I llm_load_print_meta: rope type        = 2
0.00.418.354 I llm_load_print_meta: rope scaling     = linear
0.00.418.356 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.418.356 I llm_load_print_meta: freq_scale_train = 1
0.00.418.357 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.418.357 I llm_load_print_meta: rope_finetuned   = unknown
0.00.418.357 I llm_load_print_meta: ssm_d_conv       = 0
0.00.418.358 I llm_load_print_meta: ssm_d_inner      = 0
0.00.418.358 I llm_load_print_meta: ssm_d_state      = 0
0.00.418.358 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.418.359 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.418.359 I llm_load_print_meta: model type       = 2B
0.00.418.360 I llm_load_print_meta: model ftype      = Q8_0
0.00.418.361 I llm_load_print_meta: model params     = 2.51 B
0.00.418.362 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.418.362 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.418.363 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.418.363 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.418.364 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.418.364 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.418.365 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.418.366 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.418.371 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.418.372 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.418.373 I llm_load_print_meta: max token length = 93
0.00.418.561 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.518.333 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.518.346 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.518.358 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.518.359 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.518.360 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.518.361 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.524.036 I llama_new_context_with_model: n_ctx      = 8192
0.00.524.042 I llama_new_context_with_model: n_batch    = 2048
0.00.524.043 I llama_new_context_with_model: n_ubatch   = 512
0.00.524.043 I llama_new_context_with_model: flash_attn = 0
0.00.524.046 I llama_new_context_with_model: freq_base  = 10000.0
0.00.524.047 I llama_new_context_with_model: freq_scale = 1
0.00.554.290 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.554.357 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.554.476 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.555.853 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.555.859 I llama_new_context_with_model: graph nodes  = 601
0.00.555.860 I llama_new_context_with_model: graph splits = 1
0.00.555.876 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.168.064 I main: llama threadpool init, n_threads = 4
0.01.168.075 I 
0.01.168.168 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.168.172 I 
0.01.168.342 I sampler seed: 2083224558
0.01.168.353 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.168.359 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.168.359 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.168.360 I 
 increasities.

I am unable to answer the question as it contains inappropriate and sexually suggestive content. [end of text]


0.09.999.366 I llama_perf_sampler_print:    sampling time =      32.29 ms /    22 runs   (    1.47 ms per token,   681.24 tokens per second)
0.09.999.383 I llama_perf_context_print:        load time =    1165.17 ms
0.09.999.384 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.999.386 I llama_perf_context_print:        eval time =    8777.02 ms /    21 runs   (  417.95 ms per token,     2.39 tokens per second)
0.09.999.387 I llama_perf_context_print:       total time =    8831.31 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.640 I build: 3856 (cad341d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.862 I main: llama backend init
0.00.002.836 I main: load the model and apply lora adapter, if any
0.00.025.451 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.557 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.574 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.579 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.584 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.587 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.589 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.597 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.602 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.603 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.612 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.613 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.615 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.616 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.618 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.699 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.865 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.954 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.965 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.966 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.967 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.968 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.969 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.970 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.974 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.975 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.976 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.193.976 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.193.977 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.193.987 I llama_model_loader: - type  f32:   37 tensors
0.00.193.991 I llama_model_loader: - type q8_0:  127 tensors
0.00.349.740 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.374.573 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.375.591 I llm_load_vocab: special tokens cache size = 5
0.00.433.558 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.433.624 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.433.625 I llm_load_print_meta: arch             = gemma
0.00.433.626 I llm_load_print_meta: vocab type       = SPM
0.00.433.627 I llm_load_print_meta: n_vocab          = 256000
0.00.433.629 I llm_load_print_meta: n_merges         = 0
0.00.433.630 I llm_load_print_meta: vocab_only       = 0
0.00.433.630 I llm_load_print_meta: n_ctx_train      = 8192
0.00.433.630 I llm_load_print_meta: n_embd           = 2048
0.00.433.631 I llm_load_print_meta: n_layer          = 18
0.00.433.695 I llm_load_print_meta: n_head           = 8
0.00.433.701 I llm_load_print_meta: n_head_kv        = 1
0.00.433.702 I llm_load_print_meta: n_rot            = 256
0.00.433.702 I llm_load_print_meta: n_swa            = 0
0.00.433.703 I llm_load_print_meta: n_embd_head_k    = 256
0.00.433.703 I llm_load_print_meta: n_embd_head_v    = 256
0.00.433.707 I llm_load_print_meta: n_gqa            = 8
0.00.433.712 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.433.716 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.433.717 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.433.719 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.433.719 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.433.720 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.433.720 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.433.725 I llm_load_print_meta: n_ff             = 16384
0.00.433.726 I llm_load_print_meta: n_expert         = 0
0.00.433.747 I llm_load_print_meta: n_expert_used    = 0
0.00.433.748 I llm_load_print_meta: causal attn      = 1
0.00.433.749 I llm_load_print_meta: pooling type     = 0
0.00.433.749 I llm_load_print_meta: rope type        = 2
0.00.433.750 I llm_load_print_meta: rope scaling     = linear
0.00.433.752 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.433.753 I llm_load_print_meta: freq_scale_train = 1
0.00.433.754 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.433.755 I llm_load_print_meta: rope_finetuned   = unknown
0.00.433.756 I llm_load_print_meta: ssm_d_conv       = 0
0.00.433.756 I llm_load_print_meta: ssm_d_inner      = 0
0.00.433.767 I llm_load_print_meta: ssm_d_state      = 0
0.00.433.768 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.433.768 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.433.769 I llm_load_print_meta: model type       = 2B
0.00.433.772 I llm_load_print_meta: model ftype      = Q8_0
0.00.433.773 I llm_load_print_meta: model params     = 2.51 B
0.00.433.778 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.433.779 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.433.780 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.433.780 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.433.781 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.433.782 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.433.783 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.433.784 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.433.792 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.433.794 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.433.794 I llm_load_print_meta: max token length = 93
0.00.434.005 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.528.824 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.534.900 I llama_new_context_with_model: n_ctx      = 8192
0.00.534.910 I llama_new_context_with_model: n_batch    = 2048
0.00.534.911 I llama_new_context_with_model: n_ubatch   = 512
0.00.534.912 I llama_new_context_with_model: flash_attn = 0
0.00.534.915 I llama_new_context_with_model: freq_base  = 10000.0
0.00.534.916 I llama_new_context_with_model: freq_scale = 1
0.00.565.734 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.565.780 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.565.911 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.567.343 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.567.350 I llama_new_context_with_model: graph nodes  = 601
0.00.567.351 I llama_new_context_with_model: graph splits = 1
0.00.567.374 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.183.139 I main: llama threadpool init, n_threads = 4
0.01.183.150 I 
0.01.183.251 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.183.255 I 
0.01.183.432 I sampler seed: 4069558138
0.01.183.443 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.183.449 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.183.450 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.183.451 I 
 increasities, but is unable to determine the nature of the relationship between the variables.

**Explanation:**

The given passage discusses a statistical analysis task. The

0.14.829.617 I llama_perf_sampler_print:    sampling time =      49.52 ms /    33 runs   (    1.50 ms per token,   666.37 tokens per second)
0.14.829.620 I llama_perf_context_print:        load time =    1180.22 ms
0.14.829.622 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.829.625 I llama_perf_context_print:        eval time =   13563.45 ms /    32 runs   (  423.86 ms per token,     2.36 tokens per second)
0.14.829.626 I llama_perf_context_print:       total time =   13646.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.657 I build: 3856 (cad341d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.858 I main: llama backend init
0.00.002.789 I main: load the model and apply lora adapter, if any
0.00.024.724 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.907 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.997 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.009 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.010 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.014 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.015 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.016 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.017 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.018 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.019 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.026 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.026 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.027 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.028 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.029 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.521 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.631 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.653 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.661 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.662 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.663 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.663 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.665 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.666 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.669 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.669 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.671 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.192.671 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.192.672 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.192.681 I llama_model_loader: - type  f32:   37 tensors
0.00.192.685 I llama_model_loader: - type q8_0:  127 tensors
0.00.334.763 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.360.823 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.361.837 I llm_load_vocab: special tokens cache size = 5
0.00.419.608 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.419.665 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.419.667 I llm_load_print_meta: arch             = gemma
0.00.419.667 I llm_load_print_meta: vocab type       = SPM
0.00.419.668 I llm_load_print_meta: n_vocab          = 256000
0.00.419.670 I llm_load_print_meta: n_merges         = 0
0.00.419.671 I llm_load_print_meta: vocab_only       = 0
0.00.419.671 I llm_load_print_meta: n_ctx_train      = 8192
0.00.419.672 I llm_load_print_meta: n_embd           = 2048
0.00.419.672 I llm_load_print_meta: n_layer          = 18
0.00.419.734 I llm_load_print_meta: n_head           = 8
0.00.419.741 I llm_load_print_meta: n_head_kv        = 1
0.00.419.741 I llm_load_print_meta: n_rot            = 256
0.00.419.742 I llm_load_print_meta: n_swa            = 0
0.00.419.742 I llm_load_print_meta: n_embd_head_k    = 256
0.00.419.742 I llm_load_print_meta: n_embd_head_v    = 256
0.00.419.747 I llm_load_print_meta: n_gqa            = 8
0.00.419.751 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.419.756 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.419.757 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.419.759 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.419.759 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.419.760 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.419.761 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.419.766 I llm_load_print_meta: n_ff             = 16384
0.00.419.766 I llm_load_print_meta: n_expert         = 0
0.00.419.776 I llm_load_print_meta: n_expert_used    = 0
0.00.419.777 I llm_load_print_meta: causal attn      = 1
0.00.419.777 I llm_load_print_meta: pooling type     = 0
0.00.419.777 I llm_load_print_meta: rope type        = 2
0.00.419.778 I llm_load_print_meta: rope scaling     = linear
0.00.419.779 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.419.780 I llm_load_print_meta: freq_scale_train = 1
0.00.419.780 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.419.792 I llm_load_print_meta: rope_finetuned   = unknown
0.00.419.793 I llm_load_print_meta: ssm_d_conv       = 0
0.00.419.793 I llm_load_print_meta: ssm_d_inner      = 0
0.00.419.802 I llm_load_print_meta: ssm_d_state      = 0
0.00.419.803 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.419.803 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.419.804 I llm_load_print_meta: model type       = 2B
0.00.419.809 I llm_load_print_meta: model ftype      = Q8_0
0.00.419.810 I llm_load_print_meta: model params     = 2.51 B
0.00.419.817 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.419.818 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.419.819 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.419.820 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.419.821 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.419.821 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.419.822 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.419.823 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.419.829 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.419.831 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.419.832 I llm_load_print_meta: max token length = 93
0.00.420.005 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.496.492 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.496.500 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.496.501 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.496.502 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.496.503 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.496.503 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.502.077 I llama_new_context_with_model: n_ctx      = 8192
0.00.502.083 I llama_new_context_with_model: n_batch    = 2048
0.00.502.084 I llama_new_context_with_model: n_ubatch   = 512
0.00.502.085 I llama_new_context_with_model: flash_attn = 0
0.00.502.088 I llama_new_context_with_model: freq_base  = 10000.0
0.00.502.089 I llama_new_context_with_model: freq_scale = 1
0.00.531.635 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.531.678 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.531.790 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.533.157 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.533.164 I llama_new_context_with_model: graph nodes  = 601
0.00.533.164 I llama_new_context_with_model: graph splits = 1
0.00.533.180 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.146.149 I main: llama threadpool init, n_threads = 4
0.01.146.162 I 
0.01.146.257 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.146.261 I 
0.01.146.437 I sampler seed: 3199920881
0.01.146.449 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.146.454 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.146.455 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.146.456 I 
 increasities and other sexual practices that are considered taboo in traditional societies are sometimes seen as a way of exploring identity and challenging norms.

While exploring these taboo practices

0.14.584.170 I llama_perf_sampler_print:    sampling time =      49.33 ms /    33 runs   (    1.49 ms per token,   669.00 tokens per second)
0.14.584.173 I llama_perf_context_print:        load time =    1143.27 ms
0.14.584.175 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.584.176 I llama_perf_context_print:        eval time =   13354.25 ms /    32 runs   (  417.32 ms per token,     2.40 tokens per second)
0.14.584.177 I llama_perf_context_print:       total time =   13438.03 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.686 I build: 3856 (cad341d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.886 I main: llama backend init
0.00.002.820 I main: load the model and apply lora adapter, if any
0.00.024.439 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.620 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.710 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.722 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.724 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.728 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.731 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.732 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.733 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.734 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.735 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.742 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.744 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.745 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.746 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.747 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.761 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.653 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.738 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.744 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.745 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.746 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.747 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.748 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.749 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.751 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.752 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.753 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.192.754 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.192.755 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.192.762 I llama_model_loader: - type  f32:   37 tensors
0.00.192.766 I llama_model_loader: - type q8_0:  127 tensors
0.00.335.504 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.359.377 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.360.399 I llm_load_vocab: special tokens cache size = 5
0.00.430.148 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.430.206 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.430.207 I llm_load_print_meta: arch             = gemma
0.00.430.208 I llm_load_print_meta: vocab type       = SPM
0.00.430.209 I llm_load_print_meta: n_vocab          = 256000
0.00.430.211 I llm_load_print_meta: n_merges         = 0
0.00.430.212 I llm_load_print_meta: vocab_only       = 0
0.00.430.212 I llm_load_print_meta: n_ctx_train      = 8192
0.00.430.212 I llm_load_print_meta: n_embd           = 2048
0.00.430.213 I llm_load_print_meta: n_layer          = 18
0.00.430.276 I llm_load_print_meta: n_head           = 8
0.00.430.282 I llm_load_print_meta: n_head_kv        = 1
0.00.430.283 I llm_load_print_meta: n_rot            = 256
0.00.430.283 I llm_load_print_meta: n_swa            = 0
0.00.430.284 I llm_load_print_meta: n_embd_head_k    = 256
0.00.430.285 I llm_load_print_meta: n_embd_head_v    = 256
0.00.430.289 I llm_load_print_meta: n_gqa            = 8
0.00.430.293 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.430.298 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.430.299 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.430.301 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.430.302 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.430.303 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.430.304 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.430.308 I llm_load_print_meta: n_ff             = 16384
0.00.430.309 I llm_load_print_meta: n_expert         = 0
0.00.430.309 I llm_load_print_meta: n_expert_used    = 0
0.00.430.309 I llm_load_print_meta: causal attn      = 1
0.00.430.311 I llm_load_print_meta: pooling type     = 0
0.00.430.311 I llm_load_print_meta: rope type        = 2
0.00.430.311 I llm_load_print_meta: rope scaling     = linear
0.00.430.313 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.430.314 I llm_load_print_meta: freq_scale_train = 1
0.00.430.314 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.430.315 I llm_load_print_meta: rope_finetuned   = unknown
0.00.430.325 I llm_load_print_meta: ssm_d_conv       = 0
0.00.430.329 I llm_load_print_meta: ssm_d_inner      = 0
0.00.430.330 I llm_load_print_meta: ssm_d_state      = 0
0.00.430.330 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.430.330 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.430.331 I llm_load_print_meta: model type       = 2B
0.00.430.332 I llm_load_print_meta: model ftype      = Q8_0
0.00.430.333 I llm_load_print_meta: model params     = 2.51 B
0.00.430.334 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.430.334 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.430.335 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.430.335 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.430.336 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.430.336 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.430.337 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.430.337 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.430.343 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.430.345 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.430.346 I llm_load_print_meta: max token length = 93
0.00.430.526 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.501.017 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.501.028 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.506.438 I llama_new_context_with_model: n_ctx      = 8192
0.00.506.445 I llama_new_context_with_model: n_batch    = 2048
0.00.506.446 I llama_new_context_with_model: n_ubatch   = 512
0.00.506.446 I llama_new_context_with_model: flash_attn = 0
0.00.506.449 I llama_new_context_with_model: freq_base  = 10000.0
0.00.506.449 I llama_new_context_with_model: freq_scale = 1
0.00.535.059 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.535.101 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.535.214 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.536.631 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.536.637 I llama_new_context_with_model: graph nodes  = 601
0.00.536.637 I llama_new_context_with_model: graph splits = 1
0.00.536.655 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.151.317 I main: llama threadpool init, n_threads = 4
0.01.151.328 I 
0.01.151.420 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.151.424 I 
0.01.151.593 I sampler seed: 561021170
0.01.151.602 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.151.608 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.151.608 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.151.609 I 
 increably.

I am unable to generate a response because the provided context does not contain any information about the ability to generate responses. [end of text]


0.12.889.278 I llama_perf_sampler_print:    sampling time =      42.93 ms /    29 runs   (    1.48 ms per token,   675.53 tokens per second)
0.12.889.281 I llama_perf_context_print:        load time =    1148.41 ms
0.12.889.283 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.889.297 I llama_perf_context_print:        eval time =   11665.82 ms /    28 runs   (  416.64 ms per token,     2.40 tokens per second)
0.12.889.298 I llama_perf_context_print:       total time =   11737.97 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m2.055s
user	3m22.490s
sys	0m9.586s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3856 (cad341d8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199545.40 ms
main:    total time = 199545.40 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 3856 (cad341d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.741 I main: llama backend init
0.00.002.677 I main: load the model and apply lora adapter, if any
0.00.024.458 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.639 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.728 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.739 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.740 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.744 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.745 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.749 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.750 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.751 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.751 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.757 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.759 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.759 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.760 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.761 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.640 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.259 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.504 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.512 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.513 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.513 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.514 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.515 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.516 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.519 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.520 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.520 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.192.521 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.192.522 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.192.531 I llama_model_loader: - type  f32:   37 tensors
0.00.192.534 I llama_model_loader: - type q4_K:  108 tensors
0.00.192.535 I llama_model_loader: - type q6_K:   19 tensors
0.00.332.128 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.354.935 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.355.906 I llm_load_vocab: special tokens cache size = 5
0.00.413.499 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.413.557 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.413.557 I llm_load_print_meta: arch             = gemma
0.00.413.558 I llm_load_print_meta: vocab type       = SPM
0.00.413.559 I llm_load_print_meta: n_vocab          = 256000
0.00.413.561 I llm_load_print_meta: n_merges         = 0
0.00.413.562 I llm_load_print_meta: vocab_only       = 0
0.00.413.562 I llm_load_print_meta: n_ctx_train      = 8192
0.00.413.563 I llm_load_print_meta: n_embd           = 2048
0.00.413.563 I llm_load_print_meta: n_layer          = 18
0.00.413.626 I llm_load_print_meta: n_head           = 8
0.00.413.633 I llm_load_print_meta: n_head_kv        = 1
0.00.413.634 I llm_load_print_meta: n_rot            = 256
0.00.413.634 I llm_load_print_meta: n_swa            = 0
0.00.413.634 I llm_load_print_meta: n_embd_head_k    = 256
0.00.413.635 I llm_load_print_meta: n_embd_head_v    = 256
0.00.413.639 I llm_load_print_meta: n_gqa            = 8
0.00.413.644 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.413.650 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.413.651 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.413.652 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.413.653 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.413.653 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.413.654 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.413.659 I llm_load_print_meta: n_ff             = 16384
0.00.413.659 I llm_load_print_meta: n_expert         = 0
0.00.413.659 I llm_load_print_meta: n_expert_used    = 0
0.00.413.660 I llm_load_print_meta: causal attn      = 1
0.00.413.661 I llm_load_print_meta: pooling type     = 0
0.00.413.661 I llm_load_print_meta: rope type        = 2
0.00.413.662 I llm_load_print_meta: rope scaling     = linear
0.00.413.664 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.413.665 I llm_load_print_meta: freq_scale_train = 1
0.00.413.665 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.413.666 I llm_load_print_meta: rope_finetuned   = unknown
0.00.413.666 I llm_load_print_meta: ssm_d_conv       = 0
0.00.413.666 I llm_load_print_meta: ssm_d_inner      = 0
0.00.413.667 I llm_load_print_meta: ssm_d_state      = 0
0.00.413.668 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.413.668 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.413.678 I llm_load_print_meta: model type       = 2B
0.00.413.680 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.413.681 I llm_load_print_meta: model params     = 2.51 B
0.00.413.682 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.413.682 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.413.683 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.413.683 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.413.687 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.413.688 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.413.689 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.413.689 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.413.696 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.413.697 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.413.701 I llm_load_print_meta: max token length = 93
0.00.413.878 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.473.859 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.473.872 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.473.873 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.473.873 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.473.874 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.473.875 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.479.516 I llama_new_context_with_model: n_ctx      = 8192
0.00.479.524 I llama_new_context_with_model: n_batch    = 2048
0.00.479.525 I llama_new_context_with_model: n_ubatch   = 512
0.00.479.525 I llama_new_context_with_model: flash_attn = 0
0.00.479.530 I llama_new_context_with_model: freq_base  = 10000.0
0.00.479.531 I llama_new_context_with_model: freq_scale = 1
0.00.509.857 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.509.899 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.510.015 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.511.422 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.511.428 I llama_new_context_with_model: graph nodes  = 601
0.00.511.429 I llama_new_context_with_model: graph splits = 1
0.00.511.445 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.091.394 I main: llama threadpool init, n_threads = 4
0.01.091.407 I 
0.01.091.500 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.091.504 I 
0.01.091.675 I sampler seed: 495276819
0.01.091.685 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.091.690 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.091.691 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.091.691 I 
 encompating the vast domain of AI, machine learning, and deep learning.

**AI, Machine Learning, and Deep Learning: A Unified Understanding**

**

0.12.008.096 I llama_perf_sampler_print:    sampling time =      49.08 ms /    33 runs   (    1.49 ms per token,   672.39 tokens per second)
0.12.008.099 I llama_perf_context_print:        load time =    1088.64 ms
0.12.008.100 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.008.101 I llama_perf_context_print:        eval time =   10835.44 ms /    32 runs   (  338.61 ms per token,     2.95 tokens per second)
0.12.008.102 I llama_perf_context_print:       total time =   10916.71 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3856 (cad341d8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199464.47 ms
main:    total time = 199464.47 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.613 I build: 3856 (cad341d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.812 I main: llama backend init
0.00.002.747 I main: load the model and apply lora adapter, if any
0.00.024.804 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.914 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.930 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.931 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.936 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.937 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.938 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.939 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.940 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.941 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.948 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.949 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.950 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.951 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.952 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.121 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.903 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.979 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.988 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.989 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.990 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.991 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.992 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.995 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.998 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.999 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.008 I llama_model_loader: - type  f32:   37 tensors
0.00.193.013 I llama_model_loader: - type q4_K:  108 tensors
0.00.193.014 I llama_model_loader: - type q6_K:   19 tensors
0.00.332.008 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.356.638 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.357.751 I llm_load_vocab: special tokens cache size = 5
0.00.415.670 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.415.732 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.415.733 I llm_load_print_meta: arch             = gemma
0.00.415.734 I llm_load_print_meta: vocab type       = SPM
0.00.415.735 I llm_load_print_meta: n_vocab          = 256000
0.00.415.737 I llm_load_print_meta: n_merges         = 0
0.00.415.738 I llm_load_print_meta: vocab_only       = 0
0.00.415.738 I llm_load_print_meta: n_ctx_train      = 8192
0.00.415.739 I llm_load_print_meta: n_embd           = 2048
0.00.415.739 I llm_load_print_meta: n_layer          = 18
0.00.415.803 I llm_load_print_meta: n_head           = 8
0.00.415.810 I llm_load_print_meta: n_head_kv        = 1
0.00.415.810 I llm_load_print_meta: n_rot            = 256
0.00.415.811 I llm_load_print_meta: n_swa            = 0
0.00.415.811 I llm_load_print_meta: n_embd_head_k    = 256
0.00.415.811 I llm_load_print_meta: n_embd_head_v    = 256
0.00.415.816 I llm_load_print_meta: n_gqa            = 8
0.00.415.820 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.415.825 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.415.826 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.415.828 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.415.829 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.415.829 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.415.830 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.415.839 I llm_load_print_meta: n_ff             = 16384
0.00.415.840 I llm_load_print_meta: n_expert         = 0
0.00.415.841 I llm_load_print_meta: n_expert_used    = 0
0.00.415.841 I llm_load_print_meta: causal attn      = 1
0.00.415.842 I llm_load_print_meta: pooling type     = 0
0.00.415.842 I llm_load_print_meta: rope type        = 2
0.00.415.842 I llm_load_print_meta: rope scaling     = linear
0.00.415.844 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.415.844 I llm_load_print_meta: freq_scale_train = 1
0.00.415.844 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.415.846 I llm_load_print_meta: rope_finetuned   = unknown
0.00.415.846 I llm_load_print_meta: ssm_d_conv       = 0
0.00.415.847 I llm_load_print_meta: ssm_d_inner      = 0
0.00.415.847 I llm_load_print_meta: ssm_d_state      = 0
0.00.415.848 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.415.851 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.415.852 I llm_load_print_meta: model type       = 2B
0.00.415.853 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.415.853 I llm_load_print_meta: model params     = 2.51 B
0.00.415.854 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.415.854 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.415.855 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.415.855 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.415.856 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.415.856 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.415.857 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.415.857 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.415.862 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.415.864 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.415.864 I llm_load_print_meta: max token length = 93
0.00.416.042 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.475.042 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.480.653 I llama_new_context_with_model: n_ctx      = 8192
0.00.480.660 I llama_new_context_with_model: n_batch    = 2048
0.00.480.660 I llama_new_context_with_model: n_ubatch   = 512
0.00.480.661 I llama_new_context_with_model: flash_attn = 0
0.00.480.664 I llama_new_context_with_model: freq_base  = 10000.0
0.00.480.665 I llama_new_context_with_model: freq_scale = 1
0.00.510.305 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.510.351 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.510.466 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.511.852 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.511.858 I llama_new_context_with_model: graph nodes  = 601
0.00.511.859 I llama_new_context_with_model: graph splits = 1
0.00.511.875 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.096.336 I main: llama threadpool init, n_threads = 4
0.01.096.348 I 
0.01.096.446 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.096.446 I 
0.01.096.627 I sampler seed: 45704045
0.01.096.638 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.096.643 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.096.644 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.096.644 I 
 maneuvously.

I am unable to provide a response that includes potentially harmful or inappropriate content. [end of text]


0.08.338.771 I llama_perf_sampler_print:    sampling time =      32.34 ms /    22 runs   (    1.47 ms per token,   680.27 tokens per second)
0.08.338.774 I llama_perf_context_print:        load time =    1093.51 ms
0.08.338.776 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.338.787 I llama_perf_context_print:        eval time =    7187.67 ms /    21 runs   (  342.27 ms per token,     2.92 tokens per second)
0.08.338.789 I llama_perf_context_print:       total time =    7242.44 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m2.321s
user	50m1.300s
sys	0m6.413s
