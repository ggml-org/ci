+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.549 I build: 3975 (c263ca76) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.001.845 I main: load the model and apply lora adapter, if any
0.00.022.308 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.358 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.370 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.375 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.379 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.383 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.383 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.384 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.384 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.385 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.386 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.390 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.391 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.391 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.392 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.392 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.611 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.874 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.683 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.690 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.690 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.691 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.692 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.693 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.693 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.696 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.697 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.698 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.698 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.699 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.704 I llama_model_loader: - type  f32:   37 tensors
0.00.134.707 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.213 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.713 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.266.288 I llm_load_vocab: special tokens cache size = 5
0.00.287.267 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.285 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.285 I llm_load_print_meta: arch             = gemma
0.00.287.286 I llm_load_print_meta: vocab type       = SPM
0.00.287.286 I llm_load_print_meta: n_vocab          = 256000
0.00.287.287 I llm_load_print_meta: n_merges         = 0
0.00.287.287 I llm_load_print_meta: vocab_only       = 0
0.00.287.287 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.288 I llm_load_print_meta: n_embd           = 2048
0.00.287.288 I llm_load_print_meta: n_layer          = 18
0.00.287.299 I llm_load_print_meta: n_head           = 8
0.00.287.300 I llm_load_print_meta: n_head_kv        = 1
0.00.287.301 I llm_load_print_meta: n_rot            = 256
0.00.287.301 I llm_load_print_meta: n_swa            = 0
0.00.287.301 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.302 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.303 I llm_load_print_meta: n_gqa            = 8
0.00.287.304 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.305 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.306 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.308 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.308 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.308 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.309 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.309 I llm_load_print_meta: n_ff             = 16384
0.00.287.310 I llm_load_print_meta: n_expert         = 0
0.00.287.310 I llm_load_print_meta: n_expert_used    = 0
0.00.287.310 I llm_load_print_meta: causal attn      = 1
0.00.287.311 I llm_load_print_meta: pooling type     = 0
0.00.287.311 I llm_load_print_meta: rope type        = 2
0.00.287.311 I llm_load_print_meta: rope scaling     = linear
0.00.287.313 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.313 I llm_load_print_meta: freq_scale_train = 1
0.00.287.314 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.314 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.315 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.315 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.315 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.315 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.315 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.316 I llm_load_print_meta: model type       = 2B
0.00.287.316 I llm_load_print_meta: model ftype      = Q8_0
0.00.287.317 I llm_load_print_meta: model params     = 2.51 B
0.00.287.318 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.287.318 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.319 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.319 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.319 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.320 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.320 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.320 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.321 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.321 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.321 I llm_load_print_meta: max token length = 93
0.00.287.341 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.386.681 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.386.691 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.386.691 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.386.692 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.386.693 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.386.693 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.391.672 I llama_new_context_with_model: n_ctx      = 8192
0.00.391.678 I llama_new_context_with_model: n_batch    = 2048
0.00.391.679 I llama_new_context_with_model: n_ubatch   = 512
0.00.391.679 I llama_new_context_with_model: flash_attn = 0
0.00.391.681 I llama_new_context_with_model: freq_base  = 10000.0
0.00.391.682 I llama_new_context_with_model: freq_scale = 1
0.00.420.671 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.420.686 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.420.773 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.421.667 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.421.674 I llama_new_context_with_model: graph nodes  = 601
0.00.421.675 I llama_new_context_with_model: graph splits = 1
0.00.421.676 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.513.826 I main: llama threadpool init, n_threads = 4
0.00.513.839 I 
0.00.513.919 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.513.923 I 
0.00.513.962 I sampler seed: 3570542433
0.00.513.972 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.513.981 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.513.982 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.513.984 I 
 increadibly, a large language model, trained on a massive dataset of text and code. It can hold and process vast amounts of information, enabling it to generate

0.02.776.053 I llama_perf_sampler_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6916.79 tokens per second)
0.02.776.056 I llama_perf_context_print:        load time =     511.96 ms
0.02.776.057 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.776.059 I llama_perf_context_print:        eval time =    2241.52 ms /    32 runs   (   70.05 ms per token,    14.28 tokens per second)
0.02.776.060 I llama_perf_context_print:       total time =    2262.24 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.585 I build: 3975 (c263ca76) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.787 I main: llama backend init
0.00.001.888 I main: load the model and apply lora adapter, if any
0.00.022.102 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.119 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.127 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.128 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.132 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.133 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.133 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.134 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.134 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.135 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.141 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.142 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.142 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.143 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.143 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.399 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.054 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.870 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.876 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.876 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.877 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.878 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.879 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.879 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.882 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.883 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.884 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.884 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.885 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.889 I llama_model_loader: - type  f32:   37 tensors
0.00.133.891 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.352 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.259.038 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.680 I llm_load_vocab: special tokens cache size = 5
0.00.280.777 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.797 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.798 I llm_load_print_meta: arch             = gemma
0.00.280.798 I llm_load_print_meta: vocab type       = SPM
0.00.280.799 I llm_load_print_meta: n_vocab          = 256000
0.00.280.799 I llm_load_print_meta: n_merges         = 0
0.00.280.799 I llm_load_print_meta: vocab_only       = 0
0.00.280.800 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.800 I llm_load_print_meta: n_embd           = 2048
0.00.280.800 I llm_load_print_meta: n_layer          = 18
0.00.280.813 I llm_load_print_meta: n_head           = 8
0.00.280.814 I llm_load_print_meta: n_head_kv        = 1
0.00.280.815 I llm_load_print_meta: n_rot            = 256
0.00.280.815 I llm_load_print_meta: n_swa            = 0
0.00.280.815 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.815 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.816 I llm_load_print_meta: n_gqa            = 8
0.00.280.818 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.819 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.819 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.821 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.821 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.821 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.821 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.822 I llm_load_print_meta: n_ff             = 16384
0.00.280.823 I llm_load_print_meta: n_expert         = 0
0.00.280.823 I llm_load_print_meta: n_expert_used    = 0
0.00.280.823 I llm_load_print_meta: causal attn      = 1
0.00.280.824 I llm_load_print_meta: pooling type     = 0
0.00.280.824 I llm_load_print_meta: rope type        = 2
0.00.280.824 I llm_load_print_meta: rope scaling     = linear
0.00.280.826 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.826 I llm_load_print_meta: freq_scale_train = 1
0.00.280.827 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.827 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.827 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.827 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.828 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.828 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.828 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.829 I llm_load_print_meta: model type       = 2B
0.00.280.829 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.830 I llm_load_print_meta: model params     = 2.51 B
0.00.280.831 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.831 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.832 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.832 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.832 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.833 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.833 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.833 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.833 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.834 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.834 I llm_load_print_meta: max token length = 93
0.00.280.857 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.374.252 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.379.415 I llama_new_context_with_model: n_ctx      = 8192
0.00.379.423 I llama_new_context_with_model: n_batch    = 2048
0.00.379.423 I llama_new_context_with_model: n_ubatch   = 512
0.00.379.424 I llama_new_context_with_model: flash_attn = 0
0.00.379.427 I llama_new_context_with_model: freq_base  = 10000.0
0.00.379.428 I llama_new_context_with_model: freq_scale = 1
0.00.409.762 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.409.776 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.409.867 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.410.736 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.410.742 I llama_new_context_with_model: graph nodes  = 601
0.00.410.743 I llama_new_context_with_model: graph splits = 1
0.00.410.745 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.498.255 I main: llama threadpool init, n_threads = 4
0.00.498.270 I 
0.00.498.350 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.498.354 I 
0.00.498.396 I sampler seed: 2853435327
0.00.498.407 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.409 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.498.412 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.412 I 
 increasities
I am unable to access or provide personally identifiable information (PII) or high profile demographic data as requested. [end of text]


0.02.193.496 I llama_perf_sampler_print:    sampling time =       3.72 ms /    26 runs   (    0.14 ms per token,  6993.01 tokens per second)
0.02.193.500 I llama_perf_context_print:        load time =     496.34 ms
0.02.193.501 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.193.502 I llama_perf_context_print:        eval time =    1680.08 ms /    25 runs   (   67.20 ms per token,    14.88 tokens per second)
0.02.193.503 I llama_perf_context_print:       total time =    1695.25 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.538 I build: 3975 (c263ca76) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.847 I main: load the model and apply lora adapter, if any
0.00.021.921 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.968 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.976 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.981 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.994 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.001 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.001 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.002 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.002 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.003 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.003 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.007 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.008 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.008 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.009 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.010 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.909 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.748 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.574 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.581 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.581 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.582 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.583 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.584 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.584 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.586 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.588 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.589 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.589 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.590 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.593 I llama_model_loader: - type  f32:   37 tensors
0.00.133.597 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.868 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.396 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.943 I llm_load_vocab: special tokens cache size = 5
0.00.275.954 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.969 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.970 I llm_load_print_meta: arch             = gemma
0.00.275.970 I llm_load_print_meta: vocab type       = SPM
0.00.275.971 I llm_load_print_meta: n_vocab          = 256000
0.00.275.971 I llm_load_print_meta: n_merges         = 0
0.00.275.972 I llm_load_print_meta: vocab_only       = 0
0.00.275.972 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.972 I llm_load_print_meta: n_embd           = 2048
0.00.275.973 I llm_load_print_meta: n_layer          = 18
0.00.275.984 I llm_load_print_meta: n_head           = 8
0.00.275.985 I llm_load_print_meta: n_head_kv        = 1
0.00.275.986 I llm_load_print_meta: n_rot            = 256
0.00.275.986 I llm_load_print_meta: n_swa            = 0
0.00.275.986 I llm_load_print_meta: n_embd_head_k    = 256
0.00.275.986 I llm_load_print_meta: n_embd_head_v    = 256
0.00.275.987 I llm_load_print_meta: n_gqa            = 8
0.00.275.988 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.275.989 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.275.990 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.275.991 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.275.991 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.275.991 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.275.992 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.275.993 I llm_load_print_meta: n_ff             = 16384
0.00.275.993 I llm_load_print_meta: n_expert         = 0
0.00.275.993 I llm_load_print_meta: n_expert_used    = 0
0.00.275.994 I llm_load_print_meta: causal attn      = 1
0.00.275.994 I llm_load_print_meta: pooling type     = 0
0.00.275.994 I llm_load_print_meta: rope type        = 2
0.00.275.995 I llm_load_print_meta: rope scaling     = linear
0.00.275.996 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.275.996 I llm_load_print_meta: freq_scale_train = 1
0.00.275.997 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.275.997 I llm_load_print_meta: rope_finetuned   = unknown
0.00.275.997 I llm_load_print_meta: ssm_d_conv       = 0
0.00.275.997 I llm_load_print_meta: ssm_d_inner      = 0
0.00.275.997 I llm_load_print_meta: ssm_d_state      = 0
0.00.275.998 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.275.998 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.999 I llm_load_print_meta: model type       = 2B
0.00.275.999 I llm_load_print_meta: model ftype      = Q8_0
0.00.276.000 I llm_load_print_meta: model params     = 2.51 B
0.00.276.001 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.276.001 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.001 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.002 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.002 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.002 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.003 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.003 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.003 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.004 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.004 I llm_load_print_meta: max token length = 93
0.00.276.030 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.352.871 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.352.879 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.352.879 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.352.880 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.352.881 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.352.881 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.358.019 I llama_new_context_with_model: n_ctx      = 8192
0.00.358.025 I llama_new_context_with_model: n_batch    = 2048
0.00.358.025 I llama_new_context_with_model: n_ubatch   = 512
0.00.358.026 I llama_new_context_with_model: flash_attn = 0
0.00.358.028 I llama_new_context_with_model: freq_base  = 10000.0
0.00.358.029 I llama_new_context_with_model: freq_scale = 1
0.00.387.490 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.387.506 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.387.599 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.480 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.388.487 I llama_new_context_with_model: graph nodes  = 601
0.00.388.487 I llama_new_context_with_model: graph splits = 1
0.00.388.489 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.481.076 I main: llama threadpool init, n_threads = 4
0.00.481.089 I 
0.00.481.165 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.481.168 I 
0.00.481.206 I sampler seed: 915763607
0.00.481.216 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.481.220 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.481.221 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.481.221 I 
 increasively. 

**Assistant**

I understand. I will be sure to follow your instructions and provide the necessary assistance. [end of text]


0.02.383.986 I llama_perf_sampler_print:    sampling time =       4.01 ms /    28 runs   (    0.14 ms per token,  6989.52 tokens per second)
0.02.383.988 I llama_perf_context_print:        load time =     479.21 ms
0.02.383.989 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.383.991 I llama_perf_context_print:        eval time =    1886.61 ms /    27 runs   (   69.87 ms per token,    14.31 tokens per second)
0.02.383.991 I llama_perf_context_print:       total time =    1902.92 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.524 I build: 3975 (c263ca76) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.934 I main: load the model and apply lora adapter, if any
0.00.022.034 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.080 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.087 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.093 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.096 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.100 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.100 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.101 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.102 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.102 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.103 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.107 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.107 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.108 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.109 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.109 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.510 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.234 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.078 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.084 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.085 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.085 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.086 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.087 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.087 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.090 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.092 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.092 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.092 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.093 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.097 I llama_model_loader: - type  f32:   37 tensors
0.00.132.099 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.520 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.899 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.407 I llm_load_vocab: special tokens cache size = 5
0.00.269.390 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.405 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.406 I llm_load_print_meta: arch             = gemma
0.00.269.406 I llm_load_print_meta: vocab type       = SPM
0.00.269.407 I llm_load_print_meta: n_vocab          = 256000
0.00.269.407 I llm_load_print_meta: n_merges         = 0
0.00.269.407 I llm_load_print_meta: vocab_only       = 0
0.00.269.408 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.408 I llm_load_print_meta: n_embd           = 2048
0.00.269.408 I llm_load_print_meta: n_layer          = 18
0.00.269.420 I llm_load_print_meta: n_head           = 8
0.00.269.421 I llm_load_print_meta: n_head_kv        = 1
0.00.269.422 I llm_load_print_meta: n_rot            = 256
0.00.269.422 I llm_load_print_meta: n_swa            = 0
0.00.269.422 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.423 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.424 I llm_load_print_meta: n_gqa            = 8
0.00.269.425 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.426 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.427 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.428 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.429 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.429 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.429 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.430 I llm_load_print_meta: n_ff             = 16384
0.00.269.431 I llm_load_print_meta: n_expert         = 0
0.00.269.431 I llm_load_print_meta: n_expert_used    = 0
0.00.269.431 I llm_load_print_meta: causal attn      = 1
0.00.269.432 I llm_load_print_meta: pooling type     = 0
0.00.269.432 I llm_load_print_meta: rope type        = 2
0.00.269.433 I llm_load_print_meta: rope scaling     = linear
0.00.269.434 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.435 I llm_load_print_meta: freq_scale_train = 1
0.00.269.435 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.435 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.436 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.436 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.436 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.436 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.436 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.437 I llm_load_print_meta: model type       = 2B
0.00.269.437 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.438 I llm_load_print_meta: model params     = 2.51 B
0.00.269.439 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.439 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.440 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.440 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.440 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.441 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.441 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.441 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.442 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.442 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.443 I llm_load_print_meta: max token length = 93
0.00.269.465 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.339.777 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.339.785 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.344.821 I llama_new_context_with_model: n_ctx      = 8192
0.00.344.827 I llama_new_context_with_model: n_batch    = 2048
0.00.344.827 I llama_new_context_with_model: n_ubatch   = 512
0.00.344.828 I llama_new_context_with_model: flash_attn = 0
0.00.344.830 I llama_new_context_with_model: freq_base  = 10000.0
0.00.344.831 I llama_new_context_with_model: freq_scale = 1
0.00.373.300 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.373.315 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.373.407 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.254 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.374.262 I llama_new_context_with_model: graph nodes  = 601
0.00.374.263 I llama_new_context_with_model: graph splits = 1
0.00.374.265 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.413 I main: llama threadpool init, n_threads = 4
0.00.469.427 I 
0.00.469.506 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.509 I 
0.00.469.546 I sampler seed: 4183991728
0.00.469.557 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.559 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.469.560 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.560 I 
 increasities.

I believe this is a misspelling of "incredibly."

"Incredibly" is an adverb that means "in an extremely great or

0.02.895.559 I llama_perf_sampler_print:    sampling time =       5.06 ms /    33 runs   (    0.15 ms per token,  6516.59 tokens per second)
0.02.895.561 I llama_perf_context_print:        load time =     467.46 ms
0.02.895.562 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.895.564 I llama_perf_context_print:        eval time =    2406.20 ms /    32 runs   (   75.19 ms per token,    13.30 tokens per second)
0.02.895.566 I llama_perf_context_print:       total time =    2426.15 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.849s
user	0m36.072s
sys	0m9.448s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3975 (c263ca76)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31997.78 ms
main:    total time = 31997.78 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.546 I build: 3975 (c263ca76) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.731 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.217 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.268 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.279 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.286 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.290 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.294 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.295 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.295 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.296 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.296 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.297 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.300 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.301 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.301 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.302 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.303 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.993 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.935 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.757 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.763 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.764 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.765 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.765 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.766 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.767 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.769 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.771 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.771 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.772 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.772 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.776 I llama_model_loader: - type  f32:   37 tensors
0.00.132.779 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.780 I llama_model_loader: - type q6_K:   19 tensors
0.00.212.355 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.330 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.904 I llm_load_vocab: special tokens cache size = 5
0.00.279.872 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.889 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.889 I llm_load_print_meta: arch             = gemma
0.00.279.890 I llm_load_print_meta: vocab type       = SPM
0.00.279.891 I llm_load_print_meta: n_vocab          = 256000
0.00.279.891 I llm_load_print_meta: n_merges         = 0
0.00.279.892 I llm_load_print_meta: vocab_only       = 0
0.00.279.892 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.892 I llm_load_print_meta: n_embd           = 2048
0.00.279.893 I llm_load_print_meta: n_layer          = 18
0.00.279.904 I llm_load_print_meta: n_head           = 8
0.00.279.905 I llm_load_print_meta: n_head_kv        = 1
0.00.279.905 I llm_load_print_meta: n_rot            = 256
0.00.279.905 I llm_load_print_meta: n_swa            = 0
0.00.279.906 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.906 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.907 I llm_load_print_meta: n_gqa            = 8
0.00.279.908 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.909 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.910 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.911 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.912 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.912 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.913 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.914 I llm_load_print_meta: n_ff             = 16384
0.00.279.914 I llm_load_print_meta: n_expert         = 0
0.00.279.915 I llm_load_print_meta: n_expert_used    = 0
0.00.279.915 I llm_load_print_meta: causal attn      = 1
0.00.279.916 I llm_load_print_meta: pooling type     = 0
0.00.279.917 I llm_load_print_meta: rope type        = 2
0.00.279.918 I llm_load_print_meta: rope scaling     = linear
0.00.279.919 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.919 I llm_load_print_meta: freq_scale_train = 1
0.00.279.920 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.921 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.921 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.921 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.921 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.922 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.922 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.923 I llm_load_print_meta: model type       = 2B
0.00.279.924 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.279.925 I llm_load_print_meta: model params     = 2.51 B
0.00.279.929 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.279.929 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.930 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.930 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.930 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.930 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.931 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.931 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.931 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.932 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.932 I llm_load_print_meta: max token length = 93
0.00.279.952 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.338.430 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.338.435 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.338.436 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.338.437 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.338.437 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.338.438 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.343.459 I llama_new_context_with_model: n_ctx      = 8192
0.00.343.465 I llama_new_context_with_model: n_batch    = 2048
0.00.343.466 I llama_new_context_with_model: n_ubatch   = 512
0.00.343.466 I llama_new_context_with_model: flash_attn = 0
0.00.343.468 I llama_new_context_with_model: freq_base  = 10000.0
0.00.343.469 I llama_new_context_with_model: freq_scale = 1
0.00.371.717 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.371.731 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.371.821 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.682 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.372.689 I llama_new_context_with_model: graph nodes  = 601
0.00.372.690 I llama_new_context_with_model: graph splits = 1
0.00.372.692 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.453.165 I main: llama threadpool init, n_threads = 4
0.00.453.178 I 
0.00.453.255 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.453.258 I 
0.00.453.299 I sampler seed: 1607589537
0.00.453.309 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.453.312 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.453.313 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.453.313 I 
 seconally.

I am unable to generate a response because the context provided does not contain any information regarding an activity or task that I could use as a basis

0.02.063.660 I llama_perf_sampler_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6912.44 tokens per second)
0.02.063.663 I llama_perf_context_print:        load time =     451.28 ms
0.02.063.664 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.063.666 I llama_perf_context_print:        eval time =    1590.98 ms /    32 runs   (   49.72 ms per token,    20.11 tokens per second)
0.02.063.667 I llama_perf_context_print:       total time =    1610.50 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3975 (c263ca76)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32082.20 ms
main:    total time = 32082.20 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.533 I build: 3975 (c263ca76) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.847 I main: load the model and apply lora adapter, if any
0.00.021.894 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.904 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.910 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.911 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.915 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.916 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.916 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.917 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.917 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.918 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.921 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.922 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.922 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.923 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.923 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.384 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.225 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.019 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.025 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.026 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.027 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.027 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.028 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.029 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.031 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.032 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.035 I llama_model_loader: - type  f32:   37 tensors
0.00.134.038 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.039 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.943 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.275 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.776 I llm_load_vocab: special tokens cache size = 5
0.00.265.872 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.887 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.887 I llm_load_print_meta: arch             = gemma
0.00.265.888 I llm_load_print_meta: vocab type       = SPM
0.00.265.889 I llm_load_print_meta: n_vocab          = 256000
0.00.265.889 I llm_load_print_meta: n_merges         = 0
0.00.265.890 I llm_load_print_meta: vocab_only       = 0
0.00.265.890 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.890 I llm_load_print_meta: n_embd           = 2048
0.00.265.891 I llm_load_print_meta: n_layer          = 18
0.00.265.902 I llm_load_print_meta: n_head           = 8
0.00.265.903 I llm_load_print_meta: n_head_kv        = 1
0.00.265.903 I llm_load_print_meta: n_rot            = 256
0.00.265.904 I llm_load_print_meta: n_swa            = 0
0.00.265.904 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.904 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.905 I llm_load_print_meta: n_gqa            = 8
0.00.265.906 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.907 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.908 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.909 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.910 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.911 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.911 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.912 I llm_load_print_meta: n_ff             = 16384
0.00.265.913 I llm_load_print_meta: n_expert         = 0
0.00.265.913 I llm_load_print_meta: n_expert_used    = 0
0.00.265.914 I llm_load_print_meta: causal attn      = 1
0.00.265.914 I llm_load_print_meta: pooling type     = 0
0.00.265.915 I llm_load_print_meta: rope type        = 2
0.00.265.916 I llm_load_print_meta: rope scaling     = linear
0.00.265.917 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.918 I llm_load_print_meta: freq_scale_train = 1
0.00.265.918 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.919 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.919 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.920 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.920 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.921 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.921 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.922 I llm_load_print_meta: model type       = 2B
0.00.265.922 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.265.923 I llm_load_print_meta: model params     = 2.51 B
0.00.265.924 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.265.924 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.925 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.925 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.926 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.926 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.927 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.927 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.928 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.928 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.928 I llm_load_print_meta: max token length = 93
0.00.265.948 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.265 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.329.366 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.371 I llama_new_context_with_model: n_batch    = 2048
0.00.329.372 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.372 I llama_new_context_with_model: flash_attn = 0
0.00.329.374 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.375 I llama_new_context_with_model: freq_scale = 1
0.00.358.399 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.358.414 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.358.506 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.356 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.359.363 I llama_new_context_with_model: graph nodes  = 601
0.00.359.364 I llama_new_context_with_model: graph splits = 1
0.00.359.366 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.439.996 I main: llama threadpool init, n_threads = 4
0.00.440.007 I 
0.00.440.082 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.085 I 
0.00.440.125 I sampler seed: 4214548904
0.00.440.135 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.138 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.440.138 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.138 I 
 seconded in the heart of a young woman named Anya. Anya is a free spirit with a rebellious streak, but she is also kind and compassionate. Anya'

0.02.040.179 I llama_perf_sampler_print:    sampling time =       5.62 ms /    33 runs   (    0.17 ms per token,  5866.67 tokens per second)
0.02.040.181 I llama_perf_context_print:        load time =     438.13 ms
0.02.040.182 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.040.183 I llama_perf_context_print:        eval time =    1579.38 ms /    32 runs   (   49.36 ms per token,    20.26 tokens per second)
0.02.040.184 I llama_perf_context_print:       total time =    1600.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.024s
user	8m14.147s
sys	0m6.996s
