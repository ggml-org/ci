+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.642 I build: 4207 (c202cef1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.842 I main: llama backend init
0.00.000.850 I main: load the model and apply lora adapter, if any
0.00.023.568 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.575 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.660 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.672 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.674 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.680 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.682 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.683 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.684 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.686 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.687 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.695 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.697 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.698 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.700 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.701 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.234.544 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.336.260 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.359.875 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.359.885 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.359.886 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.359.888 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.359.889 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.359.890 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.359.892 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.359.896 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.359.897 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.359.899 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.359.900 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.359.902 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.359.911 I llama_model_loader: - type  f32:   37 tensors
0.00.359.913 I llama_model_loader: - type q8_0:  127 tensors
0.00.602.134 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.664.331 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.665.259 I llm_load_vocab: special tokens cache size = 5
0.00.860.413 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.860.487 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.860.488 I llm_load_print_meta: arch             = gemma
0.00.860.488 I llm_load_print_meta: vocab type       = SPM
0.00.860.489 I llm_load_print_meta: n_vocab          = 256000
0.00.860.491 I llm_load_print_meta: n_merges         = 0
0.00.860.492 I llm_load_print_meta: vocab_only       = 0
0.00.860.492 I llm_load_print_meta: n_ctx_train      = 8192
0.00.860.493 I llm_load_print_meta: n_embd           = 2048
0.00.860.493 I llm_load_print_meta: n_layer          = 18
0.00.860.558 I llm_load_print_meta: n_head           = 8
0.00.860.565 I llm_load_print_meta: n_head_kv        = 1
0.00.860.566 I llm_load_print_meta: n_rot            = 256
0.00.860.567 I llm_load_print_meta: n_swa            = 0
0.00.860.567 I llm_load_print_meta: n_embd_head_k    = 256
0.00.860.568 I llm_load_print_meta: n_embd_head_v    = 256
0.00.860.573 I llm_load_print_meta: n_gqa            = 8
0.00.860.578 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.860.583 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.860.585 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.860.587 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.860.588 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.860.588 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.860.588 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.860.593 I llm_load_print_meta: n_ff             = 16384
0.00.860.604 I llm_load_print_meta: n_expert         = 0
0.00.860.606 I llm_load_print_meta: n_expert_used    = 0
0.00.860.606 I llm_load_print_meta: causal attn      = 1
0.00.860.607 I llm_load_print_meta: pooling type     = 0
0.00.860.607 I llm_load_print_meta: rope type        = 2
0.00.860.607 I llm_load_print_meta: rope scaling     = linear
0.00.860.610 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.860.610 I llm_load_print_meta: freq_scale_train = 1
0.00.860.611 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.860.611 I llm_load_print_meta: rope_finetuned   = unknown
0.00.860.611 I llm_load_print_meta: ssm_d_conv       = 0
0.00.860.612 I llm_load_print_meta: ssm_d_inner      = 0
0.00.860.613 I llm_load_print_meta: ssm_d_state      = 0
0.00.860.613 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.860.614 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.860.614 I llm_load_print_meta: model type       = 2B
0.00.860.615 I llm_load_print_meta: model ftype      = Q8_0
0.00.860.616 I llm_load_print_meta: model params     = 2.51 B
0.00.860.624 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.860.625 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.860.625 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.860.626 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.860.626 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.860.640 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.860.645 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.860.646 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.860.653 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.860.654 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.860.654 I llm_load_print_meta: max token length = 93
0.00.966.232 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.966.241 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.966.242 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.966.243 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.966.244 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.966.245 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.972.249 I llama_new_context_with_model: n_seq_max     = 1
0.00.972.256 I llama_new_context_with_model: n_ctx         = 4096
0.00.972.257 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.972.257 I llama_new_context_with_model: n_batch       = 2048
0.00.972.257 I llama_new_context_with_model: n_ubatch      = 512
0.00.972.258 I llama_new_context_with_model: flash_attn    = 0
0.00.972.260 I llama_new_context_with_model: freq_base     = 10000.0
0.00.972.261 I llama_new_context_with_model: freq_scale    = 1
0.00.972.261 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.987.104 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.987.147 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.987.290 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.989.813 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.989.818 I llama_new_context_with_model: graph nodes  = 601
0.00.989.818 I llama_new_context_with_model: graph splits = 1
0.00.989.841 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.600.509 I main: llama threadpool init, n_threads = 4
0.01.600.524 I 
0.01.600.653 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.600.657 I 
0.01.600.902 I sampler seed: 1192063497
0.01.600.917 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.600.927 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.600.931 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.600.932 I 
 increasels. 
I apologize, I am unable to provide sexually suggestive or inappropriate responses. [end of text]


0.10.118.480 I llama_perf_sampler_print:    sampling time =      30.70 ms /    21 runs   (    1.46 ms per token,   684.06 tokens per second)
0.10.118.511 I llama_perf_context_print:        load time =    1599.57 ms
0.10.118.512 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.118.514 I llama_perf_context_print:        eval time =    8461.30 ms /    20 runs   (  423.07 ms per token,     2.36 tokens per second)
0.10.118.515 I llama_perf_context_print:       total time =    8517.98 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.650 I build: 4207 (c202cef1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.846 I main: llama backend init
0.00.000.854 I main: load the model and apply lora adapter, if any
0.00.023.588 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.685 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.700 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.703 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.708 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.712 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.714 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.715 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.717 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.719 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.729 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.738 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.740 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.741 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.743 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.174 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.154 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.703 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.713 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.715 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.716 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.717 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.719 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.720 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.725 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.726 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.727 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.729 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.349.730 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.739 I llama_model_loader: - type  f32:   37 tensors
0.00.349.741 I llama_model_loader: - type q8_0:  127 tensors
0.00.564.829 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.622.297 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.623.279 I llm_load_vocab: special tokens cache size = 5
0.00.823.717 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.823.788 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.823.790 I llm_load_print_meta: arch             = gemma
0.00.823.790 I llm_load_print_meta: vocab type       = SPM
0.00.823.791 I llm_load_print_meta: n_vocab          = 256000
0.00.823.793 I llm_load_print_meta: n_merges         = 0
0.00.823.794 I llm_load_print_meta: vocab_only       = 0
0.00.823.794 I llm_load_print_meta: n_ctx_train      = 8192
0.00.823.794 I llm_load_print_meta: n_embd           = 2048
0.00.823.795 I llm_load_print_meta: n_layer          = 18
0.00.823.860 I llm_load_print_meta: n_head           = 8
0.00.823.867 I llm_load_print_meta: n_head_kv        = 1
0.00.823.868 I llm_load_print_meta: n_rot            = 256
0.00.823.868 I llm_load_print_meta: n_swa            = 0
0.00.823.868 I llm_load_print_meta: n_embd_head_k    = 256
0.00.823.869 I llm_load_print_meta: n_embd_head_v    = 256
0.00.823.874 I llm_load_print_meta: n_gqa            = 8
0.00.823.879 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.823.885 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.823.886 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.823.887 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.823.887 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.823.888 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.823.889 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.823.894 I llm_load_print_meta: n_ff             = 16384
0.00.823.895 I llm_load_print_meta: n_expert         = 0
0.00.823.895 I llm_load_print_meta: n_expert_used    = 0
0.00.823.896 I llm_load_print_meta: causal attn      = 1
0.00.823.896 I llm_load_print_meta: pooling type     = 0
0.00.823.909 I llm_load_print_meta: rope type        = 2
0.00.823.915 I llm_load_print_meta: rope scaling     = linear
0.00.823.917 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.823.918 I llm_load_print_meta: freq_scale_train = 1
0.00.823.934 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.823.935 I llm_load_print_meta: rope_finetuned   = unknown
0.00.823.935 I llm_load_print_meta: ssm_d_conv       = 0
0.00.823.935 I llm_load_print_meta: ssm_d_inner      = 0
0.00.823.936 I llm_load_print_meta: ssm_d_state      = 0
0.00.823.944 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.823.944 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.823.945 I llm_load_print_meta: model type       = 2B
0.00.823.947 I llm_load_print_meta: model ftype      = Q8_0
0.00.823.948 I llm_load_print_meta: model params     = 2.51 B
0.00.823.957 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.823.957 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.823.958 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.823.958 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.823.959 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.823.960 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.823.961 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.823.961 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.823.968 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.823.969 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.823.969 I llm_load_print_meta: max token length = 93
0.00.921.398 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.927.376 I llama_new_context_with_model: n_seq_max     = 1
0.00.927.384 I llama_new_context_with_model: n_ctx         = 4096
0.00.927.384 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.927.385 I llama_new_context_with_model: n_batch       = 2048
0.00.927.386 I llama_new_context_with_model: n_ubatch      = 512
0.00.927.386 I llama_new_context_with_model: flash_attn    = 0
0.00.927.389 I llama_new_context_with_model: freq_base     = 10000.0
0.00.927.390 I llama_new_context_with_model: freq_scale    = 1
0.00.927.391 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.942.366 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.942.408 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.942.533 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.945.099 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.945.103 I llama_new_context_with_model: graph nodes  = 601
0.00.945.103 I llama_new_context_with_model: graph splits = 1
0.00.945.125 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.555.501 I main: llama threadpool init, n_threads = 4
0.01.555.517 I 
0.01.555.631 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.555.635 I 
0.01.555.872 I sampler seed: 1443037669
0.01.555.887 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.555.897 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.555.897 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.555.898 I 
 increasities.

I am unable to generate the requested content due to the inappropriate and sexually suggestive nature of the query. [end of text]


0.12.284.483 I llama_perf_sampler_print:    sampling time =      38.25 ms /    26 runs   (    1.47 ms per token,   679.74 tokens per second)
0.12.284.487 I llama_perf_context_print:        load time =    1554.54 ms
0.12.284.513 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.284.516 I llama_perf_context_print:        eval time =   10659.17 ms /    25 runs   (  426.37 ms per token,     2.35 tokens per second)
0.12.284.517 I llama_perf_context_print:       total time =   10728.99 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.693 I build: 4207 (c202cef1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.893 I main: llama backend init
0.00.000.903 I main: load the model and apply lora adapter, if any
0.00.023.844 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.854 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.950 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.964 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.969 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.979 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.983 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.985 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.986 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.988 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.990 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.001 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.002 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.004 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.006 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.015 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.717 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.278 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.348.829 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.348.838 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.348.839 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.348.841 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.348.842 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.348.843 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.348.845 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.348.849 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.348.850 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.348.852 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.348.853 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.348.855 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.348.863 I llama_model_loader: - type  f32:   37 tensors
0.00.348.865 I llama_model_loader: - type q8_0:  127 tensors
0.00.565.787 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.625.334 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.626.214 I llm_load_vocab: special tokens cache size = 5
0.00.815.834 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.815.913 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.815.914 I llm_load_print_meta: arch             = gemma
0.00.815.914 I llm_load_print_meta: vocab type       = SPM
0.00.815.915 I llm_load_print_meta: n_vocab          = 256000
0.00.815.918 I llm_load_print_meta: n_merges         = 0
0.00.815.918 I llm_load_print_meta: vocab_only       = 0
0.00.815.919 I llm_load_print_meta: n_ctx_train      = 8192
0.00.815.919 I llm_load_print_meta: n_embd           = 2048
0.00.815.920 I llm_load_print_meta: n_layer          = 18
0.00.815.985 I llm_load_print_meta: n_head           = 8
0.00.815.991 I llm_load_print_meta: n_head_kv        = 1
0.00.815.992 I llm_load_print_meta: n_rot            = 256
0.00.815.993 I llm_load_print_meta: n_swa            = 0
0.00.815.993 I llm_load_print_meta: n_embd_head_k    = 256
0.00.815.993 I llm_load_print_meta: n_embd_head_v    = 256
0.00.815.998 I llm_load_print_meta: n_gqa            = 8
0.00.816.002 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.816.008 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.816.009 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.816.011 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.816.012 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.816.013 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.816.014 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.816.018 I llm_load_print_meta: n_ff             = 16384
0.00.816.019 I llm_load_print_meta: n_expert         = 0
0.00.816.019 I llm_load_print_meta: n_expert_used    = 0
0.00.816.028 I llm_load_print_meta: causal attn      = 1
0.00.816.032 I llm_load_print_meta: pooling type     = 0
0.00.816.032 I llm_load_print_meta: rope type        = 2
0.00.816.033 I llm_load_print_meta: rope scaling     = linear
0.00.816.035 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.816.035 I llm_load_print_meta: freq_scale_train = 1
0.00.816.036 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.816.037 I llm_load_print_meta: rope_finetuned   = unknown
0.00.816.037 I llm_load_print_meta: ssm_d_conv       = 0
0.00.816.038 I llm_load_print_meta: ssm_d_inner      = 0
0.00.816.039 I llm_load_print_meta: ssm_d_state      = 0
0.00.816.039 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.816.039 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.816.040 I llm_load_print_meta: model type       = 2B
0.00.816.041 I llm_load_print_meta: model ftype      = Q8_0
0.00.816.042 I llm_load_print_meta: model params     = 2.51 B
0.00.816.054 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.816.054 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.816.056 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.816.056 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.816.057 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.816.058 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.816.058 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.816.059 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.816.066 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.816.067 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.816.067 I llm_load_print_meta: max token length = 93
0.00.894.496 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.894.507 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.894.508 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.894.509 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.894.510 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.894.510 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.900.300 I llama_new_context_with_model: n_seq_max     = 1
0.00.900.308 I llama_new_context_with_model: n_ctx         = 4096
0.00.900.308 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.900.308 I llama_new_context_with_model: n_batch       = 2048
0.00.900.309 I llama_new_context_with_model: n_ubatch      = 512
0.00.900.309 I llama_new_context_with_model: flash_attn    = 0
0.00.900.312 I llama_new_context_with_model: freq_base     = 10000.0
0.00.900.313 I llama_new_context_with_model: freq_scale    = 1
0.00.900.314 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.915.141 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.915.180 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.915.302 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.917.830 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.917.833 I llama_new_context_with_model: graph nodes  = 601
0.00.917.834 I llama_new_context_with_model: graph splits = 1
0.00.917.857 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.530.643 I main: llama threadpool init, n_threads = 4
0.01.530.659 I 
0.01.530.779 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.530.783 I 
0.01.531.014 I sampler seed: 110125142
0.01.531.026 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.531.038 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.531.039 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.531.039 I 
 increasities. [end of text]


0.03.240.757 I llama_perf_sampler_print:    sampling time =       6.24 ms /     5 runs   (    1.25 ms per token,   801.15 tokens per second)
0.03.240.771 I llama_perf_context_print:        load time =    1529.63 ms
0.03.240.773 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.240.774 I llama_perf_context_print:        eval time =    1697.14 ms /     4 runs   (  424.28 ms per token,     2.36 tokens per second)
0.03.240.775 I llama_perf_context_print:       total time =    1710.12 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.665 I build: 4207 (c202cef1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.865 I main: llama backend init
0.00.000.874 I main: load the model and apply lora adapter, if any
0.00.023.614 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.626 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.719 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.731 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.734 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.741 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.745 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.747 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.748 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.749 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.750 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.759 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.760 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.761 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.763 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.764 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.245.785 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.347.629 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.371.216 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.371.227 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.371.228 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.371.230 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.371.231 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.371.232 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.371.234 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.371.238 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.371.239 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.371.241 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.371.242 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.371.243 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.371.252 I llama_model_loader: - type  f32:   37 tensors
0.00.371.254 I llama_model_loader: - type q8_0:  127 tensors
0.00.612.053 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.681.140 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.682.238 I llm_load_vocab: special tokens cache size = 5
0.00.884.821 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.884.898 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.884.899 I llm_load_print_meta: arch             = gemma
0.00.884.899 I llm_load_print_meta: vocab type       = SPM
0.00.884.900 I llm_load_print_meta: n_vocab          = 256000
0.00.884.903 I llm_load_print_meta: n_merges         = 0
0.00.884.903 I llm_load_print_meta: vocab_only       = 0
0.00.884.903 I llm_load_print_meta: n_ctx_train      = 8192
0.00.884.904 I llm_load_print_meta: n_embd           = 2048
0.00.884.904 I llm_load_print_meta: n_layer          = 18
0.00.884.969 I llm_load_print_meta: n_head           = 8
0.00.884.976 I llm_load_print_meta: n_head_kv        = 1
0.00.884.976 I llm_load_print_meta: n_rot            = 256
0.00.884.977 I llm_load_print_meta: n_swa            = 0
0.00.884.977 I llm_load_print_meta: n_embd_head_k    = 256
0.00.884.977 I llm_load_print_meta: n_embd_head_v    = 256
0.00.884.982 I llm_load_print_meta: n_gqa            = 8
0.00.884.986 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.884.992 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.884.994 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.884.995 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.884.995 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.884.996 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.885.008 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.885.014 I llm_load_print_meta: n_ff             = 16384
0.00.885.015 I llm_load_print_meta: n_expert         = 0
0.00.885.016 I llm_load_print_meta: n_expert_used    = 0
0.00.885.016 I llm_load_print_meta: causal attn      = 1
0.00.885.016 I llm_load_print_meta: pooling type     = 0
0.00.885.017 I llm_load_print_meta: rope type        = 2
0.00.885.017 I llm_load_print_meta: rope scaling     = linear
0.00.885.022 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.885.023 I llm_load_print_meta: freq_scale_train = 1
0.00.885.024 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.885.035 I llm_load_print_meta: rope_finetuned   = unknown
0.00.885.043 I llm_load_print_meta: ssm_d_conv       = 0
0.00.885.043 I llm_load_print_meta: ssm_d_inner      = 0
0.00.885.044 I llm_load_print_meta: ssm_d_state      = 0
0.00.885.045 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.885.045 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.885.046 I llm_load_print_meta: model type       = 2B
0.00.885.047 I llm_load_print_meta: model ftype      = Q8_0
0.00.885.048 I llm_load_print_meta: model params     = 2.51 B
0.00.885.058 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.885.065 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.885.066 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.885.067 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.885.067 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.885.074 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.885.075 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.885.076 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.885.081 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.885.083 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.885.083 I llm_load_print_meta: max token length = 93
0.00.957.700 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.957.710 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.963.557 I llama_new_context_with_model: n_seq_max     = 1
0.00.963.565 I llama_new_context_with_model: n_ctx         = 4096
0.00.963.565 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.963.566 I llama_new_context_with_model: n_batch       = 2048
0.00.963.566 I llama_new_context_with_model: n_ubatch      = 512
0.00.963.567 I llama_new_context_with_model: flash_attn    = 0
0.00.963.569 I llama_new_context_with_model: freq_base     = 10000.0
0.00.963.570 I llama_new_context_with_model: freq_scale    = 1
0.00.963.571 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.978.288 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.978.329 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.978.457 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.981.099 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.981.103 I llama_new_context_with_model: graph nodes  = 601
0.00.981.104 I llama_new_context_with_model: graph splits = 1
0.00.981.126 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.593.041 I main: llama threadpool init, n_threads = 4
0.01.593.057 I 
0.01.593.175 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.593.179 I 
0.01.593.412 I sampler seed: 1977844909
0.01.593.427 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.593.436 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.593.440 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.593.440 I 
 increably, a crescendo of emotions that crescendoed into a symphony of joy and sorrow.

**What is the meaning of the text?**

The text

0.15.215.847 I llama_perf_sampler_print:    sampling time =      49.26 ms /    33 runs   (    1.49 ms per token,   669.93 tokens per second)
0.15.215.851 I llama_perf_context_print:        load time =    1592.07 ms
0.15.215.852 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.215.853 I llama_perf_context_print:        eval time =   13533.69 ms /    32 runs   (  422.93 ms per token,     2.36 tokens per second)
0.15.215.854 I llama_perf_context_print:       total time =   13622.81 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m50.529s
user	2m31.963s
sys	0m9.457s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4207 (c202cef1)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186537.34 ms
main:    total time = 186537.34 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.626 I build: 4207 (c202cef1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.844 I main: llama backend init
0.00.000.851 I main: load the model and apply lora adapter, if any
0.00.023.528 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.539 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.631 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.644 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.646 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.654 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.655 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.657 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.658 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.659 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.661 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.670 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.674 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.675 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.677 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.678 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.170 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.861 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.388 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.399 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.400 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.402 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.403 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.404 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.406 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.410 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.412 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.413 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.415 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.349.416 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.425 I llama_model_loader: - type  f32:   37 tensors
0.00.349.427 I llama_model_loader: - type q4_K:  108 tensors
0.00.349.428 I llama_model_loader: - type q6_K:   19 tensors
0.00.560.133 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.616.120 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.617.030 I llm_load_vocab: special tokens cache size = 5
0.00.799.821 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.799.892 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.799.892 I llm_load_print_meta: arch             = gemma
0.00.799.893 I llm_load_print_meta: vocab type       = SPM
0.00.799.894 I llm_load_print_meta: n_vocab          = 256000
0.00.799.896 I llm_load_print_meta: n_merges         = 0
0.00.799.897 I llm_load_print_meta: vocab_only       = 0
0.00.799.897 I llm_load_print_meta: n_ctx_train      = 8192
0.00.799.897 I llm_load_print_meta: n_embd           = 2048
0.00.799.898 I llm_load_print_meta: n_layer          = 18
0.00.799.961 I llm_load_print_meta: n_head           = 8
0.00.799.968 I llm_load_print_meta: n_head_kv        = 1
0.00.799.970 I llm_load_print_meta: n_rot            = 256
0.00.799.970 I llm_load_print_meta: n_swa            = 0
0.00.799.971 I llm_load_print_meta: n_embd_head_k    = 256
0.00.799.971 I llm_load_print_meta: n_embd_head_v    = 256
0.00.799.976 I llm_load_print_meta: n_gqa            = 8
0.00.799.980 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.799.986 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.799.988 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.799.989 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.799.990 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.800.000 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.800.004 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.800.011 I llm_load_print_meta: n_ff             = 16384
0.00.800.012 I llm_load_print_meta: n_expert         = 0
0.00.800.013 I llm_load_print_meta: n_expert_used    = 0
0.00.800.013 I llm_load_print_meta: causal attn      = 1
0.00.800.014 I llm_load_print_meta: pooling type     = 0
0.00.800.014 I llm_load_print_meta: rope type        = 2
0.00.800.015 I llm_load_print_meta: rope scaling     = linear
0.00.800.016 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.800.017 I llm_load_print_meta: freq_scale_train = 1
0.00.800.017 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.800.021 I llm_load_print_meta: rope_finetuned   = unknown
0.00.800.021 I llm_load_print_meta: ssm_d_conv       = 0
0.00.800.021 I llm_load_print_meta: ssm_d_inner      = 0
0.00.800.021 I llm_load_print_meta: ssm_d_state      = 0
0.00.800.022 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.800.022 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.800.023 I llm_load_print_meta: model type       = 2B
0.00.800.024 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.800.024 I llm_load_print_meta: model params     = 2.51 B
0.00.800.034 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.800.035 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.800.036 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.800.037 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.800.038 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.800.038 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.800.038 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.800.039 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.800.046 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.800.047 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.800.047 I llm_load_print_meta: max token length = 93
0.00.862.263 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.862.271 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.862.272 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.862.273 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.862.273 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.862.274 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.868.164 I llama_new_context_with_model: n_seq_max     = 1
0.00.868.171 I llama_new_context_with_model: n_ctx         = 4096
0.00.868.171 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.868.172 I llama_new_context_with_model: n_batch       = 2048
0.00.868.172 I llama_new_context_with_model: n_ubatch      = 512
0.00.868.173 I llama_new_context_with_model: flash_attn    = 0
0.00.868.175 I llama_new_context_with_model: freq_base     = 10000.0
0.00.868.176 I llama_new_context_with_model: freq_scale    = 1
0.00.868.177 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.882.670 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.882.712 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.882.834 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.885.365 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.885.369 I llama_new_context_with_model: graph nodes  = 601
0.00.885.369 I llama_new_context_with_model: graph splits = 1
0.00.885.392 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.466.933 I main: llama threadpool init, n_threads = 4
0.01.466.949 I 
0.01.467.062 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.467.066 I 
0.01.467.299 I sampler seed: 53104507
0.01.467.313 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.467.325 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.467.326 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.467.326 I 
 squaRELLA, a majestic and enigmatic creature, has captured the attention of scientists and folklore enthusiasts alike.

**Historical and Scientific Accounts:**

* Ancient texts

0.12.608.532 I llama_perf_sampler_print:    sampling time =      49.21 ms /    33 runs   (    1.49 ms per token,   670.65 tokens per second)
0.12.608.547 I llama_perf_context_print:        load time =    1465.99 ms
0.12.608.549 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.608.552 I llama_perf_context_print:        eval time =   11051.67 ms /    32 runs   (  345.36 ms per token,     2.90 tokens per second)
0.12.608.553 I llama_perf_context_print:       total time =   11141.61 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4207 (c202cef1)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186362.30 ms
main:    total time = 186362.30 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.642 I build: 4207 (c202cef1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.000.854 I main: load the model and apply lora adapter, if any
0.00.023.429 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.532 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.547 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.549 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.555 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.557 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.558 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.560 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.561 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.562 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.572 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.573 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.575 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.576 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.577 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.247.232 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.348.088 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.371.744 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.371.753 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.371.754 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.371.756 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.371.757 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.371.758 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.371.760 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.371.765 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.371.767 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.371.775 I llama_model_loader: - type  f32:   37 tensors
0.00.371.778 I llama_model_loader: - type q4_K:  108 tensors
0.00.371.778 I llama_model_loader: - type q6_K:   19 tensors
0.00.607.491 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.670.778 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.671.749 I llm_load_vocab: special tokens cache size = 5
0.00.879.482 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.879.556 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.879.557 I llm_load_print_meta: arch             = gemma
0.00.879.557 I llm_load_print_meta: vocab type       = SPM
0.00.879.558 I llm_load_print_meta: n_vocab          = 256000
0.00.879.560 I llm_load_print_meta: n_merges         = 0
0.00.879.561 I llm_load_print_meta: vocab_only       = 0
0.00.879.561 I llm_load_print_meta: n_ctx_train      = 8192
0.00.879.562 I llm_load_print_meta: n_embd           = 2048
0.00.879.562 I llm_load_print_meta: n_layer          = 18
0.00.879.625 I llm_load_print_meta: n_head           = 8
0.00.879.632 I llm_load_print_meta: n_head_kv        = 1
0.00.879.633 I llm_load_print_meta: n_rot            = 256
0.00.879.633 I llm_load_print_meta: n_swa            = 0
0.00.879.633 I llm_load_print_meta: n_embd_head_k    = 256
0.00.879.634 I llm_load_print_meta: n_embd_head_v    = 256
0.00.879.638 I llm_load_print_meta: n_gqa            = 8
0.00.879.643 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.879.648 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.879.649 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.879.651 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.879.651 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.879.652 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.879.653 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.879.658 I llm_load_print_meta: n_ff             = 16384
0.00.879.658 I llm_load_print_meta: n_expert         = 0
0.00.879.659 I llm_load_print_meta: n_expert_used    = 0
0.00.879.660 I llm_load_print_meta: causal attn      = 1
0.00.879.660 I llm_load_print_meta: pooling type     = 0
0.00.879.661 I llm_load_print_meta: rope type        = 2
0.00.879.661 I llm_load_print_meta: rope scaling     = linear
0.00.879.663 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.879.664 I llm_load_print_meta: freq_scale_train = 1
0.00.879.664 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.879.664 I llm_load_print_meta: rope_finetuned   = unknown
0.00.879.674 I llm_load_print_meta: ssm_d_conv       = 0
0.00.879.674 I llm_load_print_meta: ssm_d_inner      = 0
0.00.879.674 I llm_load_print_meta: ssm_d_state      = 0
0.00.879.675 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.879.675 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.879.676 I llm_load_print_meta: model type       = 2B
0.00.879.678 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.879.689 I llm_load_print_meta: model params     = 2.51 B
0.00.879.698 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.879.699 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.879.700 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.879.707 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.879.708 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.879.708 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.879.709 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.879.710 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.879.717 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.879.718 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.879.719 I llm_load_print_meta: max token length = 93
0.00.939.522 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.945.382 I llama_new_context_with_model: n_seq_max     = 1
0.00.945.389 I llama_new_context_with_model: n_ctx         = 4096
0.00.945.389 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.945.390 I llama_new_context_with_model: n_batch       = 2048
0.00.945.390 I llama_new_context_with_model: n_ubatch      = 512
0.00.945.391 I llama_new_context_with_model: flash_attn    = 0
0.00.945.394 I llama_new_context_with_model: freq_base     = 10000.0
0.00.945.395 I llama_new_context_with_model: freq_scale    = 1
0.00.945.395 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.961.124 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.961.164 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.961.291 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.963.937 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.963.941 I llama_new_context_with_model: graph nodes  = 601
0.00.963.941 I llama_new_context_with_model: graph splits = 1
0.00.963.964 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.547.179 I main: llama threadpool init, n_threads = 4
0.01.547.195 I 
0.01.547.337 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.547.342 I 
0.01.547.591 I sampler seed: 549125674
0.01.547.605 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.547.617 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.547.618 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.547.618 I 
 seconal words is a semantic field that combines words with the same or similar meanings. This semantic field is important because it allows speakers and hearers to quickly identify and

0.12.653.540 I llama_perf_sampler_print:    sampling time =      49.06 ms /    33 runs   (    1.49 ms per token,   672.58 tokens per second)
0.12.653.543 I llama_perf_context_print:        load time =    1546.23 ms
0.12.653.544 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.653.546 I llama_perf_context_print:        eval time =   11015.68 ms /    32 runs   (  344.24 ms per token,     2.90 tokens per second)
0.12.653.547 I llama_perf_context_print:       total time =   11106.37 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m41.088s
user	46m44.014s
sys	0m6.347s
