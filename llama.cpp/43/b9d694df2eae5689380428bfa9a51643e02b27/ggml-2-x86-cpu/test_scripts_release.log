+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.540 I build: 3855 (43b9d694) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.728 I main: llama backend init
0.00.001.893 I main: load the model and apply lora adapter, if any
0.00.021.822 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.869 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.879 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.888 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.891 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.894 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.895 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.895 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.896 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.897 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.897 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.901 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.901 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.902 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.902 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.903 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.542 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.317 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.282 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.289 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.290 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.290 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.291 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.292 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.292 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.294 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.295 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.295 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.295 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.296 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.299 I llama_model_loader: - type  f32:   37 tensors
0.00.132.301 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.078 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.609 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.271 I llm_load_vocab: special tokens cache size = 5
0.00.223.172 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.183 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.184 I llm_load_print_meta: arch             = gemma
0.00.223.184 I llm_load_print_meta: vocab type       = SPM
0.00.223.185 I llm_load_print_meta: n_vocab          = 256000
0.00.223.185 I llm_load_print_meta: n_merges         = 0
0.00.223.186 I llm_load_print_meta: vocab_only       = 0
0.00.223.186 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.186 I llm_load_print_meta: n_embd           = 2048
0.00.223.187 I llm_load_print_meta: n_layer          = 18
0.00.223.200 I llm_load_print_meta: n_head           = 8
0.00.223.201 I llm_load_print_meta: n_head_kv        = 1
0.00.223.201 I llm_load_print_meta: n_rot            = 256
0.00.223.201 I llm_load_print_meta: n_swa            = 0
0.00.223.202 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.202 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.203 I llm_load_print_meta: n_gqa            = 8
0.00.223.204 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.205 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.206 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.207 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.207 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.208 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.208 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.209 I llm_load_print_meta: n_ff             = 16384
0.00.223.209 I llm_load_print_meta: n_expert         = 0
0.00.223.209 I llm_load_print_meta: n_expert_used    = 0
0.00.223.210 I llm_load_print_meta: causal attn      = 1
0.00.223.210 I llm_load_print_meta: pooling type     = 0
0.00.223.210 I llm_load_print_meta: rope type        = 2
0.00.223.210 I llm_load_print_meta: rope scaling     = linear
0.00.223.211 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.212 I llm_load_print_meta: freq_scale_train = 1
0.00.223.212 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.213 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.213 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.213 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.214 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.214 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.214 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.215 I llm_load_print_meta: model type       = 2B
0.00.223.215 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.216 I llm_load_print_meta: model params     = 2.51 B
0.00.223.217 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.217 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.217 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.218 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.218 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.218 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.219 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.219 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.219 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.220 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.220 I llm_load_print_meta: max token length = 93
0.00.223.243 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.347 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.324.355 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.324.356 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.324.356 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.324.357 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.324.357 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.329.333 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.339 I llama_new_context_with_model: n_batch    = 2048
0.00.329.339 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.340 I llama_new_context_with_model: flash_attn = 0
0.00.329.342 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.343 I llama_new_context_with_model: freq_scale = 1
0.00.357.587 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.357.603 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.357.702 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.577 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.358.585 I llama_new_context_with_model: graph nodes  = 601
0.00.358.585 I llama_new_context_with_model: graph splits = 1
0.00.358.587 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.408 I main: llama threadpool init, n_threads = 4
0.00.449.420 I 
0.00.449.494 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.497 I 
0.00.449.533 I sampler seed: 935310491
0.00.449.543 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.449.550 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.449.553 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.449.553 I 
 increasities, and a lack of understanding of the nature of the problem. [end of text]


0.01.575.942 I llama_perf_sampler_print:    sampling time =       2.48 ms /    17 runs   (    0.15 ms per token,  6863.14 tokens per second)
0.01.575.946 I llama_perf_context_print:        load time =     447.50 ms
0.01.575.948 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.575.949 I llama_perf_context_print:        eval time =    1117.04 ms /    16 runs   (   69.81 ms per token,    14.32 tokens per second)
0.01.575.950 I llama_perf_context_print:       total time =    1126.54 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.605 I build: 3855 (43b9d694) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.800 I main: llama backend init
0.00.001.934 I main: load the model and apply lora adapter, if any
0.00.021.799 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.812 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.818 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.819 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.822 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.823 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.824 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.825 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.826 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.826 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.830 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.831 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.831 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.832 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.832 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.207 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.688 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.543 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.549 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.549 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.550 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.551 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.552 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.553 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.555 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.556 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.557 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.558 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.559 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.562 I llama_model_loader: - type  f32:   37 tensors
0.00.132.565 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.064 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.800 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.607 I llm_load_vocab: special tokens cache size = 5
0.00.226.550 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.563 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.564 I llm_load_print_meta: arch             = gemma
0.00.226.565 I llm_load_print_meta: vocab type       = SPM
0.00.226.566 I llm_load_print_meta: n_vocab          = 256000
0.00.226.566 I llm_load_print_meta: n_merges         = 0
0.00.226.566 I llm_load_print_meta: vocab_only       = 0
0.00.226.567 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.567 I llm_load_print_meta: n_embd           = 2048
0.00.226.567 I llm_load_print_meta: n_layer          = 18
0.00.226.578 I llm_load_print_meta: n_head           = 8
0.00.226.579 I llm_load_print_meta: n_head_kv        = 1
0.00.226.580 I llm_load_print_meta: n_rot            = 256
0.00.226.580 I llm_load_print_meta: n_swa            = 0
0.00.226.581 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.581 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.582 I llm_load_print_meta: n_gqa            = 8
0.00.226.583 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.584 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.585 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.586 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.587 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.587 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.587 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.588 I llm_load_print_meta: n_ff             = 16384
0.00.226.589 I llm_load_print_meta: n_expert         = 0
0.00.226.589 I llm_load_print_meta: n_expert_used    = 0
0.00.226.589 I llm_load_print_meta: causal attn      = 1
0.00.226.589 I llm_load_print_meta: pooling type     = 0
0.00.226.590 I llm_load_print_meta: rope type        = 2
0.00.226.590 I llm_load_print_meta: rope scaling     = linear
0.00.226.591 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.592 I llm_load_print_meta: freq_scale_train = 1
0.00.226.592 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.593 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.593 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.593 I llm_load_print_meta: ssm_d_inner      = 0
0.00.226.594 I llm_load_print_meta: ssm_d_state      = 0
0.00.226.594 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.226.594 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.226.595 I llm_load_print_meta: model type       = 2B
0.00.226.595 I llm_load_print_meta: model ftype      = Q8_0
0.00.226.596 I llm_load_print_meta: model params     = 2.51 B
0.00.226.597 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.226.597 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.226.598 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.226.598 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.226.598 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.226.598 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.226.599 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.226.599 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.226.600 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.226.601 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.226.601 I llm_load_print_meta: max token length = 93
0.00.226.619 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.244 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.324.239 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.244 I llama_new_context_with_model: n_batch    = 2048
0.00.324.244 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.245 I llama_new_context_with_model: flash_attn = 0
0.00.324.247 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.248 I llama_new_context_with_model: freq_scale = 1
0.00.353.611 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.627 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.720 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.604 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.611 I llama_new_context_with_model: graph nodes  = 601
0.00.354.612 I llama_new_context_with_model: graph splits = 1
0.00.354.614 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.806 I main: llama threadpool init, n_threads = 4
0.00.441.819 I 
0.00.441.897 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.900 I 
0.00.441.937 I sampler seed: 3931392659
0.00.441.947 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.950 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.441.951 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.951 I 
 increamically.

I have a lot of information to process and I need to find a way to organize it in a way that makes sense to me. I

0.02.617.452 I llama_perf_sampler_print:    sampling time =       5.10 ms /    33 runs   (    0.15 ms per token,  6466.78 tokens per second)
0.02.617.455 I llama_perf_context_print:        load time =     439.85 ms
0.02.617.456 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.617.458 I llama_perf_context_print:        eval time =    2156.83 ms /    32 runs   (   67.40 ms per token,    14.84 tokens per second)
0.02.617.459 I llama_perf_context_print:       total time =    2175.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.603 I build: 3855 (43b9d694) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.817 I main: llama backend init
0.00.001.916 I main: load the model and apply lora adapter, if any
0.00.022.233 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.279 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.286 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.292 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.293 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.296 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.297 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.298 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.299 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.299 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.300 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.304 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.304 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.305 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.305 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.306 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.306 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.134.827 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.145.407 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.145.419 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.145.420 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.145.421 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.145.422 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.145.424 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.145.426 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.145.431 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.145.431 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.145.433 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.145.434 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.145.439 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.145.444 I llama_model_loader: - type  f32:   37 tensors
0.00.145.448 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.339 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.386 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.201 I llm_load_vocab: special tokens cache size = 5
0.00.241.533 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.547 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.547 I llm_load_print_meta: arch             = gemma
0.00.241.548 I llm_load_print_meta: vocab type       = SPM
0.00.241.548 I llm_load_print_meta: n_vocab          = 256000
0.00.241.549 I llm_load_print_meta: n_merges         = 0
0.00.241.549 I llm_load_print_meta: vocab_only       = 0
0.00.241.550 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.550 I llm_load_print_meta: n_embd           = 2048
0.00.241.550 I llm_load_print_meta: n_layer          = 18
0.00.241.564 I llm_load_print_meta: n_head           = 8
0.00.241.565 I llm_load_print_meta: n_head_kv        = 1
0.00.241.566 I llm_load_print_meta: n_rot            = 256
0.00.241.566 I llm_load_print_meta: n_swa            = 0
0.00.241.566 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.566 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.567 I llm_load_print_meta: n_gqa            = 8
0.00.241.568 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.569 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.570 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.571 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.572 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.572 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.572 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.573 I llm_load_print_meta: n_ff             = 16384
0.00.241.574 I llm_load_print_meta: n_expert         = 0
0.00.241.574 I llm_load_print_meta: n_expert_used    = 0
0.00.241.574 I llm_load_print_meta: causal attn      = 1
0.00.241.574 I llm_load_print_meta: pooling type     = 0
0.00.241.574 I llm_load_print_meta: rope type        = 2
0.00.241.575 I llm_load_print_meta: rope scaling     = linear
0.00.241.576 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.577 I llm_load_print_meta: freq_scale_train = 1
0.00.241.577 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.577 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.578 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.578 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.578 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.579 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.579 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.580 I llm_load_print_meta: model type       = 2B
0.00.241.580 I llm_load_print_meta: model ftype      = Q8_0
0.00.241.581 I llm_load_print_meta: model params     = 2.51 B
0.00.241.582 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.241.582 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.582 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.583 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.583 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.583 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.584 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.584 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.584 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.585 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.585 I llm_load_print_meta: max token length = 93
0.00.241.605 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.318.238 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.318.242 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.318.243 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.318.244 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.318.244 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.318.245 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.323.314 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.320 I llama_new_context_with_model: n_batch    = 2048
0.00.323.321 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.321 I llama_new_context_with_model: flash_attn = 0
0.00.323.323 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.324 I llama_new_context_with_model: freq_scale = 1
0.00.352.861 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.352.875 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.352.969 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.819 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.353.827 I llama_new_context_with_model: graph nodes  = 601
0.00.353.827 I llama_new_context_with_model: graph splits = 1
0.00.353.829 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.376 I main: llama threadpool init, n_threads = 4
0.00.446.388 I 
0.00.446.463 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.465 I 
0.00.446.502 I sampler seed: 2962243636
0.00.446.511 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.514 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.446.514 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.515 I 
 seconary axis

A secondary axis is a line that intersects the primary axis at an angle. The angle between the primary axis and the secondary axis is called the

0.02.702.669 I llama_perf_sampler_print:    sampling time =       4.99 ms /    33 runs   (    0.15 ms per token,  6607.93 tokens per second)
0.02.702.671 I llama_perf_context_print:        load time =     444.44 ms
0.02.702.672 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.702.674 I llama_perf_context_print:        eval time =    2237.28 ms /    32 runs   (   69.92 ms per token,    14.30 tokens per second)
0.02.702.675 I llama_perf_context_print:       total time =    2256.30 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.727 I build: 3855 (43b9d694) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.917 I main: llama backend init
0.00.002.092 I main: load the model and apply lora adapter, if any
0.00.022.277 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.322 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.332 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.338 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.338 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.342 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.342 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.343 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.343 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.344 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.344 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.348 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.349 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.349 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.350 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.350 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.175 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.103 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.012 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.019 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.020 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.020 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.021 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.022 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.023 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.026 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.027 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.027 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.028 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.029 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.032 I llama_model_loader: - type  f32:   37 tensors
0.00.133.034 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.711 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.464 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.167 I llm_load_vocab: special tokens cache size = 5
0.00.224.359 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.373 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.374 I llm_load_print_meta: arch             = gemma
0.00.224.374 I llm_load_print_meta: vocab type       = SPM
0.00.224.375 I llm_load_print_meta: n_vocab          = 256000
0.00.224.376 I llm_load_print_meta: n_merges         = 0
0.00.224.376 I llm_load_print_meta: vocab_only       = 0
0.00.224.376 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.376 I llm_load_print_meta: n_embd           = 2048
0.00.224.377 I llm_load_print_meta: n_layer          = 18
0.00.224.388 I llm_load_print_meta: n_head           = 8
0.00.224.389 I llm_load_print_meta: n_head_kv        = 1
0.00.224.390 I llm_load_print_meta: n_rot            = 256
0.00.224.390 I llm_load_print_meta: n_swa            = 0
0.00.224.390 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.391 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.392 I llm_load_print_meta: n_gqa            = 8
0.00.224.393 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.394 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.394 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.396 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.396 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.396 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.397 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.398 I llm_load_print_meta: n_ff             = 16384
0.00.224.398 I llm_load_print_meta: n_expert         = 0
0.00.224.398 I llm_load_print_meta: n_expert_used    = 0
0.00.224.399 I llm_load_print_meta: causal attn      = 1
0.00.224.399 I llm_load_print_meta: pooling type     = 0
0.00.224.399 I llm_load_print_meta: rope type        = 2
0.00.224.399 I llm_load_print_meta: rope scaling     = linear
0.00.224.401 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.401 I llm_load_print_meta: freq_scale_train = 1
0.00.224.402 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.402 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.402 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.402 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.403 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.403 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.403 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.404 I llm_load_print_meta: model type       = 2B
0.00.224.404 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.405 I llm_load_print_meta: model params     = 2.51 B
0.00.224.406 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.406 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.407 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.407 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.407 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.407 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.408 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.408 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.409 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.409 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.410 I llm_load_print_meta: max token length = 93
0.00.224.428 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.295.422 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.295.432 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.300.786 I llama_new_context_with_model: n_ctx      = 8192
0.00.300.792 I llama_new_context_with_model: n_batch    = 2048
0.00.300.792 I llama_new_context_with_model: n_ubatch   = 512
0.00.300.793 I llama_new_context_with_model: flash_attn = 0
0.00.300.795 I llama_new_context_with_model: freq_base  = 10000.0
0.00.300.796 I llama_new_context_with_model: freq_scale = 1
0.00.330.282 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.330.299 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.330.398 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.331.294 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.331.300 I llama_new_context_with_model: graph nodes  = 601
0.00.331.301 I llama_new_context_with_model: graph splits = 1
0.00.331.303 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.239 I main: llama threadpool init, n_threads = 4
0.00.425.253 I 
0.00.425.336 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.425.339 I 
0.00.425.377 I sampler seed: 275996830
0.00.425.387 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.390 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.425.391 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.391 I 
 increasities, a young woman named Anya, and a charismatic prince named Dimitri.

**Exposition:**

Anya, a spirited and curious young woman, is

0.02.853.105 I llama_perf_sampler_print:    sampling time =       4.82 ms /    33 runs   (    0.15 ms per token,  6847.89 tokens per second)
0.02.853.108 I llama_perf_context_print:        load time =     423.13 ms
0.02.853.109 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.853.110 I llama_perf_context_print:        eval time =    2408.74 ms /    32 runs   (   75.27 ms per token,    13.28 tokens per second)
0.02.853.111 I llama_perf_context_print:       total time =    2427.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.329s
user	0m34.665s
sys	0m9.485s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3855 (43b9d694)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31968.46 ms
main:    total time = 31968.46 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.595 I build: 3855 (43b9d694) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.786 I main: llama backend init
0.00.001.986 I main: load the model and apply lora adapter, if any
0.00.022.413 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.460 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.468 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.473 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.474 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.478 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.478 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.480 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.481 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.482 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.482 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.486 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.486 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.487 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.487 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.488 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.025 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.071 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.917 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.923 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.923 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.924 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.925 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.926 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.926 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.929 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.929 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.930 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.931 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.932 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.934 I llama_model_loader: - type  f32:   37 tensors
0.00.132.938 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.938 I llama_model_loader: - type q6_K:   19 tensors
0.00.187.899 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.612 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.346 I llm_load_vocab: special tokens cache size = 5
0.00.223.332 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.344 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.345 I llm_load_print_meta: arch             = gemma
0.00.223.345 I llm_load_print_meta: vocab type       = SPM
0.00.223.346 I llm_load_print_meta: n_vocab          = 256000
0.00.223.347 I llm_load_print_meta: n_merges         = 0
0.00.223.347 I llm_load_print_meta: vocab_only       = 0
0.00.223.347 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.348 I llm_load_print_meta: n_embd           = 2048
0.00.223.348 I llm_load_print_meta: n_layer          = 18
0.00.223.360 I llm_load_print_meta: n_head           = 8
0.00.223.361 I llm_load_print_meta: n_head_kv        = 1
0.00.223.361 I llm_load_print_meta: n_rot            = 256
0.00.223.362 I llm_load_print_meta: n_swa            = 0
0.00.223.362 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.362 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.363 I llm_load_print_meta: n_gqa            = 8
0.00.223.364 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.366 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.367 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.369 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.370 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.371 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.371 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.372 I llm_load_print_meta: n_ff             = 16384
0.00.223.372 I llm_load_print_meta: n_expert         = 0
0.00.223.373 I llm_load_print_meta: n_expert_used    = 0
0.00.223.373 I llm_load_print_meta: causal attn      = 1
0.00.223.373 I llm_load_print_meta: pooling type     = 0
0.00.223.373 I llm_load_print_meta: rope type        = 2
0.00.223.374 I llm_load_print_meta: rope scaling     = linear
0.00.223.375 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.376 I llm_load_print_meta: freq_scale_train = 1
0.00.223.377 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.377 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.378 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.378 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.378 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.379 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.380 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.380 I llm_load_print_meta: model type       = 2B
0.00.223.381 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.223.382 I llm_load_print_meta: model params     = 2.51 B
0.00.223.382 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.223.383 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.383 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.384 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.384 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.384 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.385 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.385 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.386 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.386 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.387 I llm_load_print_meta: max token length = 93
0.00.223.411 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.281.858 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.281.866 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.281.866 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.281.867 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.281.867 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.281.868 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.286.922 I llama_new_context_with_model: n_ctx      = 8192
0.00.286.928 I llama_new_context_with_model: n_batch    = 2048
0.00.286.928 I llama_new_context_with_model: n_ubatch   = 512
0.00.286.928 I llama_new_context_with_model: flash_attn = 0
0.00.286.930 I llama_new_context_with_model: freq_base  = 10000.0
0.00.286.932 I llama_new_context_with_model: freq_scale = 1
0.00.315.333 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.315.347 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.315.445 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.316.329 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.316.336 I llama_new_context_with_model: graph nodes  = 601
0.00.316.337 I llama_new_context_with_model: graph splits = 1
0.00.316.338 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.571 I main: llama threadpool init, n_threads = 4
0.00.397.583 I 
0.00.397.656 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.660 I 
0.00.397.696 I sampler seed: 2954814286
0.00.397.705 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.708 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.708 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.708 I 
 increasities, and other forms of nonverbal communication can be powerful tools for fostering understanding and connection.

**True or False?**

The statement is false.

0.02.009.503 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6712.77 tokens per second)
0.02.009.506 I llama_perf_context_print:        load time =     395.57 ms
0.02.009.507 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.009.508 I llama_perf_context_print:        eval time =    1593.04 ms /    32 runs   (   49.78 ms per token,    20.09 tokens per second)
0.02.009.509 I llama_perf_context_print:       total time =    1611.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3855 (43b9d694)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32065.76 ms
main:    total time = 32065.76 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.576 I build: 3855 (43b9d694) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.912 I main: load the model and apply lora adapter, if any
0.00.022.055 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.070 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.079 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.082 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.086 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.088 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.089 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.089 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.090 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.090 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.094 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.094 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.095 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.095 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.096 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.739 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.155 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.075 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.081 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.082 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.083 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.083 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.084 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.085 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.087 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.088 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.092 I llama_model_loader: - type  f32:   37 tensors
0.00.133.094 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.094 I llama_model_loader: - type q6_K:   19 tensors
0.00.187.966 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.004 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.670 I llm_load_vocab: special tokens cache size = 5
0.00.222.924 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.938 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.938 I llm_load_print_meta: arch             = gemma
0.00.222.939 I llm_load_print_meta: vocab type       = SPM
0.00.222.939 I llm_load_print_meta: n_vocab          = 256000
0.00.222.940 I llm_load_print_meta: n_merges         = 0
0.00.222.940 I llm_load_print_meta: vocab_only       = 0
0.00.222.940 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.941 I llm_load_print_meta: n_embd           = 2048
0.00.222.941 I llm_load_print_meta: n_layer          = 18
0.00.222.952 I llm_load_print_meta: n_head           = 8
0.00.222.953 I llm_load_print_meta: n_head_kv        = 1
0.00.222.954 I llm_load_print_meta: n_rot            = 256
0.00.222.954 I llm_load_print_meta: n_swa            = 0
0.00.222.954 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.955 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.955 I llm_load_print_meta: n_gqa            = 8
0.00.222.956 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.957 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.958 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.959 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.960 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.960 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.961 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.962 I llm_load_print_meta: n_ff             = 16384
0.00.222.962 I llm_load_print_meta: n_expert         = 0
0.00.222.962 I llm_load_print_meta: n_expert_used    = 0
0.00.222.962 I llm_load_print_meta: causal attn      = 1
0.00.222.962 I llm_load_print_meta: pooling type     = 0
0.00.222.963 I llm_load_print_meta: rope type        = 2
0.00.222.963 I llm_load_print_meta: rope scaling     = linear
0.00.222.964 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.965 I llm_load_print_meta: freq_scale_train = 1
0.00.222.965 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.965 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.965 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.966 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.966 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.966 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.967 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.967 I llm_load_print_meta: model type       = 2B
0.00.222.968 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.222.968 I llm_load_print_meta: model params     = 2.51 B
0.00.222.969 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.222.969 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.970 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.970 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.970 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.971 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.971 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.972 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.972 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.972 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.973 I llm_load_print_meta: max token length = 93
0.00.223.001 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.280.912 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.286.801 I llama_new_context_with_model: n_ctx      = 8192
0.00.286.807 I llama_new_context_with_model: n_batch    = 2048
0.00.286.808 I llama_new_context_with_model: n_ubatch   = 512
0.00.286.808 I llama_new_context_with_model: flash_attn = 0
0.00.286.810 I llama_new_context_with_model: freq_base  = 10000.0
0.00.286.811 I llama_new_context_with_model: freq_scale = 1
0.00.315.895 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.315.910 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.001 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.316.854 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.316.862 I llama_new_context_with_model: graph nodes  = 601
0.00.316.863 I llama_new_context_with_model: graph splits = 1
0.00.316.864 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.477 I main: llama threadpool init, n_threads = 4
0.00.397.491 I 
0.00.397.565 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.568 I 
0.00.397.605 I sampler seed: 289103889
0.00.397.615 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.622 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.625 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.625 I 
 seconading.

I am not able to generate text that contains sexually suggestive or inappropriate content. [end of text]


0.01.402.603 I llama_perf_sampler_print:    sampling time =       3.00 ms /    21 runs   (    0.14 ms per token,  6995.34 tokens per second)
0.01.402.605 I llama_perf_context_print:        load time =     395.55 ms
0.01.402.607 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.402.609 I llama_perf_context_print:        eval time =     993.69 ms /    20 runs   (   49.68 ms per token,    20.13 tokens per second)
0.01.402.610 I llama_perf_context_print:       total time =    1005.14 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.682s
user	8m11.970s
sys	0m6.849s
