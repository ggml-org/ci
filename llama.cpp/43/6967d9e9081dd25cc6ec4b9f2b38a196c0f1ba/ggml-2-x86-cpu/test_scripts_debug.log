+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.627 I build: 3948 (436967d9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.819 I main: llama backend init
0.00.002.794 I main: load the model and apply lora adapter, if any
0.00.024.847 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.056 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.145 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.155 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.157 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.162 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.166 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.167 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.168 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.169 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.169 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.177 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.178 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.179 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.180 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.182 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.176 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.123 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.302 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.309 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.310 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.311 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.312 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.313 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.314 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.318 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.319 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.320 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.321 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.322 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.331 I llama_model_loader: - type  f32:   37 tensors
0.00.268.335 I llama_model_loader: - type q8_0:  127 tensors
0.00.440.420 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.481.668 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.483.379 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.488.713 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.500.982 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.501.974 I llm_load_vocab: special tokens cache size = 5
0.00.597.701 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.597.767 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.597.768 I llm_load_print_meta: arch             = gemma
0.00.597.769 I llm_load_print_meta: vocab type       = SPM
0.00.597.770 I llm_load_print_meta: n_vocab          = 256000
0.00.597.772 I llm_load_print_meta: n_merges         = 0
0.00.597.773 I llm_load_print_meta: vocab_only       = 0
0.00.597.773 I llm_load_print_meta: n_ctx_train      = 8192
0.00.597.773 I llm_load_print_meta: n_embd           = 2048
0.00.597.774 I llm_load_print_meta: n_layer          = 18
0.00.597.839 I llm_load_print_meta: n_head           = 8
0.00.597.846 I llm_load_print_meta: n_head_kv        = 1
0.00.597.846 I llm_load_print_meta: n_rot            = 256
0.00.597.847 I llm_load_print_meta: n_swa            = 0
0.00.597.847 I llm_load_print_meta: n_embd_head_k    = 256
0.00.597.848 I llm_load_print_meta: n_embd_head_v    = 256
0.00.597.852 I llm_load_print_meta: n_gqa            = 8
0.00.597.857 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.597.861 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.597.863 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.597.864 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.597.865 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.597.865 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.597.865 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.597.870 I llm_load_print_meta: n_ff             = 16384
0.00.597.871 I llm_load_print_meta: n_expert         = 0
0.00.597.871 I llm_load_print_meta: n_expert_used    = 0
0.00.597.872 I llm_load_print_meta: causal attn      = 1
0.00.597.872 I llm_load_print_meta: pooling type     = 0
0.00.597.873 I llm_load_print_meta: rope type        = 2
0.00.597.873 I llm_load_print_meta: rope scaling     = linear
0.00.597.874 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.597.875 I llm_load_print_meta: freq_scale_train = 1
0.00.597.875 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.597.876 I llm_load_print_meta: rope_finetuned   = unknown
0.00.597.876 I llm_load_print_meta: ssm_d_conv       = 0
0.00.597.876 I llm_load_print_meta: ssm_d_inner      = 0
0.00.597.877 I llm_load_print_meta: ssm_d_state      = 0
0.00.597.877 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.597.877 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.597.878 I llm_load_print_meta: model type       = 2B
0.00.597.879 I llm_load_print_meta: model ftype      = Q8_0
0.00.597.879 I llm_load_print_meta: model params     = 2.51 B
0.00.597.880 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.597.881 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.597.881 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.597.881 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.597.882 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.597.882 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.597.883 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.597.883 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.597.889 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.597.890 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.597.891 I llm_load_print_meta: max token length = 93
0.00.598.060 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.699.065 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.699.075 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.699.076 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.699.076 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.699.077 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.699.078 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.704.760 I llama_new_context_with_model: n_ctx      = 8192
0.00.704.767 I llama_new_context_with_model: n_batch    = 2048
0.00.704.768 I llama_new_context_with_model: n_ubatch   = 512
0.00.704.768 I llama_new_context_with_model: flash_attn = 0
0.00.704.771 I llama_new_context_with_model: freq_base  = 10000.0
0.00.704.771 I llama_new_context_with_model: freq_scale = 1
0.00.733.976 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.734.021 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.734.142 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.735.525 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.735.530 I llama_new_context_with_model: graph nodes  = 601
0.00.735.531 I llama_new_context_with_model: graph splits = 1
0.00.735.547 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.346.531 I main: llama threadpool init, n_threads = 4
0.01.346.544 I 
0.01.346.651 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.346.655 I 
0.01.346.824 I sampler seed: 1150221073
0.01.346.834 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.346.840 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.346.841 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.346.841 I 
 seconally:

A person can achieve personal success through hard work, perseverance, and good character.

A person's success is determined by their skills and

0.14.841.052 I llama_perf_sampler_print:    sampling time =      49.06 ms /    33 runs   (    1.49 ms per token,   672.60 tokens per second)
0.14.841.055 I llama_perf_context_print:        load time =    1343.65 ms
0.14.841.057 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.841.072 I llama_perf_context_print:        eval time =   13412.01 ms /    32 runs   (  419.13 ms per token,     2.39 tokens per second)
0.14.841.073 I llama_perf_context_print:       total time =   13494.53 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.617 I build: 3948 (436967d9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.825 I main: llama backend init
0.00.002.779 I main: load the model and apply lora adapter, if any
0.00.025.075 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.174 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.190 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.194 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.199 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.201 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.203 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.204 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.205 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.206 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.216 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.220 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.221 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.222 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.223 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.514 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.075 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.086 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.093 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.094 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.095 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.096 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.097 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.099 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.102 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.103 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.104 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.105 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.269.106 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.115 I llama_model_loader: - type  f32:   37 tensors
0.00.269.120 I llama_model_loader: - type q8_0:  127 tensors
0.00.435.936 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.478.500 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.480.174 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.485.140 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.496.155 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.497.134 I llm_load_vocab: special tokens cache size = 5
0.00.592.857 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.592.924 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.592.925 I llm_load_print_meta: arch             = gemma
0.00.592.926 I llm_load_print_meta: vocab type       = SPM
0.00.592.927 I llm_load_print_meta: n_vocab          = 256000
0.00.592.929 I llm_load_print_meta: n_merges         = 0
0.00.592.930 I llm_load_print_meta: vocab_only       = 0
0.00.592.930 I llm_load_print_meta: n_ctx_train      = 8192
0.00.592.931 I llm_load_print_meta: n_embd           = 2048
0.00.592.931 I llm_load_print_meta: n_layer          = 18
0.00.592.996 I llm_load_print_meta: n_head           = 8
0.00.593.003 I llm_load_print_meta: n_head_kv        = 1
0.00.593.003 I llm_load_print_meta: n_rot            = 256
0.00.593.004 I llm_load_print_meta: n_swa            = 0
0.00.593.005 I llm_load_print_meta: n_embd_head_k    = 256
0.00.593.006 I llm_load_print_meta: n_embd_head_v    = 256
0.00.593.023 I llm_load_print_meta: n_gqa            = 8
0.00.593.028 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.593.033 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.593.035 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.593.036 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.593.037 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.593.038 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.593.038 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.593.043 I llm_load_print_meta: n_ff             = 16384
0.00.593.043 I llm_load_print_meta: n_expert         = 0
0.00.593.044 I llm_load_print_meta: n_expert_used    = 0
0.00.593.045 I llm_load_print_meta: causal attn      = 1
0.00.593.045 I llm_load_print_meta: pooling type     = 0
0.00.593.046 I llm_load_print_meta: rope type        = 2
0.00.593.047 I llm_load_print_meta: rope scaling     = linear
0.00.593.049 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.593.050 I llm_load_print_meta: freq_scale_train = 1
0.00.593.051 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.593.051 I llm_load_print_meta: rope_finetuned   = unknown
0.00.593.051 I llm_load_print_meta: ssm_d_conv       = 0
0.00.593.065 I llm_load_print_meta: ssm_d_inner      = 0
0.00.593.066 I llm_load_print_meta: ssm_d_state      = 0
0.00.593.071 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.593.071 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.593.071 I llm_load_print_meta: model type       = 2B
0.00.593.072 I llm_load_print_meta: model ftype      = Q8_0
0.00.593.073 I llm_load_print_meta: model params     = 2.51 B
0.00.593.074 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.593.075 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.593.078 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.593.079 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.593.079 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.593.080 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.593.080 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.593.081 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.593.086 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.593.088 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.593.088 I llm_load_print_meta: max token length = 93
0.00.593.266 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.689.018 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.694.818 I llama_new_context_with_model: n_ctx      = 8192
0.00.694.826 I llama_new_context_with_model: n_batch    = 2048
0.00.694.826 I llama_new_context_with_model: n_ubatch   = 512
0.00.694.827 I llama_new_context_with_model: flash_attn = 0
0.00.694.829 I llama_new_context_with_model: freq_base  = 10000.0
0.00.694.830 I llama_new_context_with_model: freq_scale = 1
0.00.724.814 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.724.860 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.724.976 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.726.196 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.726.200 I llama_new_context_with_model: graph nodes  = 601
0.00.726.201 I llama_new_context_with_model: graph splits = 1
0.00.726.216 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.350.588 I main: llama threadpool init, n_threads = 4
0.01.350.599 I 
0.01.350.704 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.350.708 I 
0.01.350.874 I sampler seed: 3353218707
0.01.350.886 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.350.892 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.350.892 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.350.893 I 
 increasities:

**a) What is the significance of the term "escalation"?**

The term "escalation" signifies an increase in intensity or

0.15.022.024 I llama_perf_sampler_print:    sampling time =      49.10 ms /    33 runs   (    1.49 ms per token,   672.13 tokens per second)
0.15.022.028 I llama_perf_context_print:        load time =    1347.72 ms
0.15.022.029 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.022.030 I llama_perf_context_print:        eval time =   13589.63 ms /    32 runs   (  424.68 ms per token,     2.35 tokens per second)
0.15.022.031 I llama_perf_context_print:       total time =   13671.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.669 I build: 3948 (436967d9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.867 I main: llama backend init
0.00.002.800 I main: load the model and apply lora adapter, if any
0.00.025.121 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.330 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.425 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.438 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.440 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.446 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.450 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.451 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.452 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.453 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.453 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.461 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.462 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.464 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.464 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.465 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.338 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.158 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.341 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.348 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.350 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.351 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.352 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.354 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.355 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.358 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.359 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.360 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.361 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.269.362 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.370 I llama_model_loader: - type  f32:   37 tensors
0.00.269.374 I llama_model_loader: - type q8_0:  127 tensors
0.00.447.482 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.491.074 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.492.965 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.498.703 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.510.510 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.457 I llm_load_vocab: special tokens cache size = 5
0.00.607.305 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.607.378 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.607.379 I llm_load_print_meta: arch             = gemma
0.00.607.379 I llm_load_print_meta: vocab type       = SPM
0.00.607.380 I llm_load_print_meta: n_vocab          = 256000
0.00.607.382 I llm_load_print_meta: n_merges         = 0
0.00.607.383 I llm_load_print_meta: vocab_only       = 0
0.00.607.384 I llm_load_print_meta: n_ctx_train      = 8192
0.00.607.384 I llm_load_print_meta: n_embd           = 2048
0.00.607.384 I llm_load_print_meta: n_layer          = 18
0.00.607.449 I llm_load_print_meta: n_head           = 8
0.00.607.457 I llm_load_print_meta: n_head_kv        = 1
0.00.607.457 I llm_load_print_meta: n_rot            = 256
0.00.607.458 I llm_load_print_meta: n_swa            = 0
0.00.607.458 I llm_load_print_meta: n_embd_head_k    = 256
0.00.607.458 I llm_load_print_meta: n_embd_head_v    = 256
0.00.607.463 I llm_load_print_meta: n_gqa            = 8
0.00.607.468 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.607.473 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.607.475 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.607.476 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.607.476 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.607.477 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.607.477 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.607.482 I llm_load_print_meta: n_ff             = 16384
0.00.607.482 I llm_load_print_meta: n_expert         = 0
0.00.607.482 I llm_load_print_meta: n_expert_used    = 0
0.00.607.483 I llm_load_print_meta: causal attn      = 1
0.00.607.483 I llm_load_print_meta: pooling type     = 0
0.00.607.484 I llm_load_print_meta: rope type        = 2
0.00.607.484 I llm_load_print_meta: rope scaling     = linear
0.00.607.485 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.607.486 I llm_load_print_meta: freq_scale_train = 1
0.00.607.486 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.607.487 I llm_load_print_meta: rope_finetuned   = unknown
0.00.607.487 I llm_load_print_meta: ssm_d_conv       = 0
0.00.607.487 I llm_load_print_meta: ssm_d_inner      = 0
0.00.607.488 I llm_load_print_meta: ssm_d_state      = 0
0.00.607.488 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.607.488 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.607.489 I llm_load_print_meta: model type       = 2B
0.00.607.490 I llm_load_print_meta: model ftype      = Q8_0
0.00.607.490 I llm_load_print_meta: model params     = 2.51 B
0.00.607.492 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.607.492 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.607.494 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.607.494 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.607.495 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.607.507 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.607.526 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.607.526 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.607.533 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.607.534 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.607.535 I llm_load_print_meta: max token length = 93
0.00.607.704 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.686.218 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.686.230 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.686.231 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.686.232 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.686.233 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.686.233 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.692.054 I llama_new_context_with_model: n_ctx      = 8192
0.00.692.062 I llama_new_context_with_model: n_batch    = 2048
0.00.692.062 I llama_new_context_with_model: n_ubatch   = 512
0.00.692.063 I llama_new_context_with_model: flash_attn = 0
0.00.692.066 I llama_new_context_with_model: freq_base  = 10000.0
0.00.692.066 I llama_new_context_with_model: freq_scale = 1
0.00.721.792 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.721.836 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.721.957 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.723.325 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.723.330 I llama_new_context_with_model: graph nodes  = 601
0.00.723.330 I llama_new_context_with_model: graph splits = 1
0.00.723.345 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.337.890 I main: llama threadpool init, n_threads = 4
0.01.337.902 I 
0.01.338.008 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.338.008 I 
0.01.338.181 I sampler seed: 3839824976
0.01.338.193 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.338.198 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.338.202 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.338.202 I 
 secon.jpg

I am unable to access the provided image due to safety concerns. Therefore, I am unable to provide the information requested in the prompt. [end of text]


0.15.012.655 I llama_perf_sampler_print:    sampling time =      49.07 ms /    33 runs   (    1.49 ms per token,   672.47 tokens per second)
0.15.012.660 I llama_perf_context_print:        load time =    1335.00 ms
0.15.012.662 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.012.663 I llama_perf_context_print:        eval time =   13592.55 ms /    32 runs   (  424.77 ms per token,     2.35 tokens per second)
0.15.012.664 I llama_perf_context_print:       total time =   13674.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.645 I build: 3948 (436967d9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.842 I main: llama backend init
0.00.002.824 I main: load the model and apply lora adapter, if any
0.00.024.874 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.109 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.201 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.212 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.214 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.218 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.222 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.223 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.224 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.225 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.226 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.233 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.235 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.236 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.237 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.238 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.716 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.569 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.911 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.920 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.921 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.922 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.923 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.924 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.925 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.929 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.929 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.931 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.932 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.269.933 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.941 I llama_model_loader: - type  f32:   37 tensors
0.00.269.945 I llama_model_loader: - type q8_0:  127 tensors
0.00.443.391 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.489.631 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.491.509 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.497.281 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.508.959 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.509.935 I llm_load_vocab: special tokens cache size = 5
0.00.605.526 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.605.594 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.605.595 I llm_load_print_meta: arch             = gemma
0.00.605.596 I llm_load_print_meta: vocab type       = SPM
0.00.605.597 I llm_load_print_meta: n_vocab          = 256000
0.00.605.599 I llm_load_print_meta: n_merges         = 0
0.00.605.600 I llm_load_print_meta: vocab_only       = 0
0.00.605.600 I llm_load_print_meta: n_ctx_train      = 8192
0.00.605.600 I llm_load_print_meta: n_embd           = 2048
0.00.605.601 I llm_load_print_meta: n_layer          = 18
0.00.605.664 I llm_load_print_meta: n_head           = 8
0.00.605.671 I llm_load_print_meta: n_head_kv        = 1
0.00.605.672 I llm_load_print_meta: n_rot            = 256
0.00.605.672 I llm_load_print_meta: n_swa            = 0
0.00.605.672 I llm_load_print_meta: n_embd_head_k    = 256
0.00.605.673 I llm_load_print_meta: n_embd_head_v    = 256
0.00.605.679 I llm_load_print_meta: n_gqa            = 8
0.00.605.683 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.605.688 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.605.689 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.605.691 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.605.692 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.605.692 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.605.692 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.605.697 I llm_load_print_meta: n_ff             = 16384
0.00.605.698 I llm_load_print_meta: n_expert         = 0
0.00.605.698 I llm_load_print_meta: n_expert_used    = 0
0.00.605.698 I llm_load_print_meta: causal attn      = 1
0.00.605.699 I llm_load_print_meta: pooling type     = 0
0.00.605.699 I llm_load_print_meta: rope type        = 2
0.00.605.700 I llm_load_print_meta: rope scaling     = linear
0.00.605.701 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.605.702 I llm_load_print_meta: freq_scale_train = 1
0.00.605.702 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.605.713 I llm_load_print_meta: rope_finetuned   = unknown
0.00.605.714 I llm_load_print_meta: ssm_d_conv       = 0
0.00.605.715 I llm_load_print_meta: ssm_d_inner      = 0
0.00.605.715 I llm_load_print_meta: ssm_d_state      = 0
0.00.605.716 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.605.717 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.605.718 I llm_load_print_meta: model type       = 2B
0.00.605.719 I llm_load_print_meta: model ftype      = Q8_0
0.00.605.720 I llm_load_print_meta: model params     = 2.51 B
0.00.605.721 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.605.721 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.605.722 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.605.722 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.605.727 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.605.727 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.605.728 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.605.728 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.605.734 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.605.735 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.605.736 I llm_load_print_meta: max token length = 93
0.00.605.905 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.676.812 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.676.824 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.682.520 I llama_new_context_with_model: n_ctx      = 8192
0.00.682.528 I llama_new_context_with_model: n_batch    = 2048
0.00.682.528 I llama_new_context_with_model: n_ubatch   = 512
0.00.682.529 I llama_new_context_with_model: flash_attn = 0
0.00.682.532 I llama_new_context_with_model: freq_base  = 10000.0
0.00.682.532 I llama_new_context_with_model: freq_scale = 1
0.00.712.033 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.712.079 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.712.193 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.713.569 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.713.574 I llama_new_context_with_model: graph nodes  = 601
0.00.713.575 I llama_new_context_with_model: graph splits = 1
0.00.713.590 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.328.701 I main: llama threadpool init, n_threads = 4
0.01.328.713 I 
0.01.328.826 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.328.826 I 
0.01.329.025 I sampler seed: 192757712
0.01.329.037 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.329.044 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.329.045 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.329.046 I 
 increasities on the internet and in reality.

**Discussion Points:**

* Definition of "digital harassment"
* Examples of digital harassment
* Effects of

0.14.920.245 I llama_perf_sampler_print:    sampling time =      49.09 ms /    33 runs   (    1.49 ms per token,   672.29 tokens per second)
0.14.920.248 I llama_perf_context_print:        load time =    1325.78 ms
0.14.920.250 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.920.251 I llama_perf_context_print:        eval time =   13509.76 ms /    32 runs   (  422.18 ms per token,     2.37 tokens per second)
0.14.920.252 I llama_perf_context_print:       total time =   13591.55 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m10.050s
user	3m50.438s
sys	0m9.367s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3948 (436967d9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198567.12 ms
main:    total time = 198567.12 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.618 I build: 3948 (436967d9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.838 I main: llama backend init
0.00.002.804 I main: load the model and apply lora adapter, if any
0.00.024.663 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.863 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.948 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.959 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.960 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.965 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.969 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.970 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.971 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.973 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.974 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.984 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.985 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.986 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.987 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.988 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.618 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.065 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.159 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.165 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.166 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.167 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.168 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.170 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.171 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.175 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.176 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.177 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.178 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.179 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.187 I llama_model_loader: - type  f32:   37 tensors
0.00.268.191 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.192 I llama_model_loader: - type q6_K:   19 tensors
0.00.466.131 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.511.668 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.513.466 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.518.928 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.530.552 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.531.513 I llm_load_vocab: special tokens cache size = 5
0.00.638.967 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.639.037 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.639.037 I llm_load_print_meta: arch             = gemma
0.00.639.038 I llm_load_print_meta: vocab type       = SPM
0.00.639.039 I llm_load_print_meta: n_vocab          = 256000
0.00.639.041 I llm_load_print_meta: n_merges         = 0
0.00.639.041 I llm_load_print_meta: vocab_only       = 0
0.00.639.042 I llm_load_print_meta: n_ctx_train      = 8192
0.00.639.042 I llm_load_print_meta: n_embd           = 2048
0.00.639.043 I llm_load_print_meta: n_layer          = 18
0.00.639.111 I llm_load_print_meta: n_head           = 8
0.00.639.118 I llm_load_print_meta: n_head_kv        = 1
0.00.639.119 I llm_load_print_meta: n_rot            = 256
0.00.639.119 I llm_load_print_meta: n_swa            = 0
0.00.639.120 I llm_load_print_meta: n_embd_head_k    = 256
0.00.639.120 I llm_load_print_meta: n_embd_head_v    = 256
0.00.639.125 I llm_load_print_meta: n_gqa            = 8
0.00.639.129 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.639.135 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.639.136 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.639.137 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.639.138 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.639.138 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.639.138 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.639.144 I llm_load_print_meta: n_ff             = 16384
0.00.639.144 I llm_load_print_meta: n_expert         = 0
0.00.639.145 I llm_load_print_meta: n_expert_used    = 0
0.00.639.145 I llm_load_print_meta: causal attn      = 1
0.00.639.145 I llm_load_print_meta: pooling type     = 0
0.00.639.146 I llm_load_print_meta: rope type        = 2
0.00.639.146 I llm_load_print_meta: rope scaling     = linear
0.00.639.148 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.639.148 I llm_load_print_meta: freq_scale_train = 1
0.00.639.149 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.639.149 I llm_load_print_meta: rope_finetuned   = unknown
0.00.639.149 I llm_load_print_meta: ssm_d_conv       = 0
0.00.639.149 I llm_load_print_meta: ssm_d_inner      = 0
0.00.639.150 I llm_load_print_meta: ssm_d_state      = 0
0.00.639.150 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.639.150 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.639.152 I llm_load_print_meta: model type       = 2B
0.00.639.153 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.639.154 I llm_load_print_meta: model params     = 2.51 B
0.00.639.155 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.639.155 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.639.166 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.639.166 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.639.167 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.639.186 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.639.188 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.639.188 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.639.194 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.639.199 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.639.200 I llm_load_print_meta: max token length = 93
0.00.639.370 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.700.458 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.700.467 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.700.468 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.700.469 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.700.470 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.700.470 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.706.160 I llama_new_context_with_model: n_ctx      = 8192
0.00.706.167 I llama_new_context_with_model: n_batch    = 2048
0.00.706.167 I llama_new_context_with_model: n_ubatch   = 512
0.00.706.168 I llama_new_context_with_model: flash_attn = 0
0.00.706.170 I llama_new_context_with_model: freq_base  = 10000.0
0.00.706.171 I llama_new_context_with_model: freq_scale = 1
0.00.736.268 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.736.309 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.736.428 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.737.815 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.737.819 I llama_new_context_with_model: graph nodes  = 601
0.00.737.820 I llama_new_context_with_model: graph splits = 1
0.00.737.835 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.319.178 I main: llama threadpool init, n_threads = 4
0.01.319.189 I 
0.01.319.299 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.319.303 I 
0.01.319.472 I sampler seed: 1225721152
0.01.319.482 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.319.488 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.319.489 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.319.490 I 
 seconally.

**Assistant**

I am unable to provide medical advice or make recommendations regarding medical treatment. If you have any questions or concerns about your health

0.12.210.808 I llama_perf_sampler_print:    sampling time =      48.95 ms /    33 runs   (    1.48 ms per token,   674.16 tokens per second)
0.12.210.812 I llama_perf_context_print:        load time =    1316.28 ms
0.12.210.825 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.210.830 I llama_perf_context_print:        eval time =   10809.44 ms /    32 runs   (  337.80 ms per token,     2.96 tokens per second)
0.12.210.831 I llama_perf_context_print:       total time =   10891.64 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3948 (436967d9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198477.82 ms
main:    total time = 198477.82 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.620 I build: 3948 (436967d9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.822 I main: llama backend init
0.00.002.757 I main: load the model and apply lora adapter, if any
0.00.025.287 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.381 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.395 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.399 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.403 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.404 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.405 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.406 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.407 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.408 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.415 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.417 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.418 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.419 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.421 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.675 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.124 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.251 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.257 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.258 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.259 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.260 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.262 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.263 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.267 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.268 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.275 I llama_model_loader: - type  f32:   37 tensors
0.00.269.279 I llama_model_loader: - type q4_K:  108 tensors
0.00.269.279 I llama_model_loader: - type q6_K:   19 tensors
0.00.449.928 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.494.174 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.496.009 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.501.481 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.513.600 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.514.591 I llm_load_vocab: special tokens cache size = 5
0.00.610.657 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.610.726 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.610.730 I llm_load_print_meta: arch             = gemma
0.00.610.730 I llm_load_print_meta: vocab type       = SPM
0.00.610.731 I llm_load_print_meta: n_vocab          = 256000
0.00.610.734 I llm_load_print_meta: n_merges         = 0
0.00.610.734 I llm_load_print_meta: vocab_only       = 0
0.00.610.735 I llm_load_print_meta: n_ctx_train      = 8192
0.00.610.735 I llm_load_print_meta: n_embd           = 2048
0.00.610.735 I llm_load_print_meta: n_layer          = 18
0.00.610.802 I llm_load_print_meta: n_head           = 8
0.00.610.812 I llm_load_print_meta: n_head_kv        = 1
0.00.610.813 I llm_load_print_meta: n_rot            = 256
0.00.610.814 I llm_load_print_meta: n_swa            = 0
0.00.610.814 I llm_load_print_meta: n_embd_head_k    = 256
0.00.610.814 I llm_load_print_meta: n_embd_head_v    = 256
0.00.610.820 I llm_load_print_meta: n_gqa            = 8
0.00.610.825 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.610.830 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.610.843 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.610.844 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.610.845 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.610.845 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.610.846 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.610.853 I llm_load_print_meta: n_ff             = 16384
0.00.610.853 I llm_load_print_meta: n_expert         = 0
0.00.610.854 I llm_load_print_meta: n_expert_used    = 0
0.00.610.854 I llm_load_print_meta: causal attn      = 1
0.00.610.854 I llm_load_print_meta: pooling type     = 0
0.00.610.855 I llm_load_print_meta: rope type        = 2
0.00.610.855 I llm_load_print_meta: rope scaling     = linear
0.00.610.857 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.610.858 I llm_load_print_meta: freq_scale_train = 1
0.00.610.859 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.610.860 I llm_load_print_meta: rope_finetuned   = unknown
0.00.610.860 I llm_load_print_meta: ssm_d_conv       = 0
0.00.610.863 I llm_load_print_meta: ssm_d_inner      = 0
0.00.610.863 I llm_load_print_meta: ssm_d_state      = 0
0.00.610.864 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.610.864 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.610.864 I llm_load_print_meta: model type       = 2B
0.00.610.865 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.610.866 I llm_load_print_meta: model params     = 2.51 B
0.00.610.867 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.610.867 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.610.868 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.610.868 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.610.877 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.610.878 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.610.878 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.610.879 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.610.886 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.610.887 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.610.888 I llm_load_print_meta: max token length = 93
0.00.611.059 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.668.854 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.674.379 I llama_new_context_with_model: n_ctx      = 8192
0.00.674.387 I llama_new_context_with_model: n_batch    = 2048
0.00.674.388 I llama_new_context_with_model: n_ubatch   = 512
0.00.674.388 I llama_new_context_with_model: flash_attn = 0
0.00.674.390 I llama_new_context_with_model: freq_base  = 10000.0
0.00.674.391 I llama_new_context_with_model: freq_scale = 1
0.00.703.519 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.703.566 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.703.681 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.705.038 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.705.044 I llama_new_context_with_model: graph nodes  = 601
0.00.705.044 I llama_new_context_with_model: graph splits = 1
0.00.705.058 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.284.419 I main: llama threadpool init, n_threads = 4
0.01.284.431 I 
0.01.284.539 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.284.544 I 
0.01.284.714 I sampler seed: 1199584557
0.01.284.725 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.284.730 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.284.731 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.284.732 I 
 maneutruing of the following statements:

1. The company's financial statements are not complete because they do not include the most recent quarterly report.


0.12.316.917 I llama_perf_sampler_print:    sampling time =      49.20 ms /    33 runs   (    1.49 ms per token,   670.75 tokens per second)
0.12.316.920 I llama_perf_context_print:        load time =    1281.55 ms
0.12.316.921 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.316.923 I llama_perf_context_print:        eval time =   10949.94 ms /    32 runs   (  342.19 ms per token,     2.92 tokens per second)
0.12.316.924 I llama_perf_context_print:       total time =   11032.51 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m4.450s
user	50m6.516s
sys	0m6.291s
