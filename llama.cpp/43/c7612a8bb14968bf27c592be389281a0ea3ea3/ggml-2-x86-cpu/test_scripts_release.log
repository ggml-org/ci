+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.546 I build: 3931 (43c7612a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.897 I main: load the model and apply lora adapter, if any
0.00.022.215 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.262 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.272 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.279 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.280 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.283 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.284 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.284 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.285 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.285 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.286 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.290 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.291 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.292 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.292 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.293 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.298 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.328 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.116 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.122 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.123 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.123 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.124 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.125 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.125 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.127 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.128 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.128 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.129 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.129 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.133 I llama_model_loader: - type  f32:   37 tensors
0.00.131.134 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.548 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.367 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.146 I llm_load_vocab: special tokens cache size = 5
0.00.278.641 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.658 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.658 I llm_load_print_meta: arch             = gemma
0.00.278.659 I llm_load_print_meta: vocab type       = SPM
0.00.278.659 I llm_load_print_meta: n_vocab          = 256000
0.00.278.659 I llm_load_print_meta: n_merges         = 0
0.00.278.660 I llm_load_print_meta: vocab_only       = 0
0.00.278.660 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.661 I llm_load_print_meta: n_embd           = 2048
0.00.278.661 I llm_load_print_meta: n_layer          = 18
0.00.278.672 I llm_load_print_meta: n_head           = 8
0.00.278.672 I llm_load_print_meta: n_head_kv        = 1
0.00.278.673 I llm_load_print_meta: n_rot            = 256
0.00.278.673 I llm_load_print_meta: n_swa            = 0
0.00.278.673 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.674 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.675 I llm_load_print_meta: n_gqa            = 8
0.00.278.676 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.677 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.677 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.679 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.680 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.680 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.681 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.681 I llm_load_print_meta: n_ff             = 16384
0.00.278.682 I llm_load_print_meta: n_expert         = 0
0.00.278.682 I llm_load_print_meta: n_expert_used    = 0
0.00.278.682 I llm_load_print_meta: causal attn      = 1
0.00.278.682 I llm_load_print_meta: pooling type     = 0
0.00.278.683 I llm_load_print_meta: rope type        = 2
0.00.278.683 I llm_load_print_meta: rope scaling     = linear
0.00.278.684 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.685 I llm_load_print_meta: freq_scale_train = 1
0.00.278.685 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.686 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.686 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.686 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.686 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.687 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.687 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.687 I llm_load_print_meta: model type       = 2B
0.00.278.688 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.689 I llm_load_print_meta: model params     = 2.51 B
0.00.278.689 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.690 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.690 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.690 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.691 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.691 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.692 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.692 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.692 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.693 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.693 I llm_load_print_meta: max token length = 93
0.00.278.710 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.379.286 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.379.293 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.379.294 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.379.294 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.379.295 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.379.295 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.384.406 I llama_new_context_with_model: n_ctx      = 8192
0.00.384.412 I llama_new_context_with_model: n_batch    = 2048
0.00.384.413 I llama_new_context_with_model: n_ubatch   = 512
0.00.384.413 I llama_new_context_with_model: flash_attn = 0
0.00.384.415 I llama_new_context_with_model: freq_base  = 10000.0
0.00.384.416 I llama_new_context_with_model: freq_scale = 1
0.00.413.258 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.413.272 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.413.366 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.414.224 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.414.232 I llama_new_context_with_model: graph nodes  = 601
0.00.414.232 I llama_new_context_with_model: graph splits = 1
0.00.414.234 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.505.555 I main: llama threadpool init, n_threads = 4
0.00.505.567 I 
0.00.505.644 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.505.647 I 
0.00.505.682 I sampler seed: 4119013263
0.00.505.692 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.505.694 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.505.695 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.505.695 I 
 increasities:

I. The first sentence is grammatically incorrect and should be rewritten.
II. Rewrite the second sentence to eliminate the archaic expression.



0.02.756.655 I llama_perf_sampler_print:    sampling time =       4.98 ms /    33 runs   (    0.15 ms per token,  6626.51 tokens per second)
0.02.756.657 I llama_perf_context_print:        load time =     503.63 ms
0.02.756.659 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.756.660 I llama_perf_context_print:        eval time =    2233.24 ms /    32 runs   (   69.79 ms per token,    14.33 tokens per second)
0.02.756.661 I llama_perf_context_print:       total time =    2251.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.539 I build: 3931 (43c7612a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.734 I main: llama backend init
0.00.001.820 I main: load the model and apply lora adapter, if any
0.00.021.806 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.819 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.825 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.825 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.828 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.830 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.831 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.832 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.832 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.833 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.837 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.837 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.838 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.839 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.839 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.675 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.830 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.661 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.668 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.668 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.669 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.670 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.670 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.671 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.674 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.674 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.676 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.676 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.677 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.679 I llama_model_loader: - type  f32:   37 tensors
0.00.130.682 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.146 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.114 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.844 I llm_load_vocab: special tokens cache size = 5
0.00.263.033 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.047 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.047 I llm_load_print_meta: arch             = gemma
0.00.263.048 I llm_load_print_meta: vocab type       = SPM
0.00.263.048 I llm_load_print_meta: n_vocab          = 256000
0.00.263.049 I llm_load_print_meta: n_merges         = 0
0.00.263.049 I llm_load_print_meta: vocab_only       = 0
0.00.263.050 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.050 I llm_load_print_meta: n_embd           = 2048
0.00.263.050 I llm_load_print_meta: n_layer          = 18
0.00.263.062 I llm_load_print_meta: n_head           = 8
0.00.263.063 I llm_load_print_meta: n_head_kv        = 1
0.00.263.063 I llm_load_print_meta: n_rot            = 256
0.00.263.063 I llm_load_print_meta: n_swa            = 0
0.00.263.064 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.064 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.065 I llm_load_print_meta: n_gqa            = 8
0.00.263.066 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.067 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.068 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.069 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.070 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.070 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.070 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.071 I llm_load_print_meta: n_ff             = 16384
0.00.263.071 I llm_load_print_meta: n_expert         = 0
0.00.263.072 I llm_load_print_meta: n_expert_used    = 0
0.00.263.072 I llm_load_print_meta: causal attn      = 1
0.00.263.072 I llm_load_print_meta: pooling type     = 0
0.00.263.072 I llm_load_print_meta: rope type        = 2
0.00.263.073 I llm_load_print_meta: rope scaling     = linear
0.00.263.074 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.075 I llm_load_print_meta: freq_scale_train = 1
0.00.263.075 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.075 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.076 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.076 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.077 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.077 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.077 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.078 I llm_load_print_meta: model type       = 2B
0.00.263.078 I llm_load_print_meta: model ftype      = Q8_0
0.00.263.079 I llm_load_print_meta: model params     = 2.51 B
0.00.263.080 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.263.080 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.081 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.081 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.081 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.082 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.082 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.083 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.083 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.083 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.083 I llm_load_print_meta: max token length = 93
0.00.263.101 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.357.188 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.362.338 I llama_new_context_with_model: n_ctx      = 8192
0.00.362.346 I llama_new_context_with_model: n_batch    = 2048
0.00.362.347 I llama_new_context_with_model: n_ubatch   = 512
0.00.362.347 I llama_new_context_with_model: flash_attn = 0
0.00.362.351 I llama_new_context_with_model: freq_base  = 10000.0
0.00.362.352 I llama_new_context_with_model: freq_scale = 1
0.00.392.644 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.392.661 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.392.753 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.393.586 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.393.594 I llama_new_context_with_model: graph nodes  = 601
0.00.393.595 I llama_new_context_with_model: graph splits = 1
0.00.393.596 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.480.224 I main: llama threadpool init, n_threads = 4
0.00.480.236 I 
0.00.480.311 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.480.315 I 
0.00.480.357 I sampler seed: 3514532113
0.00.480.366 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.480.369 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.480.369 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.480.369 I 
 increably, a majestic creature that lurks in the depths of the ocean.

**What is the creature?**

The provided text does not specify what

0.02.641.996 I llama_perf_sampler_print:    sampling time =       4.90 ms /    33 runs   (    0.15 ms per token,  6740.20 tokens per second)
0.02.641.999 I llama_perf_context_print:        load time =     478.38 ms
0.02.642.001 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.642.002 I llama_perf_context_print:        eval time =    2144.12 ms /    32 runs   (   67.00 ms per token,    14.92 tokens per second)
0.02.642.003 I llama_perf_context_print:       total time =    2161.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.542 I build: 3931 (43c7612a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.736 I main: llama backend init
0.00.001.817 I main: load the model and apply lora adapter, if any
0.00.021.737 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.785 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.795 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.800 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.804 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.808 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.809 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.810 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.811 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.811 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.812 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.815 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.816 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.817 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.817 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.818 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.529 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.165 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.990 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.996 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.997 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.998 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.999 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.000 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.001 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.004 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.005 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.006 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.007 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.135.008 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.011 I llama_model_loader: - type  f32:   37 tensors
0.00.135.013 I llama_model_loader: - type q8_0:  127 tensors
0.00.216.372 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.926 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.664 I llm_load_vocab: special tokens cache size = 5
0.00.271.052 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.066 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.066 I llm_load_print_meta: arch             = gemma
0.00.271.067 I llm_load_print_meta: vocab type       = SPM
0.00.271.067 I llm_load_print_meta: n_vocab          = 256000
0.00.271.068 I llm_load_print_meta: n_merges         = 0
0.00.271.068 I llm_load_print_meta: vocab_only       = 0
0.00.271.068 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.069 I llm_load_print_meta: n_embd           = 2048
0.00.271.069 I llm_load_print_meta: n_layer          = 18
0.00.271.080 I llm_load_print_meta: n_head           = 8
0.00.271.081 I llm_load_print_meta: n_head_kv        = 1
0.00.271.081 I llm_load_print_meta: n_rot            = 256
0.00.271.081 I llm_load_print_meta: n_swa            = 0
0.00.271.081 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.082 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.083 I llm_load_print_meta: n_gqa            = 8
0.00.271.084 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.085 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.086 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.087 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.087 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.088 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.088 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.089 I llm_load_print_meta: n_ff             = 16384
0.00.271.089 I llm_load_print_meta: n_expert         = 0
0.00.271.089 I llm_load_print_meta: n_expert_used    = 0
0.00.271.090 I llm_load_print_meta: causal attn      = 1
0.00.271.090 I llm_load_print_meta: pooling type     = 0
0.00.271.090 I llm_load_print_meta: rope type        = 2
0.00.271.091 I llm_load_print_meta: rope scaling     = linear
0.00.271.092 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.093 I llm_load_print_meta: freq_scale_train = 1
0.00.271.093 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.094 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.094 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.094 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.094 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.095 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.095 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.095 I llm_load_print_meta: model type       = 2B
0.00.271.096 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.097 I llm_load_print_meta: model params     = 2.51 B
0.00.271.097 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.098 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.098 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.099 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.099 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.099 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.100 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.100 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.100 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.101 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.101 I llm_load_print_meta: max token length = 93
0.00.271.119 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.348.205 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.348.212 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.348.213 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.348.214 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.348.214 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.348.215 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.353.212 I llama_new_context_with_model: n_ctx      = 8192
0.00.353.218 I llama_new_context_with_model: n_batch    = 2048
0.00.353.218 I llama_new_context_with_model: n_ubatch   = 512
0.00.353.219 I llama_new_context_with_model: flash_attn = 0
0.00.353.221 I llama_new_context_with_model: freq_base  = 10000.0
0.00.353.222 I llama_new_context_with_model: freq_scale = 1
0.00.381.688 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.381.702 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.381.792 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.382.676 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.382.682 I llama_new_context_with_model: graph nodes  = 601
0.00.382.682 I llama_new_context_with_model: graph splits = 1
0.00.382.684 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.465 I main: llama threadpool init, n_threads = 4
0.00.473.477 I 
0.00.473.550 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.553 I 
0.00.473.590 I sampler seed: 3498954260
0.00.473.600 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.604 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.473.605 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.605 I 
 increasels, the company behind the iconic Star Wars films, has been accused of using sweatshops in its manufacturing process.

**Questions:**

1. What

0.02.724.825 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6716.87 tokens per second)
0.02.724.827 I llama_perf_context_print:        load time =     471.62 ms
0.02.724.828 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.724.829 I llama_perf_context_print:        eval time =    2233.53 ms /    32 runs   (   69.80 ms per token,    14.33 tokens per second)
0.02.724.830 I llama_perf_context_print:       total time =    2251.37 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.599 I build: 3931 (43c7612a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.001.870 I main: load the model and apply lora adapter, if any
0.00.022.448 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.496 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.506 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.513 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.517 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.522 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.523 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.524 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.524 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.525 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.525 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.530 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.531 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.531 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.532 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.534 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.995 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.528 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.425 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.431 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.432 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.433 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.434 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.435 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.435 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.437 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.438 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.439 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.439 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.440 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.444 I llama_model_loader: - type  f32:   37 tensors
0.00.132.447 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.284 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.534 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.256 I llm_load_vocab: special tokens cache size = 5
0.00.265.639 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.654 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.654 I llm_load_print_meta: arch             = gemma
0.00.265.655 I llm_load_print_meta: vocab type       = SPM
0.00.265.656 I llm_load_print_meta: n_vocab          = 256000
0.00.265.656 I llm_load_print_meta: n_merges         = 0
0.00.265.657 I llm_load_print_meta: vocab_only       = 0
0.00.265.657 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.657 I llm_load_print_meta: n_embd           = 2048
0.00.265.657 I llm_load_print_meta: n_layer          = 18
0.00.265.670 I llm_load_print_meta: n_head           = 8
0.00.265.671 I llm_load_print_meta: n_head_kv        = 1
0.00.265.671 I llm_load_print_meta: n_rot            = 256
0.00.265.672 I llm_load_print_meta: n_swa            = 0
0.00.265.672 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.672 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.673 I llm_load_print_meta: n_gqa            = 8
0.00.265.674 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.675 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.676 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.677 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.677 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.678 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.678 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.679 I llm_load_print_meta: n_ff             = 16384
0.00.265.679 I llm_load_print_meta: n_expert         = 0
0.00.265.679 I llm_load_print_meta: n_expert_used    = 0
0.00.265.680 I llm_load_print_meta: causal attn      = 1
0.00.265.680 I llm_load_print_meta: pooling type     = 0
0.00.265.680 I llm_load_print_meta: rope type        = 2
0.00.265.681 I llm_load_print_meta: rope scaling     = linear
0.00.265.682 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.683 I llm_load_print_meta: freq_scale_train = 1
0.00.265.683 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.684 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.684 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.684 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.684 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.685 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.685 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.685 I llm_load_print_meta: model type       = 2B
0.00.265.686 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.687 I llm_load_print_meta: model params     = 2.51 B
0.00.265.688 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.688 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.689 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.689 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.689 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.690 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.690 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.690 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.691 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.691 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.692 I llm_load_print_meta: max token length = 93
0.00.265.711 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.970 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.335.977 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.340.909 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.914 I llama_new_context_with_model: n_batch    = 2048
0.00.340.915 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.916 I llama_new_context_with_model: flash_attn = 0
0.00.340.918 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.919 I llama_new_context_with_model: freq_scale = 1
0.00.369.370 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.385 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.475 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.328 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.336 I llama_new_context_with_model: graph nodes  = 601
0.00.370.336 I llama_new_context_with_model: graph splits = 1
0.00.370.338 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.257 I main: llama threadpool init, n_threads = 4
0.00.465.271 I 
0.00.465.349 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.353 I 
0.00.465.389 I sampler seed: 318870383
0.00.465.398 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.400 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.465.401 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.401 I 
 increably.

I'm so confused. There are so many different types of antidepressants, and it's hard to know which one is right for me

0.02.850.335 I llama_perf_sampler_print:    sampling time =       4.86 ms /    33 runs   (    0.15 ms per token,  6787.33 tokens per second)
0.02.850.338 I llama_perf_context_print:        load time =     463.36 ms
0.02.850.339 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.850.342 I llama_perf_context_print:        eval time =    2367.37 ms /    32 runs   (   73.98 ms per token,    13.52 tokens per second)
0.02.850.343 I llama_perf_context_print:       total time =    2385.09 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.309s
user	0m39.066s
sys	0m9.307s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3931 (43c7612a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32040.26 ms
main:    total time = 32040.26 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.625 I build: 3931 (43c7612a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.884 I main: llama backend init
0.00.002.367 I main: load the model and apply lora adapter, if any
0.00.022.633 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.681 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.692 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.700 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.701 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.707 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.708 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.709 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.710 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.710 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.711 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.715 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.715 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.716 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.716 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.717 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.486 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.527 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.317 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.324 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.324 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.325 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.325 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.327 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.327 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.329 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.330 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.330 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.331 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.136.332 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.335 I llama_model_loader: - type  f32:   37 tensors
0.00.136.338 I llama_model_loader: - type q4_K:  108 tensors
0.00.136.338 I llama_model_loader: - type q6_K:   19 tensors
0.00.229.525 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.272.194 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.997 I llm_load_vocab: special tokens cache size = 5
0.00.293.691 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.293.708 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.293.709 I llm_load_print_meta: arch             = gemma
0.00.293.709 I llm_load_print_meta: vocab type       = SPM
0.00.293.710 I llm_load_print_meta: n_vocab          = 256000
0.00.293.710 I llm_load_print_meta: n_merges         = 0
0.00.293.710 I llm_load_print_meta: vocab_only       = 0
0.00.293.711 I llm_load_print_meta: n_ctx_train      = 8192
0.00.293.711 I llm_load_print_meta: n_embd           = 2048
0.00.293.712 I llm_load_print_meta: n_layer          = 18
0.00.293.723 I llm_load_print_meta: n_head           = 8
0.00.293.724 I llm_load_print_meta: n_head_kv        = 1
0.00.293.724 I llm_load_print_meta: n_rot            = 256
0.00.293.725 I llm_load_print_meta: n_swa            = 0
0.00.293.725 I llm_load_print_meta: n_embd_head_k    = 256
0.00.293.725 I llm_load_print_meta: n_embd_head_v    = 256
0.00.293.726 I llm_load_print_meta: n_gqa            = 8
0.00.293.727 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.293.728 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.293.729 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.293.731 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.293.731 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.293.731 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.293.732 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.293.732 I llm_load_print_meta: n_ff             = 16384
0.00.293.733 I llm_load_print_meta: n_expert         = 0
0.00.293.733 I llm_load_print_meta: n_expert_used    = 0
0.00.293.733 I llm_load_print_meta: causal attn      = 1
0.00.293.733 I llm_load_print_meta: pooling type     = 0
0.00.293.734 I llm_load_print_meta: rope type        = 2
0.00.293.734 I llm_load_print_meta: rope scaling     = linear
0.00.293.736 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.293.737 I llm_load_print_meta: freq_scale_train = 1
0.00.293.737 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.293.737 I llm_load_print_meta: rope_finetuned   = unknown
0.00.293.738 I llm_load_print_meta: ssm_d_conv       = 0
0.00.293.738 I llm_load_print_meta: ssm_d_inner      = 0
0.00.293.738 I llm_load_print_meta: ssm_d_state      = 0
0.00.293.738 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.293.738 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.293.739 I llm_load_print_meta: model type       = 2B
0.00.293.739 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.293.740 I llm_load_print_meta: model params     = 2.51 B
0.00.293.741 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.293.741 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.293.742 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.293.742 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.293.743 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.293.743 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.293.743 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.293.743 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.293.744 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.293.744 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.293.744 I llm_load_print_meta: max token length = 93
0.00.293.765 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.357.026 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.357.033 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.357.034 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.357.034 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.357.035 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.357.036 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.362.062 I llama_new_context_with_model: n_ctx      = 8192
0.00.362.068 I llama_new_context_with_model: n_batch    = 2048
0.00.362.068 I llama_new_context_with_model: n_ubatch   = 512
0.00.362.069 I llama_new_context_with_model: flash_attn = 0
0.00.362.071 I llama_new_context_with_model: freq_base  = 10000.0
0.00.362.072 I llama_new_context_with_model: freq_scale = 1
0.00.391.081 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.391.098 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.391.209 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.392.298 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.392.307 I llama_new_context_with_model: graph nodes  = 601
0.00.392.308 I llama_new_context_with_model: graph splits = 1
0.00.392.311 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.474.406 I main: llama threadpool init, n_threads = 4
0.00.474.418 I 
0.00.474.505 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.474.509 I 
0.00.474.543 I sampler seed: 478271687
0.00.474.552 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.474.554 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.474.555 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.474.555 I 
 increasities. [end of text]


0.00.678.584 I llama_perf_sampler_print:    sampling time =       0.65 ms /     5 runs   (    0.13 ms per token,  7704.16 tokens per second)
0.00.678.586 I llama_perf_context_print:        load time =     472.01 ms
0.00.678.587 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.678.588 I llama_perf_context_print:        eval time =     200.77 ms /     4 runs   (   50.19 ms per token,    19.92 tokens per second)
0.00.678.589 I llama_perf_context_print:       total time =     204.19 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3931 (43c7612a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32067.60 ms
main:    total time = 32067.60 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.533 I build: 3931 (43c7612a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.725 I main: llama backend init
0.00.001.823 I main: load the model and apply lora adapter, if any
0.00.021.970 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.982 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.989 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.990 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.993 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.994 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.994 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.995 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.995 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.996 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.999 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.000 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.000 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.001 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.001 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.454 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.735 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.661 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.667 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.668 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.669 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.669 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.670 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.671 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.674 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.674 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.677 I llama_model_loader: - type  f32:   37 tensors
0.00.131.679 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.680 I llama_model_loader: - type q6_K:   19 tensors
0.00.211.960 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.973 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.728 I llm_load_vocab: special tokens cache size = 5
0.00.267.395 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.410 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.411 I llm_load_print_meta: arch             = gemma
0.00.267.411 I llm_load_print_meta: vocab type       = SPM
0.00.267.412 I llm_load_print_meta: n_vocab          = 256000
0.00.267.412 I llm_load_print_meta: n_merges         = 0
0.00.267.412 I llm_load_print_meta: vocab_only       = 0
0.00.267.413 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.413 I llm_load_print_meta: n_embd           = 2048
0.00.267.413 I llm_load_print_meta: n_layer          = 18
0.00.267.425 I llm_load_print_meta: n_head           = 8
0.00.267.427 I llm_load_print_meta: n_head_kv        = 1
0.00.267.427 I llm_load_print_meta: n_rot            = 256
0.00.267.427 I llm_load_print_meta: n_swa            = 0
0.00.267.427 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.428 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.429 I llm_load_print_meta: n_gqa            = 8
0.00.267.430 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.431 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.432 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.434 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.434 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.434 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.435 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.436 I llm_load_print_meta: n_ff             = 16384
0.00.267.436 I llm_load_print_meta: n_expert         = 0
0.00.267.436 I llm_load_print_meta: n_expert_used    = 0
0.00.267.436 I llm_load_print_meta: causal attn      = 1
0.00.267.437 I llm_load_print_meta: pooling type     = 0
0.00.267.437 I llm_load_print_meta: rope type        = 2
0.00.267.437 I llm_load_print_meta: rope scaling     = linear
0.00.267.439 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.439 I llm_load_print_meta: freq_scale_train = 1
0.00.267.441 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.441 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.442 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.442 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.442 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.442 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.443 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.444 I llm_load_print_meta: model type       = 2B
0.00.267.444 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.267.445 I llm_load_print_meta: model params     = 2.51 B
0.00.267.446 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.267.446 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.446 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.447 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.447 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.448 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.449 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.449 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.450 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.451 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.451 I llm_load_print_meta: max token length = 93
0.00.267.469 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.090 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.332.075 I llama_new_context_with_model: n_ctx      = 8192
0.00.332.080 I llama_new_context_with_model: n_batch    = 2048
0.00.332.081 I llama_new_context_with_model: n_ubatch   = 512
0.00.332.081 I llama_new_context_with_model: flash_attn = 0
0.00.332.083 I llama_new_context_with_model: freq_base  = 10000.0
0.00.332.084 I llama_new_context_with_model: freq_scale = 1
0.00.362.115 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.362.129 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.362.221 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.059 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.363.067 I llama_new_context_with_model: graph nodes  = 601
0.00.363.068 I llama_new_context_with_model: graph splits = 1
0.00.363.070 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.002 I main: llama threadpool init, n_threads = 4
0.00.445.014 I 
0.00.445.091 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.094 I 
0.00.445.131 I sampler seed: 2034663830
0.00.445.140 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.143 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.144 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.145 I 
 maneuvously. I await your thoughts on my proposal.

I am writing to you today to express my keen interest in your services as a [consultant

0.02.045.402 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6941.52 tokens per second)
0.02.045.405 I llama_perf_context_print:        load time =     443.16 ms
0.02.045.407 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.045.408 I llama_perf_context_print:        eval time =    1582.97 ms /    32 runs   (   49.47 ms per token,    20.22 tokens per second)
0.02.045.409 I llama_perf_context_print:       total time =    1600.41 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m9.600s
user	8m9.126s
sys	0m6.744s
