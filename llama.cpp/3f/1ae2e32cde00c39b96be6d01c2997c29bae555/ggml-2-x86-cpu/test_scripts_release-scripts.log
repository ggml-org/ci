+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.543 I build: 3862 (3f1ae2e3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.872 I main: load the model and apply lora adapter, if any
0.00.022.227 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.277 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.288 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.295 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.298 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.302 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.303 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.304 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.305 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.305 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.305 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.310 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.311 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.311 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.312 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.313 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.018 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.834 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.729 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.738 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.738 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.739 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.740 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.741 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.742 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.744 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.745 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.746 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.747 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.748 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.751 I llama_model_loader: - type  f32:   37 tensors
0.00.133.754 I llama_model_loader: - type q8_0:  127 tensors
0.00.192.595 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.526 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.209.355 I llm_load_vocab: special tokens cache size = 5
0.00.230.711 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.727 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.727 I llm_load_print_meta: arch             = gemma
0.00.230.728 I llm_load_print_meta: vocab type       = SPM
0.00.230.728 I llm_load_print_meta: n_vocab          = 256000
0.00.230.729 I llm_load_print_meta: n_merges         = 0
0.00.230.729 I llm_load_print_meta: vocab_only       = 0
0.00.230.730 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.730 I llm_load_print_meta: n_embd           = 2048
0.00.230.730 I llm_load_print_meta: n_layer          = 18
0.00.230.745 I llm_load_print_meta: n_head           = 8
0.00.230.746 I llm_load_print_meta: n_head_kv        = 1
0.00.230.746 I llm_load_print_meta: n_rot            = 256
0.00.230.746 I llm_load_print_meta: n_swa            = 0
0.00.230.746 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.746 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.747 I llm_load_print_meta: n_gqa            = 8
0.00.230.748 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.749 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.750 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.751 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.752 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.752 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.753 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.754 I llm_load_print_meta: n_ff             = 16384
0.00.230.754 I llm_load_print_meta: n_expert         = 0
0.00.230.754 I llm_load_print_meta: n_expert_used    = 0
0.00.230.754 I llm_load_print_meta: causal attn      = 1
0.00.230.754 I llm_load_print_meta: pooling type     = 0
0.00.230.755 I llm_load_print_meta: rope type        = 2
0.00.230.755 I llm_load_print_meta: rope scaling     = linear
0.00.230.757 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.757 I llm_load_print_meta: freq_scale_train = 1
0.00.230.758 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.758 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.758 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.759 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.759 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.759 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.760 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.760 I llm_load_print_meta: model type       = 2B
0.00.230.761 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.761 I llm_load_print_meta: model params     = 2.51 B
0.00.230.762 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.762 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.763 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.763 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.763 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.764 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.764 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.765 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.765 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.766 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.766 I llm_load_print_meta: max token length = 93
0.00.230.794 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.845 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.329.854 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.329.854 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.329.855 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.329.856 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.329.856 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.335.194 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.203 I llama_new_context_with_model: n_batch    = 2048
0.00.335.203 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.204 I llama_new_context_with_model: flash_attn = 0
0.00.335.208 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.209 I llama_new_context_with_model: freq_scale = 1
0.00.365.563 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.365.580 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.365.672 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.366.523 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.366.531 I llama_new_context_with_model: graph nodes  = 601
0.00.366.532 I llama_new_context_with_model: graph splits = 1
0.00.366.534 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.105 I main: llama threadpool init, n_threads = 4
0.00.460.119 I 
0.00.460.196 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.199 I 
0.00.460.242 I sampler seed: 2734960856
0.00.460.252 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.255 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.255 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.255 I 
 increasities.
I cannot answer this question as it contains sexually suggestive content. [end of text]


0.01.676.992 I llama_perf_sampler_print:    sampling time =       2.62 ms /    18 runs   (    0.15 ms per token,  6864.99 tokens per second)
0.01.676.995 I llama_perf_context_print:        load time =     458.22 ms
0.01.676.996 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.676.997 I llama_perf_context_print:        eval time =    1206.61 ms /    17 runs   (   70.98 ms per token,    14.09 tokens per second)
0.01.676.998 I llama_perf_context_print:       total time =    1216.90 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.561 I build: 3862 (3f1ae2e3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.841 I main: load the model and apply lora adapter, if any
0.00.021.961 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.976 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.984 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.985 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.989 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.990 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.991 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.992 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.993 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.994 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.998 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.999 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.999 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.000 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.000 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.875 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.798 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.689 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.696 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.697 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.697 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.698 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.699 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.700 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.702 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.703 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.703 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.704 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.706 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.708 I llama_model_loader: - type  f32:   37 tensors
0.00.133.712 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.929 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.230.794 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.231.612 I llm_load_vocab: special tokens cache size = 5
0.00.253.064 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.253.079 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.253.080 I llm_load_print_meta: arch             = gemma
0.00.253.081 I llm_load_print_meta: vocab type       = SPM
0.00.253.082 I llm_load_print_meta: n_vocab          = 256000
0.00.253.082 I llm_load_print_meta: n_merges         = 0
0.00.253.082 I llm_load_print_meta: vocab_only       = 0
0.00.253.083 I llm_load_print_meta: n_ctx_train      = 8192
0.00.253.083 I llm_load_print_meta: n_embd           = 2048
0.00.253.083 I llm_load_print_meta: n_layer          = 18
0.00.253.098 I llm_load_print_meta: n_head           = 8
0.00.253.099 I llm_load_print_meta: n_head_kv        = 1
0.00.253.099 I llm_load_print_meta: n_rot            = 256
0.00.253.100 I llm_load_print_meta: n_swa            = 0
0.00.253.100 I llm_load_print_meta: n_embd_head_k    = 256
0.00.253.100 I llm_load_print_meta: n_embd_head_v    = 256
0.00.253.101 I llm_load_print_meta: n_gqa            = 8
0.00.253.102 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.253.103 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.253.103 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.253.105 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.253.106 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.253.106 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.253.106 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.253.107 I llm_load_print_meta: n_ff             = 16384
0.00.253.107 I llm_load_print_meta: n_expert         = 0
0.00.253.108 I llm_load_print_meta: n_expert_used    = 0
0.00.253.108 I llm_load_print_meta: causal attn      = 1
0.00.253.108 I llm_load_print_meta: pooling type     = 0
0.00.253.108 I llm_load_print_meta: rope type        = 2
0.00.253.109 I llm_load_print_meta: rope scaling     = linear
0.00.253.110 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.253.111 I llm_load_print_meta: freq_scale_train = 1
0.00.253.111 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.253.111 I llm_load_print_meta: rope_finetuned   = unknown
0.00.253.112 I llm_load_print_meta: ssm_d_conv       = 0
0.00.253.112 I llm_load_print_meta: ssm_d_inner      = 0
0.00.253.112 I llm_load_print_meta: ssm_d_state      = 0
0.00.253.112 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.253.113 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.253.113 I llm_load_print_meta: model type       = 2B
0.00.253.114 I llm_load_print_meta: model ftype      = Q8_0
0.00.253.115 I llm_load_print_meta: model params     = 2.51 B
0.00.253.115 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.253.116 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.253.116 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.253.116 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.253.117 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.253.117 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.253.118 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.253.118 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.253.119 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.253.119 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.253.119 I llm_load_print_meta: max token length = 93
0.00.253.138 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.347.079 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.352.200 I llama_new_context_with_model: n_ctx      = 8192
0.00.352.205 I llama_new_context_with_model: n_batch    = 2048
0.00.352.205 I llama_new_context_with_model: n_ubatch   = 512
0.00.352.206 I llama_new_context_with_model: flash_attn = 0
0.00.352.209 I llama_new_context_with_model: freq_base  = 10000.0
0.00.352.210 I llama_new_context_with_model: freq_scale = 1
0.00.382.253 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.382.268 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.382.359 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.256 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.383.262 I llama_new_context_with_model: graph nodes  = 601
0.00.383.263 I llama_new_context_with_model: graph splits = 1
0.00.383.264 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.576 I main: llama threadpool init, n_threads = 4
0.00.472.589 I 
0.00.472.659 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.663 I 
0.00.472.699 I sampler seed: 3021492026
0.00.472.710 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.472.713 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.472.713 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.472.713 I 
 seconary.

**Instructions:** Label the following terms as either positive or negative.

1. Growth
2. Investment
3. Inflation
4.

0.02.674.563 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6839.38 tokens per second)
0.02.674.566 I llama_perf_context_print:        load time =     470.72 ms
0.02.674.567 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.674.569 I llama_perf_context_print:        eval time =    2183.70 ms /    32 runs   (   68.24 ms per token,    14.65 tokens per second)
0.02.674.569 I llama_perf_context_print:       total time =    2202.00 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.639 I build: 3862 (3f1ae2e3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.862 I main: llama backend init
0.00.001.954 I main: load the model and apply lora adapter, if any
0.00.025.491 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.559 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.574 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.581 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.586 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.591 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.592 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.593 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.595 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.596 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.598 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.604 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.606 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.607 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.608 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.609 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.701 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.139.144 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.146.044 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.146.052 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.146.053 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.146.054 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.146.055 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.146.056 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.146.057 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.146.060 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.146.061 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.146.062 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.146.063 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.146.064 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.146.068 I llama_model_loader: - type  f32:   37 tensors
0.00.146.072 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.880 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.227.254 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.228.047 I llm_load_vocab: special tokens cache size = 5
0.00.249.194 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.249.209 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.249.210 I llm_load_print_meta: arch             = gemma
0.00.249.210 I llm_load_print_meta: vocab type       = SPM
0.00.249.211 I llm_load_print_meta: n_vocab          = 256000
0.00.249.212 I llm_load_print_meta: n_merges         = 0
0.00.249.212 I llm_load_print_meta: vocab_only       = 0
0.00.249.212 I llm_load_print_meta: n_ctx_train      = 8192
0.00.249.213 I llm_load_print_meta: n_embd           = 2048
0.00.249.213 I llm_load_print_meta: n_layer          = 18
0.00.249.225 I llm_load_print_meta: n_head           = 8
0.00.249.226 I llm_load_print_meta: n_head_kv        = 1
0.00.249.227 I llm_load_print_meta: n_rot            = 256
0.00.249.227 I llm_load_print_meta: n_swa            = 0
0.00.249.227 I llm_load_print_meta: n_embd_head_k    = 256
0.00.249.227 I llm_load_print_meta: n_embd_head_v    = 256
0.00.249.228 I llm_load_print_meta: n_gqa            = 8
0.00.249.229 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.249.230 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.249.231 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.249.232 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.249.233 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.249.233 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.249.233 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.249.234 I llm_load_print_meta: n_ff             = 16384
0.00.249.235 I llm_load_print_meta: n_expert         = 0
0.00.249.235 I llm_load_print_meta: n_expert_used    = 0
0.00.249.235 I llm_load_print_meta: causal attn      = 1
0.00.249.235 I llm_load_print_meta: pooling type     = 0
0.00.249.235 I llm_load_print_meta: rope type        = 2
0.00.249.236 I llm_load_print_meta: rope scaling     = linear
0.00.249.237 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.249.238 I llm_load_print_meta: freq_scale_train = 1
0.00.249.238 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.249.238 I llm_load_print_meta: rope_finetuned   = unknown
0.00.249.239 I llm_load_print_meta: ssm_d_conv       = 0
0.00.249.239 I llm_load_print_meta: ssm_d_inner      = 0
0.00.249.239 I llm_load_print_meta: ssm_d_state      = 0
0.00.249.240 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.249.240 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.249.241 I llm_load_print_meta: model type       = 2B
0.00.249.241 I llm_load_print_meta: model ftype      = Q8_0
0.00.249.242 I llm_load_print_meta: model params     = 2.51 B
0.00.249.243 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.249.243 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.249.244 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.249.244 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.249.245 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.249.245 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.249.245 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.249.246 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.249.246 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.249.247 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.249.247 I llm_load_print_meta: max token length = 93
0.00.249.265 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.331.045 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.331.051 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.331.052 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.331.053 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.331.053 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.331.054 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.336.298 I llama_new_context_with_model: n_ctx      = 8192
0.00.336.305 I llama_new_context_with_model: n_batch    = 2048
0.00.336.305 I llama_new_context_with_model: n_ubatch   = 512
0.00.336.306 I llama_new_context_with_model: flash_attn = 0
0.00.336.309 I llama_new_context_with_model: freq_base  = 10000.0
0.00.336.310 I llama_new_context_with_model: freq_scale = 1
0.00.366.991 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.367.005 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.367.096 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.367.943 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.367.952 I llama_new_context_with_model: graph nodes  = 601
0.00.367.952 I llama_new_context_with_model: graph splits = 1
0.00.367.954 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.602 I main: llama threadpool init, n_threads = 4
0.00.463.615 I 
0.00.463.691 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.695 I 
0.00.463.734 I sampler seed: 686977850
0.00.463.744 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.747 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.463.747 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.747 I 
 increasities, the first of which occurred in the summer of 2022.

I. What was the first occurrence of increasities?

II

0.02.798.728 I llama_perf_sampler_print:    sampling time =       4.69 ms /    33 runs   (    0.14 ms per token,  7034.75 tokens per second)
0.02.798.730 I llama_perf_context_print:        load time =     461.63 ms
0.02.798.731 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.798.733 I llama_perf_context_print:        eval time =    2316.94 ms /    32 runs   (   72.40 ms per token,    13.81 tokens per second)
0.02.798.734 I llama_perf_context_print:       total time =    2335.14 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.575 I build: 3862 (3f1ae2e3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.001.886 I main: load the model and apply lora adapter, if any
0.00.022.051 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.098 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.106 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.111 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.112 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.115 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.116 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.116 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.117 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.117 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.118 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.122 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.123 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.124 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.125 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.125 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.449 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.085 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.966 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.973 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.974 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.975 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.976 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.977 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.978 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.981 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.982 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.983 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.983 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.135.984 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.989 I llama_model_loader: - type  f32:   37 tensors
0.00.135.992 I llama_model_loader: - type q8_0:  127 tensors
0.00.195.161 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.856 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.647 I llm_load_vocab: special tokens cache size = 5
0.00.235.037 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.051 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.052 I llm_load_print_meta: arch             = gemma
0.00.235.052 I llm_load_print_meta: vocab type       = SPM
0.00.235.053 I llm_load_print_meta: n_vocab          = 256000
0.00.235.054 I llm_load_print_meta: n_merges         = 0
0.00.235.054 I llm_load_print_meta: vocab_only       = 0
0.00.235.054 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.055 I llm_load_print_meta: n_embd           = 2048
0.00.235.055 I llm_load_print_meta: n_layer          = 18
0.00.235.068 I llm_load_print_meta: n_head           = 8
0.00.235.069 I llm_load_print_meta: n_head_kv        = 1
0.00.235.071 I llm_load_print_meta: n_rot            = 256
0.00.235.071 I llm_load_print_meta: n_swa            = 0
0.00.235.072 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.072 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.074 I llm_load_print_meta: n_gqa            = 8
0.00.235.075 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.076 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.077 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.081 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.081 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.082 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.082 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.083 I llm_load_print_meta: n_ff             = 16384
0.00.235.083 I llm_load_print_meta: n_expert         = 0
0.00.235.084 I llm_load_print_meta: n_expert_used    = 0
0.00.235.084 I llm_load_print_meta: causal attn      = 1
0.00.235.084 I llm_load_print_meta: pooling type     = 0
0.00.235.084 I llm_load_print_meta: rope type        = 2
0.00.235.085 I llm_load_print_meta: rope scaling     = linear
0.00.235.087 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.087 I llm_load_print_meta: freq_scale_train = 1
0.00.235.088 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.088 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.089 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.092 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.092 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.092 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.092 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.093 I llm_load_print_meta: model type       = 2B
0.00.235.094 I llm_load_print_meta: model ftype      = Q8_0
0.00.235.094 I llm_load_print_meta: model params     = 2.51 B
0.00.235.095 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.235.095 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.096 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.096 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.096 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.097 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.097 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.098 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.099 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.099 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.100 I llm_load_print_meta: max token length = 93
0.00.235.122 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.309.022 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.309.029 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.314.009 I llama_new_context_with_model: n_ctx      = 8192
0.00.314.015 I llama_new_context_with_model: n_batch    = 2048
0.00.314.016 I llama_new_context_with_model: n_ubatch   = 512
0.00.314.016 I llama_new_context_with_model: flash_attn = 0
0.00.314.019 I llama_new_context_with_model: freq_base  = 10000.0
0.00.314.020 I llama_new_context_with_model: freq_scale = 1
0.00.343.812 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.343.828 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.343.918 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.344.801 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.344.808 I llama_new_context_with_model: graph nodes  = 601
0.00.344.808 I llama_new_context_with_model: graph splits = 1
0.00.344.810 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.439.925 I main: llama threadpool init, n_threads = 4
0.00.439.937 I 
0.00.440.012 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.015 I 
0.00.440.052 I sampler seed: 370190141
0.00.440.061 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.064 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.064 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.065 I 
 increasities, and other forms of inappropriate behavior can occur within virtual spaces. 

**To protect users and maintain a safe virtual environment, it is crucial to

0.02.908.475 I llama_perf_sampler_print:    sampling time =       5.48 ms /    33 runs   (    0.17 ms per token,  6018.60 tokens per second)
0.02.908.477 I llama_perf_context_print:        load time =     438.02 ms
0.02.908.478 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.908.480 I llama_perf_context_print:        eval time =    2448.14 ms /    32 runs   (   76.50 ms per token,    13.07 tokens per second)
0.02.908.480 I llama_perf_context_print:       total time =    2468.56 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.813s
user	0m35.785s
sys	0m9.625s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3862 (3f1ae2e3)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32080.84 ms
main:    total time = 32080.84 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.534 I build: 3862 (3f1ae2e3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.727 I main: llama backend init
0.00.001.868 I main: load the model and apply lora adapter, if any
0.00.022.322 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.378 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.386 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.391 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.392 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.396 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.397 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.397 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.398 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.399 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.399 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.402 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.403 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.403 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.404 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.405 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.744 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.232 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.179 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.184 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.185 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.185 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.186 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.187 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.188 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.191 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.191 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.192 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.192 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.193 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.196 I llama_model_loader: - type  f32:   37 tensors
0.00.133.199 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.200 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.800 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.299 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.204.008 I llm_load_vocab: special tokens cache size = 5
0.00.225.218 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.233 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.233 I llm_load_print_meta: arch             = gemma
0.00.225.234 I llm_load_print_meta: vocab type       = SPM
0.00.225.234 I llm_load_print_meta: n_vocab          = 256000
0.00.225.235 I llm_load_print_meta: n_merges         = 0
0.00.225.235 I llm_load_print_meta: vocab_only       = 0
0.00.225.236 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.236 I llm_load_print_meta: n_embd           = 2048
0.00.225.236 I llm_load_print_meta: n_layer          = 18
0.00.225.251 I llm_load_print_meta: n_head           = 8
0.00.225.252 I llm_load_print_meta: n_head_kv        = 1
0.00.225.252 I llm_load_print_meta: n_rot            = 256
0.00.225.252 I llm_load_print_meta: n_swa            = 0
0.00.225.252 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.253 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.254 I llm_load_print_meta: n_gqa            = 8
0.00.225.255 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.257 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.257 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.258 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.259 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.259 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.259 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.260 I llm_load_print_meta: n_ff             = 16384
0.00.225.260 I llm_load_print_meta: n_expert         = 0
0.00.225.261 I llm_load_print_meta: n_expert_used    = 0
0.00.225.261 I llm_load_print_meta: causal attn      = 1
0.00.225.261 I llm_load_print_meta: pooling type     = 0
0.00.225.261 I llm_load_print_meta: rope type        = 2
0.00.225.262 I llm_load_print_meta: rope scaling     = linear
0.00.225.263 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.264 I llm_load_print_meta: freq_scale_train = 1
0.00.225.264 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.265 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.265 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.265 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.266 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.266 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.266 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.267 I llm_load_print_meta: model type       = 2B
0.00.225.267 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.225.268 I llm_load_print_meta: model params     = 2.51 B
0.00.225.268 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.225.269 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.269 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.270 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.270 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.270 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.271 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.271 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.271 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.272 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.272 I llm_load_print_meta: max token length = 93
0.00.225.293 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.283.171 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.283.179 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.283.180 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.283.181 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.283.181 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.283.182 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.288.357 I llama_new_context_with_model: n_ctx      = 8192
0.00.288.364 I llama_new_context_with_model: n_batch    = 2048
0.00.288.365 I llama_new_context_with_model: n_ubatch   = 512
0.00.288.365 I llama_new_context_with_model: flash_attn = 0
0.00.288.368 I llama_new_context_with_model: freq_base  = 10000.0
0.00.288.369 I llama_new_context_with_model: freq_scale = 1
0.00.317.538 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.317.554 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.317.647 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.318.513 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.318.521 I llama_new_context_with_model: graph nodes  = 601
0.00.318.521 I llama_new_context_with_model: graph splits = 1
0.00.318.522 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.400.467 I main: llama threadpool init, n_threads = 4
0.00.400.481 I 
0.00.400.553 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.400.556 I 
0.00.400.591 I sampler seed: 329956912
0.00.400.600 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.400.603 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.400.603 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.400.604 I 
 increasities that have led to the establishment of a new scientific discipline or field.

**Answer:** Taxonomy [end of text]


0.01.538.509 I llama_perf_sampler_print:    sampling time =       3.71 ms /    23 runs   (    0.16 ms per token,  6201.13 tokens per second)
0.01.538.511 I llama_perf_context_print:        load time =     398.58 ms
0.01.538.513 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.538.514 I llama_perf_context_print:        eval time =    1124.10 ms /    22 runs   (   51.10 ms per token,    19.57 tokens per second)
0.01.538.515 I llama_perf_context_print:       total time =    1138.05 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3862 (3f1ae2e3)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32131.28 ms
main:    total time = 32131.28 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.563 I build: 3862 (3f1ae2e3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.785 I main: llama backend init
0.00.001.877 I main: load the model and apply lora adapter, if any
0.00.022.383 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.397 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.405 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.406 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.410 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.411 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.411 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.412 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.413 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.413 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.418 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.418 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.419 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.419 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.420 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.424 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.605 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.555 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.561 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.562 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.562 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.563 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.564 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.565 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.567 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.568 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.571 I llama_model_loader: - type  f32:   37 tensors
0.00.134.573 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.574 I llama_model_loader: - type q6_K:   19 tensors
0.00.195.590 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.807 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.579 I llm_load_vocab: special tokens cache size = 5
0.00.232.865 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.878 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.879 I llm_load_print_meta: arch             = gemma
0.00.232.879 I llm_load_print_meta: vocab type       = SPM
0.00.232.880 I llm_load_print_meta: n_vocab          = 256000
0.00.232.881 I llm_load_print_meta: n_merges         = 0
0.00.232.881 I llm_load_print_meta: vocab_only       = 0
0.00.232.881 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.882 I llm_load_print_meta: n_embd           = 2048
0.00.232.883 I llm_load_print_meta: n_layer          = 18
0.00.232.896 I llm_load_print_meta: n_head           = 8
0.00.232.897 I llm_load_print_meta: n_head_kv        = 1
0.00.232.898 I llm_load_print_meta: n_rot            = 256
0.00.232.898 I llm_load_print_meta: n_swa            = 0
0.00.232.899 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.900 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.901 I llm_load_print_meta: n_gqa            = 8
0.00.232.903 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.904 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.905 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.907 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.907 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.908 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.909 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.910 I llm_load_print_meta: n_ff             = 16384
0.00.232.910 I llm_load_print_meta: n_expert         = 0
0.00.232.911 I llm_load_print_meta: n_expert_used    = 0
0.00.232.912 I llm_load_print_meta: causal attn      = 1
0.00.232.912 I llm_load_print_meta: pooling type     = 0
0.00.232.912 I llm_load_print_meta: rope type        = 2
0.00.232.913 I llm_load_print_meta: rope scaling     = linear
0.00.232.914 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.915 I llm_load_print_meta: freq_scale_train = 1
0.00.232.916 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.916 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.917 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.917 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.917 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.918 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.919 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.919 I llm_load_print_meta: model type       = 2B
0.00.232.920 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.232.921 I llm_load_print_meta: model params     = 2.51 B
0.00.232.922 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.232.922 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.923 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.923 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.924 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.924 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.925 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.927 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.927 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.928 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.929 I llm_load_print_meta: max token length = 93
0.00.232.946 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.289.816 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.294.935 I llama_new_context_with_model: n_ctx      = 8192
0.00.294.943 I llama_new_context_with_model: n_batch    = 2048
0.00.294.943 I llama_new_context_with_model: n_ubatch   = 512
0.00.294.944 I llama_new_context_with_model: flash_attn = 0
0.00.294.946 I llama_new_context_with_model: freq_base  = 10000.0
0.00.294.947 I llama_new_context_with_model: freq_scale = 1
0.00.328.925 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.328.944 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.329.048 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.329.993 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.330.001 I llama_new_context_with_model: graph nodes  = 601
0.00.330.001 I llama_new_context_with_model: graph splits = 1
0.00.330.003 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.414.605 I main: llama threadpool init, n_threads = 4
0.00.414.618 I 
0.00.414.693 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.414.696 I 
0.00.414.734 I sampler seed: 3906265126
0.00.414.743 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.414.746 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.414.747 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.414.747 I 
 fufing the melody of "Hallelujah."

This is a humorous take on the biblical story of David and Goliath.

**Verse 1:**
Tiny

0.02.052.080 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6723.72 tokens per second)
0.02.052.082 I llama_perf_context_print:        load time =     412.71 ms
0.02.052.084 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.052.085 I llama_perf_context_print:        eval time =    1619.13 ms /    32 runs   (   50.60 ms per token,    19.76 tokens per second)
0.02.052.086 I llama_perf_context_print:       total time =    1637.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.997s
user	8m13.070s
sys	0m7.148s
