+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.681 I build: 3808 (a2393d6f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.906 I main: llama backend init
0.00.002.844 I main: load the model and apply lora adapter, if any
0.00.025.030 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.231 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.327 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.340 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.342 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.347 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.348 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.349 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.350 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.351 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.352 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.360 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.361 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.362 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.363 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.364 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.231 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.187.248 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.199.536 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.199.546 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.199.547 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.199.548 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.199.549 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.199.550 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.199.551 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.199.554 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.199.555 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.199.571 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.199.574 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.199.575 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.199.596 I llama_model_loader: - type  f32:   37 tensors
0.00.199.601 I llama_model_loader: - type q8_0:  127 tensors
0.00.524.088 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.556.376 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.557.452 I llm_load_vocab: special tokens cache size = 5
0.00.615.771 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.615.833 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.615.834 I llm_load_print_meta: arch             = gemma
0.00.615.835 I llm_load_print_meta: vocab type       = SPM
0.00.615.836 I llm_load_print_meta: n_vocab          = 256000
0.00.615.838 I llm_load_print_meta: n_merges         = 0
0.00.615.839 I llm_load_print_meta: vocab_only       = 0
0.00.615.839 I llm_load_print_meta: n_ctx_train      = 8192
0.00.615.839 I llm_load_print_meta: n_embd           = 2048
0.00.615.840 I llm_load_print_meta: n_layer          = 18
0.00.615.876 I llm_load_print_meta: n_head           = 8
0.00.615.883 I llm_load_print_meta: n_head_kv        = 1
0.00.615.883 I llm_load_print_meta: n_rot            = 256
0.00.615.884 I llm_load_print_meta: n_swa            = 0
0.00.615.884 I llm_load_print_meta: n_embd_head_k    = 256
0.00.615.884 I llm_load_print_meta: n_embd_head_v    = 256
0.00.615.889 I llm_load_print_meta: n_gqa            = 8
0.00.615.914 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.615.921 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.615.922 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.615.924 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.615.925 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.615.925 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.615.926 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.615.931 I llm_load_print_meta: n_ff             = 16384
0.00.615.931 I llm_load_print_meta: n_expert         = 0
0.00.615.931 I llm_load_print_meta: n_expert_used    = 0
0.00.615.942 I llm_load_print_meta: causal attn      = 1
0.00.615.943 I llm_load_print_meta: pooling type     = 0
0.00.615.943 I llm_load_print_meta: rope type        = 2
0.00.615.944 I llm_load_print_meta: rope scaling     = linear
0.00.615.945 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.615.946 I llm_load_print_meta: freq_scale_train = 1
0.00.615.946 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.615.947 I llm_load_print_meta: rope_finetuned   = unknown
0.00.615.948 I llm_load_print_meta: ssm_d_conv       = 0
0.00.615.948 I llm_load_print_meta: ssm_d_inner      = 0
0.00.615.948 I llm_load_print_meta: ssm_d_state      = 0
0.00.615.948 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.615.949 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.615.950 I llm_load_print_meta: model type       = 2B
0.00.615.951 I llm_load_print_meta: model ftype      = Q8_0
0.00.615.953 I llm_load_print_meta: model params     = 2.51 B
0.00.615.954 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.615.954 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.615.963 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.615.964 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.615.964 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.615.964 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.615.965 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.615.965 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.615.971 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.615.973 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.615.973 I llm_load_print_meta: max token length = 93
0.00.616.142 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.715.232 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.715.245 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.715.246 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.715.247 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.715.247 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.715.248 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.721.018 I llama_new_context_with_model: n_ctx      = 8192
0.00.721.029 I llama_new_context_with_model: n_batch    = 2048
0.00.721.029 I llama_new_context_with_model: n_ubatch   = 512
0.00.721.030 I llama_new_context_with_model: flash_attn = 0
0.00.721.035 I llama_new_context_with_model: freq_base  = 10000.0
0.00.721.035 I llama_new_context_with_model: freq_scale = 1
0.00.752.959 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.753.005 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.753.121 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.754.526 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.754.532 I llama_new_context_with_model: graph nodes  = 601
0.00.754.532 I llama_new_context_with_model: graph splits = 1
0.00.754.549 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.368.928 I main: llama threadpool init, n_threads = 4
0.01.368.941 I 
0.01.369.035 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.369.039 I 
0.01.369.201 I sampler seed: 2985783023
0.01.369.212 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.369.219 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.369.220 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasements, and the overall narrative structure of the novel.

**Narrative Structure:**

The novel is told through a series of flashbacks, providing context and background

0.14.962.932 I llama_perf_sampler_print:    sampling time =      48.87 ms /    33 runs   (    1.48 ms per token,   675.22 tokens per second)
0.14.962.935 I llama_perf_context_print:        load time =    1365.99 ms
0.14.962.936 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.962.938 I llama_perf_context_print:        eval time =   13509.70 ms /    32 runs   (  422.18 ms per token,     2.37 tokens per second)
0.14.962.939 I llama_perf_context_print:       total time =   13594.01 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.656 I build: 3808 (a2393d6f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.878 I main: llama backend init
0.00.002.826 I main: load the model and apply lora adapter, if any
0.00.025.597 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.699 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.715 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.719 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.724 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.725 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.727 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.727 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.728 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.729 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.738 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.748 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.751 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.752 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.753 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.520 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.187.623 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.199.902 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.199.913 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.199.914 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.199.915 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.199.916 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.199.917 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.199.918 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.199.921 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.199.922 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.199.923 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.199.924 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.199.925 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.199.934 I llama_model_loader: - type  f32:   37 tensors
0.00.199.938 I llama_model_loader: - type q8_0:  127 tensors
0.00.518.161 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.550.323 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.551.417 I llm_load_vocab: special tokens cache size = 5
0.00.609.653 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.609.715 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.609.716 I llm_load_print_meta: arch             = gemma
0.00.609.716 I llm_load_print_meta: vocab type       = SPM
0.00.609.718 I llm_load_print_meta: n_vocab          = 256000
0.00.609.720 I llm_load_print_meta: n_merges         = 0
0.00.609.721 I llm_load_print_meta: vocab_only       = 0
0.00.609.721 I llm_load_print_meta: n_ctx_train      = 8192
0.00.609.722 I llm_load_print_meta: n_embd           = 2048
0.00.609.722 I llm_load_print_meta: n_layer          = 18
0.00.609.758 I llm_load_print_meta: n_head           = 8
0.00.609.765 I llm_load_print_meta: n_head_kv        = 1
0.00.609.765 I llm_load_print_meta: n_rot            = 256
0.00.609.766 I llm_load_print_meta: n_swa            = 0
0.00.609.766 I llm_load_print_meta: n_embd_head_k    = 256
0.00.609.767 I llm_load_print_meta: n_embd_head_v    = 256
0.00.609.771 I llm_load_print_meta: n_gqa            = 8
0.00.609.776 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.609.781 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.609.782 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.609.783 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.609.783 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.609.784 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.609.784 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.609.790 I llm_load_print_meta: n_ff             = 16384
0.00.609.790 I llm_load_print_meta: n_expert         = 0
0.00.609.790 I llm_load_print_meta: n_expert_used    = 0
0.00.609.791 I llm_load_print_meta: causal attn      = 1
0.00.609.791 I llm_load_print_meta: pooling type     = 0
0.00.609.791 I llm_load_print_meta: rope type        = 2
0.00.609.792 I llm_load_print_meta: rope scaling     = linear
0.00.609.793 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.609.794 I llm_load_print_meta: freq_scale_train = 1
0.00.609.794 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.609.794 I llm_load_print_meta: rope_finetuned   = unknown
0.00.609.795 I llm_load_print_meta: ssm_d_conv       = 0
0.00.609.795 I llm_load_print_meta: ssm_d_inner      = 0
0.00.609.795 I llm_load_print_meta: ssm_d_state      = 0
0.00.609.796 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.609.796 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.609.797 I llm_load_print_meta: model type       = 2B
0.00.609.798 I llm_load_print_meta: model ftype      = Q8_0
0.00.609.798 I llm_load_print_meta: model params     = 2.51 B
0.00.609.799 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.609.799 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.609.800 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.609.801 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.609.801 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.609.801 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.609.802 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.609.802 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.609.823 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.609.826 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.609.826 I llm_load_print_meta: max token length = 93
0.00.610.018 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.702.583 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.708.413 I llama_new_context_with_model: n_ctx      = 8192
0.00.708.421 I llama_new_context_with_model: n_batch    = 2048
0.00.708.421 I llama_new_context_with_model: n_ubatch   = 512
0.00.708.422 I llama_new_context_with_model: flash_attn = 0
0.00.708.426 I llama_new_context_with_model: freq_base  = 10000.0
0.00.708.427 I llama_new_context_with_model: freq_scale = 1
0.00.739.944 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.739.986 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.740.099 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.741.507 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.741.514 I llama_new_context_with_model: graph nodes  = 601
0.00.741.515 I llama_new_context_with_model: graph splits = 1
0.00.741.533 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.356.320 I main: llama threadpool init, n_threads = 4
0.01.356.335 I 
0.01.356.437 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.356.442 I 
0.01.356.624 I sampler seed: 2808597617
0.01.356.636 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.356.640 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.356.641 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities.

I am unable to answer this question as it contains sexually suggestive content. I am not allowed to provide responses that are sexually suggestive in nature.

0.15.025.332 I llama_perf_sampler_print:    sampling time =      48.61 ms /    33 runs   (    1.47 ms per token,   678.83 tokens per second)
0.15.025.349 I llama_perf_context_print:        load time =    1353.39 ms
0.15.025.350 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.025.352 I llama_perf_context_print:        eval time =   13587.08 ms /    32 runs   (  424.60 ms per token,     2.36 tokens per second)
0.15.025.353 I llama_perf_context_print:       total time =   13669.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.644 I build: 3808 (a2393d6f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.883 I main: llama backend init
0.00.002.827 I main: load the model and apply lora adapter, if any
0.00.025.084 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.283 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.383 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.395 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.397 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.402 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.407 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.408 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.410 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.412 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.415 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.424 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.429 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.430 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.432 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.433 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.799 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.900 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.199.229 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.199.238 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.199.239 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.199.240 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.199.241 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.199.242 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.199.243 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.199.246 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.199.247 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.199.248 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.199.249 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.199.250 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.199.259 I llama_model_loader: - type  f32:   37 tensors
0.00.199.263 I llama_model_loader: - type q8_0:  127 tensors
0.00.512.988 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.543.333 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.544.488 I llm_load_vocab: special tokens cache size = 5
0.00.602.455 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.602.520 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.602.525 I llm_load_print_meta: arch             = gemma
0.00.602.526 I llm_load_print_meta: vocab type       = SPM
0.00.602.527 I llm_load_print_meta: n_vocab          = 256000
0.00.602.530 I llm_load_print_meta: n_merges         = 0
0.00.602.531 I llm_load_print_meta: vocab_only       = 0
0.00.602.532 I llm_load_print_meta: n_ctx_train      = 8192
0.00.602.533 I llm_load_print_meta: n_embd           = 2048
0.00.602.534 I llm_load_print_meta: n_layer          = 18
0.00.602.579 I llm_load_print_meta: n_head           = 8
0.00.602.590 I llm_load_print_meta: n_head_kv        = 1
0.00.602.591 I llm_load_print_meta: n_rot            = 256
0.00.602.592 I llm_load_print_meta: n_swa            = 0
0.00.602.592 I llm_load_print_meta: n_embd_head_k    = 256
0.00.602.593 I llm_load_print_meta: n_embd_head_v    = 256
0.00.602.599 I llm_load_print_meta: n_gqa            = 8
0.00.602.607 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.602.619 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.602.620 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.602.622 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.602.622 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.602.624 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.602.624 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.602.631 I llm_load_print_meta: n_ff             = 16384
0.00.602.633 I llm_load_print_meta: n_expert         = 0
0.00.602.634 I llm_load_print_meta: n_expert_used    = 0
0.00.602.635 I llm_load_print_meta: causal attn      = 1
0.00.602.636 I llm_load_print_meta: pooling type     = 0
0.00.602.636 I llm_load_print_meta: rope type        = 2
0.00.602.638 I llm_load_print_meta: rope scaling     = linear
0.00.602.639 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.602.640 I llm_load_print_meta: freq_scale_train = 1
0.00.602.644 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.602.644 I llm_load_print_meta: rope_finetuned   = unknown
0.00.602.644 I llm_load_print_meta: ssm_d_conv       = 0
0.00.602.645 I llm_load_print_meta: ssm_d_inner      = 0
0.00.602.645 I llm_load_print_meta: ssm_d_state      = 0
0.00.602.646 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.602.646 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.602.647 I llm_load_print_meta: model type       = 2B
0.00.602.649 I llm_load_print_meta: model ftype      = Q8_0
0.00.602.649 I llm_load_print_meta: model params     = 2.51 B
0.00.602.652 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.602.652 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.602.654 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.602.655 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.602.655 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.602.656 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.602.657 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.602.661 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.602.670 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.602.673 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.602.674 I llm_load_print_meta: max token length = 93
0.00.602.863 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.681.509 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.681.518 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.681.519 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.681.520 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.681.521 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.681.521 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.687.466 I llama_new_context_with_model: n_ctx      = 8192
0.00.687.475 I llama_new_context_with_model: n_batch    = 2048
0.00.687.475 I llama_new_context_with_model: n_ubatch   = 512
0.00.687.476 I llama_new_context_with_model: flash_attn = 0
0.00.687.480 I llama_new_context_with_model: freq_base  = 10000.0
0.00.687.481 I llama_new_context_with_model: freq_scale = 1
0.00.718.091 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.718.136 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.718.253 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.719.681 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.719.688 I llama_new_context_with_model: graph nodes  = 601
0.00.719.689 I llama_new_context_with_model: graph splits = 1
0.00.719.709 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.331.451 I main: llama threadpool init, n_threads = 4
0.01.331.463 I 
0.01.331.571 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.331.575 I 
0.01.331.741 I sampler seed: 1191151416
0.01.331.752 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.331.758 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.331.759 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities and the consequences they have on individuals and society. [end of text]


0.06.822.717 I llama_perf_sampler_print:    sampling time =      19.64 ms /    14 runs   (    1.40 ms per token,   712.65 tokens per second)
0.06.822.721 I llama_perf_context_print:        load time =    1328.53 ms
0.06.822.722 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.06.822.724 I llama_perf_context_print:        eval time =    5456.86 ms /    13 runs   (  419.76 ms per token,     2.38 tokens per second)
0.06.822.749 I llama_perf_context_print:       total time =    5491.28 ms /    14 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.718 I build: 3808 (a2393d6f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.959 I main: llama backend init
0.00.002.904 I main: load the model and apply lora adapter, if any
0.00.025.303 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.570 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.667 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.680 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.682 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.686 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.688 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.690 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.691 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.693 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.693 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.701 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.702 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.703 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.704 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.706 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.797 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.187.151 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.199.398 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.199.408 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.199.409 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.199.410 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.199.410 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.199.412 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.199.412 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.199.416 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.199.417 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.199.418 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.199.419 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.199.420 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.199.429 I llama_model_loader: - type  f32:   37 tensors
0.00.199.433 I llama_model_loader: - type q8_0:  127 tensors
0.00.513.825 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.544.850 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.545.881 I llm_load_vocab: special tokens cache size = 5
0.00.604.156 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.604.215 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.604.215 I llm_load_print_meta: arch             = gemma
0.00.604.216 I llm_load_print_meta: vocab type       = SPM
0.00.604.217 I llm_load_print_meta: n_vocab          = 256000
0.00.604.220 I llm_load_print_meta: n_merges         = 0
0.00.604.220 I llm_load_print_meta: vocab_only       = 0
0.00.604.221 I llm_load_print_meta: n_ctx_train      = 8192
0.00.604.221 I llm_load_print_meta: n_embd           = 2048
0.00.604.222 I llm_load_print_meta: n_layer          = 18
0.00.604.258 I llm_load_print_meta: n_head           = 8
0.00.604.265 I llm_load_print_meta: n_head_kv        = 1
0.00.604.265 I llm_load_print_meta: n_rot            = 256
0.00.604.266 I llm_load_print_meta: n_swa            = 0
0.00.604.266 I llm_load_print_meta: n_embd_head_k    = 256
0.00.604.267 I llm_load_print_meta: n_embd_head_v    = 256
0.00.604.271 I llm_load_print_meta: n_gqa            = 8
0.00.604.276 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.604.281 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.604.282 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.604.283 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.604.284 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.604.284 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.604.285 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.604.290 I llm_load_print_meta: n_ff             = 16384
0.00.604.291 I llm_load_print_meta: n_expert         = 0
0.00.604.295 I llm_load_print_meta: n_expert_used    = 0
0.00.604.296 I llm_load_print_meta: causal attn      = 1
0.00.604.296 I llm_load_print_meta: pooling type     = 0
0.00.604.297 I llm_load_print_meta: rope type        = 2
0.00.604.297 I llm_load_print_meta: rope scaling     = linear
0.00.604.320 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.604.322 I llm_load_print_meta: freq_scale_train = 1
0.00.604.322 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.604.322 I llm_load_print_meta: rope_finetuned   = unknown
0.00.604.323 I llm_load_print_meta: ssm_d_conv       = 0
0.00.604.323 I llm_load_print_meta: ssm_d_inner      = 0
0.00.604.323 I llm_load_print_meta: ssm_d_state      = 0
0.00.604.324 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.604.324 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.604.325 I llm_load_print_meta: model type       = 2B
0.00.604.326 I llm_load_print_meta: model ftype      = Q8_0
0.00.604.326 I llm_load_print_meta: model params     = 2.51 B
0.00.604.327 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.604.328 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.604.329 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.604.329 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.604.329 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.604.330 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.604.330 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.604.338 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.604.344 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.604.346 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.604.347 I llm_load_print_meta: max token length = 93
0.00.604.519 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.675.992 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.676.005 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.681.642 I llama_new_context_with_model: n_ctx      = 8192
0.00.681.650 I llama_new_context_with_model: n_batch    = 2048
0.00.681.650 I llama_new_context_with_model: n_ubatch   = 512
0.00.681.651 I llama_new_context_with_model: flash_attn = 0
0.00.681.655 I llama_new_context_with_model: freq_base  = 10000.0
0.00.681.656 I llama_new_context_with_model: freq_scale = 1
0.00.711.401 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.711.444 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.711.561 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.712.991 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.712.998 I llama_new_context_with_model: graph nodes  = 601
0.00.712.998 I llama_new_context_with_model: graph splits = 1
0.00.713.014 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.326.349 I main: llama threadpool init, n_threads = 4
0.01.326.362 I 
0.01.326.459 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.326.463 I 
0.01.326.628 I sampler seed: 4016903499
0.01.326.640 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.326.644 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.326.645 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increably. [end of text]


0.03.026.485 I llama_perf_sampler_print:    sampling time =       6.12 ms /     5 runs   (    1.22 ms per token,   816.73 tokens per second)
0.03.026.501 I llama_perf_context_print:        load time =    1323.34 ms
0.03.026.503 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.026.504 I llama_perf_context_print:        eval time =    1686.75 ms /     4 runs   (  421.69 ms per token,     2.37 tokens per second)
0.03.026.505 I llama_perf_context_print:       total time =    1700.15 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m49.747s
user	2m30.502s
sys	0m9.658s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3808 (a2393d6f)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200448.18 ms
main:    total time = 200448.18 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.711 I build: 3808 (a2393d6f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.915 I main: llama backend init
0.00.002.866 I main: load the model and apply lora adapter, if any
0.00.024.858 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.061 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.157 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.170 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.171 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.176 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.180 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.181 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.182 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.182 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.183 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.190 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.191 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.192 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.193 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.194 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.980 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.678 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.872 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.880 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.881 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.882 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.883 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.884 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.885 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.888 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.889 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.890 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.891 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.198.892 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.901 I llama_model_loader: - type  f32:   37 tensors
0.00.198.904 I llama_model_loader: - type q4_K:  108 tensors
0.00.198.905 I llama_model_loader: - type q6_K:   19 tensors
0.00.518.137 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.546.788 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.547.913 I llm_load_vocab: special tokens cache size = 5
0.00.606.027 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.606.089 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.606.090 I llm_load_print_meta: arch             = gemma
0.00.606.091 I llm_load_print_meta: vocab type       = SPM
0.00.606.091 I llm_load_print_meta: n_vocab          = 256000
0.00.606.094 I llm_load_print_meta: n_merges         = 0
0.00.606.094 I llm_load_print_meta: vocab_only       = 0
0.00.606.095 I llm_load_print_meta: n_ctx_train      = 8192
0.00.606.095 I llm_load_print_meta: n_embd           = 2048
0.00.606.095 I llm_load_print_meta: n_layer          = 18
0.00.606.130 I llm_load_print_meta: n_head           = 8
0.00.606.137 I llm_load_print_meta: n_head_kv        = 1
0.00.606.137 I llm_load_print_meta: n_rot            = 256
0.00.606.137 I llm_load_print_meta: n_swa            = 0
0.00.606.138 I llm_load_print_meta: n_embd_head_k    = 256
0.00.606.138 I llm_load_print_meta: n_embd_head_v    = 256
0.00.606.143 I llm_load_print_meta: n_gqa            = 8
0.00.606.148 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.606.152 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.606.153 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.606.155 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.606.155 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.606.156 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.606.156 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.606.185 I llm_load_print_meta: n_ff             = 16384
0.00.606.186 I llm_load_print_meta: n_expert         = 0
0.00.606.187 I llm_load_print_meta: n_expert_used    = 0
0.00.606.187 I llm_load_print_meta: causal attn      = 1
0.00.606.188 I llm_load_print_meta: pooling type     = 0
0.00.606.188 I llm_load_print_meta: rope type        = 2
0.00.606.189 I llm_load_print_meta: rope scaling     = linear
0.00.606.190 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.606.199 I llm_load_print_meta: freq_scale_train = 1
0.00.606.200 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.606.200 I llm_load_print_meta: rope_finetuned   = unknown
0.00.606.205 I llm_load_print_meta: ssm_d_conv       = 0
0.00.606.206 I llm_load_print_meta: ssm_d_inner      = 0
0.00.606.206 I llm_load_print_meta: ssm_d_state      = 0
0.00.606.206 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.606.206 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.606.207 I llm_load_print_meta: model type       = 2B
0.00.606.209 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.606.210 I llm_load_print_meta: model params     = 2.51 B
0.00.606.211 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.606.211 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.606.212 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.606.213 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.606.213 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.606.214 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.606.214 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.606.215 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.606.221 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.606.223 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.606.223 I llm_load_print_meta: max token length = 93
0.00.606.399 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.666.192 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.666.203 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.666.204 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.666.205 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.666.206 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.666.206 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.671.923 I llama_new_context_with_model: n_ctx      = 8192
0.00.671.932 I llama_new_context_with_model: n_batch    = 2048
0.00.671.933 I llama_new_context_with_model: n_ubatch   = 512
0.00.671.934 I llama_new_context_with_model: flash_attn = 0
0.00.671.937 I llama_new_context_with_model: freq_base  = 10000.0
0.00.671.938 I llama_new_context_with_model: freq_scale = 1
0.00.702.089 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.702.131 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.702.247 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.703.659 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.703.665 I llama_new_context_with_model: graph nodes  = 601
0.00.703.666 I llama_new_context_with_model: graph splits = 1
0.00.703.681 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.285.556 I main: llama threadpool init, n_threads = 4
0.01.285.569 I 
0.01.285.664 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.285.667 I 
0.01.285.830 I sampler seed: 2671741400
0.01.285.840 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.285.847 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.285.848 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 seconally. [end of text]


0.02.662.957 I llama_perf_sampler_print:    sampling time =       6.08 ms /     5 runs   (    1.22 ms per token,   822.64 tokens per second)
0.02.662.960 I llama_perf_context_print:        load time =    1282.59 ms
0.02.662.961 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.662.962 I llama_perf_context_print:        eval time =    1365.86 ms /     4 runs   (  341.47 ms per token,     2.93 tokens per second)
0.02.662.976 I llama_perf_context_print:       total time =    1377.41 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3808 (a2393d6f)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200381.61 ms
main:    total time = 200381.61 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.658 I build: 3808 (a2393d6f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.862 I main: llama backend init
0.00.002.817 I main: load the model and apply lora adapter, if any
0.00.025.211 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.318 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.331 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.333 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.337 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.338 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.339 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.339 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.340 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.341 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.349 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.349 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.350 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.351 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.352 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.790 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.187.057 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.199.421 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.199.431 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.199.432 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.199.433 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.199.434 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.199.435 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.199.436 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.199.440 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.199.441 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.199.449 I llama_model_loader: - type  f32:   37 tensors
0.00.199.453 I llama_model_loader: - type q4_K:  108 tensors
0.00.199.454 I llama_model_loader: - type q6_K:   19 tensors
0.00.512.223 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.543.097 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.544.156 I llm_load_vocab: special tokens cache size = 5
0.00.602.353 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.602.414 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.602.415 I llm_load_print_meta: arch             = gemma
0.00.602.416 I llm_load_print_meta: vocab type       = SPM
0.00.602.417 I llm_load_print_meta: n_vocab          = 256000
0.00.602.419 I llm_load_print_meta: n_merges         = 0
0.00.602.419 I llm_load_print_meta: vocab_only       = 0
0.00.602.420 I llm_load_print_meta: n_ctx_train      = 8192
0.00.602.420 I llm_load_print_meta: n_embd           = 2048
0.00.602.421 I llm_load_print_meta: n_layer          = 18
0.00.602.456 I llm_load_print_meta: n_head           = 8
0.00.602.463 I llm_load_print_meta: n_head_kv        = 1
0.00.602.463 I llm_load_print_meta: n_rot            = 256
0.00.602.464 I llm_load_print_meta: n_swa            = 0
0.00.602.464 I llm_load_print_meta: n_embd_head_k    = 256
0.00.602.464 I llm_load_print_meta: n_embd_head_v    = 256
0.00.602.469 I llm_load_print_meta: n_gqa            = 8
0.00.602.473 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.602.491 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.602.493 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.602.494 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.602.494 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.602.495 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.602.495 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.602.500 I llm_load_print_meta: n_ff             = 16384
0.00.602.501 I llm_load_print_meta: n_expert         = 0
0.00.602.501 I llm_load_print_meta: n_expert_used    = 0
0.00.602.502 I llm_load_print_meta: causal attn      = 1
0.00.602.502 I llm_load_print_meta: pooling type     = 0
0.00.602.502 I llm_load_print_meta: rope type        = 2
0.00.602.503 I llm_load_print_meta: rope scaling     = linear
0.00.602.504 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.602.505 I llm_load_print_meta: freq_scale_train = 1
0.00.602.505 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.602.505 I llm_load_print_meta: rope_finetuned   = unknown
0.00.602.506 I llm_load_print_meta: ssm_d_conv       = 0
0.00.602.506 I llm_load_print_meta: ssm_d_inner      = 0
0.00.602.506 I llm_load_print_meta: ssm_d_state      = 0
0.00.602.520 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.602.521 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.602.522 I llm_load_print_meta: model type       = 2B
0.00.602.523 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.602.524 I llm_load_print_meta: model params     = 2.51 B
0.00.602.525 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.602.525 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.602.526 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.602.526 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.602.527 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.602.527 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.602.528 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.602.529 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.602.535 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.602.536 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.602.537 I llm_load_print_meta: max token length = 93
0.00.602.706 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.660.942 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.666.608 I llama_new_context_with_model: n_ctx      = 8192
0.00.666.617 I llama_new_context_with_model: n_batch    = 2048
0.00.666.618 I llama_new_context_with_model: n_ubatch   = 512
0.00.666.618 I llama_new_context_with_model: flash_attn = 0
0.00.666.622 I llama_new_context_with_model: freq_base  = 10000.0
0.00.666.623 I llama_new_context_with_model: freq_scale = 1
0.00.697.791 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.697.835 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.697.942 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.699.302 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.699.309 I llama_new_context_with_model: graph nodes  = 601
0.00.699.309 I llama_new_context_with_model: graph splits = 1
0.00.699.326 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.279.658 I main: llama threadpool init, n_threads = 4
0.01.279.669 I 
0.01.279.765 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.279.769 I 
0.01.279.937 I sampler seed: 2299866649
0.01.279.949 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.279.955 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.279.956 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 effe a sequela adjacente in the direction opposite to the initial sequela.

Given two sequences a and b, show that the sequence a is a

0.12.266.702 I llama_perf_sampler_print:    sampling time =      48.41 ms /    33 runs   (    1.47 ms per token,   681.75 tokens per second)
0.12.266.705 I llama_perf_context_print:        load time =    1276.73 ms
0.12.266.720 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.266.722 I llama_perf_context_print:        eval time =   10905.00 ms /    32 runs   (  340.78 ms per token,     2.93 tokens per second)
0.12.266.723 I llama_perf_context_print:       total time =   10987.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m58.642s
user	49m47.138s
sys	0m6.548s
