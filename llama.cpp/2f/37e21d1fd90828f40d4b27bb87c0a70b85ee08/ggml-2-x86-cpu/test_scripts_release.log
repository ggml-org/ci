+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.575 I build: 3842 (2f37e21d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.765 I main: llama backend init
0.00.001.860 I main: load the model and apply lora adapter, if any
0.00.022.423 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.470 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.484 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.490 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.490 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.495 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.495 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.496 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.497 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.498 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.499 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.503 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.503 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.504 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.505 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.505 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.216 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.512 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.339 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.345 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.346 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.347 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.347 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.348 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.348 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.351 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.352 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.353 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.354 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.355 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.358 I llama_model_loader: - type  f32:   37 tensors
0.00.133.361 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.715 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.274 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.954 I llm_load_vocab: special tokens cache size = 5
0.00.230.243 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.256 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.256 I llm_load_print_meta: arch             = gemma
0.00.230.256 I llm_load_print_meta: vocab type       = SPM
0.00.230.257 I llm_load_print_meta: n_vocab          = 256000
0.00.230.258 I llm_load_print_meta: n_merges         = 0
0.00.230.258 I llm_load_print_meta: vocab_only       = 0
0.00.230.258 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.259 I llm_load_print_meta: n_embd           = 2048
0.00.230.259 I llm_load_print_meta: n_layer          = 18
0.00.230.270 I llm_load_print_meta: n_head           = 8
0.00.230.271 I llm_load_print_meta: n_head_kv        = 1
0.00.230.271 I llm_load_print_meta: n_rot            = 256
0.00.230.272 I llm_load_print_meta: n_swa            = 0
0.00.230.272 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.272 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.273 I llm_load_print_meta: n_gqa            = 8
0.00.230.274 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.275 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.276 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.277 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.278 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.278 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.278 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.279 I llm_load_print_meta: n_ff             = 16384
0.00.230.280 I llm_load_print_meta: n_expert         = 0
0.00.230.280 I llm_load_print_meta: n_expert_used    = 0
0.00.230.280 I llm_load_print_meta: causal attn      = 1
0.00.230.281 I llm_load_print_meta: pooling type     = 0
0.00.230.281 I llm_load_print_meta: rope type        = 2
0.00.230.281 I llm_load_print_meta: rope scaling     = linear
0.00.230.283 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.283 I llm_load_print_meta: freq_scale_train = 1
0.00.230.284 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.284 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.284 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.284 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.285 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.285 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.285 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.286 I llm_load_print_meta: model type       = 2B
0.00.230.286 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.287 I llm_load_print_meta: model params     = 2.51 B
0.00.230.288 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.288 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.289 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.289 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.289 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.289 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.290 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.290 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.290 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.291 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.292 I llm_load_print_meta: max token length = 93
0.00.230.316 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.330.070 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.330.078 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.330.078 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.330.079 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.330.079 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.330.080 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.335.185 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.192 I llama_new_context_with_model: n_batch    = 2048
0.00.335.192 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.193 I llama_new_context_with_model: flash_attn = 0
0.00.335.195 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.196 I llama_new_context_with_model: freq_scale = 1
0.00.363.152 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.166 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.258 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.121 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.129 I llama_new_context_with_model: graph nodes  = 601
0.00.364.129 I llama_new_context_with_model: graph splits = 1
0.00.364.131 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.456.144 I main: llama threadpool init, n_threads = 4
0.00.456.156 I 
0.00.456.232 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.456.236 I 
0.00.456.276 I sampler seed: 2711462817
0.00.456.285 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.456.287 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.456.288 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.456.288 I 
 increasities, and other forms of sexual harassment are prevalent within the workplace.

**Question:**

What are the potential consequences of engaging in sexual harassment?



0.02.697.437 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6697.79 tokens per second)
0.02.697.439 I llama_perf_context_print:        load time =     454.26 ms
0.02.697.441 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.697.442 I llama_perf_context_print:        eval time =    2222.78 ms /    32 runs   (   69.46 ms per token,    14.40 tokens per second)
0.02.697.443 I llama_perf_context_print:       total time =    2241.30 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.546 I build: 3842 (2f37e21d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.001.839 I main: load the model and apply lora adapter, if any
0.00.022.052 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.066 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.074 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.075 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.078 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.081 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.082 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.083 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.083 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.084 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.088 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.090 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.090 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.091 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.091 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.829 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.098 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.935 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.941 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.942 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.943 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.943 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.944 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.945 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.947 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.947 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.948 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.950 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.951 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.954 I llama_model_loader: - type  f32:   37 tensors
0.00.132.956 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.575 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.651 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.396 I llm_load_vocab: special tokens cache size = 5
0.00.233.186 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.200 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.200 I llm_load_print_meta: arch             = gemma
0.00.233.201 I llm_load_print_meta: vocab type       = SPM
0.00.233.201 I llm_load_print_meta: n_vocab          = 256000
0.00.233.202 I llm_load_print_meta: n_merges         = 0
0.00.233.202 I llm_load_print_meta: vocab_only       = 0
0.00.233.202 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.203 I llm_load_print_meta: n_embd           = 2048
0.00.233.203 I llm_load_print_meta: n_layer          = 18
0.00.233.217 I llm_load_print_meta: n_head           = 8
0.00.233.218 I llm_load_print_meta: n_head_kv        = 1
0.00.233.218 I llm_load_print_meta: n_rot            = 256
0.00.233.219 I llm_load_print_meta: n_swa            = 0
0.00.233.219 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.219 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.220 I llm_load_print_meta: n_gqa            = 8
0.00.233.221 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.222 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.223 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.224 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.225 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.225 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.225 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.227 I llm_load_print_meta: n_ff             = 16384
0.00.233.227 I llm_load_print_meta: n_expert         = 0
0.00.233.228 I llm_load_print_meta: n_expert_used    = 0
0.00.233.228 I llm_load_print_meta: causal attn      = 1
0.00.233.228 I llm_load_print_meta: pooling type     = 0
0.00.233.228 I llm_load_print_meta: rope type        = 2
0.00.233.229 I llm_load_print_meta: rope scaling     = linear
0.00.233.230 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.231 I llm_load_print_meta: freq_scale_train = 1
0.00.233.231 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.231 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.232 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.232 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.232 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.232 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.233 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.233 I llm_load_print_meta: model type       = 2B
0.00.233.234 I llm_load_print_meta: model ftype      = Q8_0
0.00.233.235 I llm_load_print_meta: model params     = 2.51 B
0.00.233.236 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.236 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.236 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.237 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.237 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.237 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.238 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.238 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.238 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.239 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.239 I llm_load_print_meta: max token length = 93
0.00.233.258 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.328.876 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.333.913 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.919 I llama_new_context_with_model: n_batch    = 2048
0.00.333.920 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.920 I llama_new_context_with_model: flash_attn = 0
0.00.333.923 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.925 I llama_new_context_with_model: freq_scale = 1
0.00.363.553 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.569 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.660 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.512 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.520 I llama_new_context_with_model: graph nodes  = 601
0.00.364.520 I llama_new_context_with_model: graph splits = 1
0.00.364.522 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.608 I main: llama threadpool init, n_threads = 4
0.00.451.620 I 
0.00.451.695 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.698 I 
0.00.451.736 I sampler seed: 901315669
0.00.451.745 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.748 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.749 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.749 I 
 increasively.

I'm having trouble understanding this statement. Could you please provide additional context or explanation? [end of text]


0.02.000.815 I llama_perf_sampler_print:    sampling time =       3.41 ms /    24 runs   (    0.14 ms per token,  7048.46 tokens per second)
0.02.000.817 I llama_perf_context_print:        load time =     449.75 ms
0.02.000.818 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.000.820 I llama_perf_context_print:        eval time =    1536.44 ms /    23 runs   (   66.80 ms per token,    14.97 tokens per second)
0.02.000.820 I llama_perf_context_print:       total time =    1549.22 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.542 I build: 3842 (2f37e21d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.922 I main: load the model and apply lora adapter, if any
0.00.022.031 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.084 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.094 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.099 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.101 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.105 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.109 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.110 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.111 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.112 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.113 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.119 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.120 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.121 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.123 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.124 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.635 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.874 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.719 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.725 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.725 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.726 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.727 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.728 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.729 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.731 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.732 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.733 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.734 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.735 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.738 I llama_model_loader: - type  f32:   37 tensors
0.00.132.741 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.613 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.544 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.320 I llm_load_vocab: special tokens cache size = 5
0.00.238.827 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.238.842 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.238.843 I llm_load_print_meta: arch             = gemma
0.00.238.843 I llm_load_print_meta: vocab type       = SPM
0.00.238.844 I llm_load_print_meta: n_vocab          = 256000
0.00.238.844 I llm_load_print_meta: n_merges         = 0
0.00.238.844 I llm_load_print_meta: vocab_only       = 0
0.00.238.845 I llm_load_print_meta: n_ctx_train      = 8192
0.00.238.845 I llm_load_print_meta: n_embd           = 2048
0.00.238.845 I llm_load_print_meta: n_layer          = 18
0.00.238.858 I llm_load_print_meta: n_head           = 8
0.00.238.859 I llm_load_print_meta: n_head_kv        = 1
0.00.238.860 I llm_load_print_meta: n_rot            = 256
0.00.238.861 I llm_load_print_meta: n_swa            = 0
0.00.238.861 I llm_load_print_meta: n_embd_head_k    = 256
0.00.238.861 I llm_load_print_meta: n_embd_head_v    = 256
0.00.238.863 I llm_load_print_meta: n_gqa            = 8
0.00.238.864 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.238.867 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.238.868 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.238.869 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.238.870 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.238.873 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.238.874 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.238.875 I llm_load_print_meta: n_ff             = 16384
0.00.238.876 I llm_load_print_meta: n_expert         = 0
0.00.238.876 I llm_load_print_meta: n_expert_used    = 0
0.00.238.876 I llm_load_print_meta: causal attn      = 1
0.00.238.877 I llm_load_print_meta: pooling type     = 0
0.00.238.877 I llm_load_print_meta: rope type        = 2
0.00.238.878 I llm_load_print_meta: rope scaling     = linear
0.00.238.880 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.238.881 I llm_load_print_meta: freq_scale_train = 1
0.00.238.882 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.238.882 I llm_load_print_meta: rope_finetuned   = unknown
0.00.238.883 I llm_load_print_meta: ssm_d_conv       = 0
0.00.238.883 I llm_load_print_meta: ssm_d_inner      = 0
0.00.238.884 I llm_load_print_meta: ssm_d_state      = 0
0.00.238.884 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.238.884 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.238.886 I llm_load_print_meta: model type       = 2B
0.00.238.886 I llm_load_print_meta: model ftype      = Q8_0
0.00.238.888 I llm_load_print_meta: model params     = 2.51 B
0.00.238.889 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.238.889 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.238.890 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.238.891 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.238.891 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.238.891 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.238.892 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.238.892 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.238.893 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.238.894 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.238.894 I llm_load_print_meta: max token length = 93
0.00.238.918 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.314.523 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.314.529 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.314.530 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.314.531 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.314.531 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.314.532 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.319.638 I llama_new_context_with_model: n_ctx      = 8192
0.00.319.644 I llama_new_context_with_model: n_batch    = 2048
0.00.319.645 I llama_new_context_with_model: n_ubatch   = 512
0.00.319.645 I llama_new_context_with_model: flash_attn = 0
0.00.319.648 I llama_new_context_with_model: freq_base  = 10000.0
0.00.319.648 I llama_new_context_with_model: freq_scale = 1
0.00.347.773 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.347.788 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.347.892 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.348.758 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.348.766 I llama_new_context_with_model: graph nodes  = 601
0.00.348.766 I llama_new_context_with_model: graph splits = 1
0.00.348.769 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.120 I main: llama threadpool init, n_threads = 4
0.00.440.133 I 
0.00.440.212 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.216 I 
0.00.440.254 I sampler seed: 433828491
0.00.440.267 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.269 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.270 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.270 I 
 increasities. [end of text]


0.00.728.770 I llama_perf_sampler_print:    sampling time =       0.63 ms /     5 runs   (    0.13 ms per token,  7949.13 tokens per second)
0.00.728.772 I llama_perf_context_print:        load time =     438.18 ms
0.00.728.773 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.728.775 I llama_perf_context_print:        eval time =     285.25 ms /     4 runs   (   71.31 ms per token,    14.02 tokens per second)
0.00.728.775 I llama_perf_context_print:       total time =     288.66 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.550 I build: 3842 (2f37e21d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.871 I main: llama backend init
0.00.002.297 I main: load the model and apply lora adapter, if any
0.00.022.435 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.482 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.497 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.503 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.506 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.510 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.510 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.511 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.511 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.512 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.513 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.517 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.517 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.518 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.518 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.519 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.102 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.676 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.565 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.571 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.572 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.572 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.573 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.574 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.575 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.578 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.579 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.579 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.580 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.581 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.585 I llama_model_loader: - type  f32:   37 tensors
0.00.133.588 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.175 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.283 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.989 I llm_load_vocab: special tokens cache size = 5
0.00.233.366 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.380 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.380 I llm_load_print_meta: arch             = gemma
0.00.233.381 I llm_load_print_meta: vocab type       = SPM
0.00.233.382 I llm_load_print_meta: n_vocab          = 256000
0.00.233.382 I llm_load_print_meta: n_merges         = 0
0.00.233.382 I llm_load_print_meta: vocab_only       = 0
0.00.233.382 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.383 I llm_load_print_meta: n_embd           = 2048
0.00.233.383 I llm_load_print_meta: n_layer          = 18
0.00.233.393 I llm_load_print_meta: n_head           = 8
0.00.233.394 I llm_load_print_meta: n_head_kv        = 1
0.00.233.395 I llm_load_print_meta: n_rot            = 256
0.00.233.395 I llm_load_print_meta: n_swa            = 0
0.00.233.395 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.396 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.396 I llm_load_print_meta: n_gqa            = 8
0.00.233.397 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.398 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.399 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.401 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.401 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.401 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.402 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.403 I llm_load_print_meta: n_ff             = 16384
0.00.233.403 I llm_load_print_meta: n_expert         = 0
0.00.233.403 I llm_load_print_meta: n_expert_used    = 0
0.00.233.404 I llm_load_print_meta: causal attn      = 1
0.00.233.404 I llm_load_print_meta: pooling type     = 0
0.00.233.404 I llm_load_print_meta: rope type        = 2
0.00.233.404 I llm_load_print_meta: rope scaling     = linear
0.00.233.406 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.406 I llm_load_print_meta: freq_scale_train = 1
0.00.233.406 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.407 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.407 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.407 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.407 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.408 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.408 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.409 I llm_load_print_meta: model type       = 2B
0.00.233.410 I llm_load_print_meta: model ftype      = Q8_0
0.00.233.410 I llm_load_print_meta: model params     = 2.51 B
0.00.233.411 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.411 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.412 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.412 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.413 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.413 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.413 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.414 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.414 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.415 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.415 I llm_load_print_meta: max token length = 93
0.00.233.430 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.307.406 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.307.413 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.312.450 I llama_new_context_with_model: n_ctx      = 8192
0.00.312.457 I llama_new_context_with_model: n_batch    = 2048
0.00.312.457 I llama_new_context_with_model: n_ubatch   = 512
0.00.312.458 I llama_new_context_with_model: flash_attn = 0
0.00.312.460 I llama_new_context_with_model: freq_base  = 10000.0
0.00.312.461 I llama_new_context_with_model: freq_scale = 1
0.00.340.909 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.340.923 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.341.012 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.341.869 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.341.877 I llama_new_context_with_model: graph nodes  = 601
0.00.341.878 I llama_new_context_with_model: graph splits = 1
0.00.341.880 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.653 I main: llama threadpool init, n_threads = 4
0.00.436.665 I 
0.00.436.740 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.743 I 
0.00.436.781 I sampler seed: 3454025291
0.00.436.791 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.794 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.795 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.795 I 
 increasities!

I cannot answer this question as it contains inappropriate content. [end of text]


0.01.644.371 I llama_perf_sampler_print:    sampling time =       2.38 ms /    17 runs   (    0.14 ms per token,  7142.86 tokens per second)
0.01.644.374 I llama_perf_context_print:        load time =     434.34 ms
0.01.644.375 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.644.376 I llama_perf_context_print:        eval time =    1198.26 ms /    16 runs   (   74.89 ms per token,    13.35 tokens per second)
0.01.644.377 I llama_perf_context_print:       total time =    1207.73 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.618s
user	0m23.844s
sys	0m9.376s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3842 (2f37e21d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32205.89 ms
main:    total time = 32205.89 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.571 I build: 3842 (2f37e21d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.868 I main: load the model and apply lora adapter, if any
0.00.022.199 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.248 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.260 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.265 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.266 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.271 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.274 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.275 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.275 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.276 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.276 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.281 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.282 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.283 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.283 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.284 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.982 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.240 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.075 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.081 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.081 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.082 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.083 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.084 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.084 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.087 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.087 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.088 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.089 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.090 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.093 I llama_model_loader: - type  f32:   37 tensors
0.00.133.096 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.096 I llama_model_loader: - type q6_K:   19 tensors
0.00.199.733 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.441 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.124 I llm_load_vocab: special tokens cache size = 5
0.00.232.574 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.588 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.588 I llm_load_print_meta: arch             = gemma
0.00.232.589 I llm_load_print_meta: vocab type       = SPM
0.00.232.589 I llm_load_print_meta: n_vocab          = 256000
0.00.232.590 I llm_load_print_meta: n_merges         = 0
0.00.232.590 I llm_load_print_meta: vocab_only       = 0
0.00.232.590 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.591 I llm_load_print_meta: n_embd           = 2048
0.00.232.591 I llm_load_print_meta: n_layer          = 18
0.00.232.602 I llm_load_print_meta: n_head           = 8
0.00.232.603 I llm_load_print_meta: n_head_kv        = 1
0.00.232.603 I llm_load_print_meta: n_rot            = 256
0.00.232.604 I llm_load_print_meta: n_swa            = 0
0.00.232.604 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.604 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.605 I llm_load_print_meta: n_gqa            = 8
0.00.232.606 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.607 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.608 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.610 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.610 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.610 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.611 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.612 I llm_load_print_meta: n_ff             = 16384
0.00.232.612 I llm_load_print_meta: n_expert         = 0
0.00.232.612 I llm_load_print_meta: n_expert_used    = 0
0.00.232.613 I llm_load_print_meta: causal attn      = 1
0.00.232.613 I llm_load_print_meta: pooling type     = 0
0.00.232.613 I llm_load_print_meta: rope type        = 2
0.00.232.613 I llm_load_print_meta: rope scaling     = linear
0.00.232.615 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.615 I llm_load_print_meta: freq_scale_train = 1
0.00.232.616 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.616 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.616 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.617 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.617 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.617 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.617 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.618 I llm_load_print_meta: model type       = 2B
0.00.232.618 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.232.619 I llm_load_print_meta: model params     = 2.51 B
0.00.232.620 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.232.620 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.621 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.621 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.621 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.622 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.622 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.622 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.623 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.623 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.623 I llm_load_print_meta: max token length = 93
0.00.232.647 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.290.352 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.290.358 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.290.358 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.290.359 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.290.359 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.290.360 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.295.358 I llama_new_context_with_model: n_ctx      = 8192
0.00.295.364 I llama_new_context_with_model: n_batch    = 2048
0.00.295.364 I llama_new_context_with_model: n_ubatch   = 512
0.00.295.365 I llama_new_context_with_model: flash_attn = 0
0.00.295.367 I llama_new_context_with_model: freq_base  = 10000.0
0.00.295.368 I llama_new_context_with_model: freq_scale = 1
0.00.323.867 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.323.882 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.323.980 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.324.850 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.324.858 I llama_new_context_with_model: graph nodes  = 601
0.00.324.859 I llama_new_context_with_model: graph splits = 1
0.00.324.860 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.405.545 I main: llama threadpool init, n_threads = 4
0.00.405.556 I 
0.00.405.631 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.405.634 I 
0.00.405.662 I sampler seed: 3943697452
0.00.405.671 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.405.673 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.405.674 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.405.674 I 
 increamically, my friend.

I am not sure if this is the best way to express myself, but I wanted to share my thoughts and feelings with you

0.01.978.656 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6969.38 tokens per second)
0.01.978.660 I llama_perf_context_print:        load time =     403.66 ms
0.01.978.661 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.978.663 I llama_perf_context_print:        eval time =    1555.65 ms /    32 runs   (   48.61 ms per token,    20.57 tokens per second)
0.01.978.664 I llama_perf_context_print:       total time =    1573.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3842 (2f37e21d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31999.65 ms
main:    total time = 31999.65 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.539 I build: 3842 (2f37e21d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.840 I main: load the model and apply lora adapter, if any
0.00.021.813 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.824 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.830 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.831 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.834 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.834 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.835 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.836 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.836 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.836 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.840 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.840 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.841 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.842 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.842 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.967 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.015 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.859 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.866 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.866 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.867 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.868 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.868 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.869 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.872 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.873 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.875 I llama_model_loader: - type  f32:   37 tensors
0.00.131.877 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.877 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.171 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.223.237 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.224.011 I llm_load_vocab: special tokens cache size = 5
0.00.242.562 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.242.575 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.242.575 I llm_load_print_meta: arch             = gemma
0.00.242.576 I llm_load_print_meta: vocab type       = SPM
0.00.242.577 I llm_load_print_meta: n_vocab          = 256000
0.00.242.577 I llm_load_print_meta: n_merges         = 0
0.00.242.578 I llm_load_print_meta: vocab_only       = 0
0.00.242.578 I llm_load_print_meta: n_ctx_train      = 8192
0.00.242.578 I llm_load_print_meta: n_embd           = 2048
0.00.242.579 I llm_load_print_meta: n_layer          = 18
0.00.242.590 I llm_load_print_meta: n_head           = 8
0.00.242.592 I llm_load_print_meta: n_head_kv        = 1
0.00.242.592 I llm_load_print_meta: n_rot            = 256
0.00.242.592 I llm_load_print_meta: n_swa            = 0
0.00.242.593 I llm_load_print_meta: n_embd_head_k    = 256
0.00.242.593 I llm_load_print_meta: n_embd_head_v    = 256
0.00.242.594 I llm_load_print_meta: n_gqa            = 8
0.00.242.595 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.242.596 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.242.597 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.242.598 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.242.599 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.242.599 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.242.599 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.242.600 I llm_load_print_meta: n_ff             = 16384
0.00.242.601 I llm_load_print_meta: n_expert         = 0
0.00.242.601 I llm_load_print_meta: n_expert_used    = 0
0.00.242.601 I llm_load_print_meta: causal attn      = 1
0.00.242.602 I llm_load_print_meta: pooling type     = 0
0.00.242.602 I llm_load_print_meta: rope type        = 2
0.00.242.602 I llm_load_print_meta: rope scaling     = linear
0.00.242.604 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.242.604 I llm_load_print_meta: freq_scale_train = 1
0.00.242.605 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.242.605 I llm_load_print_meta: rope_finetuned   = unknown
0.00.242.605 I llm_load_print_meta: ssm_d_conv       = 0
0.00.242.605 I llm_load_print_meta: ssm_d_inner      = 0
0.00.242.605 I llm_load_print_meta: ssm_d_state      = 0
0.00.242.606 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.242.606 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.242.607 I llm_load_print_meta: model type       = 2B
0.00.242.607 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.242.608 I llm_load_print_meta: model params     = 2.51 B
0.00.242.608 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.242.609 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.242.609 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.242.610 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.242.610 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.242.610 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.242.611 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.242.611 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.242.611 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.242.612 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.242.612 I llm_load_print_meta: max token length = 93
0.00.242.629 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.300.142 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.305.202 I llama_new_context_with_model: n_ctx      = 8192
0.00.305.209 I llama_new_context_with_model: n_batch    = 2048
0.00.305.209 I llama_new_context_with_model: n_ubatch   = 512
0.00.305.210 I llama_new_context_with_model: flash_attn = 0
0.00.305.212 I llama_new_context_with_model: freq_base  = 10000.0
0.00.305.213 I llama_new_context_with_model: freq_scale = 1
0.00.334.600 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.334.615 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.334.709 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.335.557 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.335.565 I llama_new_context_with_model: graph nodes  = 601
0.00.335.565 I llama_new_context_with_model: graph splits = 1
0.00.335.567 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.415.541 I main: llama threadpool init, n_threads = 4
0.00.415.553 I 
0.00.415.623 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.415.627 I 
0.00.415.654 I sampler seed: 1765585187
0.00.415.662 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.415.675 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.415.679 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.415.679 I 
 seconally after a long silence. [end of text]


0.00.802.620 I llama_perf_sampler_print:    sampling time =       1.20 ms /     9 runs   (    0.13 ms per token,  7475.08 tokens per second)
0.00.802.622 I llama_perf_context_print:        load time =     413.68 ms
0.00.802.623 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.802.625 I llama_perf_context_print:        eval time =     382.24 ms /     8 runs   (   47.78 ms per token,    20.93 tokens per second)
0.00.802.626 I llama_perf_context_print:       total time =     387.09 ms /     9 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m9.801s
user	8m8.954s
sys	0m6.910s
