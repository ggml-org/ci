+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.171 I build: 4362 (2fffc52b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.361 I main: llama backend init
0.00.000.367 I main: load the model and apply lora adapter, if any
0.00.020.881 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.891 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.903 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.909 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.910 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.915 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.915 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.916 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.917 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.917 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.918 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.923 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.924 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.925 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.926 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.927 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.012 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.079 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.983 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.989 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.990 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.990 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.991 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.992 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.992 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.995 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.997 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.997 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.998 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.999 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.002 I llama_model_loader: - type  f32:   37 tensors
0.00.133.004 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.733 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.052 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.719 I llm_load_vocab: special tokens cache size = 5
0.00.281.538 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.553 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.281.554 I llm_load_print_meta: arch             = gemma
0.00.281.554 I llm_load_print_meta: vocab type       = SPM
0.00.281.555 I llm_load_print_meta: n_vocab          = 256000
0.00.281.556 I llm_load_print_meta: n_merges         = 0
0.00.281.556 I llm_load_print_meta: vocab_only       = 0
0.00.281.556 I llm_load_print_meta: n_ctx_train      = 8192
0.00.281.557 I llm_load_print_meta: n_embd           = 2048
0.00.281.557 I llm_load_print_meta: n_layer          = 18
0.00.281.568 I llm_load_print_meta: n_head           = 8
0.00.281.569 I llm_load_print_meta: n_head_kv        = 1
0.00.281.569 I llm_load_print_meta: n_rot            = 256
0.00.281.570 I llm_load_print_meta: n_swa            = 0
0.00.281.570 I llm_load_print_meta: n_embd_head_k    = 256
0.00.281.570 I llm_load_print_meta: n_embd_head_v    = 256
0.00.281.571 I llm_load_print_meta: n_gqa            = 8
0.00.281.572 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.281.573 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.281.574 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.281.576 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.281.576 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.281.576 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.281.577 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.281.578 I llm_load_print_meta: n_ff             = 16384
0.00.281.578 I llm_load_print_meta: n_expert         = 0
0.00.281.578 I llm_load_print_meta: n_expert_used    = 0
0.00.281.579 I llm_load_print_meta: causal attn      = 1
0.00.281.579 I llm_load_print_meta: pooling type     = 0
0.00.281.579 I llm_load_print_meta: rope type        = 2
0.00.281.580 I llm_load_print_meta: rope scaling     = linear
0.00.281.581 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.281.582 I llm_load_print_meta: freq_scale_train = 1
0.00.281.582 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.281.583 I llm_load_print_meta: rope_finetuned   = unknown
0.00.281.583 I llm_load_print_meta: ssm_d_conv       = 0
0.00.281.583 I llm_load_print_meta: ssm_d_inner      = 0
0.00.281.583 I llm_load_print_meta: ssm_d_state      = 0
0.00.281.584 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.281.584 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.281.584 I llm_load_print_meta: model type       = 2B
0.00.281.585 I llm_load_print_meta: model ftype      = Q8_0
0.00.281.586 I llm_load_print_meta: model params     = 2.51 B
0.00.281.587 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.281.587 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.281.588 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.281.588 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.281.588 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.281.589 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.281.589 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.281.589 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.281.590 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.281.590 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.281.590 I llm_load_print_meta: max token length = 93
0.00.382.118 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.382.125 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.382.126 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.382.127 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.382.127 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.382.128 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.387.389 I llama_new_context_with_model: n_seq_max     = 1
0.00.387.396 I llama_new_context_with_model: n_ctx         = 4096
0.00.387.397 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.387.397 I llama_new_context_with_model: n_batch       = 2048
0.00.387.397 I llama_new_context_with_model: n_ubatch      = 512
0.00.387.398 I llama_new_context_with_model: flash_attn    = 0
0.00.387.400 I llama_new_context_with_model: freq_base     = 10000.0
0.00.387.401 I llama_new_context_with_model: freq_scale    = 1
0.00.387.402 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.387.422 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.401.987 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.401.999 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.402.098 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.403.387 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.403.393 I llama_new_context_with_model: graph nodes  = 601
0.00.403.394 I llama_new_context_with_model: graph splits = 1
0.00.403.396 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.403.397 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.498 I main: llama threadpool init, n_threads = 4
0.00.489.513 I 
0.00.489.586 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.489.590 I 
0.00.489.632 I sampler seed: 2558038654
0.00.489.643 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.645 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.489.646 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.647 I 
 increasities. [end of text]


0.00.774.740 I llama_perf_sampler_print:    sampling time =       0.63 ms /     5 runs   (    0.13 ms per token,  7949.13 tokens per second)
0.00.774.741 I llama_perf_context_print:        load time =     489.11 ms
0.00.774.743 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.774.744 I llama_perf_context_print:        eval time =     281.70 ms /     4 runs   (   70.43 ms per token,    14.20 tokens per second)
0.00.774.744 I llama_perf_context_print:       total time =     285.25 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.579 I build: 4362 (2fffc52b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.000.780 I main: load the model and apply lora adapter, if any
0.00.021.533 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.550 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.562 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.564 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.570 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.574 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.575 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.589 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.593 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.594 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.599 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.601 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.602 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.602 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.603 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.476 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.450 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.332 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.340 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.341 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.341 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.342 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.343 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.343 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.346 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.347 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.347 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.348 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.349 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.353 I llama_model_loader: - type  f32:   37 tensors
0.00.133.354 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.066 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.273.266 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.273.830 I llm_load_vocab: special tokens cache size = 5
0.00.294.669 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.294.684 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.294.684 I llm_load_print_meta: arch             = gemma
0.00.294.685 I llm_load_print_meta: vocab type       = SPM
0.00.294.686 I llm_load_print_meta: n_vocab          = 256000
0.00.294.686 I llm_load_print_meta: n_merges         = 0
0.00.294.687 I llm_load_print_meta: vocab_only       = 0
0.00.294.687 I llm_load_print_meta: n_ctx_train      = 8192
0.00.294.687 I llm_load_print_meta: n_embd           = 2048
0.00.294.688 I llm_load_print_meta: n_layer          = 18
0.00.294.699 I llm_load_print_meta: n_head           = 8
0.00.294.700 I llm_load_print_meta: n_head_kv        = 1
0.00.294.700 I llm_load_print_meta: n_rot            = 256
0.00.294.700 I llm_load_print_meta: n_swa            = 0
0.00.294.701 I llm_load_print_meta: n_embd_head_k    = 256
0.00.294.701 I llm_load_print_meta: n_embd_head_v    = 256
0.00.294.702 I llm_load_print_meta: n_gqa            = 8
0.00.294.703 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.294.704 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.294.704 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.294.706 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.294.706 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.294.706 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.294.707 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.294.708 I llm_load_print_meta: n_ff             = 16384
0.00.294.708 I llm_load_print_meta: n_expert         = 0
0.00.294.708 I llm_load_print_meta: n_expert_used    = 0
0.00.294.709 I llm_load_print_meta: causal attn      = 1
0.00.294.709 I llm_load_print_meta: pooling type     = 0
0.00.294.709 I llm_load_print_meta: rope type        = 2
0.00.294.710 I llm_load_print_meta: rope scaling     = linear
0.00.294.711 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.294.712 I llm_load_print_meta: freq_scale_train = 1
0.00.294.713 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.294.713 I llm_load_print_meta: rope_finetuned   = unknown
0.00.294.713 I llm_load_print_meta: ssm_d_conv       = 0
0.00.294.714 I llm_load_print_meta: ssm_d_inner      = 0
0.00.294.715 I llm_load_print_meta: ssm_d_state      = 0
0.00.294.715 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.294.715 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.294.716 I llm_load_print_meta: model type       = 2B
0.00.294.717 I llm_load_print_meta: model ftype      = Q8_0
0.00.294.718 I llm_load_print_meta: model params     = 2.51 B
0.00.294.719 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.294.719 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.294.723 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.294.723 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.294.723 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.294.724 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.294.724 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.294.724 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.294.725 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.294.725 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.294.726 I llm_load_print_meta: max token length = 93
0.00.390.155 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.395.347 I llama_new_context_with_model: n_seq_max     = 1
0.00.395.353 I llama_new_context_with_model: n_ctx         = 4096
0.00.395.354 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.395.354 I llama_new_context_with_model: n_batch       = 2048
0.00.395.354 I llama_new_context_with_model: n_ubatch      = 512
0.00.395.355 I llama_new_context_with_model: flash_attn    = 0
0.00.395.358 I llama_new_context_with_model: freq_base     = 10000.0
0.00.395.359 I llama_new_context_with_model: freq_scale    = 1
0.00.395.360 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.395.380 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.410.195 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.410.210 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.410.307 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.411.571 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.411.577 I llama_new_context_with_model: graph nodes  = 601
0.00.411.578 I llama_new_context_with_model: graph splits = 1
0.00.411.580 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.411.580 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.241 I main: llama threadpool init, n_threads = 4
0.00.493.258 I 
0.00.493.329 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.493.333 I 
0.00.493.373 I sampler seed: 980256165
0.00.493.386 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.493.397 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.493.400 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.493.401 I 
 seconally.

A. The importance of communication in business.
B. The challenges of communication in business.
C. Communication strategies for businesses.



0.02.721.908 I llama_perf_sampler_print:    sampling time =       4.94 ms /    33 runs   (    0.15 ms per token,  6677.46 tokens per second)
0.02.721.910 I llama_perf_context_print:        load time =     492.44 ms
0.02.721.912 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.721.913 I llama_perf_context_print:        eval time =    2208.42 ms /    32 runs   (   69.01 ms per token,    14.49 tokens per second)
0.02.721.914 I llama_perf_context_print:       total time =    2228.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.589 I build: 4362 (2fffc52b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.000.787 I main: load the model and apply lora adapter, if any
0.00.021.050 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.060 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.068 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.076 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.077 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.081 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.081 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.082 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.083 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.083 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.084 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.089 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.090 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.090 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.091 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.091 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.792 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.596 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.443 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.449 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.450 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.451 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.451 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.452 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.453 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.456 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.456 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.457 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.458 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.458 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.462 I llama_model_loader: - type  f32:   37 tensors
0.00.132.463 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.444 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.423 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.049 I llm_load_vocab: special tokens cache size = 5
0.00.279.021 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.039 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.039 I llm_load_print_meta: arch             = gemma
0.00.279.040 I llm_load_print_meta: vocab type       = SPM
0.00.279.040 I llm_load_print_meta: n_vocab          = 256000
0.00.279.041 I llm_load_print_meta: n_merges         = 0
0.00.279.041 I llm_load_print_meta: vocab_only       = 0
0.00.279.042 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.042 I llm_load_print_meta: n_embd           = 2048
0.00.279.043 I llm_load_print_meta: n_layer          = 18
0.00.279.053 I llm_load_print_meta: n_head           = 8
0.00.279.054 I llm_load_print_meta: n_head_kv        = 1
0.00.279.055 I llm_load_print_meta: n_rot            = 256
0.00.279.055 I llm_load_print_meta: n_swa            = 0
0.00.279.055 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.056 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.056 I llm_load_print_meta: n_gqa            = 8
0.00.279.057 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.058 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.059 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.061 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.061 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.062 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.062 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.063 I llm_load_print_meta: n_ff             = 16384
0.00.279.063 I llm_load_print_meta: n_expert         = 0
0.00.279.064 I llm_load_print_meta: n_expert_used    = 0
0.00.279.064 I llm_load_print_meta: causal attn      = 1
0.00.279.064 I llm_load_print_meta: pooling type     = 0
0.00.279.065 I llm_load_print_meta: rope type        = 2
0.00.279.065 I llm_load_print_meta: rope scaling     = linear
0.00.279.067 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.067 I llm_load_print_meta: freq_scale_train = 1
0.00.279.067 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.068 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.068 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.068 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.069 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.069 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.069 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.070 I llm_load_print_meta: model type       = 2B
0.00.279.070 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.071 I llm_load_print_meta: model params     = 2.51 B
0.00.279.072 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.072 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.073 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.073 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.073 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.073 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.074 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.074 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.074 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.075 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.075 I llm_load_print_meta: max token length = 93
0.00.356.366 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.356.372 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.356.373 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.356.373 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.356.374 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.356.374 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.361.738 I llama_new_context_with_model: n_seq_max     = 1
0.00.361.745 I llama_new_context_with_model: n_ctx         = 4096
0.00.361.746 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.361.746 I llama_new_context_with_model: n_batch       = 2048
0.00.361.747 I llama_new_context_with_model: n_ubatch      = 512
0.00.361.747 I llama_new_context_with_model: flash_attn    = 0
0.00.361.752 I llama_new_context_with_model: freq_base     = 10000.0
0.00.361.753 I llama_new_context_with_model: freq_scale    = 1
0.00.361.754 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.776 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.377.078 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.377.092 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.377.187 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.441 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.378.448 I llama_new_context_with_model: graph nodes  = 601
0.00.378.448 I llama_new_context_with_model: graph splits = 1
0.00.378.451 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.378.451 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.893 I main: llama threadpool init, n_threads = 4
0.00.465.909 I 
0.00.465.984 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.465.987 I 
0.00.466.036 I sampler seed: 2447544176
0.00.466.048 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.466.050 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.466.061 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.466.062 I 
 increasities, 
and the power of the sun.

I am unable to answer the question as it contains sexually suggestive content that is not appropriate for me

0.02.769.259 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6926.95 tokens per second)
0.02.769.262 I llama_perf_context_print:        load time =     465.09 ms
0.02.769.263 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.769.264 I llama_perf_context_print:        eval time =    2283.94 ms /    32 runs   (   71.37 ms per token,    14.01 tokens per second)
0.02.769.265 I llama_perf_context_print:       total time =    2303.37 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.189 I build: 4362 (2fffc52b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.381 I main: llama backend init
0.00.000.388 I main: load the model and apply lora adapter, if any
0.00.020.476 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.485 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.498 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.502 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.504 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.508 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.511 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.512 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.513 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.513 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.514 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.518 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.519 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.520 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.520 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.521 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.047.976 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.564 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.412 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.419 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.420 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.420 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.421 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.422 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.423 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.425 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.425 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.427 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.428 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.428 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.432 I llama_model_loader: - type  f32:   37 tensors
0.00.131.433 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.159 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.298 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.992 I llm_load_vocab: special tokens cache size = 5
0.00.278.876 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.894 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.895 I llm_load_print_meta: arch             = gemma
0.00.278.895 I llm_load_print_meta: vocab type       = SPM
0.00.278.896 I llm_load_print_meta: n_vocab          = 256000
0.00.278.896 I llm_load_print_meta: n_merges         = 0
0.00.278.897 I llm_load_print_meta: vocab_only       = 0
0.00.278.897 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.898 I llm_load_print_meta: n_embd           = 2048
0.00.278.898 I llm_load_print_meta: n_layer          = 18
0.00.278.910 I llm_load_print_meta: n_head           = 8
0.00.278.911 I llm_load_print_meta: n_head_kv        = 1
0.00.278.913 I llm_load_print_meta: n_rot            = 256
0.00.278.914 I llm_load_print_meta: n_swa            = 0
0.00.278.914 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.915 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.916 I llm_load_print_meta: n_gqa            = 8
0.00.278.917 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.918 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.919 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.920 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.921 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.921 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.921 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.922 I llm_load_print_meta: n_ff             = 16384
0.00.278.923 I llm_load_print_meta: n_expert         = 0
0.00.278.923 I llm_load_print_meta: n_expert_used    = 0
0.00.278.923 I llm_load_print_meta: causal attn      = 1
0.00.278.924 I llm_load_print_meta: pooling type     = 0
0.00.278.924 I llm_load_print_meta: rope type        = 2
0.00.278.924 I llm_load_print_meta: rope scaling     = linear
0.00.278.926 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.927 I llm_load_print_meta: freq_scale_train = 1
0.00.278.927 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.927 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.927 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.928 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.928 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.928 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.929 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.929 I llm_load_print_meta: model type       = 2B
0.00.278.930 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.930 I llm_load_print_meta: model params     = 2.51 B
0.00.278.931 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.932 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.933 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.933 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.933 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.933 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.934 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.934 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.935 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.935 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.935 I llm_load_print_meta: max token length = 93
0.00.350.193 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.350.199 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.355.281 I llama_new_context_with_model: n_seq_max     = 1
0.00.355.288 I llama_new_context_with_model: n_ctx         = 4096
0.00.355.289 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.355.289 I llama_new_context_with_model: n_batch       = 2048
0.00.355.289 I llama_new_context_with_model: n_ubatch      = 512
0.00.355.290 I llama_new_context_with_model: flash_attn    = 0
0.00.355.293 I llama_new_context_with_model: freq_base     = 10000.0
0.00.355.293 I llama_new_context_with_model: freq_scale    = 1
0.00.355.294 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.355.316 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.370.453 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.370.467 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.370.570 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.854 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.371.861 I llama_new_context_with_model: graph nodes  = 601
0.00.371.861 I llama_new_context_with_model: graph splits = 1
0.00.371.864 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.371.864 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.501 I main: llama threadpool init, n_threads = 4
0.00.461.517 I 
0.00.461.587 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.461.590 I 
0.00.461.629 I sampler seed: 513474340
0.00.461.640 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.642 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.461.643 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.643 I 
 increasities and the moral ambiguity of corporate social responsibility

**I. Introduction**

The increasing visibility of corporations' social responsibility (CSR) initiatives has sparked discussions

0.02.911.645 I llama_perf_sampler_print:    sampling time =       5.01 ms /    33 runs   (    0.15 ms per token,  6580.26 tokens per second)
0.02.911.648 I llama_perf_context_print:        load time =     461.10 ms
0.02.911.649 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.911.650 I llama_perf_context_print:        eval time =    2430.64 ms /    32 runs   (   75.96 ms per token,    13.17 tokens per second)
0.02.911.651 I llama_perf_context_print:       total time =    2450.15 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.781s
user	0m31.995s
sys	0m9.506s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4362 (2fffc52b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40298.09 ms
main:    total time = 40298.09 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.169 I build: 4362 (2fffc52b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.361 I main: llama backend init
0.00.000.368 I main: load the model and apply lora adapter, if any
0.00.020.592 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.604 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.617 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.622 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.624 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.628 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.630 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.631 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.631 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.632 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.632 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.637 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.637 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.638 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.639 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.640 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.332 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.387 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.324 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.332 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.333 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.333 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.334 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.335 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.336 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.339 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.339 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.340 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.341 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.342 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.346 I llama_model_loader: - type  f32:   37 tensors
0.00.132.347 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.347 I llama_model_loader: - type q6_K:   19 tensors
0.00.225.699 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.276.106 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.276.741 I llm_load_vocab: special tokens cache size = 5
0.00.297.917 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.297.936 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.297.936 I llm_load_print_meta: arch             = gemma
0.00.297.937 I llm_load_print_meta: vocab type       = SPM
0.00.297.938 I llm_load_print_meta: n_vocab          = 256000
0.00.297.938 I llm_load_print_meta: n_merges         = 0
0.00.297.938 I llm_load_print_meta: vocab_only       = 0
0.00.297.939 I llm_load_print_meta: n_ctx_train      = 8192
0.00.297.939 I llm_load_print_meta: n_embd           = 2048
0.00.297.940 I llm_load_print_meta: n_layer          = 18
0.00.297.951 I llm_load_print_meta: n_head           = 8
0.00.297.952 I llm_load_print_meta: n_head_kv        = 1
0.00.297.952 I llm_load_print_meta: n_rot            = 256
0.00.297.953 I llm_load_print_meta: n_swa            = 0
0.00.297.953 I llm_load_print_meta: n_embd_head_k    = 256
0.00.297.953 I llm_load_print_meta: n_embd_head_v    = 256
0.00.297.954 I llm_load_print_meta: n_gqa            = 8
0.00.297.955 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.297.956 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.297.957 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.297.958 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.297.958 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.297.959 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.297.959 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.297.960 I llm_load_print_meta: n_ff             = 16384
0.00.297.961 I llm_load_print_meta: n_expert         = 0
0.00.297.961 I llm_load_print_meta: n_expert_used    = 0
0.00.297.961 I llm_load_print_meta: causal attn      = 1
0.00.297.962 I llm_load_print_meta: pooling type     = 0
0.00.297.962 I llm_load_print_meta: rope type        = 2
0.00.297.962 I llm_load_print_meta: rope scaling     = linear
0.00.297.965 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.297.966 I llm_load_print_meta: freq_scale_train = 1
0.00.297.966 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.297.966 I llm_load_print_meta: rope_finetuned   = unknown
0.00.297.967 I llm_load_print_meta: ssm_d_conv       = 0
0.00.297.968 I llm_load_print_meta: ssm_d_inner      = 0
0.00.297.971 I llm_load_print_meta: ssm_d_state      = 0
0.00.297.972 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.297.972 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.297.972 I llm_load_print_meta: model type       = 2B
0.00.297.973 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.297.974 I llm_load_print_meta: model params     = 2.51 B
0.00.297.975 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.297.975 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.297.976 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.297.976 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.297.976 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.297.976 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.297.977 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.297.977 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.297.978 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.297.978 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.297.979 I llm_load_print_meta: max token length = 93
0.00.357.282 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.357.291 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.357.292 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.357.293 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.357.293 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.357.294 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.362.430 I llama_new_context_with_model: n_seq_max     = 1
0.00.362.437 I llama_new_context_with_model: n_ctx         = 4096
0.00.362.438 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.362.438 I llama_new_context_with_model: n_batch       = 2048
0.00.362.439 I llama_new_context_with_model: n_ubatch      = 512
0.00.362.440 I llama_new_context_with_model: flash_attn    = 0
0.00.362.446 I llama_new_context_with_model: freq_base     = 10000.0
0.00.362.447 I llama_new_context_with_model: freq_scale    = 1
0.00.362.448 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.362.472 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.378.144 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.378.158 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.378.254 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.522 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.379.530 I llama_new_context_with_model: graph nodes  = 601
0.00.379.530 I llama_new_context_with_model: graph splits = 1
0.00.379.533 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.379.533 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.780 I main: llama threadpool init, n_threads = 4
0.00.458.795 I 
0.00.458.870 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.458.873 I 
0.00.458.916 I sampler seed: 3395004912
0.00.458.927 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.939 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.458.942 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.943 I 
 seconally, with all the grace and elegance that would befitting royalty. Her hair cascaded down her back, a silken waterfall against the azure sky, her

0.02.130.760 I llama_perf_sampler_print:    sampling time =       5.73 ms /    33 runs   (    0.17 ms per token,  5758.16 tokens per second)
0.02.130.762 I llama_perf_context_print:        load time =     458.39 ms
0.02.130.764 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.130.765 I llama_perf_context_print:        eval time =    1651.95 ms /    32 runs   (   51.62 ms per token,    19.37 tokens per second)
0.02.130.766 I llama_perf_context_print:       total time =    1671.99 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4362 (2fffc52b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40274.20 ms
main:    total time = 40274.20 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.522 I build: 4362 (2fffc52b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.719 I main: llama backend init
0.00.000.725 I main: load the model and apply lora adapter, if any
0.00.020.908 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.020.925 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.932 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.933 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.937 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.939 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.939 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.940 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.941 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.941 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.946 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.947 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.947 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.948 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.949 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.729 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.255 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.061 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.066 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.067 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.068 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.069 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.070 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.071 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.075 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.076 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.080 I llama_model_loader: - type  f32:   37 tensors
0.00.132.081 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.081 I llama_model_loader: - type q6_K:   19 tensors
0.00.226.332 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.281.193 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.281.795 I llm_load_vocab: special tokens cache size = 5
0.00.302.816 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.302.834 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.302.835 I llm_load_print_meta: arch             = gemma
0.00.302.835 I llm_load_print_meta: vocab type       = SPM
0.00.302.836 I llm_load_print_meta: n_vocab          = 256000
0.00.302.837 I llm_load_print_meta: n_merges         = 0
0.00.302.837 I llm_load_print_meta: vocab_only       = 0
0.00.302.838 I llm_load_print_meta: n_ctx_train      = 8192
0.00.302.838 I llm_load_print_meta: n_embd           = 2048
0.00.302.838 I llm_load_print_meta: n_layer          = 18
0.00.302.850 I llm_load_print_meta: n_head           = 8
0.00.302.851 I llm_load_print_meta: n_head_kv        = 1
0.00.302.851 I llm_load_print_meta: n_rot            = 256
0.00.302.851 I llm_load_print_meta: n_swa            = 0
0.00.302.852 I llm_load_print_meta: n_embd_head_k    = 256
0.00.302.852 I llm_load_print_meta: n_embd_head_v    = 256
0.00.302.853 I llm_load_print_meta: n_gqa            = 8
0.00.302.854 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.302.855 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.302.856 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.302.857 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.302.857 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.302.857 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.302.858 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.302.859 I llm_load_print_meta: n_ff             = 16384
0.00.302.859 I llm_load_print_meta: n_expert         = 0
0.00.302.859 I llm_load_print_meta: n_expert_used    = 0
0.00.302.860 I llm_load_print_meta: causal attn      = 1
0.00.302.860 I llm_load_print_meta: pooling type     = 0
0.00.302.860 I llm_load_print_meta: rope type        = 2
0.00.302.861 I llm_load_print_meta: rope scaling     = linear
0.00.302.862 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.302.863 I llm_load_print_meta: freq_scale_train = 1
0.00.302.863 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.302.863 I llm_load_print_meta: rope_finetuned   = unknown
0.00.302.863 I llm_load_print_meta: ssm_d_conv       = 0
0.00.302.864 I llm_load_print_meta: ssm_d_inner      = 0
0.00.302.864 I llm_load_print_meta: ssm_d_state      = 0
0.00.302.864 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.302.864 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.302.865 I llm_load_print_meta: model type       = 2B
0.00.302.865 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.302.866 I llm_load_print_meta: model params     = 2.51 B
0.00.302.867 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.302.867 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.302.868 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.302.868 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.302.868 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.302.868 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.302.869 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.302.869 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.302.870 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.302.870 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.302.870 I llm_load_print_meta: max token length = 93
0.00.360.613 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.365.633 I llama_new_context_with_model: n_seq_max     = 1
0.00.365.640 I llama_new_context_with_model: n_ctx         = 4096
0.00.365.640 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.365.640 I llama_new_context_with_model: n_batch       = 2048
0.00.365.641 I llama_new_context_with_model: n_ubatch      = 512
0.00.365.641 I llama_new_context_with_model: flash_attn    = 0
0.00.365.644 I llama_new_context_with_model: freq_base     = 10000.0
0.00.365.644 I llama_new_context_with_model: freq_scale    = 1
0.00.365.645 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.365.667 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.380.531 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.380.545 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.380.638 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.381.905 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.381.910 I llama_new_context_with_model: graph nodes  = 601
0.00.381.910 I llama_new_context_with_model: graph splits = 1
0.00.381.912 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.381.913 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.456.047 I main: llama threadpool init, n_threads = 4
0.00.456.063 I 
0.00.456.139 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.456.142 I 
0.00.456.191 I sampler seed: 2335695790
0.00.456.204 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.456.208 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.456.211 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.456.211 I 
 squared under the crown of a majestic oak tree. Its delicate petals swayed gently in the breeze, creating a symphony of rustling leaves and chirping birds.



0.02.090.473 I llama_perf_sampler_print:    sampling time =       5.02 ms /    33 runs   (    0.15 ms per token,  6568.47 tokens per second)
0.02.090.475 I llama_perf_context_print:        load time =     455.31 ms
0.02.090.477 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.090.478 I llama_perf_context_print:        eval time =    1615.04 ms /    32 runs   (   50.47 ms per token,    19.81 tokens per second)
0.02.090.479 I llama_perf_context_print:       total time =    1634.43 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.638s
user	10m24.825s
sys	0m7.172s
