+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.543 I build: 3965 (ac113a0f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.853 I main: load the model and apply lora adapter, if any
0.00.021.964 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.012 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.022 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.027 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.028 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.032 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.032 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.033 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.034 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.034 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.034 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.038 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.039 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.040 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.040 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.041 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.914 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.461 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.223 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.230 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.230 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.231 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.231 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.232 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.233 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.235 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.235 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.236 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.236 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.237 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.240 I llama_model_loader: - type  f32:   37 tensors
0.00.132.242 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.848 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.778 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.394 I llm_load_vocab: special tokens cache size = 5
0.00.269.438 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.454 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.454 I llm_load_print_meta: arch             = gemma
0.00.269.455 I llm_load_print_meta: vocab type       = SPM
0.00.269.456 I llm_load_print_meta: n_vocab          = 256000
0.00.269.456 I llm_load_print_meta: n_merges         = 0
0.00.269.457 I llm_load_print_meta: vocab_only       = 0
0.00.269.457 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.457 I llm_load_print_meta: n_embd           = 2048
0.00.269.457 I llm_load_print_meta: n_layer          = 18
0.00.269.470 I llm_load_print_meta: n_head           = 8
0.00.269.471 I llm_load_print_meta: n_head_kv        = 1
0.00.269.472 I llm_load_print_meta: n_rot            = 256
0.00.269.472 I llm_load_print_meta: n_swa            = 0
0.00.269.472 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.472 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.473 I llm_load_print_meta: n_gqa            = 8
0.00.269.474 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.475 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.476 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.477 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.477 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.478 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.478 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.479 I llm_load_print_meta: n_ff             = 16384
0.00.269.479 I llm_load_print_meta: n_expert         = 0
0.00.269.480 I llm_load_print_meta: n_expert_used    = 0
0.00.269.480 I llm_load_print_meta: causal attn      = 1
0.00.269.480 I llm_load_print_meta: pooling type     = 0
0.00.269.488 I llm_load_print_meta: rope type        = 2
0.00.269.488 I llm_load_print_meta: rope scaling     = linear
0.00.269.490 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.490 I llm_load_print_meta: freq_scale_train = 1
0.00.269.491 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.491 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.491 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.492 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.492 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.492 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.492 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.493 I llm_load_print_meta: model type       = 2B
0.00.269.494 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.494 I llm_load_print_meta: model params     = 2.51 B
0.00.269.495 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.496 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.496 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.497 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.497 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.497 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.498 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.498 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.498 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.499 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.499 I llm_load_print_meta: max token length = 93
0.00.269.517 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.365.800 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.365.806 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.365.806 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.365.807 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.365.807 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.365.807 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.371.009 I llama_new_context_with_model: n_ctx      = 8192
0.00.371.015 I llama_new_context_with_model: n_batch    = 2048
0.00.371.016 I llama_new_context_with_model: n_ubatch   = 512
0.00.371.016 I llama_new_context_with_model: flash_attn = 0
0.00.371.018 I llama_new_context_with_model: freq_base  = 10000.0
0.00.371.019 I llama_new_context_with_model: freq_scale = 1
0.00.399.444 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.399.457 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.399.548 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.400.447 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.400.455 I llama_new_context_with_model: graph nodes  = 601
0.00.400.455 I llama_new_context_with_model: graph splits = 1
0.00.400.456 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.492 I main: llama threadpool init, n_threads = 4
0.00.492.506 I 
0.00.492.584 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.492.587 I 
0.00.492.627 I sampler seed: 1356562247
0.00.492.637 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.640 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.492.641 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.641 I 
 increasities.

I am unable to generate the requested text because it appears to contain sexually suggestive or inappropriate content. I am programmed to adhere to ethical guidelines and

0.02.746.131 I llama_perf_sampler_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6916.79 tokens per second)
0.02.746.134 I llama_perf_context_print:        load time =     490.62 ms
0.02.746.135 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.746.137 I llama_perf_context_print:        eval time =    2234.00 ms /    32 runs   (   69.81 ms per token,    14.32 tokens per second)
0.02.746.137 I llama_perf_context_print:       total time =    2253.65 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.552 I build: 3965 (ac113a0f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.854 I main: load the model and apply lora adapter, if any
0.00.021.993 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.007 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.014 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.015 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.018 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.019 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.019 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.020 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.020 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.021 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.025 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.025 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.026 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.026 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.027 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.885 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.278 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.107 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.113 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.114 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.115 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.115 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.116 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.117 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.119 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.119 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.120 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.121 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.122 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.126 I llama_model_loader: - type  f32:   37 tensors
0.00.132.128 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.326 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.168 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.726 I llm_load_vocab: special tokens cache size = 5
0.00.266.604 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.621 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.621 I llm_load_print_meta: arch             = gemma
0.00.266.621 I llm_load_print_meta: vocab type       = SPM
0.00.266.622 I llm_load_print_meta: n_vocab          = 256000
0.00.266.623 I llm_load_print_meta: n_merges         = 0
0.00.266.623 I llm_load_print_meta: vocab_only       = 0
0.00.266.624 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.624 I llm_load_print_meta: n_embd           = 2048
0.00.266.624 I llm_load_print_meta: n_layer          = 18
0.00.266.634 I llm_load_print_meta: n_head           = 8
0.00.266.635 I llm_load_print_meta: n_head_kv        = 1
0.00.266.636 I llm_load_print_meta: n_rot            = 256
0.00.266.636 I llm_load_print_meta: n_swa            = 0
0.00.266.636 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.637 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.637 I llm_load_print_meta: n_gqa            = 8
0.00.266.638 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.639 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.640 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.641 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.642 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.642 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.642 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.643 I llm_load_print_meta: n_ff             = 16384
0.00.266.643 I llm_load_print_meta: n_expert         = 0
0.00.266.644 I llm_load_print_meta: n_expert_used    = 0
0.00.266.644 I llm_load_print_meta: causal attn      = 1
0.00.266.644 I llm_load_print_meta: pooling type     = 0
0.00.266.645 I llm_load_print_meta: rope type        = 2
0.00.266.646 I llm_load_print_meta: rope scaling     = linear
0.00.266.647 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.648 I llm_load_print_meta: freq_scale_train = 1
0.00.266.648 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.648 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.648 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.649 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.649 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.649 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.649 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.650 I llm_load_print_meta: model type       = 2B
0.00.266.650 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.651 I llm_load_print_meta: model params     = 2.51 B
0.00.266.652 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.652 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.653 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.653 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.653 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.654 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.654 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.654 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.654 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.655 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.655 I llm_load_print_meta: max token length = 93
0.00.266.676 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.361.475 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.366.604 I llama_new_context_with_model: n_ctx      = 8192
0.00.366.610 I llama_new_context_with_model: n_batch    = 2048
0.00.366.610 I llama_new_context_with_model: n_ubatch   = 512
0.00.366.611 I llama_new_context_with_model: flash_attn = 0
0.00.366.613 I llama_new_context_with_model: freq_base  = 10000.0
0.00.366.614 I llama_new_context_with_model: freq_scale = 1
0.00.395.774 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.395.791 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.395.887 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.745 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.396.753 I llama_new_context_with_model: graph nodes  = 601
0.00.396.753 I llama_new_context_with_model: graph splits = 1
0.00.396.755 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.484.061 I main: llama threadpool init, n_threads = 4
0.00.484.076 I 
0.00.484.152 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.484.155 I 
0.00.484.196 I sampler seed: 2121110314
0.00.484.205 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.484.208 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.484.209 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.484.209 I 
 increasities, a man whose obsession with a celebrity was so intense that he convinced her to marry him.

The woman eventually realized that the man was not who

0.02.662.755 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6673.41 tokens per second)
0.02.662.757 I llama_perf_context_print:        load time =     482.18 ms
0.02.662.758 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.662.760 I llama_perf_context_print:        eval time =    2158.40 ms /    32 runs   (   67.45 ms per token,    14.83 tokens per second)
0.02.662.760 I llama_perf_context_print:       total time =    2178.70 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.539 I build: 3965 (ac113a0f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.878 I main: load the model and apply lora adapter, if any
0.00.021.955 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.019 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.031 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.036 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.041 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.045 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.047 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.048 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.049 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.050 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.051 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.056 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.060 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.061 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.062 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.063 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.027 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.508 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.328 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.334 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.334 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.335 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.336 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.337 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.337 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.339 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.340 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.340 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.341 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.341 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.344 I llama_model_loader: - type  f32:   37 tensors
0.00.133.347 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.535 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.865 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.413 I llm_load_vocab: special tokens cache size = 5
0.00.269.996 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.015 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.016 I llm_load_print_meta: arch             = gemma
0.00.270.016 I llm_load_print_meta: vocab type       = SPM
0.00.270.017 I llm_load_print_meta: n_vocab          = 256000
0.00.270.018 I llm_load_print_meta: n_merges         = 0
0.00.270.018 I llm_load_print_meta: vocab_only       = 0
0.00.270.019 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.019 I llm_load_print_meta: n_embd           = 2048
0.00.270.020 I llm_load_print_meta: n_layer          = 18
0.00.270.035 I llm_load_print_meta: n_head           = 8
0.00.270.036 I llm_load_print_meta: n_head_kv        = 1
0.00.270.037 I llm_load_print_meta: n_rot            = 256
0.00.270.037 I llm_load_print_meta: n_swa            = 0
0.00.270.038 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.038 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.039 I llm_load_print_meta: n_gqa            = 8
0.00.270.040 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.041 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.042 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.043 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.044 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.044 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.045 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.046 I llm_load_print_meta: n_ff             = 16384
0.00.270.047 I llm_load_print_meta: n_expert         = 0
0.00.270.047 I llm_load_print_meta: n_expert_used    = 0
0.00.270.048 I llm_load_print_meta: causal attn      = 1
0.00.270.048 I llm_load_print_meta: pooling type     = 0
0.00.270.049 I llm_load_print_meta: rope type        = 2
0.00.270.049 I llm_load_print_meta: rope scaling     = linear
0.00.270.051 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.052 I llm_load_print_meta: freq_scale_train = 1
0.00.270.053 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.054 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.054 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.055 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.056 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.056 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.057 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.058 I llm_load_print_meta: model type       = 2B
0.00.270.061 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.062 I llm_load_print_meta: model params     = 2.51 B
0.00.270.064 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.064 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.065 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.065 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.066 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.066 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.067 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.067 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.068 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.068 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.069 I llm_load_print_meta: max token length = 93
0.00.270.096 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.346.788 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.346.797 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.346.798 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.346.799 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.346.799 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.346.800 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.351.894 I llama_new_context_with_model: n_ctx      = 8192
0.00.351.900 I llama_new_context_with_model: n_batch    = 2048
0.00.351.900 I llama_new_context_with_model: n_ubatch   = 512
0.00.351.901 I llama_new_context_with_model: flash_attn = 0
0.00.351.903 I llama_new_context_with_model: freq_base  = 10000.0
0.00.351.904 I llama_new_context_with_model: freq_scale = 1
0.00.381.407 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.381.422 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.381.515 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.382.420 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.382.429 I llama_new_context_with_model: graph nodes  = 601
0.00.382.429 I llama_new_context_with_model: graph splits = 1
0.00.382.431 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.475.837 I main: llama threadpool init, n_threads = 4
0.00.475.850 I 
0.00.475.934 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.475.937 I 
0.00.475.985 I sampler seed: 1547342839
0.00.475.996 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.476.006 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.476.008 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.476.008 I 
 increasities, and other forms of inappropriate behavior can occur in various settings, including workplaces, schools, and online platforms.

**Addressing Inappropriate Behavior**



0.02.727.177 I llama_perf_sampler_print:    sampling time =       4.90 ms /    33 runs   (    0.15 ms per token,  6741.57 tokens per second)
0.02.727.180 I llama_perf_context_print:        load time =     473.94 ms
0.02.727.182 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.727.184 I llama_perf_context_print:        eval time =    2231.54 ms /    32 runs   (   69.74 ms per token,    14.34 tokens per second)
0.02.727.186 I llama_perf_context_print:       total time =    2251.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.544 I build: 3965 (ac113a0f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.753 I main: llama backend init
0.00.001.849 I main: load the model and apply lora adapter, if any
0.00.027.530 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.027.578 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.027.589 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.593 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.594 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.598 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.598 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.599 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.600 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.600 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.601 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.605 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.606 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.606 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.607 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.608 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.793 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.137.786 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.144.544 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.144.550 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.144.551 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.144.553 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.144.554 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.144.555 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.144.556 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.144.560 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.144.560 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.144.561 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.144.562 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.144.563 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.144.567 I llama_model_loader: - type  f32:   37 tensors
0.00.144.569 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.610 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.271.441 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.028 I llm_load_vocab: special tokens cache size = 5
0.00.293.030 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.293.045 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.293.046 I llm_load_print_meta: arch             = gemma
0.00.293.046 I llm_load_print_meta: vocab type       = SPM
0.00.293.047 I llm_load_print_meta: n_vocab          = 256000
0.00.293.047 I llm_load_print_meta: n_merges         = 0
0.00.293.048 I llm_load_print_meta: vocab_only       = 0
0.00.293.048 I llm_load_print_meta: n_ctx_train      = 8192
0.00.293.048 I llm_load_print_meta: n_embd           = 2048
0.00.293.049 I llm_load_print_meta: n_layer          = 18
0.00.293.060 I llm_load_print_meta: n_head           = 8
0.00.293.061 I llm_load_print_meta: n_head_kv        = 1
0.00.293.061 I llm_load_print_meta: n_rot            = 256
0.00.293.061 I llm_load_print_meta: n_swa            = 0
0.00.293.062 I llm_load_print_meta: n_embd_head_k    = 256
0.00.293.062 I llm_load_print_meta: n_embd_head_v    = 256
0.00.293.063 I llm_load_print_meta: n_gqa            = 8
0.00.293.064 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.293.065 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.293.066 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.293.067 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.293.068 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.293.068 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.293.068 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.293.069 I llm_load_print_meta: n_ff             = 16384
0.00.293.070 I llm_load_print_meta: n_expert         = 0
0.00.293.070 I llm_load_print_meta: n_expert_used    = 0
0.00.293.071 I llm_load_print_meta: causal attn      = 1
0.00.293.071 I llm_load_print_meta: pooling type     = 0
0.00.293.071 I llm_load_print_meta: rope type        = 2
0.00.293.072 I llm_load_print_meta: rope scaling     = linear
0.00.293.073 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.293.073 I llm_load_print_meta: freq_scale_train = 1
0.00.293.074 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.293.074 I llm_load_print_meta: rope_finetuned   = unknown
0.00.293.074 I llm_load_print_meta: ssm_d_conv       = 0
0.00.293.074 I llm_load_print_meta: ssm_d_inner      = 0
0.00.293.074 I llm_load_print_meta: ssm_d_state      = 0
0.00.293.075 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.293.075 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.293.076 I llm_load_print_meta: model type       = 2B
0.00.293.076 I llm_load_print_meta: model ftype      = Q8_0
0.00.293.077 I llm_load_print_meta: model params     = 2.51 B
0.00.293.078 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.293.078 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.293.079 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.293.079 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.293.080 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.293.080 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.293.080 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.293.080 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.293.081 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.293.081 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.293.081 I llm_load_print_meta: max token length = 93
0.00.293.103 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.368.802 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.368.809 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.373.812 I llama_new_context_with_model: n_ctx      = 8192
0.00.373.817 I llama_new_context_with_model: n_batch    = 2048
0.00.373.818 I llama_new_context_with_model: n_ubatch   = 512
0.00.373.818 I llama_new_context_with_model: flash_attn = 0
0.00.373.821 I llama_new_context_with_model: freq_base  = 10000.0
0.00.373.821 I llama_new_context_with_model: freq_scale = 1
0.00.403.179 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.403.198 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.403.295 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.404.331 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.404.341 I llama_new_context_with_model: graph nodes  = 601
0.00.404.342 I llama_new_context_with_model: graph splits = 1
0.00.404.344 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.974 I main: llama threadpool init, n_threads = 4
0.00.497.988 I 
0.00.498.065 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.498.068 I 
0.00.498.106 I sampler seed: 314033700
0.00.498.117 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.119 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.498.120 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.120 I 
 increasities!

The sentence is nonsense and should not be read. [end of text]


0.01.637.285 I llama_perf_sampler_print:    sampling time =       2.47 ms /    16 runs   (    0.15 ms per token,  6488.24 tokens per second)
0.01.637.288 I llama_perf_context_print:        load time =     496.10 ms
0.01.637.289 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.637.290 I llama_perf_context_print:        eval time =    1128.75 ms /    15 runs   (   75.25 ms per token,    13.29 tokens per second)
0.01.637.291 I llama_perf_context_print:       total time =    1139.32 ms /    16 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.802s
user	0m34.240s
sys	0m9.394s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3965 (ac113a0f)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32201.50 ms
main:    total time = 32201.50 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.556 I build: 3965 (ac113a0f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.893 I main: load the model and apply lora adapter, if any
0.00.022.472 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.528 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.536 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.542 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.542 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.546 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.547 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.548 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.548 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.548 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.549 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.554 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.554 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.555 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.555 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.556 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.394 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.398 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.230 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.236 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.237 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.237 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.238 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.239 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.240 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.242 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.243 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.244 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.245 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.246 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.249 I llama_model_loader: - type  f32:   37 tensors
0.00.133.252 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.253 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.998 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.526 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.263.359 I llm_load_vocab: special tokens cache size = 5
0.00.284.672 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.692 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.692 I llm_load_print_meta: arch             = gemma
0.00.284.693 I llm_load_print_meta: vocab type       = SPM
0.00.284.693 I llm_load_print_meta: n_vocab          = 256000
0.00.284.694 I llm_load_print_meta: n_merges         = 0
0.00.284.694 I llm_load_print_meta: vocab_only       = 0
0.00.284.694 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.695 I llm_load_print_meta: n_embd           = 2048
0.00.284.695 I llm_load_print_meta: n_layer          = 18
0.00.284.706 I llm_load_print_meta: n_head           = 8
0.00.284.707 I llm_load_print_meta: n_head_kv        = 1
0.00.284.708 I llm_load_print_meta: n_rot            = 256
0.00.284.708 I llm_load_print_meta: n_swa            = 0
0.00.284.708 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.709 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.710 I llm_load_print_meta: n_gqa            = 8
0.00.284.711 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.712 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.713 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.714 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.714 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.715 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.715 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.716 I llm_load_print_meta: n_ff             = 16384
0.00.284.717 I llm_load_print_meta: n_expert         = 0
0.00.284.717 I llm_load_print_meta: n_expert_used    = 0
0.00.284.717 I llm_load_print_meta: causal attn      = 1
0.00.284.718 I llm_load_print_meta: pooling type     = 0
0.00.284.718 I llm_load_print_meta: rope type        = 2
0.00.284.718 I llm_load_print_meta: rope scaling     = linear
0.00.284.720 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.720 I llm_load_print_meta: freq_scale_train = 1
0.00.284.721 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.721 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.721 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.721 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.722 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.722 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.722 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.723 I llm_load_print_meta: model type       = 2B
0.00.284.723 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.284.724 I llm_load_print_meta: model params     = 2.51 B
0.00.284.725 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.284.725 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.725 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.726 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.726 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.726 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.727 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.727 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.727 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.728 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.728 I llm_load_print_meta: max token length = 93
0.00.284.750 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.343.690 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.343.698 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.343.698 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.343.699 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.343.700 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.343.700 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.348.893 I llama_new_context_with_model: n_ctx      = 8192
0.00.348.899 I llama_new_context_with_model: n_batch    = 2048
0.00.348.899 I llama_new_context_with_model: n_ubatch   = 512
0.00.348.899 I llama_new_context_with_model: flash_attn = 0
0.00.348.901 I llama_new_context_with_model: freq_base  = 10000.0
0.00.348.902 I llama_new_context_with_model: freq_scale = 1
0.00.378.352 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.378.365 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.378.464 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.349 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.379.357 I llama_new_context_with_model: graph nodes  = 601
0.00.379.357 I llama_new_context_with_model: graph splits = 1
0.00.379.359 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.288 I main: llama threadpool init, n_threads = 4
0.00.460.302 I 
0.00.460.379 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.383 I 
0.00.460.422 I sampler seed: 3242389219
0.00.460.433 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.435 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.436 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.436 I 
 maneuvously. 

I'm sorry, I am unable to generate responses that contain offensive or inappropriate content. [end of text]


0.01.706.693 I llama_perf_sampler_print:    sampling time =       4.08 ms /    26 runs   (    0.16 ms per token,  6369.43 tokens per second)
0.01.706.695 I llama_perf_context_print:        load time =     458.37 ms
0.01.706.697 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.706.698 I llama_perf_context_print:        eval time =    1230.55 ms /    25 runs   (   49.22 ms per token,    20.32 tokens per second)
0.01.706.699 I llama_perf_context_print:       total time =    1246.41 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3965 (ac113a0f)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31998.44 ms
main:    total time = 31998.44 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.590 I build: 3965 (ac113a0f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.802 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.021.890 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.902 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.909 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.910 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.913 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.914 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.914 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.915 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.915 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.916 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.920 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.921 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.921 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.922 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.922 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.604 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.688 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.516 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.523 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.524 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.525 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.526 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.527 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.528 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.532 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.533 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.535 I llama_model_loader: - type  f32:   37 tensors
0.00.132.538 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.539 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.895 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.517 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.121 I llm_load_vocab: special tokens cache size = 5
0.00.280.178 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.196 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.197 I llm_load_print_meta: arch             = gemma
0.00.280.197 I llm_load_print_meta: vocab type       = SPM
0.00.280.198 I llm_load_print_meta: n_vocab          = 256000
0.00.280.198 I llm_load_print_meta: n_merges         = 0
0.00.280.198 I llm_load_print_meta: vocab_only       = 0
0.00.280.199 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.199 I llm_load_print_meta: n_embd           = 2048
0.00.280.200 I llm_load_print_meta: n_layer          = 18
0.00.280.212 I llm_load_print_meta: n_head           = 8
0.00.280.213 I llm_load_print_meta: n_head_kv        = 1
0.00.280.213 I llm_load_print_meta: n_rot            = 256
0.00.280.214 I llm_load_print_meta: n_swa            = 0
0.00.280.214 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.214 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.215 I llm_load_print_meta: n_gqa            = 8
0.00.280.216 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.217 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.218 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.219 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.220 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.220 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.220 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.221 I llm_load_print_meta: n_ff             = 16384
0.00.280.221 I llm_load_print_meta: n_expert         = 0
0.00.280.222 I llm_load_print_meta: n_expert_used    = 0
0.00.280.222 I llm_load_print_meta: causal attn      = 1
0.00.280.222 I llm_load_print_meta: pooling type     = 0
0.00.280.223 I llm_load_print_meta: rope type        = 2
0.00.280.223 I llm_load_print_meta: rope scaling     = linear
0.00.280.224 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.225 I llm_load_print_meta: freq_scale_train = 1
0.00.280.225 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.226 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.226 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.226 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.226 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.226 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.227 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.227 I llm_load_print_meta: model type       = 2B
0.00.280.228 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.280.229 I llm_load_print_meta: model params     = 2.51 B
0.00.280.229 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.280.230 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.230 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.231 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.231 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.232 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.233 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.233 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.233 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.234 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.234 I llm_load_print_meta: max token length = 93
0.00.280.261 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.336.115 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.341.127 I llama_new_context_with_model: n_ctx      = 8192
0.00.341.134 I llama_new_context_with_model: n_batch    = 2048
0.00.341.134 I llama_new_context_with_model: n_ubatch   = 512
0.00.341.135 I llama_new_context_with_model: flash_attn = 0
0.00.341.137 I llama_new_context_with_model: freq_base  = 10000.0
0.00.341.138 I llama_new_context_with_model: freq_scale = 1
0.00.370.856 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.874 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.966 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.837 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.844 I llama_new_context_with_model: graph nodes  = 601
0.00.371.845 I llama_new_context_with_model: graph splits = 1
0.00.371.847 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.126 I main: llama threadpool init, n_threads = 4
0.00.452.139 I 
0.00.452.217 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.220 I 
0.00.452.260 I sampler seed: 785085533
0.00.452.270 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.273 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.452.274 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.274 I 
 increasities are caused by?
a) Viral infection
b) Bacterial infection
c) Probiotic intake
d) Parasite infection

Correct answer is

0.02.040.885 I llama_perf_sampler_print:    sampling time =       5.08 ms /    33 runs   (    0.15 ms per token,  6490.95 tokens per second)
0.02.040.887 I llama_perf_context_print:        load time =     450.21 ms
0.02.040.888 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.040.891 I llama_perf_context_print:        eval time =    1568.97 ms /    32 runs   (   49.03 ms per token,    20.40 tokens per second)
0.02.040.892 I llama_perf_context_print:       total time =    1588.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.201s
user	8m13.387s
sys	0m6.791s
