+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.546 I build: 4390 (2cd43f49) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.719 I main: llama backend init
0.00.000.727 I main: load the model and apply lora adapter, if any
0.00.021.052 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.060 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.071 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.076 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.080 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.083 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.085 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.086 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.086 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.087 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.088 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.092 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.093 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.094 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.094 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.095 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.476 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.267 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.134 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.142 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.143 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.144 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.145 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.146 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.147 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.151 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.152 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.153 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.154 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.155 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.160 I llama_model_loader: - type  f32:   37 tensors
0.00.131.161 I llama_model_loader: - type q8_0:  127 tensors
0.00.227.622 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.272.239 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.805 I llm_load_vocab: special tokens cache size = 5
0.00.293.732 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.293.748 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.293.749 I llm_load_print_meta: arch             = gemma
0.00.293.749 I llm_load_print_meta: vocab type       = SPM
0.00.293.750 I llm_load_print_meta: n_vocab          = 256000
0.00.293.751 I llm_load_print_meta: n_merges         = 0
0.00.293.751 I llm_load_print_meta: vocab_only       = 0
0.00.293.751 I llm_load_print_meta: n_ctx_train      = 8192
0.00.293.752 I llm_load_print_meta: n_embd           = 2048
0.00.293.752 I llm_load_print_meta: n_layer          = 18
0.00.293.763 I llm_load_print_meta: n_head           = 8
0.00.293.763 I llm_load_print_meta: n_head_kv        = 1
0.00.293.764 I llm_load_print_meta: n_rot            = 256
0.00.293.764 I llm_load_print_meta: n_swa            = 0
0.00.293.765 I llm_load_print_meta: n_embd_head_k    = 256
0.00.293.765 I llm_load_print_meta: n_embd_head_v    = 256
0.00.293.766 I llm_load_print_meta: n_gqa            = 8
0.00.293.767 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.293.768 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.293.769 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.293.770 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.293.770 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.293.771 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.293.771 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.293.772 I llm_load_print_meta: n_ff             = 16384
0.00.293.772 I llm_load_print_meta: n_expert         = 0
0.00.293.772 I llm_load_print_meta: n_expert_used    = 0
0.00.293.773 I llm_load_print_meta: causal attn      = 1
0.00.293.773 I llm_load_print_meta: pooling type     = 0
0.00.293.774 I llm_load_print_meta: rope type        = 2
0.00.293.774 I llm_load_print_meta: rope scaling     = linear
0.00.293.775 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.293.776 I llm_load_print_meta: freq_scale_train = 1
0.00.293.776 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.293.777 I llm_load_print_meta: rope_finetuned   = unknown
0.00.293.777 I llm_load_print_meta: ssm_d_conv       = 0
0.00.293.777 I llm_load_print_meta: ssm_d_inner      = 0
0.00.293.778 I llm_load_print_meta: ssm_d_state      = 0
0.00.293.778 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.293.778 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.293.778 I llm_load_print_meta: model type       = 2B
0.00.293.779 I llm_load_print_meta: model ftype      = Q8_0
0.00.293.780 I llm_load_print_meta: model params     = 2.51 B
0.00.293.781 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.293.781 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.293.782 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.293.782 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.293.782 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.293.783 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.293.783 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.293.783 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.293.783 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.293.784 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.293.784 I llm_load_print_meta: max token length = 93
0.00.395.144 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.395.152 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.395.153 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.395.154 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.395.154 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.395.155 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.400.315 I llama_new_context_with_model: n_seq_max     = 1
0.00.400.323 I llama_new_context_with_model: n_ctx         = 4096
0.00.400.323 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.400.323 I llama_new_context_with_model: n_batch       = 2048
0.00.400.324 I llama_new_context_with_model: n_ubatch      = 512
0.00.400.324 I llama_new_context_with_model: flash_attn    = 0
0.00.400.327 I llama_new_context_with_model: freq_base     = 10000.0
0.00.400.328 I llama_new_context_with_model: freq_scale    = 1
0.00.400.329 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.400.350 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.414.729 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.414.743 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.414.832 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.416.075 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.416.082 I llama_new_context_with_model: graph nodes  = 601
0.00.416.083 I llama_new_context_with_model: graph splits = 1
0.00.416.085 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.416.085 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.502.321 I main: llama threadpool init, n_threads = 4
0.00.502.338 I 
0.00.502.416 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.502.419 I 
0.00.502.461 I sampler seed: 862252650
0.00.502.472 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.502.484 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.502.487 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.502.488 I 
 increasities in the workplace, such as sexual harassment, discrimination, and retaliation.

**Sexual harassment**

Sexual harassment is defined as any unwelcome sexual behavior directed

0.02.783.011 I llama_perf_sampler_print:    sampling time =       4.87 ms /    33 runs   (    0.15 ms per token,  6783.14 tokens per second)
0.02.783.013 I llama_perf_context_print:        load time =     501.58 ms
0.02.783.014 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.783.016 I llama_perf_context_print:        eval time =    2261.16 ms /    32 runs   (   70.66 ms per token,    14.15 tokens per second)
0.02.783.016 I llama_perf_context_print:       total time =    2280.70 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.556 I build: 4390 (2cd43f49) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.754 I main: llama backend init
0.00.000.761 I main: load the model and apply lora adapter, if any
0.00.021.683 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.699 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.710 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.711 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.716 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.719 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.720 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.721 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.721 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.722 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.727 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.727 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.728 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.728 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.729 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.581 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.471 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.359 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.365 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.366 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.366 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.367 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.368 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.369 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.372 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.372 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.373 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.373 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.374 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.378 I llama_model_loader: - type  f32:   37 tensors
0.00.132.379 I llama_model_loader: - type q8_0:  127 tensors
0.00.223.330 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.278.417 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.279.174 I llm_load_vocab: special tokens cache size = 5
0.00.300.658 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.300.676 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.300.677 I llm_load_print_meta: arch             = gemma
0.00.300.678 I llm_load_print_meta: vocab type       = SPM
0.00.300.679 I llm_load_print_meta: n_vocab          = 256000
0.00.300.679 I llm_load_print_meta: n_merges         = 0
0.00.300.679 I llm_load_print_meta: vocab_only       = 0
0.00.300.680 I llm_load_print_meta: n_ctx_train      = 8192
0.00.300.680 I llm_load_print_meta: n_embd           = 2048
0.00.300.680 I llm_load_print_meta: n_layer          = 18
0.00.300.693 I llm_load_print_meta: n_head           = 8
0.00.300.694 I llm_load_print_meta: n_head_kv        = 1
0.00.300.694 I llm_load_print_meta: n_rot            = 256
0.00.300.694 I llm_load_print_meta: n_swa            = 0
0.00.300.694 I llm_load_print_meta: n_embd_head_k    = 256
0.00.300.695 I llm_load_print_meta: n_embd_head_v    = 256
0.00.300.696 I llm_load_print_meta: n_gqa            = 8
0.00.300.697 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.300.698 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.300.698 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.300.700 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.300.700 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.300.700 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.300.701 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.300.702 I llm_load_print_meta: n_ff             = 16384
0.00.300.702 I llm_load_print_meta: n_expert         = 0
0.00.300.702 I llm_load_print_meta: n_expert_used    = 0
0.00.300.702 I llm_load_print_meta: causal attn      = 1
0.00.300.703 I llm_load_print_meta: pooling type     = 0
0.00.300.703 I llm_load_print_meta: rope type        = 2
0.00.300.703 I llm_load_print_meta: rope scaling     = linear
0.00.300.705 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.300.705 I llm_load_print_meta: freq_scale_train = 1
0.00.300.706 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.300.706 I llm_load_print_meta: rope_finetuned   = unknown
0.00.300.706 I llm_load_print_meta: ssm_d_conv       = 0
0.00.300.706 I llm_load_print_meta: ssm_d_inner      = 0
0.00.300.707 I llm_load_print_meta: ssm_d_state      = 0
0.00.300.707 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.300.707 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.300.707 I llm_load_print_meta: model type       = 2B
0.00.300.708 I llm_load_print_meta: model ftype      = Q8_0
0.00.300.709 I llm_load_print_meta: model params     = 2.51 B
0.00.300.710 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.300.710 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.300.711 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.300.711 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.300.712 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.300.712 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.300.712 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.300.713 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.300.713 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.300.713 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.300.714 I llm_load_print_meta: max token length = 93
0.00.395.320 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.400.689 I llama_new_context_with_model: n_seq_max     = 1
0.00.400.694 I llama_new_context_with_model: n_ctx         = 4096
0.00.400.695 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.400.695 I llama_new_context_with_model: n_batch       = 2048
0.00.400.696 I llama_new_context_with_model: n_ubatch      = 512
0.00.400.696 I llama_new_context_with_model: flash_attn    = 0
0.00.400.698 I llama_new_context_with_model: freq_base     = 10000.0
0.00.400.699 I llama_new_context_with_model: freq_scale    = 1
0.00.400.700 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.400.721 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.415.878 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.415.893 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.415.987 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.417.225 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.417.232 I llama_new_context_with_model: graph nodes  = 601
0.00.417.232 I llama_new_context_with_model: graph splits = 1
0.00.417.235 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.417.235 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.499.590 I main: llama threadpool init, n_threads = 4
0.00.499.618 I 
0.00.499.691 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.499.694 I 
0.00.499.734 I sampler seed: 8749737
0.00.499.745 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.499.757 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.499.761 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.499.761 I 
 increasities, and anxieties in the context of social media.

**Keywords:** Social media, narcissistic personality disorder, anxiety, depression, self-esteem, body

0.02.730.125 I llama_perf_sampler_print:    sampling time =       4.96 ms /    33 runs   (    0.15 ms per token,  6657.25 tokens per second)
0.02.730.127 I llama_perf_context_print:        load time =     498.81 ms
0.02.730.128 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.730.129 I llama_perf_context_print:        eval time =    2210.52 ms /    32 runs   (   69.08 ms per token,    14.48 tokens per second)
0.02.730.130 I llama_perf_context_print:       total time =    2230.54 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.536 I build: 4390 (2cd43f49) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.726 I main: llama backend init
0.00.000.732 I main: load the model and apply lora adapter, if any
0.00.021.215 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.224 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.231 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.239 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.240 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.243 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.243 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.244 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.244 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.245 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.245 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.249 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.250 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.250 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.251 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.251 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.359 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.889 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.110 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.116 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.117 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.118 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.118 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.119 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.120 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.122 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.122 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.125 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.125 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.126 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.130 I llama_model_loader: - type  f32:   37 tensors
0.00.132.131 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.383 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.218 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.806 I llm_load_vocab: special tokens cache size = 5
0.00.278.978 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.999 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.000 I llm_load_print_meta: arch             = gemma
0.00.279.000 I llm_load_print_meta: vocab type       = SPM
0.00.279.001 I llm_load_print_meta: n_vocab          = 256000
0.00.279.002 I llm_load_print_meta: n_merges         = 0
0.00.279.002 I llm_load_print_meta: vocab_only       = 0
0.00.279.003 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.003 I llm_load_print_meta: n_embd           = 2048
0.00.279.003 I llm_load_print_meta: n_layer          = 18
0.00.279.015 I llm_load_print_meta: n_head           = 8
0.00.279.016 I llm_load_print_meta: n_head_kv        = 1
0.00.279.016 I llm_load_print_meta: n_rot            = 256
0.00.279.017 I llm_load_print_meta: n_swa            = 0
0.00.279.017 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.017 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.018 I llm_load_print_meta: n_gqa            = 8
0.00.279.019 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.020 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.021 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.022 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.022 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.022 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.023 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.023 I llm_load_print_meta: n_ff             = 16384
0.00.279.024 I llm_load_print_meta: n_expert         = 0
0.00.279.024 I llm_load_print_meta: n_expert_used    = 0
0.00.279.024 I llm_load_print_meta: causal attn      = 1
0.00.279.025 I llm_load_print_meta: pooling type     = 0
0.00.279.025 I llm_load_print_meta: rope type        = 2
0.00.279.025 I llm_load_print_meta: rope scaling     = linear
0.00.279.026 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.027 I llm_load_print_meta: freq_scale_train = 1
0.00.279.027 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.028 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.028 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.028 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.028 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.029 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.029 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.029 I llm_load_print_meta: model type       = 2B
0.00.279.030 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.030 I llm_load_print_meta: model params     = 2.51 B
0.00.279.031 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.031 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.032 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.033 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.033 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.033 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.034 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.034 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.034 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.035 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.035 I llm_load_print_meta: max token length = 93
0.00.356.727 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.356.732 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.356.733 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.356.733 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.356.734 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.356.735 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.362.020 I llama_new_context_with_model: n_seq_max     = 1
0.00.362.028 I llama_new_context_with_model: n_ctx         = 4096
0.00.362.028 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.362.028 I llama_new_context_with_model: n_batch       = 2048
0.00.362.029 I llama_new_context_with_model: n_ubatch      = 512
0.00.362.029 I llama_new_context_with_model: flash_attn    = 0
0.00.362.032 I llama_new_context_with_model: freq_base     = 10000.0
0.00.362.033 I llama_new_context_with_model: freq_scale    = 1
0.00.362.034 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.362.054 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.376.683 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.376.696 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.376.793 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.056 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.378.063 I llama_new_context_with_model: graph nodes  = 601
0.00.378.063 I llama_new_context_with_model: graph splits = 1
0.00.378.066 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.378.066 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.467.877 I main: llama threadpool init, n_threads = 4
0.00.467.892 I 
0.00.467.965 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.467.968 I 
0.00.468.014 I sampler seed: 3674314936
0.00.468.025 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.029 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.030 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.030 I 
 seconary effects of the COVID-19 pandemic on mental health

**Introduction:**

The COVID-19 pandemic has had a significant impact on mental health

0.02.800.697 I llama_perf_sampler_print:    sampling time =       5.12 ms /    33 runs   (    0.16 ms per token,  6450.35 tokens per second)
0.02.800.700 I llama_perf_context_print:        load time =     467.13 ms
0.02.800.703 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.800.705 I llama_perf_context_print:        eval time =    2313.01 ms /    32 runs   (   72.28 ms per token,    13.83 tokens per second)
0.02.800.706 I llama_perf_context_print:       total time =    2332.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.567 I build: 4390 (2cd43f49) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.763 I main: llama backend init
0.00.000.769 I main: load the model and apply lora adapter, if any
0.00.021.073 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.083 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.095 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.103 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.106 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.108 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.109 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.110 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.110 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.111 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.111 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.116 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.116 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.117 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.118 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.118 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.253 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.895 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.786 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.793 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.794 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.794 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.795 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.796 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.797 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.800 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.800 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.801 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.802 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.803 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.807 I llama_model_loader: - type  f32:   37 tensors
0.00.131.808 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.849 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.534 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.164 I llm_load_vocab: special tokens cache size = 5
0.00.283.118 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.136 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.136 I llm_load_print_meta: arch             = gemma
0.00.283.137 I llm_load_print_meta: vocab type       = SPM
0.00.283.138 I llm_load_print_meta: n_vocab          = 256000
0.00.283.139 I llm_load_print_meta: n_merges         = 0
0.00.283.139 I llm_load_print_meta: vocab_only       = 0
0.00.283.139 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.139 I llm_load_print_meta: n_embd           = 2048
0.00.283.140 I llm_load_print_meta: n_layer          = 18
0.00.283.151 I llm_load_print_meta: n_head           = 8
0.00.283.151 I llm_load_print_meta: n_head_kv        = 1
0.00.283.152 I llm_load_print_meta: n_rot            = 256
0.00.283.152 I llm_load_print_meta: n_swa            = 0
0.00.283.153 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.153 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.154 I llm_load_print_meta: n_gqa            = 8
0.00.283.155 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.156 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.157 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.158 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.158 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.159 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.159 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.160 I llm_load_print_meta: n_ff             = 16384
0.00.283.160 I llm_load_print_meta: n_expert         = 0
0.00.283.160 I llm_load_print_meta: n_expert_used    = 0
0.00.283.161 I llm_load_print_meta: causal attn      = 1
0.00.283.161 I llm_load_print_meta: pooling type     = 0
0.00.283.161 I llm_load_print_meta: rope type        = 2
0.00.283.162 I llm_load_print_meta: rope scaling     = linear
0.00.283.163 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.164 I llm_load_print_meta: freq_scale_train = 1
0.00.283.164 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.165 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.165 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.165 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.165 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.166 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.166 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.166 I llm_load_print_meta: model type       = 2B
0.00.283.167 I llm_load_print_meta: model ftype      = Q8_0
0.00.283.168 I llm_load_print_meta: model params     = 2.51 B
0.00.283.169 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.283.169 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.169 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.170 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.170 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.171 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.171 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.171 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.172 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.172 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.173 I llm_load_print_meta: max token length = 93
0.00.354.681 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.354.687 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.359.701 I llama_new_context_with_model: n_seq_max     = 1
0.00.359.707 I llama_new_context_with_model: n_ctx         = 4096
0.00.359.708 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.359.708 I llama_new_context_with_model: n_batch       = 2048
0.00.359.709 I llama_new_context_with_model: n_ubatch      = 512
0.00.359.710 I llama_new_context_with_model: flash_attn    = 0
0.00.359.712 I llama_new_context_with_model: freq_base     = 10000.0
0.00.359.713 I llama_new_context_with_model: freq_scale    = 1
0.00.359.714 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.359.736 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.373.971 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.373.984 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.374.079 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.353 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.375.359 I llama_new_context_with_model: graph nodes  = 601
0.00.375.359 I llama_new_context_with_model: graph splits = 1
0.00.375.361 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.375.362 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.642 I main: llama threadpool init, n_threads = 4
0.00.465.659 I 
0.00.465.733 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.465.736 I 
0.00.465.779 I sampler seed: 451529560
0.00.465.790 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.793 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.465.793 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.795 I 
 maneuvously,
To pronounce your verdict in this mortal strife.

What is the meaning of this passage?

The passage is a quote from a scene

0.02.891.870 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6663.97 tokens per second)
0.02.891.872 I llama_perf_context_print:        load time =     464.86 ms
0.02.891.873 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.891.875 I llama_perf_context_print:        eval time =    2406.83 ms /    32 runs   (   75.21 ms per token,    13.30 tokens per second)
0.02.891.875 I llama_perf_context_print:       total time =    2426.24 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m21.918s
user	0m40.064s
sys	0m9.545s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4390 (2cd43f49)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40279.40 ms
main:    total time = 40279.40 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.597 I build: 4390 (2cd43f49) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.794 I main: llama backend init
0.00.000.802 I main: load the model and apply lora adapter, if any
0.00.021.779 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.790 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.798 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.806 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.807 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.811 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.812 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.813 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.813 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.813 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.814 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.818 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.819 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.820 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.821 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.821 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.324 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.504 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.403 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.410 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.411 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.412 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.412 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.413 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.414 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.416 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.417 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.418 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.419 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.419 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.423 I llama_model_loader: - type  f32:   37 tensors
0.00.131.425 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.426 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.277 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.266 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.877 I llm_load_vocab: special tokens cache size = 5
0.00.278.848 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.865 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.865 I llm_load_print_meta: arch             = gemma
0.00.278.866 I llm_load_print_meta: vocab type       = SPM
0.00.278.866 I llm_load_print_meta: n_vocab          = 256000
0.00.278.867 I llm_load_print_meta: n_merges         = 0
0.00.278.867 I llm_load_print_meta: vocab_only       = 0
0.00.278.867 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.868 I llm_load_print_meta: n_embd           = 2048
0.00.278.868 I llm_load_print_meta: n_layer          = 18
0.00.278.880 I llm_load_print_meta: n_head           = 8
0.00.278.881 I llm_load_print_meta: n_head_kv        = 1
0.00.278.881 I llm_load_print_meta: n_rot            = 256
0.00.278.882 I llm_load_print_meta: n_swa            = 0
0.00.278.882 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.882 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.883 I llm_load_print_meta: n_gqa            = 8
0.00.278.884 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.885 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.886 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.887 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.887 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.887 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.888 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.888 I llm_load_print_meta: n_ff             = 16384
0.00.278.889 I llm_load_print_meta: n_expert         = 0
0.00.278.889 I llm_load_print_meta: n_expert_used    = 0
0.00.278.889 I llm_load_print_meta: causal attn      = 1
0.00.278.890 I llm_load_print_meta: pooling type     = 0
0.00.278.890 I llm_load_print_meta: rope type        = 2
0.00.278.891 I llm_load_print_meta: rope scaling     = linear
0.00.278.893 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.894 I llm_load_print_meta: freq_scale_train = 1
0.00.278.895 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.895 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.897 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.897 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.897 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.897 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.898 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.899 I llm_load_print_meta: model type       = 2B
0.00.278.900 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.278.901 I llm_load_print_meta: model params     = 2.51 B
0.00.278.902 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.278.902 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.903 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.903 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.903 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.904 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.904 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.905 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.905 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.906 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.906 I llm_load_print_meta: max token length = 93
0.00.338.862 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.338.871 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.338.871 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.338.872 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.338.872 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.338.873 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.344.102 I llama_new_context_with_model: n_seq_max     = 1
0.00.344.109 I llama_new_context_with_model: n_ctx         = 4096
0.00.344.109 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.344.109 I llama_new_context_with_model: n_batch       = 2048
0.00.344.110 I llama_new_context_with_model: n_ubatch      = 512
0.00.344.110 I llama_new_context_with_model: flash_attn    = 0
0.00.344.113 I llama_new_context_with_model: freq_base     = 10000.0
0.00.344.113 I llama_new_context_with_model: freq_scale    = 1
0.00.344.114 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.344.134 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.358.577 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.358.589 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.358.682 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.994 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.360.001 I llama_new_context_with_model: graph nodes  = 601
0.00.360.001 I llama_new_context_with_model: graph splits = 1
0.00.360.004 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.360.004 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.946 I main: llama threadpool init, n_threads = 4
0.00.435.962 I 
0.00.436.035 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.436.038 I 
0.00.436.078 I sampler seed: 49794792
0.00.436.089 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.100 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.436.104 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.104 I 
 increasively, engaging in the following conversation:

**Me:** Did you see the news about the new AI chatbot?

**Lia:** I am not able

0.02.047.540 I llama_perf_sampler_print:    sampling time =       5.14 ms /    33 runs   (    0.16 ms per token,  6422.73 tokens per second)
0.02.047.543 I llama_perf_context_print:        load time =     435.13 ms
0.02.047.544 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.047.545 I llama_perf_context_print:        eval time =    1592.66 ms /    32 runs   (   49.77 ms per token,    20.09 tokens per second)
0.02.047.546 I llama_perf_context_print:       total time =    1611.60 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4390 (2cd43f49)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40225.12 ms
main:    total time = 40225.12 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.543 I build: 4390 (2cd43f49) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.000.763 I main: load the model and apply lora adapter, if any
0.00.021.162 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.176 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.185 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.186 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.189 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.190 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.190 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.191 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.192 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.192 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.196 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.196 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.197 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.198 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.199 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.237 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.808 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.644 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.651 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.651 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.652 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.652 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.653 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.654 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.657 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.657 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.661 I llama_model_loader: - type  f32:   37 tensors
0.00.130.662 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.662 I llama_model_loader: - type q6_K:   19 tensors
0.00.211.147 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.630 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.176 I llm_load_vocab: special tokens cache size = 5
0.00.275.970 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.986 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.986 I llm_load_print_meta: arch             = gemma
0.00.275.987 I llm_load_print_meta: vocab type       = SPM
0.00.275.989 I llm_load_print_meta: n_vocab          = 256000
0.00.275.989 I llm_load_print_meta: n_merges         = 0
0.00.275.990 I llm_load_print_meta: vocab_only       = 0
0.00.275.990 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.990 I llm_load_print_meta: n_embd           = 2048
0.00.275.991 I llm_load_print_meta: n_layer          = 18
0.00.276.002 I llm_load_print_meta: n_head           = 8
0.00.276.003 I llm_load_print_meta: n_head_kv        = 1
0.00.276.003 I llm_load_print_meta: n_rot            = 256
0.00.276.004 I llm_load_print_meta: n_swa            = 0
0.00.276.004 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.004 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.005 I llm_load_print_meta: n_gqa            = 8
0.00.276.006 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.007 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.008 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.010 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.011 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.011 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.011 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.012 I llm_load_print_meta: n_ff             = 16384
0.00.276.012 I llm_load_print_meta: n_expert         = 0
0.00.276.013 I llm_load_print_meta: n_expert_used    = 0
0.00.276.013 I llm_load_print_meta: causal attn      = 1
0.00.276.013 I llm_load_print_meta: pooling type     = 0
0.00.276.014 I llm_load_print_meta: rope type        = 2
0.00.276.015 I llm_load_print_meta: rope scaling     = linear
0.00.276.017 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.017 I llm_load_print_meta: freq_scale_train = 1
0.00.276.018 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.019 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.019 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.019 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.020 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.020 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.021 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.022 I llm_load_print_meta: model type       = 2B
0.00.276.022 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.276.023 I llm_load_print_meta: model params     = 2.51 B
0.00.276.024 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.276.025 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.025 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.026 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.026 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.026 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.027 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.028 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.028 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.028 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.029 I llm_load_print_meta: max token length = 93
0.00.334.256 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.339.358 I llama_new_context_with_model: n_seq_max     = 1
0.00.339.365 I llama_new_context_with_model: n_ctx         = 4096
0.00.339.366 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.339.366 I llama_new_context_with_model: n_batch       = 2048
0.00.339.366 I llama_new_context_with_model: n_ubatch      = 512
0.00.339.367 I llama_new_context_with_model: flash_attn    = 0
0.00.339.369 I llama_new_context_with_model: freq_base     = 10000.0
0.00.339.370 I llama_new_context_with_model: freq_scale    = 1
0.00.339.371 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.339.391 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.353.966 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.353.980 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.354.073 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.323 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.355.329 I llama_new_context_with_model: graph nodes  = 601
0.00.355.329 I llama_new_context_with_model: graph splits = 1
0.00.355.332 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.355.332 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.757 I main: llama threadpool init, n_threads = 4
0.00.431.774 I 
0.00.431.849 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.431.852 I 
0.00.431.896 I sampler seed: 43662067
0.00.431.907 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.919 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.431.922 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.922 I 
 squared with the following information:

**Name:** Sarah Jones

**Age:** 25

**Occupation:** Software Engineer

**Location:** Seattle,

0.02.020.583 I llama_perf_sampler_print:    sampling time =       5.07 ms /    33 runs   (    0.15 ms per token,  6503.74 tokens per second)
0.02.020.585 I llama_perf_context_print:        load time =     430.98 ms
0.02.020.586 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.020.588 I llama_perf_context_print:        eval time =    1569.76 ms /    32 runs   (   49.05 ms per token,    20.39 tokens per second)
0.02.020.588 I llama_perf_context_print:       total time =    1588.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.370s
user	10m24.376s
sys	0m6.873s
