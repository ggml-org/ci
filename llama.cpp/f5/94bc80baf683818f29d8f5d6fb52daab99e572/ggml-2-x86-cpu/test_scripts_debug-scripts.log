+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.652 I build: 3950 (f594bc80) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.802 I main: load the model and apply lora adapter, if any
0.00.024.789 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.994 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.086 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.098 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.100 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.104 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.108 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.109 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.110 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.111 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.112 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.119 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.120 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.121 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.122 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.123 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.728 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.257.462 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.275.901 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.275.912 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.275.914 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.275.915 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.275.916 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.275.917 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.275.918 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.275.923 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.275.924 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.275.925 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.275.926 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.275.928 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.275.937 I llama_model_loader: - type  f32:   37 tensors
0.00.275.941 I llama_model_loader: - type q8_0:  127 tensors
0.00.463.875 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.534.252 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.535.353 I llm_load_vocab: special tokens cache size = 5
0.00.643.405 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.643.477 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.643.478 I llm_load_print_meta: arch             = gemma
0.00.643.479 I llm_load_print_meta: vocab type       = SPM
0.00.643.480 I llm_load_print_meta: n_vocab          = 256000
0.00.643.483 I llm_load_print_meta: n_merges         = 0
0.00.643.483 I llm_load_print_meta: vocab_only       = 0
0.00.643.484 I llm_load_print_meta: n_ctx_train      = 8192
0.00.643.484 I llm_load_print_meta: n_embd           = 2048
0.00.643.484 I llm_load_print_meta: n_layer          = 18
0.00.643.549 I llm_load_print_meta: n_head           = 8
0.00.643.556 I llm_load_print_meta: n_head_kv        = 1
0.00.643.557 I llm_load_print_meta: n_rot            = 256
0.00.643.557 I llm_load_print_meta: n_swa            = 0
0.00.643.558 I llm_load_print_meta: n_embd_head_k    = 256
0.00.643.558 I llm_load_print_meta: n_embd_head_v    = 256
0.00.643.562 I llm_load_print_meta: n_gqa            = 8
0.00.643.567 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.643.572 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.643.573 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.643.574 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.643.575 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.643.575 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.643.576 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.643.581 I llm_load_print_meta: n_ff             = 16384
0.00.643.581 I llm_load_print_meta: n_expert         = 0
0.00.643.582 I llm_load_print_meta: n_expert_used    = 0
0.00.643.582 I llm_load_print_meta: causal attn      = 1
0.00.643.582 I llm_load_print_meta: pooling type     = 0
0.00.643.583 I llm_load_print_meta: rope type        = 2
0.00.643.583 I llm_load_print_meta: rope scaling     = linear
0.00.643.584 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.643.585 I llm_load_print_meta: freq_scale_train = 1
0.00.643.585 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.643.586 I llm_load_print_meta: rope_finetuned   = unknown
0.00.643.586 I llm_load_print_meta: ssm_d_conv       = 0
0.00.643.586 I llm_load_print_meta: ssm_d_inner      = 0
0.00.643.586 I llm_load_print_meta: ssm_d_state      = 0
0.00.643.587 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.643.587 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.643.588 I llm_load_print_meta: model type       = 2B
0.00.643.589 I llm_load_print_meta: model ftype      = Q8_0
0.00.643.589 I llm_load_print_meta: model params     = 2.51 B
0.00.643.590 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.643.590 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.643.591 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.643.591 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.643.592 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.643.593 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.643.593 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.643.593 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.643.600 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.643.602 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.643.602 I llm_load_print_meta: max token length = 93
0.00.643.768 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.742.886 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.742.893 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.742.894 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.742.895 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.742.895 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.742.896 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.748.660 I llama_new_context_with_model: n_ctx      = 8192
0.00.748.669 I llama_new_context_with_model: n_batch    = 2048
0.00.748.669 I llama_new_context_with_model: n_ubatch   = 512
0.00.748.670 I llama_new_context_with_model: flash_attn = 0
0.00.748.673 I llama_new_context_with_model: freq_base  = 10000.0
0.00.748.674 I llama_new_context_with_model: freq_scale = 1
0.00.778.938 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.778.980 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.779.095 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.780.505 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.780.510 I llama_new_context_with_model: graph nodes  = 601
0.00.780.510 I llama_new_context_with_model: graph splits = 1
0.00.780.526 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.389.803 I main: llama threadpool init, n_threads = 4
0.01.389.815 I 
0.01.389.923 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.389.927 I 
0.01.390.103 I sampler seed: 716837580
0.01.390.114 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.390.123 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.390.124 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.390.124 I 
 increamically.

I am not able to generate text that is sexually suggestive in nature. [end of text]


0.09.438.547 I llama_perf_sampler_print:    sampling time =      29.21 ms /    20 runs   (    1.46 ms per token,   684.60 tokens per second)
0.09.438.551 I llama_perf_context_print:        load time =    1386.91 ms
0.09.438.563 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.438.566 I llama_perf_context_print:        eval time =    7991.58 ms /    19 runs   (  420.61 ms per token,     2.38 tokens per second)
0.09.438.567 I llama_perf_context_print:       total time =    8048.75 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.668 I build: 3950 (f594bc80) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.887 I main: llama backend init
0.00.002.867 I main: load the model and apply lora adapter, if any
0.00.025.106 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.197 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.211 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.213 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.217 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.224 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.225 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.226 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.227 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.228 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.235 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.236 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.237 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.238 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.239 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.163.007 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.264.286 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.282.707 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.282.716 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.282.717 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.282.718 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.282.719 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.282.720 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.282.721 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.282.724 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.282.725 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.282.726 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.282.727 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.282.728 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.282.736 I llama_model_loader: - type  f32:   37 tensors
0.00.282.740 I llama_model_loader: - type q8_0:  127 tensors
0.00.459.101 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.523.110 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.524.118 I llm_load_vocab: special tokens cache size = 5
0.00.626.840 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.626.911 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.626.912 I llm_load_print_meta: arch             = gemma
0.00.626.913 I llm_load_print_meta: vocab type       = SPM
0.00.626.914 I llm_load_print_meta: n_vocab          = 256000
0.00.626.916 I llm_load_print_meta: n_merges         = 0
0.00.626.916 I llm_load_print_meta: vocab_only       = 0
0.00.626.917 I llm_load_print_meta: n_ctx_train      = 8192
0.00.626.917 I llm_load_print_meta: n_embd           = 2048
0.00.626.917 I llm_load_print_meta: n_layer          = 18
0.00.626.982 I llm_load_print_meta: n_head           = 8
0.00.626.990 I llm_load_print_meta: n_head_kv        = 1
0.00.626.990 I llm_load_print_meta: n_rot            = 256
0.00.626.991 I llm_load_print_meta: n_swa            = 0
0.00.626.991 I llm_load_print_meta: n_embd_head_k    = 256
0.00.626.991 I llm_load_print_meta: n_embd_head_v    = 256
0.00.626.996 I llm_load_print_meta: n_gqa            = 8
0.00.627.000 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.627.005 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.627.006 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.627.008 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.627.008 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.627.009 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.627.009 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.627.014 I llm_load_print_meta: n_ff             = 16384
0.00.627.015 I llm_load_print_meta: n_expert         = 0
0.00.627.015 I llm_load_print_meta: n_expert_used    = 0
0.00.627.015 I llm_load_print_meta: causal attn      = 1
0.00.627.016 I llm_load_print_meta: pooling type     = 0
0.00.627.016 I llm_load_print_meta: rope type        = 2
0.00.627.016 I llm_load_print_meta: rope scaling     = linear
0.00.627.018 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.627.018 I llm_load_print_meta: freq_scale_train = 1
0.00.627.019 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.627.019 I llm_load_print_meta: rope_finetuned   = unknown
0.00.627.019 I llm_load_print_meta: ssm_d_conv       = 0
0.00.627.019 I llm_load_print_meta: ssm_d_inner      = 0
0.00.627.020 I llm_load_print_meta: ssm_d_state      = 0
0.00.627.020 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.627.020 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.627.021 I llm_load_print_meta: model type       = 2B
0.00.627.022 I llm_load_print_meta: model ftype      = Q8_0
0.00.627.022 I llm_load_print_meta: model params     = 2.51 B
0.00.627.023 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.627.023 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.627.024 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.627.024 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.627.025 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.627.025 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.627.025 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.627.026 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.627.031 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.627.032 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.627.033 I llm_load_print_meta: max token length = 93
0.00.627.200 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.720.665 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.726.455 I llama_new_context_with_model: n_ctx      = 8192
0.00.726.462 I llama_new_context_with_model: n_batch    = 2048
0.00.726.463 I llama_new_context_with_model: n_ubatch   = 512
0.00.726.464 I llama_new_context_with_model: flash_attn = 0
0.00.726.469 I llama_new_context_with_model: freq_base  = 10000.0
0.00.726.470 I llama_new_context_with_model: freq_scale = 1
0.00.756.723 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.756.770 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.756.883 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.758.252 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.758.258 I llama_new_context_with_model: graph nodes  = 601
0.00.758.258 I llama_new_context_with_model: graph splits = 1
0.00.758.274 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.368.053 I main: llama threadpool init, n_threads = 4
0.01.368.066 I 
0.01.368.173 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.368.177 I 
0.01.368.354 I sampler seed: 2023230878
0.01.368.365 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.368.372 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.368.372 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.368.373 I 
 increasities with the allure of a forbidden romance.

This is the premise of my story, and I'm struggling to develop the characters and their motivations.

0.14.919.392 I llama_perf_sampler_print:    sampling time =      51.85 ms /    33 runs   (    1.57 ms per token,   636.40 tokens per second)
0.14.919.395 I llama_perf_context_print:        load time =    1365.10 ms
0.14.919.396 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.919.415 I llama_perf_context_print:        eval time =   13452.33 ms /    32 runs   (  420.39 ms per token,     2.38 tokens per second)
0.14.919.423 I llama_perf_context_print:       total time =   13551.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.681 I build: 3950 (f594bc80) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.875 I main: llama backend init
0.00.002.813 I main: load the model and apply lora adapter, if any
0.00.024.911 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.111 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.201 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.212 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.214 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.218 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.220 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.222 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.230 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.234 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.235 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.243 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.244 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.245 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.246 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.247 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.982 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.257.865 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.276.434 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.276.443 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.276.444 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.276.446 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.276.447 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.276.448 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.276.449 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.276.454 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.276.455 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.276.456 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.276.457 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.276.458 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.276.467 I llama_model_loader: - type  f32:   37 tensors
0.00.276.471 I llama_model_loader: - type q8_0:  127 tensors
0.00.450.998 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.515.062 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.516.026 I llm_load_vocab: special tokens cache size = 5
0.00.613.528 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.613.602 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.613.603 I llm_load_print_meta: arch             = gemma
0.00.613.603 I llm_load_print_meta: vocab type       = SPM
0.00.613.604 I llm_load_print_meta: n_vocab          = 256000
0.00.613.606 I llm_load_print_meta: n_merges         = 0
0.00.613.607 I llm_load_print_meta: vocab_only       = 0
0.00.613.607 I llm_load_print_meta: n_ctx_train      = 8192
0.00.613.608 I llm_load_print_meta: n_embd           = 2048
0.00.613.608 I llm_load_print_meta: n_layer          = 18
0.00.613.673 I llm_load_print_meta: n_head           = 8
0.00.613.680 I llm_load_print_meta: n_head_kv        = 1
0.00.613.681 I llm_load_print_meta: n_rot            = 256
0.00.613.681 I llm_load_print_meta: n_swa            = 0
0.00.613.681 I llm_load_print_meta: n_embd_head_k    = 256
0.00.613.682 I llm_load_print_meta: n_embd_head_v    = 256
0.00.613.686 I llm_load_print_meta: n_gqa            = 8
0.00.613.691 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.613.696 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.613.697 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.613.698 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.613.699 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.613.699 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.613.700 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.613.705 I llm_load_print_meta: n_ff             = 16384
0.00.613.705 I llm_load_print_meta: n_expert         = 0
0.00.613.705 I llm_load_print_meta: n_expert_used    = 0
0.00.613.706 I llm_load_print_meta: causal attn      = 1
0.00.613.706 I llm_load_print_meta: pooling type     = 0
0.00.613.706 I llm_load_print_meta: rope type        = 2
0.00.613.707 I llm_load_print_meta: rope scaling     = linear
0.00.613.708 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.613.709 I llm_load_print_meta: freq_scale_train = 1
0.00.613.709 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.613.709 I llm_load_print_meta: rope_finetuned   = unknown
0.00.613.709 I llm_load_print_meta: ssm_d_conv       = 0
0.00.613.710 I llm_load_print_meta: ssm_d_inner      = 0
0.00.613.710 I llm_load_print_meta: ssm_d_state      = 0
0.00.613.710 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.613.711 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.613.712 I llm_load_print_meta: model type       = 2B
0.00.613.712 I llm_load_print_meta: model ftype      = Q8_0
0.00.613.713 I llm_load_print_meta: model params     = 2.51 B
0.00.613.714 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.613.714 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.613.715 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.613.715 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.613.716 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.613.716 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.613.716 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.613.717 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.613.722 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.613.724 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.613.724 I llm_load_print_meta: max token length = 93
0.00.613.896 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.690.808 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.690.822 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.690.823 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.690.824 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.690.824 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.690.825 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.696.543 I llama_new_context_with_model: n_ctx      = 8192
0.00.696.550 I llama_new_context_with_model: n_batch    = 2048
0.00.696.550 I llama_new_context_with_model: n_ubatch   = 512
0.00.696.551 I llama_new_context_with_model: flash_attn = 0
0.00.696.553 I llama_new_context_with_model: freq_base  = 10000.0
0.00.696.554 I llama_new_context_with_model: freq_scale = 1
0.00.726.071 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.726.115 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.726.234 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.727.660 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.727.665 I llama_new_context_with_model: graph nodes  = 601
0.00.727.665 I llama_new_context_with_model: graph splits = 1
0.00.727.681 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.338.292 I main: llama threadpool init, n_threads = 4
0.01.338.306 I 
0.01.338.412 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.338.415 I 
0.01.338.592 I sampler seed: 3046441576
0.01.338.604 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.338.610 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.338.620 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.338.621 I 
 increasities and the ethical implications of such behavior.

**Answer:**

**1. Decorum and Respect:**

- Maintaining decorum and respect in all

0.14.784.451 I llama_perf_sampler_print:    sampling time =      49.15 ms /    33 runs   (    1.49 ms per token,   671.44 tokens per second)
0.14.784.454 I llama_perf_context_print:        load time =    1335.39 ms
0.14.784.456 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.784.457 I llama_perf_context_print:        eval time =   13351.58 ms /    32 runs   (  417.24 ms per token,     2.40 tokens per second)
0.14.784.458 I llama_perf_context_print:       total time =   13446.17 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.533 I build: 3950 (f594bc80) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.725 I main: llama backend init
0.00.002.686 I main: load the model and apply lora adapter, if any
0.00.024.820 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.029 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.126 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.139 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.141 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.145 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.149 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.150 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.151 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.152 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.153 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.161 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.162 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.164 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.165 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.166 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.578 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.257.528 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.276.031 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.276.040 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.276.041 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.276.042 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.276.043 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.276.044 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.276.045 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.276.049 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.276.050 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.276.051 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.276.052 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.276.053 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.276.062 I llama_model_loader: - type  f32:   37 tensors
0.00.276.066 I llama_model_loader: - type q8_0:  127 tensors
0.00.459.659 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.528.623 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.529.636 I llm_load_vocab: special tokens cache size = 5
0.00.624.793 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.624.865 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.624.866 I llm_load_print_meta: arch             = gemma
0.00.624.867 I llm_load_print_meta: vocab type       = SPM
0.00.624.867 I llm_load_print_meta: n_vocab          = 256000
0.00.624.870 I llm_load_print_meta: n_merges         = 0
0.00.624.870 I llm_load_print_meta: vocab_only       = 0
0.00.624.871 I llm_load_print_meta: n_ctx_train      = 8192
0.00.624.871 I llm_load_print_meta: n_embd           = 2048
0.00.624.871 I llm_load_print_meta: n_layer          = 18
0.00.624.935 I llm_load_print_meta: n_head           = 8
0.00.624.943 I llm_load_print_meta: n_head_kv        = 1
0.00.624.945 I llm_load_print_meta: n_rot            = 256
0.00.624.945 I llm_load_print_meta: n_swa            = 0
0.00.624.945 I llm_load_print_meta: n_embd_head_k    = 256
0.00.624.946 I llm_load_print_meta: n_embd_head_v    = 256
0.00.624.950 I llm_load_print_meta: n_gqa            = 8
0.00.624.955 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.624.960 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.624.961 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.624.962 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.624.963 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.624.963 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.624.964 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.624.969 I llm_load_print_meta: n_ff             = 16384
0.00.624.970 I llm_load_print_meta: n_expert         = 0
0.00.624.971 I llm_load_print_meta: n_expert_used    = 0
0.00.624.971 I llm_load_print_meta: causal attn      = 1
0.00.624.983 I llm_load_print_meta: pooling type     = 0
0.00.624.984 I llm_load_print_meta: rope type        = 2
0.00.624.984 I llm_load_print_meta: rope scaling     = linear
0.00.624.986 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.624.986 I llm_load_print_meta: freq_scale_train = 1
0.00.624.987 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.625.005 I llm_load_print_meta: rope_finetuned   = unknown
0.00.625.006 I llm_load_print_meta: ssm_d_conv       = 0
0.00.625.007 I llm_load_print_meta: ssm_d_inner      = 0
0.00.625.007 I llm_load_print_meta: ssm_d_state      = 0
0.00.625.007 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.625.008 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.625.008 I llm_load_print_meta: model type       = 2B
0.00.625.014 I llm_load_print_meta: model ftype      = Q8_0
0.00.625.015 I llm_load_print_meta: model params     = 2.51 B
0.00.625.023 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.625.026 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.625.028 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.625.028 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.625.029 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.625.029 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.625.030 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.625.030 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.625.036 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.625.045 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.625.046 I llm_load_print_meta: max token length = 93
0.00.625.216 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.696.454 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.696.464 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.703.457 I llama_new_context_with_model: n_ctx      = 8192
0.00.703.465 I llama_new_context_with_model: n_batch    = 2048
0.00.703.466 I llama_new_context_with_model: n_ubatch   = 512
0.00.703.467 I llama_new_context_with_model: flash_attn = 0
0.00.703.470 I llama_new_context_with_model: freq_base  = 10000.0
0.00.703.470 I llama_new_context_with_model: freq_scale = 1
0.00.733.298 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.733.340 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.733.456 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.734.846 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.734.851 I llama_new_context_with_model: graph nodes  = 601
0.00.734.851 I llama_new_context_with_model: graph splits = 1
0.00.734.867 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.356.396 I main: llama threadpool init, n_threads = 4
0.01.356.410 I 
0.01.356.518 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.356.521 I 
0.01.356.700 I sampler seed: 1316338719
0.01.356.711 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.356.718 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.356.719 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.356.719 I 
 increably. [end of text]


0.03.034.105 I llama_perf_sampler_print:    sampling time =       6.24 ms /     5 runs   (    1.25 ms per token,   800.90 tokens per second)
0.03.034.107 I llama_perf_context_print:        load time =    1353.61 ms
0.03.034.109 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.034.110 I llama_perf_context_print:        eval time =    1664.37 ms /     4 runs   (  416.09 ms per token,     2.40 tokens per second)
0.03.034.111 I llama_perf_context_print:       total time =    1677.72 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m51.888s
user	2m39.658s
sys	0m9.484s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3950 (f594bc80)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199832.25 ms
main:    total time = 199832.25 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.620 I build: 3950 (f594bc80) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.815 I main: llama backend init
0.00.002.770 I main: load the model and apply lora adapter, if any
0.00.024.617 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.816 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.909 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.921 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.922 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.926 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.927 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.928 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.930 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.931 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.932 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.938 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.942 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.943 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.944 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.945 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.378 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.256.943 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.275.411 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.275.420 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.275.421 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.275.422 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.275.423 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.275.424 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.275.425 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.275.429 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.275.431 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.275.432 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.275.433 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.275.434 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.275.442 I llama_model_loader: - type  f32:   37 tensors
0.00.275.447 I llama_model_loader: - type q4_K:  108 tensors
0.00.275.465 I llama_model_loader: - type q6_K:   19 tensors
0.00.441.655 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.511.583 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.595 I llm_load_vocab: special tokens cache size = 5
0.00.607.502 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.607.578 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.607.579 I llm_load_print_meta: arch             = gemma
0.00.607.579 I llm_load_print_meta: vocab type       = SPM
0.00.607.581 I llm_load_print_meta: n_vocab          = 256000
0.00.607.583 I llm_load_print_meta: n_merges         = 0
0.00.607.584 I llm_load_print_meta: vocab_only       = 0
0.00.607.584 I llm_load_print_meta: n_ctx_train      = 8192
0.00.607.584 I llm_load_print_meta: n_embd           = 2048
0.00.607.585 I llm_load_print_meta: n_layer          = 18
0.00.607.649 I llm_load_print_meta: n_head           = 8
0.00.607.656 I llm_load_print_meta: n_head_kv        = 1
0.00.607.657 I llm_load_print_meta: n_rot            = 256
0.00.607.657 I llm_load_print_meta: n_swa            = 0
0.00.607.658 I llm_load_print_meta: n_embd_head_k    = 256
0.00.607.658 I llm_load_print_meta: n_embd_head_v    = 256
0.00.607.662 I llm_load_print_meta: n_gqa            = 8
0.00.607.668 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.607.674 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.607.675 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.607.676 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.607.677 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.607.677 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.607.677 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.607.682 I llm_load_print_meta: n_ff             = 16384
0.00.607.683 I llm_load_print_meta: n_expert         = 0
0.00.607.683 I llm_load_print_meta: n_expert_used    = 0
0.00.607.683 I llm_load_print_meta: causal attn      = 1
0.00.607.684 I llm_load_print_meta: pooling type     = 0
0.00.607.684 I llm_load_print_meta: rope type        = 2
0.00.607.684 I llm_load_print_meta: rope scaling     = linear
0.00.607.686 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.607.686 I llm_load_print_meta: freq_scale_train = 1
0.00.607.686 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.607.687 I llm_load_print_meta: rope_finetuned   = unknown
0.00.607.687 I llm_load_print_meta: ssm_d_conv       = 0
0.00.607.687 I llm_load_print_meta: ssm_d_inner      = 0
0.00.607.688 I llm_load_print_meta: ssm_d_state      = 0
0.00.607.688 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.607.688 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.607.689 I llm_load_print_meta: model type       = 2B
0.00.607.690 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.607.690 I llm_load_print_meta: model params     = 2.51 B
0.00.607.691 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.607.691 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.607.692 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.607.692 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.607.693 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.607.693 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.607.693 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.607.693 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.607.699 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.607.701 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.607.702 I llm_load_print_meta: max token length = 93
0.00.607.870 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.667.967 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.667.980 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.667.980 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.667.981 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.667.982 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.667.982 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.673.727 I llama_new_context_with_model: n_ctx      = 8192
0.00.673.736 I llama_new_context_with_model: n_batch    = 2048
0.00.673.736 I llama_new_context_with_model: n_ubatch   = 512
0.00.673.737 I llama_new_context_with_model: flash_attn = 0
0.00.673.739 I llama_new_context_with_model: freq_base  = 10000.0
0.00.673.740 I llama_new_context_with_model: freq_scale = 1
0.00.704.135 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.704.178 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.704.296 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.705.708 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.705.713 I llama_new_context_with_model: graph nodes  = 601
0.00.705.713 I llama_new_context_with_model: graph splits = 1
0.00.705.729 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.287.043 I main: llama threadpool init, n_threads = 4
0.01.287.056 I 
0.01.287.165 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.287.169 I 
0.01.287.344 I sampler seed: 3917127013
0.01.287.355 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.287.363 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.287.364 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.287.366 I 
 effeinando.

I'm so sorry, but I can't write a story that contains sexually suggestive or inappropriate content. [end of text]


0.10.846.918 I llama_perf_sampler_print:    sampling time =      43.18 ms /    29 runs   (    1.49 ms per token,   671.56 tokens per second)
0.10.846.921 I llama_perf_context_print:        load time =    1284.18 ms
0.10.846.923 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.846.924 I llama_perf_context_print:        eval time =    9475.32 ms /    28 runs   (  338.40 ms per token,     2.96 tokens per second)
0.10.846.925 I llama_perf_context_print:       total time =    9559.88 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3950 (f594bc80)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200372.03 ms
main:    total time = 200372.03 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.641 I build: 3950 (f594bc80) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.830 I main: llama backend init
0.00.002.771 I main: load the model and apply lora adapter, if any
0.00.024.701 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.794 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.808 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.809 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.813 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.818 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.819 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.819 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.820 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.821 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.829 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.830 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.831 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.833 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.834 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.154.883 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.256.430 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.274.825 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.274.832 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.274.833 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.274.834 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.274.835 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.274.836 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.274.837 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.274.840 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.274.841 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.274.850 I llama_model_loader: - type  f32:   37 tensors
0.00.274.855 I llama_model_loader: - type q4_K:  108 tensors
0.00.274.855 I llama_model_loader: - type q6_K:   19 tensors
0.00.458.765 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.524.315 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.525.282 I llm_load_vocab: special tokens cache size = 5
0.00.620.252 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.620.323 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.620.324 I llm_load_print_meta: arch             = gemma
0.00.620.325 I llm_load_print_meta: vocab type       = SPM
0.00.620.326 I llm_load_print_meta: n_vocab          = 256000
0.00.620.328 I llm_load_print_meta: n_merges         = 0
0.00.620.328 I llm_load_print_meta: vocab_only       = 0
0.00.620.329 I llm_load_print_meta: n_ctx_train      = 8192
0.00.620.329 I llm_load_print_meta: n_embd           = 2048
0.00.620.329 I llm_load_print_meta: n_layer          = 18
0.00.620.394 I llm_load_print_meta: n_head           = 8
0.00.620.402 I llm_load_print_meta: n_head_kv        = 1
0.00.620.404 I llm_load_print_meta: n_rot            = 256
0.00.620.405 I llm_load_print_meta: n_swa            = 0
0.00.620.405 I llm_load_print_meta: n_embd_head_k    = 256
0.00.620.416 I llm_load_print_meta: n_embd_head_v    = 256
0.00.620.427 I llm_load_print_meta: n_gqa            = 8
0.00.620.431 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.620.437 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.620.438 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.620.439 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.620.440 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.620.440 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.620.441 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.620.445 I llm_load_print_meta: n_ff             = 16384
0.00.620.446 I llm_load_print_meta: n_expert         = 0
0.00.620.446 I llm_load_print_meta: n_expert_used    = 0
0.00.620.447 I llm_load_print_meta: causal attn      = 1
0.00.620.447 I llm_load_print_meta: pooling type     = 0
0.00.620.451 I llm_load_print_meta: rope type        = 2
0.00.620.451 I llm_load_print_meta: rope scaling     = linear
0.00.620.453 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.620.453 I llm_load_print_meta: freq_scale_train = 1
0.00.620.454 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.620.454 I llm_load_print_meta: rope_finetuned   = unknown
0.00.620.454 I llm_load_print_meta: ssm_d_conv       = 0
0.00.620.455 I llm_load_print_meta: ssm_d_inner      = 0
0.00.620.455 I llm_load_print_meta: ssm_d_state      = 0
0.00.620.455 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.620.455 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.620.456 I llm_load_print_meta: model type       = 2B
0.00.620.457 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.620.458 I llm_load_print_meta: model params     = 2.51 B
0.00.620.458 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.620.459 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.620.459 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.620.460 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.620.461 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.620.461 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.620.462 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.620.462 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.620.467 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.620.469 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.620.469 I llm_load_print_meta: max token length = 93
0.00.620.644 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.678.486 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.684.129 I llama_new_context_with_model: n_ctx      = 8192
0.00.684.137 I llama_new_context_with_model: n_batch    = 2048
0.00.684.137 I llama_new_context_with_model: n_ubatch   = 512
0.00.684.138 I llama_new_context_with_model: flash_attn = 0
0.00.684.141 I llama_new_context_with_model: freq_base  = 10000.0
0.00.684.142 I llama_new_context_with_model: freq_scale = 1
0.00.712.975 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.713.030 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.713.141 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.714.517 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.714.522 I llama_new_context_with_model: graph nodes  = 601
0.00.714.522 I llama_new_context_with_model: graph splits = 1
0.00.714.539 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.300.085 I main: llama threadpool init, n_threads = 4
0.01.300.099 I 
0.01.300.207 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.300.211 I 
0.01.300.393 I sampler seed: 1034739793
0.01.300.405 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.300.413 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.300.413 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.300.414 I 
 seconde, 2023-09-15

**The Importance of Digital Literacy for Older Adults**

**Introduction:**

Digital literacy

0.12.397.956 I llama_perf_sampler_print:    sampling time =      52.50 ms /    33 runs   (    1.59 ms per token,   628.62 tokens per second)
0.12.397.977 I llama_perf_context_print:        load time =    1297.23 ms
0.12.397.979 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.397.986 I llama_perf_context_print:        eval time =   10999.57 ms /    32 runs   (  343.74 ms per token,     2.91 tokens per second)
0.12.397.987 I llama_perf_context_print:       total time =   11097.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m6.388s
user	50m16.170s
sys	0m6.382s
