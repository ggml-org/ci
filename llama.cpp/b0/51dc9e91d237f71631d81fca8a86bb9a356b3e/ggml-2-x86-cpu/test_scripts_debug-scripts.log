+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.654 I build: 3966 (b051dc9e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.858 I main: llama backend init
0.00.002.795 I main: load the model and apply lora adapter, if any
0.00.025.083 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.285 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.378 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.389 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.391 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.397 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.398 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.399 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.400 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.403 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.404 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.411 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.413 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.414 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.415 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.416 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.995 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.257.664 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.276.116 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.276.125 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.276.126 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.276.128 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.276.129 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.276.130 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.276.131 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.276.135 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.276.136 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.276.137 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.276.138 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.276.140 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.276.148 I llama_model_loader: - type  f32:   37 tensors
0.00.276.152 I llama_model_loader: - type q8_0:  127 tensors
0.00.459.180 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.530.813 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.531.807 I llm_load_vocab: special tokens cache size = 5
0.00.630.992 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.631.065 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.631.066 I llm_load_print_meta: arch             = gemma
0.00.631.067 I llm_load_print_meta: vocab type       = SPM
0.00.631.069 I llm_load_print_meta: n_vocab          = 256000
0.00.631.071 I llm_load_print_meta: n_merges         = 0
0.00.631.072 I llm_load_print_meta: vocab_only       = 0
0.00.631.072 I llm_load_print_meta: n_ctx_train      = 8192
0.00.631.072 I llm_load_print_meta: n_embd           = 2048
0.00.631.073 I llm_load_print_meta: n_layer          = 18
0.00.631.136 I llm_load_print_meta: n_head           = 8
0.00.631.143 I llm_load_print_meta: n_head_kv        = 1
0.00.631.144 I llm_load_print_meta: n_rot            = 256
0.00.631.146 I llm_load_print_meta: n_swa            = 0
0.00.631.146 I llm_load_print_meta: n_embd_head_k    = 256
0.00.631.147 I llm_load_print_meta: n_embd_head_v    = 256
0.00.631.153 I llm_load_print_meta: n_gqa            = 8
0.00.631.158 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.631.162 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.631.163 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.631.165 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.631.165 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.631.166 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.631.166 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.631.171 I llm_load_print_meta: n_ff             = 16384
0.00.631.171 I llm_load_print_meta: n_expert         = 0
0.00.631.172 I llm_load_print_meta: n_expert_used    = 0
0.00.631.173 I llm_load_print_meta: causal attn      = 1
0.00.631.173 I llm_load_print_meta: pooling type     = 0
0.00.631.173 I llm_load_print_meta: rope type        = 2
0.00.631.174 I llm_load_print_meta: rope scaling     = linear
0.00.631.176 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.631.177 I llm_load_print_meta: freq_scale_train = 1
0.00.631.177 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.631.177 I llm_load_print_meta: rope_finetuned   = unknown
0.00.631.178 I llm_load_print_meta: ssm_d_conv       = 0
0.00.631.178 I llm_load_print_meta: ssm_d_inner      = 0
0.00.631.178 I llm_load_print_meta: ssm_d_state      = 0
0.00.631.179 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.631.180 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.631.180 I llm_load_print_meta: model type       = 2B
0.00.631.181 I llm_load_print_meta: model ftype      = Q8_0
0.00.631.182 I llm_load_print_meta: model params     = 2.51 B
0.00.631.183 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.631.183 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.631.184 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.631.184 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.631.185 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.631.198 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.631.203 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.631.203 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.631.210 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.631.211 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.631.212 I llm_load_print_meta: max token length = 93
0.00.631.387 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.731.100 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.731.112 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.731.113 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.731.114 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.731.115 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.731.115 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.737.164 I llama_new_context_with_model: n_ctx      = 8192
0.00.737.172 I llama_new_context_with_model: n_batch    = 2048
0.00.737.173 I llama_new_context_with_model: n_ubatch   = 512
0.00.737.174 I llama_new_context_with_model: flash_attn = 0
0.00.737.178 I llama_new_context_with_model: freq_base  = 10000.0
0.00.737.179 I llama_new_context_with_model: freq_scale = 1
0.00.768.988 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.769.031 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.769.148 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.770.586 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.770.591 I llama_new_context_with_model: graph nodes  = 601
0.00.770.592 I llama_new_context_with_model: graph splits = 1
0.00.770.607 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.382.540 I main: llama threadpool init, n_threads = 4
0.01.382.553 I 
0.01.382.658 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.382.662 I 
0.01.382.840 I sampler seed: 2794259807
0.01.382.852 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.382.859 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.382.860 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.382.860 I 
 increasels, and a small horde of goblins.

The goblins, despite their numbers, were nimble and elusive, avoiding most of the attacks. The skirmishes

0.14.834.732 I llama_perf_sampler_print:    sampling time =      49.22 ms /    33 runs   (    1.49 ms per token,   670.45 tokens per second)
0.14.834.736 I llama_perf_context_print:        load time =    1379.65 ms
0.14.834.738 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.834.740 I llama_perf_context_print:        eval time =   13357.32 ms /    32 runs   (  417.42 ms per token,     2.40 tokens per second)
0.14.834.751 I llama_perf_context_print:       total time =   13452.20 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.660 I build: 3966 (b051dc9e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.853 I main: llama backend init
0.00.002.792 I main: load the model and apply lora adapter, if any
0.00.025.133 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.235 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.250 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.255 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.259 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.260 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.261 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.263 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.265 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.266 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.274 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.276 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.277 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.280 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.281 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.757 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.257.462 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.276.090 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.276.101 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.276.102 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.276.103 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.276.104 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.276.105 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.276.107 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.276.111 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.276.113 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.276.114 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.276.115 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.276.116 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.276.126 I llama_model_loader: - type  f32:   37 tensors
0.00.276.130 I llama_model_loader: - type q8_0:  127 tensors
0.00.487.285 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.560.038 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.561.118 I llm_load_vocab: special tokens cache size = 5
0.00.673.806 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.673.878 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.673.879 I llm_load_print_meta: arch             = gemma
0.00.673.879 I llm_load_print_meta: vocab type       = SPM
0.00.673.880 I llm_load_print_meta: n_vocab          = 256000
0.00.673.882 I llm_load_print_meta: n_merges         = 0
0.00.673.883 I llm_load_print_meta: vocab_only       = 0
0.00.673.883 I llm_load_print_meta: n_ctx_train      = 8192
0.00.673.884 I llm_load_print_meta: n_embd           = 2048
0.00.673.884 I llm_load_print_meta: n_layer          = 18
0.00.673.952 I llm_load_print_meta: n_head           = 8
0.00.673.958 I llm_load_print_meta: n_head_kv        = 1
0.00.673.959 I llm_load_print_meta: n_rot            = 256
0.00.673.959 I llm_load_print_meta: n_swa            = 0
0.00.673.959 I llm_load_print_meta: n_embd_head_k    = 256
0.00.673.960 I llm_load_print_meta: n_embd_head_v    = 256
0.00.673.964 I llm_load_print_meta: n_gqa            = 8
0.00.673.969 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.673.974 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.673.975 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.673.976 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.673.977 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.673.977 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.673.977 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.673.983 I llm_load_print_meta: n_ff             = 16384
0.00.673.983 I llm_load_print_meta: n_expert         = 0
0.00.673.983 I llm_load_print_meta: n_expert_used    = 0
0.00.673.984 I llm_load_print_meta: causal attn      = 1
0.00.673.984 I llm_load_print_meta: pooling type     = 0
0.00.673.984 I llm_load_print_meta: rope type        = 2
0.00.673.985 I llm_load_print_meta: rope scaling     = linear
0.00.673.986 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.673.987 I llm_load_print_meta: freq_scale_train = 1
0.00.673.987 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.673.987 I llm_load_print_meta: rope_finetuned   = unknown
0.00.673.988 I llm_load_print_meta: ssm_d_conv       = 0
0.00.673.988 I llm_load_print_meta: ssm_d_inner      = 0
0.00.673.988 I llm_load_print_meta: ssm_d_state      = 0
0.00.673.988 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.673.989 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.673.989 I llm_load_print_meta: model type       = 2B
0.00.673.991 I llm_load_print_meta: model ftype      = Q8_0
0.00.673.991 I llm_load_print_meta: model params     = 2.51 B
0.00.673.992 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.673.992 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.673.993 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.673.994 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.673.994 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.673.994 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.673.995 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.673.995 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.674.000 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.674.002 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.674.002 I llm_load_print_meta: max token length = 93
0.00.674.176 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.767.381 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.773.224 I llama_new_context_with_model: n_ctx      = 8192
0.00.773.232 I llama_new_context_with_model: n_batch    = 2048
0.00.773.233 I llama_new_context_with_model: n_ubatch   = 512
0.00.773.233 I llama_new_context_with_model: flash_attn = 0
0.00.773.238 I llama_new_context_with_model: freq_base  = 10000.0
0.00.773.239 I llama_new_context_with_model: freq_scale = 1
0.00.804.579 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.804.622 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.804.735 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.806.099 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.806.104 I llama_new_context_with_model: graph nodes  = 601
0.00.806.105 I llama_new_context_with_model: graph splits = 1
0.00.806.120 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.436.787 I main: llama threadpool init, n_threads = 4
0.01.436.801 I 
0.01.436.910 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.436.914 I 
0.01.437.102 I sampler seed: 3813849930
0.01.437.115 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.437.123 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.437.126 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.437.127 I 
 increasities by providing additional information about the specific factors that contribute to the escalation.

**Specific factors that contribute to escalation include:**

* **Communication breakdowns:**

0.15.019.884 I llama_perf_sampler_print:    sampling time =      49.07 ms /    33 runs   (    1.49 ms per token,   672.51 tokens per second)
0.15.019.888 I llama_perf_context_print:        load time =    1433.91 ms
0.15.019.890 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.019.891 I llama_perf_context_print:        eval time =   13488.62 ms /    32 runs   (  421.52 ms per token,     2.37 tokens per second)
0.15.019.892 I llama_perf_context_print:       total time =   13583.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.684 I build: 3966 (b051dc9e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.876 I main: llama backend init
0.00.002.846 I main: load the model and apply lora adapter, if any
0.00.025.059 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.258 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.347 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.358 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.359 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.363 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.365 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.367 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.368 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.376 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.378 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.385 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.389 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.390 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.391 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.392 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.769 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.258.726 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.277.297 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.277.310 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.277.312 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.277.313 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.277.314 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.277.315 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.277.316 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.277.320 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.277.321 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.277.322 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.277.323 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.277.325 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.277.334 I llama_model_loader: - type  f32:   37 tensors
0.00.277.339 I llama_model_loader: - type q8_0:  127 tensors
0.00.457.788 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.525.654 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.526.701 I llm_load_vocab: special tokens cache size = 5
0.00.626.137 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.626.212 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.626.213 I llm_load_print_meta: arch             = gemma
0.00.626.214 I llm_load_print_meta: vocab type       = SPM
0.00.626.214 I llm_load_print_meta: n_vocab          = 256000
0.00.626.217 I llm_load_print_meta: n_merges         = 0
0.00.626.217 I llm_load_print_meta: vocab_only       = 0
0.00.626.218 I llm_load_print_meta: n_ctx_train      = 8192
0.00.626.218 I llm_load_print_meta: n_embd           = 2048
0.00.626.218 I llm_load_print_meta: n_layer          = 18
0.00.626.281 I llm_load_print_meta: n_head           = 8
0.00.626.288 I llm_load_print_meta: n_head_kv        = 1
0.00.626.288 I llm_load_print_meta: n_rot            = 256
0.00.626.289 I llm_load_print_meta: n_swa            = 0
0.00.626.289 I llm_load_print_meta: n_embd_head_k    = 256
0.00.626.289 I llm_load_print_meta: n_embd_head_v    = 256
0.00.626.294 I llm_load_print_meta: n_gqa            = 8
0.00.626.300 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.626.306 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.626.307 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.626.309 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.626.309 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.626.310 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.626.322 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.626.330 I llm_load_print_meta: n_ff             = 16384
0.00.626.331 I llm_load_print_meta: n_expert         = 0
0.00.626.331 I llm_load_print_meta: n_expert_used    = 0
0.00.626.332 I llm_load_print_meta: causal attn      = 1
0.00.626.332 I llm_load_print_meta: pooling type     = 0
0.00.626.333 I llm_load_print_meta: rope type        = 2
0.00.626.334 I llm_load_print_meta: rope scaling     = linear
0.00.626.335 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.626.336 I llm_load_print_meta: freq_scale_train = 1
0.00.626.336 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.626.337 I llm_load_print_meta: rope_finetuned   = unknown
0.00.626.337 I llm_load_print_meta: ssm_d_conv       = 0
0.00.626.337 I llm_load_print_meta: ssm_d_inner      = 0
0.00.626.337 I llm_load_print_meta: ssm_d_state      = 0
0.00.626.338 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.626.339 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.626.340 I llm_load_print_meta: model type       = 2B
0.00.626.341 I llm_load_print_meta: model ftype      = Q8_0
0.00.626.341 I llm_load_print_meta: model params     = 2.51 B
0.00.626.342 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.626.342 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.626.343 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.626.344 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.626.344 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.626.345 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.626.345 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.626.346 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.626.351 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.626.353 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.626.353 I llm_load_print_meta: max token length = 93
0.00.626.519 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.703.820 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.703.832 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.703.834 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.703.834 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.703.835 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.703.836 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.709.543 I llama_new_context_with_model: n_ctx      = 8192
0.00.709.551 I llama_new_context_with_model: n_batch    = 2048
0.00.709.552 I llama_new_context_with_model: n_ubatch   = 512
0.00.709.552 I llama_new_context_with_model: flash_attn = 0
0.00.709.556 I llama_new_context_with_model: freq_base  = 10000.0
0.00.709.556 I llama_new_context_with_model: freq_scale = 1
0.00.739.355 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.739.401 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.739.520 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.740.937 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.740.942 I llama_new_context_with_model: graph nodes  = 601
0.00.740.943 I llama_new_context_with_model: graph splits = 1
0.00.740.958 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.352.302 I main: llama threadpool init, n_threads = 4
0.01.352.318 I 
0.01.352.432 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.352.437 I 
0.01.352.618 I sampler seed: 2837201605
0.01.352.631 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.352.648 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.352.651 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.352.652 I 
 increadibly and persistently. [end of text]


0.03.873.550 I llama_perf_sampler_print:    sampling time =       9.34 ms /     7 runs   (    1.33 ms per token,   749.54 tokens per second)
0.03.873.554 I llama_perf_context_print:        load time =    1349.36 ms
0.03.873.555 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.873.557 I llama_perf_context_print:        eval time =    2501.69 ms /     6 runs   (  416.95 ms per token,     2.40 tokens per second)
0.03.873.557 I llama_perf_context_print:       total time =    2521.26 ms /     7 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.666 I build: 3966 (b051dc9e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.868 I main: llama backend init
0.00.002.802 I main: load the model and apply lora adapter, if any
0.00.024.720 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.921 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.010 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.022 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.024 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.029 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.032 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.033 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.034 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.035 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.036 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.046 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.047 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.048 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.050 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.051 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.990 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.257.589 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.275.922 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.275.933 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.275.934 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.275.935 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.275.936 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.275.937 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.275.938 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.275.942 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.275.943 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.275.944 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.275.945 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.275.947 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.275.955 I llama_model_loader: - type  f32:   37 tensors
0.00.275.959 I llama_model_loader: - type q8_0:  127 tensors
0.00.455.133 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.520.293 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.521.256 I llm_load_vocab: special tokens cache size = 5
0.00.622.331 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.622.405 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.622.406 I llm_load_print_meta: arch             = gemma
0.00.622.406 I llm_load_print_meta: vocab type       = SPM
0.00.622.407 I llm_load_print_meta: n_vocab          = 256000
0.00.622.409 I llm_load_print_meta: n_merges         = 0
0.00.622.410 I llm_load_print_meta: vocab_only       = 0
0.00.622.410 I llm_load_print_meta: n_ctx_train      = 8192
0.00.622.410 I llm_load_print_meta: n_embd           = 2048
0.00.622.411 I llm_load_print_meta: n_layer          = 18
0.00.622.476 I llm_load_print_meta: n_head           = 8
0.00.622.483 I llm_load_print_meta: n_head_kv        = 1
0.00.622.484 I llm_load_print_meta: n_rot            = 256
0.00.622.484 I llm_load_print_meta: n_swa            = 0
0.00.622.484 I llm_load_print_meta: n_embd_head_k    = 256
0.00.622.485 I llm_load_print_meta: n_embd_head_v    = 256
0.00.622.489 I llm_load_print_meta: n_gqa            = 8
0.00.622.494 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.622.499 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.500 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.501 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.501 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.502 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.502 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.521 I llm_load_print_meta: n_ff             = 16384
0.00.622.522 I llm_load_print_meta: n_expert         = 0
0.00.622.523 I llm_load_print_meta: n_expert_used    = 0
0.00.622.523 I llm_load_print_meta: causal attn      = 1
0.00.622.524 I llm_load_print_meta: pooling type     = 0
0.00.622.524 I llm_load_print_meta: rope type        = 2
0.00.622.525 I llm_load_print_meta: rope scaling     = linear
0.00.622.526 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.527 I llm_load_print_meta: freq_scale_train = 1
0.00.622.527 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.527 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.528 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.528 I llm_load_print_meta: ssm_d_inner      = 0
0.00.622.528 I llm_load_print_meta: ssm_d_state      = 0
0.00.622.528 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.622.529 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.622.529 I llm_load_print_meta: model type       = 2B
0.00.622.530 I llm_load_print_meta: model ftype      = Q8_0
0.00.622.531 I llm_load_print_meta: model params     = 2.51 B
0.00.622.532 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.622.532 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.622.533 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.622.533 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.622.534 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.622.535 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.622.540 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.622.541 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.622.546 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.622.548 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.622.548 I llm_load_print_meta: max token length = 93
0.00.622.716 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.693.942 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.693.954 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.699.715 I llama_new_context_with_model: n_ctx      = 8192
0.00.699.723 I llama_new_context_with_model: n_batch    = 2048
0.00.699.724 I llama_new_context_with_model: n_ubatch   = 512
0.00.699.724 I llama_new_context_with_model: flash_attn = 0
0.00.699.728 I llama_new_context_with_model: freq_base  = 10000.0
0.00.699.729 I llama_new_context_with_model: freq_scale = 1
0.00.729.585 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.729.627 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.729.742 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.731.117 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.731.123 I llama_new_context_with_model: graph nodes  = 601
0.00.731.123 I llama_new_context_with_model: graph splits = 1
0.00.731.138 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.345.320 I main: llama threadpool init, n_threads = 4
0.01.345.334 I 
0.01.345.446 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.345.450 I 
0.01.345.631 I sampler seed: 943099804
0.01.345.642 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.345.649 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.345.650 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.345.650 I 
 increasities. [end of text]


0.03.033.725 I llama_perf_sampler_print:    sampling time =       6.21 ms /     5 runs   (    1.24 ms per token,   805.15 tokens per second)
0.03.033.729 I llama_perf_context_print:        load time =    1342.43 ms
0.03.033.731 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.033.744 I llama_perf_context_print:        eval time =    1675.03 ms /     4 runs   (  418.76 ms per token,     2.39 tokens per second)
0.03.033.745 I llama_perf_context_print:       total time =    1688.42 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m46.520s
user	2m17.864s
sys	0m9.576s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3966 (b051dc9e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199523.52 ms
main:    total time = 199523.52 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.627 I build: 3966 (b051dc9e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.828 I main: llama backend init
0.00.002.759 I main: load the model and apply lora adapter, if any
0.00.024.566 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.775 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.866 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.878 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.880 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.885 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.888 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.890 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.890 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.892 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.892 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.899 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.900 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.901 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.902 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.904 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.735 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.256.870 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.275.231 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.275.242 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.275.243 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.275.244 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.275.245 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.275.246 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.275.247 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.275.252 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.275.253 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.275.254 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.275.255 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.275.257 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.275.266 I llama_model_loader: - type  f32:   37 tensors
0.00.275.269 I llama_model_loader: - type q4_K:  108 tensors
0.00.275.270 I llama_model_loader: - type q6_K:   19 tensors
0.00.449.210 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.514.780 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.750 I llm_load_vocab: special tokens cache size = 5
0.00.623.077 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.623.147 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.623.148 I llm_load_print_meta: arch             = gemma
0.00.623.149 I llm_load_print_meta: vocab type       = SPM
0.00.623.149 I llm_load_print_meta: n_vocab          = 256000
0.00.623.151 I llm_load_print_meta: n_merges         = 0
0.00.623.152 I llm_load_print_meta: vocab_only       = 0
0.00.623.152 I llm_load_print_meta: n_ctx_train      = 8192
0.00.623.153 I llm_load_print_meta: n_embd           = 2048
0.00.623.153 I llm_load_print_meta: n_layer          = 18
0.00.623.214 I llm_load_print_meta: n_head           = 8
0.00.623.222 I llm_load_print_meta: n_head_kv        = 1
0.00.623.223 I llm_load_print_meta: n_rot            = 256
0.00.623.223 I llm_load_print_meta: n_swa            = 0
0.00.623.223 I llm_load_print_meta: n_embd_head_k    = 256
0.00.623.234 I llm_load_print_meta: n_embd_head_v    = 256
0.00.623.241 I llm_load_print_meta: n_gqa            = 8
0.00.623.246 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.623.255 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.623.256 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.623.257 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.623.271 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.623.275 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.623.276 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.623.281 I llm_load_print_meta: n_ff             = 16384
0.00.623.282 I llm_load_print_meta: n_expert         = 0
0.00.623.282 I llm_load_print_meta: n_expert_used    = 0
0.00.623.282 I llm_load_print_meta: causal attn      = 1
0.00.623.283 I llm_load_print_meta: pooling type     = 0
0.00.623.283 I llm_load_print_meta: rope type        = 2
0.00.623.284 I llm_load_print_meta: rope scaling     = linear
0.00.623.285 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.623.286 I llm_load_print_meta: freq_scale_train = 1
0.00.623.286 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.623.287 I llm_load_print_meta: rope_finetuned   = unknown
0.00.623.287 I llm_load_print_meta: ssm_d_conv       = 0
0.00.623.287 I llm_load_print_meta: ssm_d_inner      = 0
0.00.623.287 I llm_load_print_meta: ssm_d_state      = 0
0.00.623.288 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.623.288 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.623.289 I llm_load_print_meta: model type       = 2B
0.00.623.298 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.623.301 I llm_load_print_meta: model params     = 2.51 B
0.00.623.302 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.623.303 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.623.303 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.623.303 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.623.304 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.623.304 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.623.305 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.623.305 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.623.311 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.623.313 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.623.320 I llm_load_print_meta: max token length = 93
0.00.623.490 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.685.735 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.685.746 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.685.747 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.685.748 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.685.748 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.685.749 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.691.330 I llama_new_context_with_model: n_ctx      = 8192
0.00.691.338 I llama_new_context_with_model: n_batch    = 2048
0.00.691.339 I llama_new_context_with_model: n_ubatch   = 512
0.00.691.339 I llama_new_context_with_model: flash_attn = 0
0.00.691.341 I llama_new_context_with_model: freq_base  = 10000.0
0.00.691.342 I llama_new_context_with_model: freq_scale = 1
0.00.721.033 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.721.076 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.721.186 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.722.585 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.722.591 I llama_new_context_with_model: graph nodes  = 601
0.00.722.591 I llama_new_context_with_model: graph splits = 1
0.00.722.606 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.304.107 I main: llama threadpool init, n_threads = 4
0.01.304.121 I 
0.01.304.229 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.304.234 I 
0.01.304.416 I sampler seed: 3447009878
0.01.304.428 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.304.437 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.304.438 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.304.438 I 
 seconally in the company, but was not promoted.

**Questions:**

1. What is the relationship between the employee's performance and the likelihood of

0.12.231.019 I llama_perf_sampler_print:    sampling time =      48.84 ms /    33 runs   (    1.48 ms per token,   675.74 tokens per second)
0.12.231.024 I llama_perf_context_print:        load time =    1301.26 ms
0.12.231.025 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.231.049 I llama_perf_context_print:        eval time =   10831.82 ms /    32 runs   (  338.49 ms per token,     2.95 tokens per second)
0.12.231.051 I llama_perf_context_print:       total time =   10926.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3966 (b051dc9e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199531.21 ms
main:    total time = 199531.21 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.669 I build: 3966 (b051dc9e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.873 I main: llama backend init
0.00.002.809 I main: load the model and apply lora adapter, if any
0.00.024.696 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.797 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.813 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.817 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.823 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.824 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.825 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.826 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.828 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.830 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.838 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.839 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.840 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.841 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.843 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.157.360 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.257.871 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.276.259 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.276.272 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.276.273 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.276.275 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.276.276 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.276.277 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.276.278 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.276.282 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.276.283 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.276.292 I llama_model_loader: - type  f32:   37 tensors
0.00.276.295 I llama_model_loader: - type q4_K:  108 tensors
0.00.276.296 I llama_model_loader: - type q6_K:   19 tensors
0.00.468.155 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.536.363 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.537.343 I llm_load_vocab: special tokens cache size = 5
0.00.651.726 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.651.801 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.651.802 I llm_load_print_meta: arch             = gemma
0.00.651.803 I llm_load_print_meta: vocab type       = SPM
0.00.651.804 I llm_load_print_meta: n_vocab          = 256000
0.00.651.806 I llm_load_print_meta: n_merges         = 0
0.00.651.806 I llm_load_print_meta: vocab_only       = 0
0.00.651.807 I llm_load_print_meta: n_ctx_train      = 8192
0.00.651.807 I llm_load_print_meta: n_embd           = 2048
0.00.651.808 I llm_load_print_meta: n_layer          = 18
0.00.651.872 I llm_load_print_meta: n_head           = 8
0.00.651.880 I llm_load_print_meta: n_head_kv        = 1
0.00.651.880 I llm_load_print_meta: n_rot            = 256
0.00.651.881 I llm_load_print_meta: n_swa            = 0
0.00.651.881 I llm_load_print_meta: n_embd_head_k    = 256
0.00.651.881 I llm_load_print_meta: n_embd_head_v    = 256
0.00.651.886 I llm_load_print_meta: n_gqa            = 8
0.00.651.891 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.651.896 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.651.897 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.651.899 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.651.899 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.651.899 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.651.900 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.651.905 I llm_load_print_meta: n_ff             = 16384
0.00.651.905 I llm_load_print_meta: n_expert         = 0
0.00.651.906 I llm_load_print_meta: n_expert_used    = 0
0.00.651.906 I llm_load_print_meta: causal attn      = 1
0.00.651.907 I llm_load_print_meta: pooling type     = 0
0.00.651.907 I llm_load_print_meta: rope type        = 2
0.00.651.907 I llm_load_print_meta: rope scaling     = linear
0.00.651.909 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.651.909 I llm_load_print_meta: freq_scale_train = 1
0.00.651.910 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.651.910 I llm_load_print_meta: rope_finetuned   = unknown
0.00.651.911 I llm_load_print_meta: ssm_d_conv       = 0
0.00.651.911 I llm_load_print_meta: ssm_d_inner      = 0
0.00.651.911 I llm_load_print_meta: ssm_d_state      = 0
0.00.651.911 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.651.912 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.651.912 I llm_load_print_meta: model type       = 2B
0.00.651.914 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.651.914 I llm_load_print_meta: model params     = 2.51 B
0.00.651.915 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.651.916 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.651.916 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.651.917 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.651.917 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.651.918 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.651.918 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.651.918 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.651.924 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.651.925 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.651.925 I llm_load_print_meta: max token length = 93
0.00.652.093 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.710.275 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.715.923 I llama_new_context_with_model: n_ctx      = 8192
0.00.715.930 I llama_new_context_with_model: n_batch    = 2048
0.00.715.931 I llama_new_context_with_model: n_ubatch   = 512
0.00.715.931 I llama_new_context_with_model: flash_attn = 0
0.00.715.935 I llama_new_context_with_model: freq_base  = 10000.0
0.00.715.936 I llama_new_context_with_model: freq_scale = 1
0.00.747.718 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.747.766 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.747.888 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.749.303 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.749.308 I llama_new_context_with_model: graph nodes  = 601
0.00.749.309 I llama_new_context_with_model: graph splits = 1
0.00.749.324 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.329.985 I main: llama threadpool init, n_threads = 4
0.01.329.999 I 
0.01.330.111 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.330.115 I 
0.01.330.297 I sampler seed: 2165134837
0.01.330.309 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.330.316 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.330.317 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.330.319 I 
 susceptables. 

**Step 1: Identify the key ingredients.**
- Wheat flour
- Sugar
- Butter
- Eggs
- Vanilla extract

0.12.250.417 I llama_perf_sampler_print:    sampling time =      48.91 ms /    33 runs   (    1.48 ms per token,   674.69 tokens per second)
0.12.250.420 I llama_perf_context_print:        load time =    1327.08 ms
0.12.250.421 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.250.422 I llama_perf_context_print:        eval time =   10826.34 ms /    32 runs   (  338.32 ms per token,     2.96 tokens per second)
0.12.250.437 I llama_perf_context_print:       total time =   10920.44 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m6.463s
user	50m14.577s
sys	0m6.508s
