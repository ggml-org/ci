+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.660 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.872 I main: llama backend init
0.00.002.809 I main: load the model and apply lora adapter, if any
0.00.025.047 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.269 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.369 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.382 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.383 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.388 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.392 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.393 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.394 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.395 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.396 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.404 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.405 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.406 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.408 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.410 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.171.489 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.271.278 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.289.478 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.289.489 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.289.490 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.289.491 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.289.492 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.289.494 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.289.495 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.289.498 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.289.501 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.289.502 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.289.503 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.289.504 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.289.514 I llama_model_loader: - type  f32:   37 tensors
0.00.289.518 I llama_model_loader: - type q8_0:  127 tensors
0.00.480.411 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.544.885 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.545.843 I llm_load_vocab: special tokens cache size = 5
0.00.656.975 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.657.046 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.657.050 I llm_load_print_meta: arch             = gemma
0.00.657.051 I llm_load_print_meta: vocab type       = SPM
0.00.657.052 I llm_load_print_meta: n_vocab          = 256000
0.00.657.055 I llm_load_print_meta: n_merges         = 0
0.00.657.055 I llm_load_print_meta: vocab_only       = 0
0.00.657.055 I llm_load_print_meta: n_ctx_train      = 8192
0.00.657.056 I llm_load_print_meta: n_embd           = 2048
0.00.657.056 I llm_load_print_meta: n_layer          = 18
0.00.657.119 I llm_load_print_meta: n_head           = 8
0.00.657.129 I llm_load_print_meta: n_head_kv        = 1
0.00.657.131 I llm_load_print_meta: n_rot            = 256
0.00.657.131 I llm_load_print_meta: n_swa            = 0
0.00.657.132 I llm_load_print_meta: n_embd_head_k    = 256
0.00.657.145 I llm_load_print_meta: n_embd_head_v    = 256
0.00.657.154 I llm_load_print_meta: n_gqa            = 8
0.00.657.159 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.657.165 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.657.178 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.657.183 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.657.183 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.657.184 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.657.184 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.657.189 I llm_load_print_meta: n_ff             = 16384
0.00.657.190 I llm_load_print_meta: n_expert         = 0
0.00.657.191 I llm_load_print_meta: n_expert_used    = 0
0.00.657.191 I llm_load_print_meta: causal attn      = 1
0.00.657.191 I llm_load_print_meta: pooling type     = 0
0.00.657.192 I llm_load_print_meta: rope type        = 2
0.00.657.192 I llm_load_print_meta: rope scaling     = linear
0.00.657.194 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.657.203 I llm_load_print_meta: freq_scale_train = 1
0.00.657.206 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.657.206 I llm_load_print_meta: rope_finetuned   = unknown
0.00.657.207 I llm_load_print_meta: ssm_d_conv       = 0
0.00.657.207 I llm_load_print_meta: ssm_d_inner      = 0
0.00.657.207 I llm_load_print_meta: ssm_d_state      = 0
0.00.657.208 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.657.208 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.657.208 I llm_load_print_meta: model type       = 2B
0.00.657.210 I llm_load_print_meta: model ftype      = Q8_0
0.00.657.210 I llm_load_print_meta: model params     = 2.51 B
0.00.657.211 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.657.211 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.657.213 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.657.213 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.657.214 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.657.214 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.657.214 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.657.215 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.657.222 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.657.223 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.657.223 I llm_load_print_meta: max token length = 93
0.00.657.390 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.757.984 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.757.997 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.757.998 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.757.999 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.757.999 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.758.000 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.763.757 I llama_new_context_with_model: n_ctx      = 8192
0.00.763.765 I llama_new_context_with_model: n_batch    = 2048
0.00.763.766 I llama_new_context_with_model: n_ubatch   = 512
0.00.763.767 I llama_new_context_with_model: flash_attn = 0
0.00.763.771 I llama_new_context_with_model: freq_base  = 10000.0
0.00.763.772 I llama_new_context_with_model: freq_scale = 1
0.00.793.598 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.793.642 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.793.785 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.795.206 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.795.211 I llama_new_context_with_model: graph nodes  = 601
0.00.795.212 I llama_new_context_with_model: graph splits = 1
0.00.795.228 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.406.812 I main: llama threadpool init, n_threads = 4
0.01.406.825 I 
0.01.406.942 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.406.946 I 
0.01.407.131 I sampler seed: 1206458888
0.01.407.142 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.407.149 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.407.150 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.407.150 I 
 seconded in a column of text, separated by commas. [end of text]


0.06.851.930 I llama_perf_sampler_print:    sampling time =      20.07 ms /    14 runs   (    1.43 ms per token,   697.45 tokens per second)
0.06.851.934 I llama_perf_context_print:        load time =    1403.90 ms
0.06.851.936 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.06.851.948 I llama_perf_context_print:        eval time =    5405.42 ms /    13 runs   (  415.80 ms per token,     2.40 tokens per second)
0.06.851.949 I llama_perf_context_print:       total time =    5445.13 ms /    14 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.678 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.881 I main: llama backend init
0.00.002.810 I main: load the model and apply lora adapter, if any
0.00.025.356 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.453 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.469 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.473 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.478 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.479 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.481 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.482 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.483 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.484 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.494 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.496 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.497 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.498 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.499 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.154.315 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.254.489 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.648 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.656 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.657 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.658 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.660 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.661 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.662 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.666 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.667 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.668 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.669 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.272.670 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.679 I llama_model_loader: - type  f32:   37 tensors
0.00.272.682 I llama_model_loader: - type q8_0:  127 tensors
0.00.467.155 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.535.702 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.536.700 I llm_load_vocab: special tokens cache size = 5
0.00.640.025 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.640.097 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.640.098 I llm_load_print_meta: arch             = gemma
0.00.640.099 I llm_load_print_meta: vocab type       = SPM
0.00.640.099 I llm_load_print_meta: n_vocab          = 256000
0.00.640.102 I llm_load_print_meta: n_merges         = 0
0.00.640.102 I llm_load_print_meta: vocab_only       = 0
0.00.640.103 I llm_load_print_meta: n_ctx_train      = 8192
0.00.640.103 I llm_load_print_meta: n_embd           = 2048
0.00.640.103 I llm_load_print_meta: n_layer          = 18
0.00.640.170 I llm_load_print_meta: n_head           = 8
0.00.640.177 I llm_load_print_meta: n_head_kv        = 1
0.00.640.177 I llm_load_print_meta: n_rot            = 256
0.00.640.177 I llm_load_print_meta: n_swa            = 0
0.00.640.178 I llm_load_print_meta: n_embd_head_k    = 256
0.00.640.178 I llm_load_print_meta: n_embd_head_v    = 256
0.00.640.183 I llm_load_print_meta: n_gqa            = 8
0.00.640.187 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.640.193 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.640.195 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.640.196 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.640.197 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.640.197 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.640.197 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.640.202 I llm_load_print_meta: n_ff             = 16384
0.00.640.203 I llm_load_print_meta: n_expert         = 0
0.00.640.203 I llm_load_print_meta: n_expert_used    = 0
0.00.640.204 I llm_load_print_meta: causal attn      = 1
0.00.640.204 I llm_load_print_meta: pooling type     = 0
0.00.640.205 I llm_load_print_meta: rope type        = 2
0.00.640.205 I llm_load_print_meta: rope scaling     = linear
0.00.640.207 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.640.207 I llm_load_print_meta: freq_scale_train = 1
0.00.640.208 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.640.209 I llm_load_print_meta: rope_finetuned   = unknown
0.00.640.209 I llm_load_print_meta: ssm_d_conv       = 0
0.00.640.210 I llm_load_print_meta: ssm_d_inner      = 0
0.00.640.221 I llm_load_print_meta: ssm_d_state      = 0
0.00.640.222 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.640.240 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.640.241 I llm_load_print_meta: model type       = 2B
0.00.640.243 I llm_load_print_meta: model ftype      = Q8_0
0.00.640.244 I llm_load_print_meta: model params     = 2.51 B
0.00.640.244 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.640.245 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.640.246 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.640.246 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.640.247 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.640.254 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.640.255 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.640.255 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.640.262 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.640.263 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.640.264 I llm_load_print_meta: max token length = 93
0.00.640.434 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.735.476 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.741.208 I llama_new_context_with_model: n_ctx      = 8192
0.00.741.215 I llama_new_context_with_model: n_batch    = 2048
0.00.741.216 I llama_new_context_with_model: n_ubatch   = 512
0.00.741.216 I llama_new_context_with_model: flash_attn = 0
0.00.741.220 I llama_new_context_with_model: freq_base  = 10000.0
0.00.741.220 I llama_new_context_with_model: freq_scale = 1
0.00.771.583 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.771.629 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.771.742 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.773.137 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.773.142 I llama_new_context_with_model: graph nodes  = 601
0.00.773.142 I llama_new_context_with_model: graph splits = 1
0.00.773.158 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.386.128 I main: llama threadpool init, n_threads = 4
0.01.386.140 I 
0.01.386.253 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.386.257 I 
0.01.386.440 I sampler seed: 2162125326
0.01.386.450 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.386.457 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.386.459 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.386.460 I 
 increasities.

I am unable to generate a response that meets the safety and ethical guidelines. The content is sexually suggestive and could be harmful to users. [end of text]


0.14.959.886 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   670.95 tokens per second)
0.14.959.889 I llama_perf_context_print:        load time =    1383.22 ms
0.14.959.890 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.959.906 I llama_perf_context_print:        eval time =   13479.58 ms /    32 runs   (  421.24 ms per token,     2.37 tokens per second)
0.14.959.907 I llama_perf_context_print:       total time =   13573.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.700 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.909 I main: llama backend init
0.00.002.859 I main: load the model and apply lora adapter, if any
0.00.025.076 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.300 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.402 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.416 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.421 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.427 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.429 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.431 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.433 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.435 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.437 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.446 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.451 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.453 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.455 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.459 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.446 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.253.648 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.917 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.929 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.930 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.931 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.932 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.933 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.934 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.938 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.939 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.940 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.941 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.271.943 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.952 I llama_model_loader: - type  f32:   37 tensors
0.00.271.956 I llama_model_loader: - type q8_0:  127 tensors
0.00.475.397 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.546.112 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.547.123 I llm_load_vocab: special tokens cache size = 5
0.00.642.583 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.642.660 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.642.661 I llm_load_print_meta: arch             = gemma
0.00.642.662 I llm_load_print_meta: vocab type       = SPM
0.00.642.663 I llm_load_print_meta: n_vocab          = 256000
0.00.642.665 I llm_load_print_meta: n_merges         = 0
0.00.642.665 I llm_load_print_meta: vocab_only       = 0
0.00.642.666 I llm_load_print_meta: n_ctx_train      = 8192
0.00.642.666 I llm_load_print_meta: n_embd           = 2048
0.00.642.667 I llm_load_print_meta: n_layer          = 18
0.00.642.734 I llm_load_print_meta: n_head           = 8
0.00.642.741 I llm_load_print_meta: n_head_kv        = 1
0.00.642.742 I llm_load_print_meta: n_rot            = 256
0.00.642.742 I llm_load_print_meta: n_swa            = 0
0.00.642.742 I llm_load_print_meta: n_embd_head_k    = 256
0.00.642.743 I llm_load_print_meta: n_embd_head_v    = 256
0.00.642.747 I llm_load_print_meta: n_gqa            = 8
0.00.642.752 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.642.757 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.642.758 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.642.760 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.642.760 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.642.761 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.642.761 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.642.766 I llm_load_print_meta: n_ff             = 16384
0.00.642.766 I llm_load_print_meta: n_expert         = 0
0.00.642.766 I llm_load_print_meta: n_expert_used    = 0
0.00.642.767 I llm_load_print_meta: causal attn      = 1
0.00.642.767 I llm_load_print_meta: pooling type     = 0
0.00.642.767 I llm_load_print_meta: rope type        = 2
0.00.642.768 I llm_load_print_meta: rope scaling     = linear
0.00.642.769 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.642.770 I llm_load_print_meta: freq_scale_train = 1
0.00.642.770 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.642.770 I llm_load_print_meta: rope_finetuned   = unknown
0.00.642.771 I llm_load_print_meta: ssm_d_conv       = 0
0.00.642.771 I llm_load_print_meta: ssm_d_inner      = 0
0.00.642.771 I llm_load_print_meta: ssm_d_state      = 0
0.00.642.771 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.642.772 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.642.773 I llm_load_print_meta: model type       = 2B
0.00.642.774 I llm_load_print_meta: model ftype      = Q8_0
0.00.642.774 I llm_load_print_meta: model params     = 2.51 B
0.00.642.775 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.642.776 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.642.776 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.642.777 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.642.777 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.642.778 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.642.778 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.642.779 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.642.784 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.642.786 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.642.787 I llm_load_print_meta: max token length = 93
0.00.642.958 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.720.909 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.720.919 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.720.919 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.720.920 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.720.921 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.720.922 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.726.768 I llama_new_context_with_model: n_ctx      = 8192
0.00.726.776 I llama_new_context_with_model: n_batch    = 2048
0.00.726.776 I llama_new_context_with_model: n_ubatch   = 512
0.00.726.777 I llama_new_context_with_model: flash_attn = 0
0.00.726.780 I llama_new_context_with_model: freq_base  = 10000.0
0.00.726.781 I llama_new_context_with_model: freq_scale = 1
0.00.758.108 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.758.153 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.758.270 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.759.725 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.759.730 I llama_new_context_with_model: graph nodes  = 601
0.00.759.730 I llama_new_context_with_model: graph splits = 1
0.00.759.746 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.372.934 I main: llama threadpool init, n_threads = 4
0.01.372.949 I 
0.01.373.057 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.373.058 I 
0.01.373.253 I sampler seed: 2102799997
0.01.373.266 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.373.273 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.373.274 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.373.274 I 
 increasels and knights, jousts and archery, a spectacle of knights in shining armor, clashing steel, and a chorus of battle cries.

This is

0.14.823.827 I llama_perf_sampler_print:    sampling time =      49.24 ms /    33 runs   (    1.49 ms per token,   670.17 tokens per second)
0.14.823.830 I llama_perf_context_print:        load time =    1369.97 ms
0.14.823.831 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.823.833 I llama_perf_context_print:        eval time =   13356.11 ms /    32 runs   (  417.38 ms per token,     2.40 tokens per second)
0.14.823.847 I llama_perf_context_print:       total time =   13450.90 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.665 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.874 I main: llama backend init
0.00.002.879 I main: load the model and apply lora adapter, if any
0.00.025.008 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.243 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.344 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.357 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.358 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.363 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.368 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.370 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.371 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.373 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.375 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.385 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.390 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.392 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.393 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.399 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.454 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.253.278 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.714 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.723 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.724 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.726 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.726 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.728 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.729 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.732 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.734 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.735 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.736 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.271.737 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.746 I llama_model_loader: - type  f32:   37 tensors
0.00.271.750 I llama_model_loader: - type q8_0:  127 tensors
0.00.465.652 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.532.795 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.533.773 I llm_load_vocab: special tokens cache size = 5
0.00.629.347 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.629.419 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.629.420 I llm_load_print_meta: arch             = gemma
0.00.629.421 I llm_load_print_meta: vocab type       = SPM
0.00.629.421 I llm_load_print_meta: n_vocab          = 256000
0.00.629.423 I llm_load_print_meta: n_merges         = 0
0.00.629.424 I llm_load_print_meta: vocab_only       = 0
0.00.629.424 I llm_load_print_meta: n_ctx_train      = 8192
0.00.629.425 I llm_load_print_meta: n_embd           = 2048
0.00.629.425 I llm_load_print_meta: n_layer          = 18
0.00.629.489 I llm_load_print_meta: n_head           = 8
0.00.629.495 I llm_load_print_meta: n_head_kv        = 1
0.00.629.496 I llm_load_print_meta: n_rot            = 256
0.00.629.496 I llm_load_print_meta: n_swa            = 0
0.00.629.497 I llm_load_print_meta: n_embd_head_k    = 256
0.00.629.497 I llm_load_print_meta: n_embd_head_v    = 256
0.00.629.501 I llm_load_print_meta: n_gqa            = 8
0.00.629.506 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.629.512 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.629.513 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.629.527 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.629.528 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.629.529 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.629.529 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.629.534 I llm_load_print_meta: n_ff             = 16384
0.00.629.535 I llm_load_print_meta: n_expert         = 0
0.00.629.540 I llm_load_print_meta: n_expert_used    = 0
0.00.629.540 I llm_load_print_meta: causal attn      = 1
0.00.629.540 I llm_load_print_meta: pooling type     = 0
0.00.629.541 I llm_load_print_meta: rope type        = 2
0.00.629.541 I llm_load_print_meta: rope scaling     = linear
0.00.629.543 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.629.543 I llm_load_print_meta: freq_scale_train = 1
0.00.629.544 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.629.545 I llm_load_print_meta: rope_finetuned   = unknown
0.00.629.545 I llm_load_print_meta: ssm_d_conv       = 0
0.00.629.546 I llm_load_print_meta: ssm_d_inner      = 0
0.00.629.546 I llm_load_print_meta: ssm_d_state      = 0
0.00.629.546 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.629.547 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.629.548 I llm_load_print_meta: model type       = 2B
0.00.629.548 I llm_load_print_meta: model ftype      = Q8_0
0.00.629.549 I llm_load_print_meta: model params     = 2.51 B
0.00.629.553 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.629.553 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.629.554 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.629.554 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.629.555 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.629.555 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.629.556 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.629.556 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.629.562 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.629.563 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.629.564 I llm_load_print_meta: max token length = 93
0.00.629.746 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.701.067 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.701.078 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.706.794 I llama_new_context_with_model: n_ctx      = 8192
0.00.706.801 I llama_new_context_with_model: n_batch    = 2048
0.00.706.801 I llama_new_context_with_model: n_ubatch   = 512
0.00.706.802 I llama_new_context_with_model: flash_attn = 0
0.00.706.805 I llama_new_context_with_model: freq_base  = 10000.0
0.00.706.805 I llama_new_context_with_model: freq_scale = 1
0.00.737.229 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.737.273 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.737.384 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.738.808 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.738.814 I llama_new_context_with_model: graph nodes  = 601
0.00.738.814 I llama_new_context_with_model: graph splits = 1
0.00.738.831 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.349.366 I main: llama threadpool init, n_threads = 4
0.01.349.378 I 
0.01.349.493 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.349.498 I 
0.01.349.692 I sampler seed: 775709392
0.01.349.704 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.349.714 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.349.715 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.349.715 I 
 increasities:

**a) A man with a beard and a mustache, carrying a briefcase, walks into a bank.**

Answer: Businessman

**

0.14.937.712 I llama_perf_sampler_print:    sampling time =      49.36 ms /    33 runs   (    1.50 ms per token,   668.58 tokens per second)
0.14.937.715 I llama_perf_context_print:        load time =    1346.38 ms
0.14.937.716 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.937.718 I llama_perf_context_print:        eval time =   13492.41 ms /    32 runs   (  421.64 ms per token,     2.37 tokens per second)
0.14.937.719 I llama_perf_context_print:       total time =   13588.36 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m1.521s
user	3m17.000s
sys	0m9.658s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3970 (0a1c750c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199349.99 ms
main:    total time = 199349.99 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.665 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.868 I main: llama backend init
0.00.002.814 I main: load the model and apply lora adapter, if any
0.00.024.453 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.658 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.748 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.759 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.760 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.764 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.765 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.766 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.768 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.769 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.771 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.778 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.779 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.780 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.782 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.790 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.702 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.266.102 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.284.354 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.284.361 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.284.363 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.284.364 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.284.365 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.284.366 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.284.367 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.284.371 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.284.372 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.284.373 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.284.374 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.284.375 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.284.384 I llama_model_loader: - type  f32:   37 tensors
0.00.284.387 I llama_model_loader: - type q4_K:  108 tensors
0.00.284.388 I llama_model_loader: - type q6_K:   19 tensors
0.00.467.104 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.532.348 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.533.319 I llm_load_vocab: special tokens cache size = 5
0.00.628.481 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.628.551 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.628.555 I llm_load_print_meta: arch             = gemma
0.00.628.556 I llm_load_print_meta: vocab type       = SPM
0.00.628.556 I llm_load_print_meta: n_vocab          = 256000
0.00.628.559 I llm_load_print_meta: n_merges         = 0
0.00.628.559 I llm_load_print_meta: vocab_only       = 0
0.00.628.560 I llm_load_print_meta: n_ctx_train      = 8192
0.00.628.560 I llm_load_print_meta: n_embd           = 2048
0.00.628.560 I llm_load_print_meta: n_layer          = 18
0.00.628.625 I llm_load_print_meta: n_head           = 8
0.00.628.635 I llm_load_print_meta: n_head_kv        = 1
0.00.628.635 I llm_load_print_meta: n_rot            = 256
0.00.628.636 I llm_load_print_meta: n_swa            = 0
0.00.628.636 I llm_load_print_meta: n_embd_head_k    = 256
0.00.628.637 I llm_load_print_meta: n_embd_head_v    = 256
0.00.628.641 I llm_load_print_meta: n_gqa            = 8
0.00.628.646 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.628.651 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.628.654 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.628.656 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.628.656 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.628.657 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.628.657 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.628.662 I llm_load_print_meta: n_ff             = 16384
0.00.628.663 I llm_load_print_meta: n_expert         = 0
0.00.628.663 I llm_load_print_meta: n_expert_used    = 0
0.00.628.663 I llm_load_print_meta: causal attn      = 1
0.00.628.664 I llm_load_print_meta: pooling type     = 0
0.00.628.664 I llm_load_print_meta: rope type        = 2
0.00.628.665 I llm_load_print_meta: rope scaling     = linear
0.00.628.667 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.628.668 I llm_load_print_meta: freq_scale_train = 1
0.00.628.668 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.628.677 I llm_load_print_meta: rope_finetuned   = unknown
0.00.628.680 I llm_load_print_meta: ssm_d_conv       = 0
0.00.628.680 I llm_load_print_meta: ssm_d_inner      = 0
0.00.628.681 I llm_load_print_meta: ssm_d_state      = 0
0.00.628.681 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.628.681 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.628.682 I llm_load_print_meta: model type       = 2B
0.00.628.683 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.628.684 I llm_load_print_meta: model params     = 2.51 B
0.00.628.685 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.628.697 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.628.698 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.628.699 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.628.699 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.628.700 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.628.700 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.628.701 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.628.708 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.628.710 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.628.713 I llm_load_print_meta: max token length = 93
0.00.628.880 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.688.773 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.688.782 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.688.782 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.688.783 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.688.783 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.688.784 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.694.479 I llama_new_context_with_model: n_ctx      = 8192
0.00.694.486 I llama_new_context_with_model: n_batch    = 2048
0.00.694.486 I llama_new_context_with_model: n_ubatch   = 512
0.00.694.487 I llama_new_context_with_model: flash_attn = 0
0.00.694.490 I llama_new_context_with_model: freq_base  = 10000.0
0.00.694.490 I llama_new_context_with_model: freq_scale = 1
0.00.724.430 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.724.471 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.724.588 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.725.970 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.725.975 I llama_new_context_with_model: graph nodes  = 601
0.00.725.975 I llama_new_context_with_model: graph splits = 1
0.00.725.991 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.308.460 I main: llama threadpool init, n_threads = 4
0.01.308.473 I 
0.01.308.582 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.308.586 I 
0.01.308.769 I sampler seed: 2857455665
0.01.308.781 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.308.789 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.308.790 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.308.790 I 
 seconde, il y a quelques jours, j'ai rencontré une personne qui a besoin de mon soutien.

J'ai commencé à la soutenir et j

0.12.290.095 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.94 tokens per second)
0.12.290.110 I llama_perf_context_print:        load time =    1305.56 ms
0.12.290.113 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.290.115 I llama_perf_context_print:        eval time =   10887.48 ms /    32 runs   (  340.23 ms per token,     2.94 tokens per second)
0.12.290.116 I llama_perf_context_print:       total time =   10981.65 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3970 (0a1c750c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199335.30 ms
main:    total time = 199335.30 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.686 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.892 I main: llama backend init
0.00.002.872 I main: load the model and apply lora adapter, if any
0.00.025.058 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.161 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.177 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.182 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.187 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.188 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.189 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.190 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.192 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.193 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.200 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.202 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.203 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.204 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.206 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.733 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.520 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.786 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.797 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.798 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.800 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.801 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.802 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.803 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.807 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.808 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.818 I llama_model_loader: - type  f32:   37 tensors
0.00.270.822 I llama_model_loader: - type q4_K:  108 tensors
0.00.270.823 I llama_model_loader: - type q6_K:   19 tensors
0.00.458.843 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.530.035 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.531.028 I llm_load_vocab: special tokens cache size = 5
0.00.626.202 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.626.277 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.626.281 I llm_load_print_meta: arch             = gemma
0.00.626.282 I llm_load_print_meta: vocab type       = SPM
0.00.626.283 I llm_load_print_meta: n_vocab          = 256000
0.00.626.285 I llm_load_print_meta: n_merges         = 0
0.00.626.285 I llm_load_print_meta: vocab_only       = 0
0.00.626.286 I llm_load_print_meta: n_ctx_train      = 8192
0.00.626.286 I llm_load_print_meta: n_embd           = 2048
0.00.626.286 I llm_load_print_meta: n_layer          = 18
0.00.626.350 I llm_load_print_meta: n_head           = 8
0.00.626.360 I llm_load_print_meta: n_head_kv        = 1
0.00.626.361 I llm_load_print_meta: n_rot            = 256
0.00.626.362 I llm_load_print_meta: n_swa            = 0
0.00.626.362 I llm_load_print_meta: n_embd_head_k    = 256
0.00.626.363 I llm_load_print_meta: n_embd_head_v    = 256
0.00.626.370 I llm_load_print_meta: n_gqa            = 8
0.00.626.377 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.626.384 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.626.385 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.626.387 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.626.388 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.626.388 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.626.389 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.626.394 I llm_load_print_meta: n_ff             = 16384
0.00.626.394 I llm_load_print_meta: n_expert         = 0
0.00.626.394 I llm_load_print_meta: n_expert_used    = 0
0.00.626.396 I llm_load_print_meta: causal attn      = 1
0.00.626.396 I llm_load_print_meta: pooling type     = 0
0.00.626.396 I llm_load_print_meta: rope type        = 2
0.00.626.398 I llm_load_print_meta: rope scaling     = linear
0.00.626.399 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.626.400 I llm_load_print_meta: freq_scale_train = 1
0.00.626.400 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.626.401 I llm_load_print_meta: rope_finetuned   = unknown
0.00.626.402 I llm_load_print_meta: ssm_d_conv       = 0
0.00.626.402 I llm_load_print_meta: ssm_d_inner      = 0
0.00.626.402 I llm_load_print_meta: ssm_d_state      = 0
0.00.626.403 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.626.403 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.626.404 I llm_load_print_meta: model type       = 2B
0.00.626.405 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.626.427 I llm_load_print_meta: model params     = 2.51 B
0.00.626.436 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.626.437 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.626.438 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.626.438 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.626.439 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.626.439 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.626.440 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.626.448 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.626.455 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.626.457 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.626.457 I llm_load_print_meta: max token length = 93
0.00.626.647 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.684.165 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.689.787 I llama_new_context_with_model: n_ctx      = 8192
0.00.689.794 I llama_new_context_with_model: n_batch    = 2048
0.00.689.795 I llama_new_context_with_model: n_ubatch   = 512
0.00.689.796 I llama_new_context_with_model: flash_attn = 0
0.00.689.800 I llama_new_context_with_model: freq_base  = 10000.0
0.00.689.801 I llama_new_context_with_model: freq_scale = 1
0.00.719.828 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.719.873 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.719.984 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.721.330 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.721.335 I llama_new_context_with_model: graph nodes  = 601
0.00.721.336 I llama_new_context_with_model: graph splits = 1
0.00.721.351 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.300.658 I main: llama threadpool init, n_threads = 4
0.01.300.670 I 
0.01.300.782 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.300.786 I 
0.01.300.964 I sampler seed: 1020304571
0.01.300.977 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.300.986 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.300.987 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.300.987 I 
 encompsively summarize the key points of the article:

**Key Points of the Article:**

- **Climate change impacts are widespread and severe:** Rising temperatures,

0.12.220.601 I llama_perf_sampler_print:    sampling time =      48.80 ms /    33 runs   (    1.48 ms per token,   676.16 tokens per second)
0.12.220.605 I llama_perf_context_print:        load time =    1297.67 ms
0.12.220.607 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.220.609 I llama_perf_context_print:        eval time =   10823.95 ms /    32 runs   (  338.25 ms per token,     2.96 tokens per second)
0.12.220.611 I llama_perf_context_print:       total time =   10919.95 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m6.149s
user	50m11.415s
sys	0m6.624s
