+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.537 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.741 I main: llama backend init
0.00.001.828 I main: load the model and apply lora adapter, if any
0.00.022.448 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.503 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.510 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.516 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.517 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.522 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.523 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.523 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.524 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.524 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.525 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.530 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.530 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.531 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.531 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.532 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.723 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.024 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.886 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.894 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.895 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.896 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.897 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.898 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.899 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.902 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.903 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.904 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.904 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.905 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.909 I llama_model_loader: - type  f32:   37 tensors
0.00.133.913 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.029 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.732 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.369 I llm_load_vocab: special tokens cache size = 5
0.00.282.647 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.663 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.663 I llm_load_print_meta: arch             = gemma
0.00.282.664 I llm_load_print_meta: vocab type       = SPM
0.00.282.665 I llm_load_print_meta: n_vocab          = 256000
0.00.282.665 I llm_load_print_meta: n_merges         = 0
0.00.282.665 I llm_load_print_meta: vocab_only       = 0
0.00.282.666 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.666 I llm_load_print_meta: n_embd           = 2048
0.00.282.667 I llm_load_print_meta: n_layer          = 18
0.00.282.678 I llm_load_print_meta: n_head           = 8
0.00.282.679 I llm_load_print_meta: n_head_kv        = 1
0.00.282.679 I llm_load_print_meta: n_rot            = 256
0.00.282.679 I llm_load_print_meta: n_swa            = 0
0.00.282.679 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.680 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.681 I llm_load_print_meta: n_gqa            = 8
0.00.282.682 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.683 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.683 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.685 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.685 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.685 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.686 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.686 I llm_load_print_meta: n_ff             = 16384
0.00.282.687 I llm_load_print_meta: n_expert         = 0
0.00.282.687 I llm_load_print_meta: n_expert_used    = 0
0.00.282.687 I llm_load_print_meta: causal attn      = 1
0.00.282.688 I llm_load_print_meta: pooling type     = 0
0.00.282.688 I llm_load_print_meta: rope type        = 2
0.00.282.688 I llm_load_print_meta: rope scaling     = linear
0.00.282.690 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.690 I llm_load_print_meta: freq_scale_train = 1
0.00.282.690 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.691 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.691 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.691 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.691 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.692 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.692 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.692 I llm_load_print_meta: model type       = 2B
0.00.282.693 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.693 I llm_load_print_meta: model params     = 2.51 B
0.00.282.694 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.695 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.695 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.696 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.696 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.696 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.697 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.697 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.697 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.698 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.698 I llm_load_print_meta: max token length = 93
0.00.282.716 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.382.302 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.382.311 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.382.311 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.382.312 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.382.312 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.382.313 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.387.501 I llama_new_context_with_model: n_ctx      = 8192
0.00.387.507 I llama_new_context_with_model: n_batch    = 2048
0.00.387.508 I llama_new_context_with_model: n_ubatch   = 512
0.00.387.508 I llama_new_context_with_model: flash_attn = 0
0.00.387.510 I llama_new_context_with_model: freq_base  = 10000.0
0.00.387.511 I llama_new_context_with_model: freq_scale = 1
0.00.416.137 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.416.150 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.416.247 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.417.157 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.417.165 I llama_new_context_with_model: graph nodes  = 601
0.00.417.166 I llama_new_context_with_model: graph splits = 1
0.00.417.167 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.509.390 I main: llama threadpool init, n_threads = 4
0.00.509.404 I 
0.00.509.483 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.509.486 I 
0.00.509.523 I sampler seed: 3904236594
0.00.509.534 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.509.537 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.509.537 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.509.538 I 
 increasels.

A scientist discovers a new species of snail in the Amazon rainforest. The snail is unique in its ability to produce a clear, sweet-sme

0.02.777.714 I llama_perf_sampler_print:    sampling time =       4.68 ms /    33 runs   (    0.14 ms per token,  7054.30 tokens per second)
0.02.777.716 I llama_perf_context_print:        load time =     507.54 ms
0.02.777.717 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.777.718 I llama_perf_context_print:        eval time =    2249.03 ms /    32 runs   (   70.28 ms per token,    14.23 tokens per second)
0.02.777.719 I llama_perf_context_print:       total time =    2268.33 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.578 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.771 I main: llama backend init
0.00.001.867 I main: load the model and apply lora adapter, if any
0.00.022.059 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.070 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.077 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.078 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.081 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.082 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.082 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.083 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.083 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.084 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.088 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.088 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.089 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.089 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.090 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.625 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.797 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.585 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.591 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.592 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.592 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.593 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.594 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.594 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.597 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.597 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.598 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.598 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.599 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.604 I llama_model_loader: - type  f32:   37 tensors
0.00.132.606 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.752 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.154 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.265.722 I llm_load_vocab: special tokens cache size = 5
0.00.286.671 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.286.688 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.286.689 I llm_load_print_meta: arch             = gemma
0.00.286.689 I llm_load_print_meta: vocab type       = SPM
0.00.286.690 I llm_load_print_meta: n_vocab          = 256000
0.00.286.690 I llm_load_print_meta: n_merges         = 0
0.00.286.691 I llm_load_print_meta: vocab_only       = 0
0.00.286.691 I llm_load_print_meta: n_ctx_train      = 8192
0.00.286.691 I llm_load_print_meta: n_embd           = 2048
0.00.286.692 I llm_load_print_meta: n_layer          = 18
0.00.286.701 I llm_load_print_meta: n_head           = 8
0.00.286.702 I llm_load_print_meta: n_head_kv        = 1
0.00.286.703 I llm_load_print_meta: n_rot            = 256
0.00.286.703 I llm_load_print_meta: n_swa            = 0
0.00.286.703 I llm_load_print_meta: n_embd_head_k    = 256
0.00.286.704 I llm_load_print_meta: n_embd_head_v    = 256
0.00.286.705 I llm_load_print_meta: n_gqa            = 8
0.00.286.706 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.286.706 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.286.707 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.286.708 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.286.709 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.286.709 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.286.709 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.286.710 I llm_load_print_meta: n_ff             = 16384
0.00.286.710 I llm_load_print_meta: n_expert         = 0
0.00.286.711 I llm_load_print_meta: n_expert_used    = 0
0.00.286.711 I llm_load_print_meta: causal attn      = 1
0.00.286.711 I llm_load_print_meta: pooling type     = 0
0.00.286.712 I llm_load_print_meta: rope type        = 2
0.00.286.712 I llm_load_print_meta: rope scaling     = linear
0.00.286.714 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.286.714 I llm_load_print_meta: freq_scale_train = 1
0.00.286.714 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.286.715 I llm_load_print_meta: rope_finetuned   = unknown
0.00.286.715 I llm_load_print_meta: ssm_d_conv       = 0
0.00.286.715 I llm_load_print_meta: ssm_d_inner      = 0
0.00.286.715 I llm_load_print_meta: ssm_d_state      = 0
0.00.286.716 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.286.716 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.286.716 I llm_load_print_meta: model type       = 2B
0.00.286.717 I llm_load_print_meta: model ftype      = Q8_0
0.00.286.718 I llm_load_print_meta: model params     = 2.51 B
0.00.286.719 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.286.719 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.286.720 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.286.720 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.286.720 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.286.720 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.286.721 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.286.721 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.286.721 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.286.721 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.286.722 I llm_load_print_meta: max token length = 93
0.00.286.747 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.381.959 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.387.206 I llama_new_context_with_model: n_ctx      = 8192
0.00.387.212 I llama_new_context_with_model: n_batch    = 2048
0.00.387.213 I llama_new_context_with_model: n_ubatch   = 512
0.00.387.213 I llama_new_context_with_model: flash_attn = 0
0.00.387.216 I llama_new_context_with_model: freq_base  = 10000.0
0.00.387.217 I llama_new_context_with_model: freq_scale = 1
0.00.416.453 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.416.468 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.416.559 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.417.409 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.417.416 I llama_new_context_with_model: graph nodes  = 601
0.00.417.417 I llama_new_context_with_model: graph splits = 1
0.00.417.419 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.504.920 I main: llama threadpool init, n_threads = 4
0.00.504.932 I 
0.00.505.010 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.505.010 I 
0.00.505.049 I sampler seed: 1389721481
0.00.505.057 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.505.060 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.505.060 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.505.060 I 
 increasively.

I am unable to generate a response due to a lack of contextual information regarding the specific issue or request you have made. Providing additional details will

0.02.713.365 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6742.95 tokens per second)
0.02.713.367 I llama_perf_context_print:        load time =     503.03 ms
0.02.713.368 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.713.369 I llama_perf_context_print:        eval time =    2188.04 ms /    32 runs   (   68.38 ms per token,    14.62 tokens per second)
0.02.713.370 I llama_perf_context_print:       total time =    2208.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.589 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.785 I main: llama backend init
0.00.001.950 I main: load the model and apply lora adapter, if any
0.00.022.412 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.468 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.478 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.490 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.492 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.497 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.498 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.499 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.500 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.500 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.501 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.507 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.508 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.509 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.510 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.511 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.364 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.052 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.941 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.949 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.950 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.951 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.951 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.952 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.953 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.955 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.956 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.956 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.957 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.958 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.962 I llama_model_loader: - type  f32:   37 tensors
0.00.133.965 I llama_model_loader: - type q8_0:  127 tensors
0.00.229.144 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.283.532 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.284.181 I llm_load_vocab: special tokens cache size = 5
0.00.305.241 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.305.264 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.305.265 I llm_load_print_meta: arch             = gemma
0.00.305.265 I llm_load_print_meta: vocab type       = SPM
0.00.305.266 I llm_load_print_meta: n_vocab          = 256000
0.00.305.267 I llm_load_print_meta: n_merges         = 0
0.00.305.268 I llm_load_print_meta: vocab_only       = 0
0.00.305.268 I llm_load_print_meta: n_ctx_train      = 8192
0.00.305.268 I llm_load_print_meta: n_embd           = 2048
0.00.305.269 I llm_load_print_meta: n_layer          = 18
0.00.305.282 I llm_load_print_meta: n_head           = 8
0.00.305.283 I llm_load_print_meta: n_head_kv        = 1
0.00.305.284 I llm_load_print_meta: n_rot            = 256
0.00.305.284 I llm_load_print_meta: n_swa            = 0
0.00.305.285 I llm_load_print_meta: n_embd_head_k    = 256
0.00.305.285 I llm_load_print_meta: n_embd_head_v    = 256
0.00.305.286 I llm_load_print_meta: n_gqa            = 8
0.00.305.287 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.305.288 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.305.289 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.305.290 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.305.291 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.305.291 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.305.291 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.305.292 I llm_load_print_meta: n_ff             = 16384
0.00.305.293 I llm_load_print_meta: n_expert         = 0
0.00.305.293 I llm_load_print_meta: n_expert_used    = 0
0.00.305.293 I llm_load_print_meta: causal attn      = 1
0.00.305.294 I llm_load_print_meta: pooling type     = 0
0.00.305.294 I llm_load_print_meta: rope type        = 2
0.00.305.294 I llm_load_print_meta: rope scaling     = linear
0.00.305.296 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.305.296 I llm_load_print_meta: freq_scale_train = 1
0.00.305.297 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.305.297 I llm_load_print_meta: rope_finetuned   = unknown
0.00.305.297 I llm_load_print_meta: ssm_d_conv       = 0
0.00.305.297 I llm_load_print_meta: ssm_d_inner      = 0
0.00.305.297 I llm_load_print_meta: ssm_d_state      = 0
0.00.305.298 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.305.298 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.305.299 I llm_load_print_meta: model type       = 2B
0.00.305.299 I llm_load_print_meta: model ftype      = Q8_0
0.00.305.300 I llm_load_print_meta: model params     = 2.51 B
0.00.305.301 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.305.302 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.305.302 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.305.303 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.305.303 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.305.304 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.305.304 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.305.304 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.305.304 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.305.305 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.305.306 I llm_load_print_meta: max token length = 93
0.00.305.333 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.380.778 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.380.789 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.380.790 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.380.791 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.380.791 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.380.792 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.386.024 I llama_new_context_with_model: n_ctx      = 8192
0.00.386.032 I llama_new_context_with_model: n_batch    = 2048
0.00.386.032 I llama_new_context_with_model: n_ubatch   = 512
0.00.386.032 I llama_new_context_with_model: flash_attn = 0
0.00.386.037 I llama_new_context_with_model: freq_base  = 10000.0
0.00.386.038 I llama_new_context_with_model: freq_scale = 1
0.00.418.325 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.418.343 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.418.439 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.419.378 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.419.387 I llama_new_context_with_model: graph nodes  = 601
0.00.419.387 I llama_new_context_with_model: graph splits = 1
0.00.419.389 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.513.117 I main: llama threadpool init, n_threads = 4
0.00.513.133 I 
0.00.513.223 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.513.227 I 
0.00.513.275 I sampler seed: 1150887245
0.00.513.290 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.513.294 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.513.295 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.513.295 I 
 increadibly! [end of text]


0.00.804.786 I llama_perf_sampler_print:    sampling time =       0.65 ms /     5 runs   (    0.13 ms per token,  7727.98 tokens per second)
0.00.804.788 I llama_perf_context_print:        load time =     511.14 ms
0.00.804.789 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.804.790 I llama_perf_context_print:        eval time =     288.01 ms /     4 runs   (   72.00 ms per token,    13.89 tokens per second)
0.00.804.791 I llama_perf_context_print:       total time =     291.68 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.545 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.733 I main: llama backend init
0.00.001.832 I main: load the model and apply lora adapter, if any
0.00.021.851 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.897 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.905 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.910 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.911 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.916 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.919 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.920 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.920 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.921 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.921 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.926 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.927 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.927 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.928 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.929 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.435 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.897 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.782 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.789 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.790 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.791 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.792 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.793 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.794 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.798 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.799 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.800 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.801 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.802 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.807 I llama_model_loader: - type  f32:   37 tensors
0.00.131.810 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.090 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.268.713 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.269.373 I llm_load_vocab: special tokens cache size = 5
0.00.290.455 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.472 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.473 I llm_load_print_meta: arch             = gemma
0.00.290.473 I llm_load_print_meta: vocab type       = SPM
0.00.290.474 I llm_load_print_meta: n_vocab          = 256000
0.00.290.474 I llm_load_print_meta: n_merges         = 0
0.00.290.475 I llm_load_print_meta: vocab_only       = 0
0.00.290.475 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.475 I llm_load_print_meta: n_embd           = 2048
0.00.290.476 I llm_load_print_meta: n_layer          = 18
0.00.290.488 I llm_load_print_meta: n_head           = 8
0.00.290.489 I llm_load_print_meta: n_head_kv        = 1
0.00.290.490 I llm_load_print_meta: n_rot            = 256
0.00.290.490 I llm_load_print_meta: n_swa            = 0
0.00.290.491 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.492 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.493 I llm_load_print_meta: n_gqa            = 8
0.00.290.494 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.495 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.496 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.497 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.497 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.498 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.498 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.499 I llm_load_print_meta: n_ff             = 16384
0.00.290.500 I llm_load_print_meta: n_expert         = 0
0.00.290.500 I llm_load_print_meta: n_expert_used    = 0
0.00.290.501 I llm_load_print_meta: causal attn      = 1
0.00.290.501 I llm_load_print_meta: pooling type     = 0
0.00.290.501 I llm_load_print_meta: rope type        = 2
0.00.290.503 I llm_load_print_meta: rope scaling     = linear
0.00.290.504 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.505 I llm_load_print_meta: freq_scale_train = 1
0.00.290.506 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.506 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.507 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.507 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.507 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.508 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.508 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.509 I llm_load_print_meta: model type       = 2B
0.00.290.509 I llm_load_print_meta: model ftype      = Q8_0
0.00.290.510 I llm_load_print_meta: model params     = 2.51 B
0.00.290.511 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.290.512 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.512 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.512 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.513 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.513 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.514 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.514 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.515 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.515 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.515 I llm_load_print_meta: max token length = 93
0.00.290.540 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.361.201 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.361.208 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.366.268 I llama_new_context_with_model: n_ctx      = 8192
0.00.366.273 I llama_new_context_with_model: n_batch    = 2048
0.00.366.274 I llama_new_context_with_model: n_ubatch   = 512
0.00.366.274 I llama_new_context_with_model: flash_attn = 0
0.00.366.276 I llama_new_context_with_model: freq_base  = 10000.0
0.00.366.277 I llama_new_context_with_model: freq_scale = 1
0.00.395.295 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.395.311 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.395.402 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.242 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.396.249 I llama_new_context_with_model: graph nodes  = 601
0.00.396.250 I llama_new_context_with_model: graph splits = 1
0.00.396.251 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.705 I main: llama threadpool init, n_threads = 4
0.00.490.718 I 
0.00.490.795 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.490.798 I 
0.00.490.839 I sampler seed: 4170208568
0.00.490.851 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.855 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.490.856 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.856 I 
 increably.

I am sorry, but I am unable to provide any response that is sexually suggestive or inappropriate. My purpose is to assist with tasks and questions

0.02.927.854 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6744.33 tokens per second)
0.02.927.857 I llama_perf_context_print:        load time =     488.85 ms
0.02.927.858 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.927.860 I llama_perf_context_print:        eval time =    2416.38 ms /    32 runs   (   75.51 ms per token,    13.24 tokens per second)
0.02.927.861 I llama_perf_context_print:       total time =    2437.16 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.792s
user	0m31.820s
sys	0m9.511s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3970 (0a1c750c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32020.55 ms
main:    total time = 32020.55 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.588 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.001.909 I main: load the model and apply lora adapter, if any
0.00.022.433 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.483 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.498 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.507 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.508 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.512 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.513 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.513 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.514 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.515 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.515 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.520 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.520 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.521 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.521 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.522 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.408 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.815 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.623 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.630 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.630 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.631 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.631 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.632 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.633 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.635 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.636 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.636 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.636 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.637 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.641 I llama_model_loader: - type  f32:   37 tensors
0.00.133.644 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.645 I llama_model_loader: - type q6_K:   19 tensors
0.00.220.136 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.272.100 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.738 I llm_load_vocab: special tokens cache size = 5
0.00.293.938 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.293.954 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.293.955 I llm_load_print_meta: arch             = gemma
0.00.293.955 I llm_load_print_meta: vocab type       = SPM
0.00.293.956 I llm_load_print_meta: n_vocab          = 256000
0.00.293.956 I llm_load_print_meta: n_merges         = 0
0.00.293.957 I llm_load_print_meta: vocab_only       = 0
0.00.293.957 I llm_load_print_meta: n_ctx_train      = 8192
0.00.293.957 I llm_load_print_meta: n_embd           = 2048
0.00.293.958 I llm_load_print_meta: n_layer          = 18
0.00.293.978 I llm_load_print_meta: n_head           = 8
0.00.293.979 I llm_load_print_meta: n_head_kv        = 1
0.00.293.979 I llm_load_print_meta: n_rot            = 256
0.00.293.980 I llm_load_print_meta: n_swa            = 0
0.00.293.980 I llm_load_print_meta: n_embd_head_k    = 256
0.00.293.980 I llm_load_print_meta: n_embd_head_v    = 256
0.00.293.982 I llm_load_print_meta: n_gqa            = 8
0.00.293.983 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.293.984 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.293.984 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.293.986 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.293.986 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.293.986 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.293.987 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.293.988 I llm_load_print_meta: n_ff             = 16384
0.00.293.988 I llm_load_print_meta: n_expert         = 0
0.00.293.988 I llm_load_print_meta: n_expert_used    = 0
0.00.293.989 I llm_load_print_meta: causal attn      = 1
0.00.293.989 I llm_load_print_meta: pooling type     = 0
0.00.293.989 I llm_load_print_meta: rope type        = 2
0.00.293.990 I llm_load_print_meta: rope scaling     = linear
0.00.293.991 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.293.992 I llm_load_print_meta: freq_scale_train = 1
0.00.293.992 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.293.993 I llm_load_print_meta: rope_finetuned   = unknown
0.00.293.993 I llm_load_print_meta: ssm_d_conv       = 0
0.00.293.993 I llm_load_print_meta: ssm_d_inner      = 0
0.00.293.993 I llm_load_print_meta: ssm_d_state      = 0
0.00.293.993 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.293.994 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.293.994 I llm_load_print_meta: model type       = 2B
0.00.293.995 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.293.996 I llm_load_print_meta: model params     = 2.51 B
0.00.293.996 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.293.997 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.293.997 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.293.997 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.293.997 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.293.998 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.293.998 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.293.998 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.293.998 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.293.999 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.293.999 I llm_load_print_meta: max token length = 93
0.00.294.019 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.351.413 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.351.422 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.351.423 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.351.424 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.351.424 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.351.425 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.356.563 I llama_new_context_with_model: n_ctx      = 8192
0.00.356.570 I llama_new_context_with_model: n_batch    = 2048
0.00.356.570 I llama_new_context_with_model: n_ubatch   = 512
0.00.356.571 I llama_new_context_with_model: flash_attn = 0
0.00.356.574 I llama_new_context_with_model: freq_base  = 10000.0
0.00.356.575 I llama_new_context_with_model: freq_scale = 1
0.00.386.792 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.386.806 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.386.902 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.784 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.387.792 I llama_new_context_with_model: graph nodes  = 601
0.00.387.792 I llama_new_context_with_model: graph splits = 1
0.00.387.794 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.063 I main: llama threadpool init, n_threads = 4
0.00.470.076 I 
0.00.470.152 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.156 I 
0.00.470.200 I sampler seed: 1667833923
0.00.470.212 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.214 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.470.215 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.215 I 
 seconally. I cannot hear you.

I am unable to hear you either. Perhaps there is a problem with my microphone or the sound is too quiet.

0.02.128.657 I llama_perf_sampler_print:    sampling time =       5.17 ms /    33 runs   (    0.16 ms per token,  6384.21 tokens per second)
0.02.128.659 I llama_perf_context_print:        load time =     468.13 ms
0.02.128.661 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.128.663 I llama_perf_context_print:        eval time =    1637.72 ms /    32 runs   (   51.18 ms per token,    19.54 tokens per second)
0.02.128.664 I llama_perf_context_print:       total time =    1658.60 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3970 (0a1c750c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32102.47 ms
main:    total time = 32102.47 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.537 I build: 3970 (0a1c750c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.856 I main: load the model and apply lora adapter, if any
0.00.022.221 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.237 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.245 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.247 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.251 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.252 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.253 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.253 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.254 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.263 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.268 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.269 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.270 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.270 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.271 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.161 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.797 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.613 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.621 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.622 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.623 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.624 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.625 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.626 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.628 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.629 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.632 I llama_model_loader: - type  f32:   37 tensors
0.00.133.636 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.636 I llama_model_loader: - type q6_K:   19 tensors
0.00.220.699 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.271.606 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.204 I llm_load_vocab: special tokens cache size = 5
0.00.293.431 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.293.449 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.293.449 I llm_load_print_meta: arch             = gemma
0.00.293.450 I llm_load_print_meta: vocab type       = SPM
0.00.293.450 I llm_load_print_meta: n_vocab          = 256000
0.00.293.451 I llm_load_print_meta: n_merges         = 0
0.00.293.451 I llm_load_print_meta: vocab_only       = 0
0.00.293.451 I llm_load_print_meta: n_ctx_train      = 8192
0.00.293.451 I llm_load_print_meta: n_embd           = 2048
0.00.293.452 I llm_load_print_meta: n_layer          = 18
0.00.293.465 I llm_load_print_meta: n_head           = 8
0.00.293.466 I llm_load_print_meta: n_head_kv        = 1
0.00.293.466 I llm_load_print_meta: n_rot            = 256
0.00.293.466 I llm_load_print_meta: n_swa            = 0
0.00.293.467 I llm_load_print_meta: n_embd_head_k    = 256
0.00.293.467 I llm_load_print_meta: n_embd_head_v    = 256
0.00.293.468 I llm_load_print_meta: n_gqa            = 8
0.00.293.469 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.293.470 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.293.471 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.293.472 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.293.472 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.293.472 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.293.473 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.293.473 I llm_load_print_meta: n_ff             = 16384
0.00.293.474 I llm_load_print_meta: n_expert         = 0
0.00.293.474 I llm_load_print_meta: n_expert_used    = 0
0.00.293.474 I llm_load_print_meta: causal attn      = 1
0.00.293.475 I llm_load_print_meta: pooling type     = 0
0.00.293.475 I llm_load_print_meta: rope type        = 2
0.00.293.475 I llm_load_print_meta: rope scaling     = linear
0.00.293.477 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.293.477 I llm_load_print_meta: freq_scale_train = 1
0.00.293.477 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.293.478 I llm_load_print_meta: rope_finetuned   = unknown
0.00.293.478 I llm_load_print_meta: ssm_d_conv       = 0
0.00.293.478 I llm_load_print_meta: ssm_d_inner      = 0
0.00.293.479 I llm_load_print_meta: ssm_d_state      = 0
0.00.293.479 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.293.479 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.293.479 I llm_load_print_meta: model type       = 2B
0.00.293.480 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.293.481 I llm_load_print_meta: model params     = 2.51 B
0.00.293.481 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.293.482 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.293.482 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.293.483 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.293.483 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.293.483 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.293.483 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.293.484 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.293.484 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.293.484 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.293.485 I llm_load_print_meta: max token length = 93
0.00.293.509 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.350.569 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.355.720 I llama_new_context_with_model: n_ctx      = 8192
0.00.355.728 I llama_new_context_with_model: n_batch    = 2048
0.00.355.728 I llama_new_context_with_model: n_ubatch   = 512
0.00.355.729 I llama_new_context_with_model: flash_attn = 0
0.00.355.732 I llama_new_context_with_model: freq_base  = 10000.0
0.00.355.733 I llama_new_context_with_model: freq_scale = 1
0.00.385.860 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.385.874 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.385.966 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.386.811 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.386.819 I llama_new_context_with_model: graph nodes  = 601
0.00.386.819 I llama_new_context_with_model: graph splits = 1
0.00.386.821 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.310 I main: llama threadpool init, n_threads = 4
0.00.468.323 I 
0.00.468.404 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.468.407 I 
0.00.468.447 I sampler seed: 2071576101
0.00.468.457 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.465 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.466 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.466 I 
 increamically! [end of text]


0.00.681.839 I llama_perf_sampler_print:    sampling time =       0.63 ms /     5 runs   (    0.13 ms per token,  7987.22 tokens per second)
0.00.681.842 I llama_perf_context_print:        load time =     466.43 ms
0.00.681.843 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.681.844 I llama_perf_context_print:        eval time =     209.87 ms /     4 runs   (   52.47 ms per token,    19.06 tokens per second)
0.00.681.845 I llama_perf_context_print:       total time =     213.54 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.112s
user	8m9.534s
sys	0m7.063s
