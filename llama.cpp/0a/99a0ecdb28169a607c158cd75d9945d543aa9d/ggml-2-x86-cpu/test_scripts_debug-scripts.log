+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.646 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.859 I main: llama backend init
0.00.002.810 I main: load the model and apply lora adapter, if any
0.00.024.878 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.082 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.171 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.182 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.184 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.188 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.192 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.193 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.194 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.195 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.196 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.203 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.205 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.206 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.207 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.208 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.736 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.104 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.011 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.020 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.021 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.023 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.023 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.025 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.026 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.029 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.030 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.031 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.032 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.033 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.042 I llama_model_loader: - type  f32:   37 tensors
0.00.268.046 I llama_model_loader: - type q8_0:  127 tensors
0.00.442.487 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.487.077 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.488.945 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.494.450 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.506.310 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.507.262 I llm_load_vocab: special tokens cache size = 5
0.00.614.052 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.614.126 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.614.127 I llm_load_print_meta: arch             = gemma
0.00.614.128 I llm_load_print_meta: vocab type       = SPM
0.00.614.129 I llm_load_print_meta: n_vocab          = 256000
0.00.614.131 I llm_load_print_meta: n_merges         = 0
0.00.614.132 I llm_load_print_meta: vocab_only       = 0
0.00.614.132 I llm_load_print_meta: n_ctx_train      = 8192
0.00.614.133 I llm_load_print_meta: n_embd           = 2048
0.00.614.133 I llm_load_print_meta: n_layer          = 18
0.00.614.198 I llm_load_print_meta: n_head           = 8
0.00.614.205 I llm_load_print_meta: n_head_kv        = 1
0.00.614.206 I llm_load_print_meta: n_rot            = 256
0.00.614.207 I llm_load_print_meta: n_swa            = 0
0.00.614.207 I llm_load_print_meta: n_embd_head_k    = 256
0.00.614.212 I llm_load_print_meta: n_embd_head_v    = 256
0.00.614.218 I llm_load_print_meta: n_gqa            = 8
0.00.614.223 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.614.231 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.614.232 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.614.234 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.614.234 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.614.234 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.614.235 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.614.241 I llm_load_print_meta: n_ff             = 16384
0.00.614.241 I llm_load_print_meta: n_expert         = 0
0.00.614.242 I llm_load_print_meta: n_expert_used    = 0
0.00.614.242 I llm_load_print_meta: causal attn      = 1
0.00.614.243 I llm_load_print_meta: pooling type     = 0
0.00.614.244 I llm_load_print_meta: rope type        = 2
0.00.614.244 I llm_load_print_meta: rope scaling     = linear
0.00.614.246 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.614.246 I llm_load_print_meta: freq_scale_train = 1
0.00.614.247 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.614.247 I llm_load_print_meta: rope_finetuned   = unknown
0.00.614.248 I llm_load_print_meta: ssm_d_conv       = 0
0.00.614.248 I llm_load_print_meta: ssm_d_inner      = 0
0.00.614.248 I llm_load_print_meta: ssm_d_state      = 0
0.00.614.248 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.614.249 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.614.250 I llm_load_print_meta: model type       = 2B
0.00.614.252 I llm_load_print_meta: model ftype      = Q8_0
0.00.614.252 I llm_load_print_meta: model params     = 2.51 B
0.00.614.253 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.614.254 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.614.255 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.614.256 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.614.256 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.614.257 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.614.257 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.614.258 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.614.264 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.614.266 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.614.266 I llm_load_print_meta: max token length = 93
0.00.614.438 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.717.197 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.717.205 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.717.206 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.717.206 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.717.207 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.717.208 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.723.011 I llama_new_context_with_model: n_ctx      = 8192
0.00.723.018 I llama_new_context_with_model: n_batch    = 2048
0.00.723.018 I llama_new_context_with_model: n_ubatch   = 512
0.00.723.019 I llama_new_context_with_model: flash_attn = 0
0.00.723.021 I llama_new_context_with_model: freq_base  = 10000.0
0.00.723.022 I llama_new_context_with_model: freq_scale = 1
0.00.752.539 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.752.587 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.752.700 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.754.088 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.754.093 I llama_new_context_with_model: graph nodes  = 601
0.00.754.094 I llama_new_context_with_model: graph splits = 1
0.00.754.110 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.367.554 I main: llama threadpool init, n_threads = 4
0.01.367.565 I 
0.01.367.669 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.367.673 I 
0.01.367.853 I sampler seed: 1193293907
0.01.367.863 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.367.869 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.367.870 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.367.870 I 
 increasities. [end of text]


0.03.056.431 I llama_perf_sampler_print:    sampling time =       6.22 ms /     5 runs   (    1.24 ms per token,   803.47 tokens per second)
0.03.056.433 I llama_perf_context_print:        load time =    1364.66 ms
0.03.056.435 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.056.436 I llama_perf_context_print:        eval time =    1676.66 ms /     4 runs   (  419.16 ms per token,     2.39 tokens per second)
0.03.056.437 I llama_perf_context_print:       total time =    1688.89 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.658 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.854 I main: llama backend init
0.00.002.781 I main: load the model and apply lora adapter, if any
0.00.025.420 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.516 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.530 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.534 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.539 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.540 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.541 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.542 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.543 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.544 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.553 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.554 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.555 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.556 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.557 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.346 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.253.920 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.012 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.021 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.022 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.023 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.024 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.025 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.027 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.030 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.031 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.032 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.033 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.272.034 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.042 I llama_model_loader: - type  f32:   37 tensors
0.00.272.047 I llama_model_loader: - type q8_0:  127 tensors
0.00.466.175 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.512.095 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.513.982 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.519.620 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.531.760 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.532.763 I llm_load_vocab: special tokens cache size = 5
0.00.626.770 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.626.840 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.626.841 I llm_load_print_meta: arch             = gemma
0.00.626.842 I llm_load_print_meta: vocab type       = SPM
0.00.626.843 I llm_load_print_meta: n_vocab          = 256000
0.00.626.845 I llm_load_print_meta: n_merges         = 0
0.00.626.845 I llm_load_print_meta: vocab_only       = 0
0.00.626.846 I llm_load_print_meta: n_ctx_train      = 8192
0.00.626.847 I llm_load_print_meta: n_embd           = 2048
0.00.626.847 I llm_load_print_meta: n_layer          = 18
0.00.626.910 I llm_load_print_meta: n_head           = 8
0.00.626.917 I llm_load_print_meta: n_head_kv        = 1
0.00.626.918 I llm_load_print_meta: n_rot            = 256
0.00.626.918 I llm_load_print_meta: n_swa            = 0
0.00.626.919 I llm_load_print_meta: n_embd_head_k    = 256
0.00.626.919 I llm_load_print_meta: n_embd_head_v    = 256
0.00.626.924 I llm_load_print_meta: n_gqa            = 8
0.00.626.928 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.626.933 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.626.934 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.626.936 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.626.936 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.626.938 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.626.938 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.626.943 I llm_load_print_meta: n_ff             = 16384
0.00.626.944 I llm_load_print_meta: n_expert         = 0
0.00.626.944 I llm_load_print_meta: n_expert_used    = 0
0.00.626.945 I llm_load_print_meta: causal attn      = 1
0.00.626.945 I llm_load_print_meta: pooling type     = 0
0.00.626.945 I llm_load_print_meta: rope type        = 2
0.00.626.946 I llm_load_print_meta: rope scaling     = linear
0.00.626.948 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.626.949 I llm_load_print_meta: freq_scale_train = 1
0.00.626.961 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.626.961 I llm_load_print_meta: rope_finetuned   = unknown
0.00.626.962 I llm_load_print_meta: ssm_d_conv       = 0
0.00.626.963 I llm_load_print_meta: ssm_d_inner      = 0
0.00.626.963 I llm_load_print_meta: ssm_d_state      = 0
0.00.626.963 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.626.964 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.626.964 I llm_load_print_meta: model type       = 2B
0.00.626.965 I llm_load_print_meta: model ftype      = Q8_0
0.00.626.966 I llm_load_print_meta: model params     = 2.51 B
0.00.626.968 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.626.984 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.626.985 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.626.993 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.626.994 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.626.995 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.626.995 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.626.995 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.627.001 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.627.002 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.627.010 I llm_load_print_meta: max token length = 93
0.00.627.179 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.722.961 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.728.921 I llama_new_context_with_model: n_ctx      = 8192
0.00.728.929 I llama_new_context_with_model: n_batch    = 2048
0.00.728.930 I llama_new_context_with_model: n_ubatch   = 512
0.00.728.930 I llama_new_context_with_model: flash_attn = 0
0.00.728.934 I llama_new_context_with_model: freq_base  = 10000.0
0.00.728.935 I llama_new_context_with_model: freq_scale = 1
0.00.759.147 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.759.194 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.759.315 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.760.759 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.760.764 I llama_new_context_with_model: graph nodes  = 601
0.00.760.764 I llama_new_context_with_model: graph splits = 1
0.00.760.781 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.373.636 I main: llama threadpool init, n_threads = 4
0.01.373.647 I 
0.01.373.757 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.373.762 I 
0.01.373.941 I sampler seed: 2320429617
0.01.373.953 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.373.960 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.373.961 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.373.962 I 
 seconally.

I. The rise of individualism in the modern world has led to a decline in social responsibility.
II. Individualism fosters a sense of

0.14.921.811 I llama_perf_sampler_print:    sampling time =      49.01 ms /    33 runs   (    1.49 ms per token,   673.32 tokens per second)
0.14.921.815 I llama_perf_context_print:        load time =    1370.76 ms
0.14.921.826 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.921.829 I llama_perf_context_print:        eval time =   13464.75 ms /    32 runs   (  420.77 ms per token,     2.38 tokens per second)
0.14.921.831 I llama_perf_context_print:       total time =   13548.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.633 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.831 I main: llama backend init
0.00.002.787 I main: load the model and apply lora adapter, if any
0.00.024.559 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.770 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.856 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.866 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.868 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.872 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.873 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.874 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.876 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.877 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.878 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.885 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.889 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.890 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.891 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.892 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.887 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.515 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.465 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.474 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.475 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.476 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.477 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.478 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.479 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.482 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.483 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.484 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.485 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.266.487 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.495 I llama_model_loader: - type  f32:   37 tensors
0.00.266.499 I llama_model_loader: - type q8_0:  127 tensors
0.00.433.901 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.481.819 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.483.920 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.490.336 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.503.190 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.504.178 I llm_load_vocab: special tokens cache size = 5
0.00.598.087 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.598.159 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.598.159 I llm_load_print_meta: arch             = gemma
0.00.598.160 I llm_load_print_meta: vocab type       = SPM
0.00.598.161 I llm_load_print_meta: n_vocab          = 256000
0.00.598.163 I llm_load_print_meta: n_merges         = 0
0.00.598.164 I llm_load_print_meta: vocab_only       = 0
0.00.598.164 I llm_load_print_meta: n_ctx_train      = 8192
0.00.598.165 I llm_load_print_meta: n_embd           = 2048
0.00.598.165 I llm_load_print_meta: n_layer          = 18
0.00.598.229 I llm_load_print_meta: n_head           = 8
0.00.598.236 I llm_load_print_meta: n_head_kv        = 1
0.00.598.237 I llm_load_print_meta: n_rot            = 256
0.00.598.238 I llm_load_print_meta: n_swa            = 0
0.00.598.238 I llm_load_print_meta: n_embd_head_k    = 256
0.00.598.238 I llm_load_print_meta: n_embd_head_v    = 256
0.00.598.243 I llm_load_print_meta: n_gqa            = 8
0.00.598.248 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.598.258 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.598.259 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.598.260 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.598.261 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.598.261 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.598.262 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.598.266 I llm_load_print_meta: n_ff             = 16384
0.00.598.267 I llm_load_print_meta: n_expert         = 0
0.00.598.268 I llm_load_print_meta: n_expert_used    = 0
0.00.598.268 I llm_load_print_meta: causal attn      = 1
0.00.598.269 I llm_load_print_meta: pooling type     = 0
0.00.598.270 I llm_load_print_meta: rope type        = 2
0.00.598.270 I llm_load_print_meta: rope scaling     = linear
0.00.598.272 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.598.273 I llm_load_print_meta: freq_scale_train = 1
0.00.598.274 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.598.275 I llm_load_print_meta: rope_finetuned   = unknown
0.00.598.275 I llm_load_print_meta: ssm_d_conv       = 0
0.00.598.275 I llm_load_print_meta: ssm_d_inner      = 0
0.00.598.275 I llm_load_print_meta: ssm_d_state      = 0
0.00.598.276 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.598.279 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.598.279 I llm_load_print_meta: model type       = 2B
0.00.598.280 I llm_load_print_meta: model ftype      = Q8_0
0.00.598.281 I llm_load_print_meta: model params     = 2.51 B
0.00.598.282 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.598.282 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.598.283 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.598.283 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.598.284 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.598.284 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.598.285 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.598.285 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.598.291 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.598.293 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.598.294 I llm_load_print_meta: max token length = 93
0.00.598.459 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.675.879 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.675.890 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.675.891 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.675.891 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.675.892 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.675.893 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.681.569 I llama_new_context_with_model: n_ctx      = 8192
0.00.681.574 I llama_new_context_with_model: n_batch    = 2048
0.00.681.574 I llama_new_context_with_model: n_ubatch   = 512
0.00.681.575 I llama_new_context_with_model: flash_attn = 0
0.00.681.577 I llama_new_context_with_model: freq_base  = 10000.0
0.00.681.578 I llama_new_context_with_model: freq_scale = 1
0.00.710.726 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.710.766 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.710.879 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.712.261 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.712.266 I llama_new_context_with_model: graph nodes  = 601
0.00.712.266 I llama_new_context_with_model: graph splits = 1
0.00.712.282 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.325.984 I main: llama threadpool init, n_threads = 4
0.01.325.995 I 
0.01.326.107 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.326.111 I 
0.01.326.293 I sampler seed: 1861701240
0.01.326.305 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.326.312 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.326.313 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.326.313 I 
 increably.

I'm so overwhelmed with work, I can't seem to focus.

I need a solution that works immediately.

**Solution

0.14.904.500 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   671.07 tokens per second)
0.14.904.503 I llama_perf_context_print:        load time =    1323.11 ms
0.14.904.505 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.904.506 I llama_perf_context_print:        eval time =   13496.47 ms /    32 runs   (  421.76 ms per token,     2.37 tokens per second)
0.14.904.507 I llama_perf_context_print:       total time =   13578.53 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.644 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.843 I main: llama backend init
0.00.002.778 I main: load the model and apply lora adapter, if any
0.00.024.574 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.779 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.866 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.876 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.878 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.882 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.883 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.885 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.886 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.887 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.888 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.898 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.902 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.903 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.904 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.905 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.460 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.942 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.881 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.889 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.890 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.891 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.892 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.893 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.894 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.898 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.899 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.900 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.901 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.266.902 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.910 I llama_model_loader: - type  f32:   37 tensors
0.00.266.914 I llama_model_loader: - type q8_0:  127 tensors
0.00.428.435 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.468.888 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.470.570 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.475.592 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.486.481 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.487.427 I llm_load_vocab: special tokens cache size = 5
0.00.597.321 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.597.395 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.597.396 I llm_load_print_meta: arch             = gemma
0.00.597.397 I llm_load_print_meta: vocab type       = SPM
0.00.597.398 I llm_load_print_meta: n_vocab          = 256000
0.00.597.400 I llm_load_print_meta: n_merges         = 0
0.00.597.401 I llm_load_print_meta: vocab_only       = 0
0.00.597.401 I llm_load_print_meta: n_ctx_train      = 8192
0.00.597.401 I llm_load_print_meta: n_embd           = 2048
0.00.597.402 I llm_load_print_meta: n_layer          = 18
0.00.597.467 I llm_load_print_meta: n_head           = 8
0.00.597.473 I llm_load_print_meta: n_head_kv        = 1
0.00.597.474 I llm_load_print_meta: n_rot            = 256
0.00.597.474 I llm_load_print_meta: n_swa            = 0
0.00.597.475 I llm_load_print_meta: n_embd_head_k    = 256
0.00.597.475 I llm_load_print_meta: n_embd_head_v    = 256
0.00.597.480 I llm_load_print_meta: n_gqa            = 8
0.00.597.485 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.597.490 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.597.492 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.597.494 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.597.495 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.597.495 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.597.495 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.597.500 I llm_load_print_meta: n_ff             = 16384
0.00.597.500 I llm_load_print_meta: n_expert         = 0
0.00.597.501 I llm_load_print_meta: n_expert_used    = 0
0.00.597.501 I llm_load_print_meta: causal attn      = 1
0.00.597.501 I llm_load_print_meta: pooling type     = 0
0.00.597.503 I llm_load_print_meta: rope type        = 2
0.00.597.503 I llm_load_print_meta: rope scaling     = linear
0.00.597.505 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.597.506 I llm_load_print_meta: freq_scale_train = 1
0.00.597.518 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.597.537 I llm_load_print_meta: rope_finetuned   = unknown
0.00.597.538 I llm_load_print_meta: ssm_d_conv       = 0
0.00.597.538 I llm_load_print_meta: ssm_d_inner      = 0
0.00.597.546 I llm_load_print_meta: ssm_d_state      = 0
0.00.597.547 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.597.554 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.597.555 I llm_load_print_meta: model type       = 2B
0.00.597.557 I llm_load_print_meta: model ftype      = Q8_0
0.00.597.564 I llm_load_print_meta: model params     = 2.51 B
0.00.597.569 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.597.570 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.597.570 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.597.571 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.597.572 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.597.573 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.597.573 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.597.574 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.597.580 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.597.581 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.597.582 I llm_load_print_meta: max token length = 93
0.00.597.752 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.668.800 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.668.809 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.674.424 I llama_new_context_with_model: n_ctx      = 8192
0.00.674.431 I llama_new_context_with_model: n_batch    = 2048
0.00.674.431 I llama_new_context_with_model: n_ubatch   = 512
0.00.674.432 I llama_new_context_with_model: flash_attn = 0
0.00.674.435 I llama_new_context_with_model: freq_base  = 10000.0
0.00.674.435 I llama_new_context_with_model: freq_scale = 1
0.00.703.665 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.703.709 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.703.833 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.705.251 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.705.256 I llama_new_context_with_model: graph nodes  = 601
0.00.705.256 I llama_new_context_with_model: graph splits = 1
0.00.705.272 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.317.384 I main: llama threadpool init, n_threads = 4
0.01.317.397 I 
0.01.317.504 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.317.510 I 
0.01.317.691 I sampler seed: 3608289341
0.01.317.703 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.317.709 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.317.710 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.317.718 I 
 increasities, 
**and pronouncements that only the Lord knows.**

**What is the meaning of this passage?**

This passage is describing the

0.14.811.391 I llama_perf_sampler_print:    sampling time =      49.09 ms /    33 runs   (    1.49 ms per token,   672.23 tokens per second)
0.14.811.418 I llama_perf_context_print:        load time =    1314.52 ms
0.14.811.430 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.811.435 I llama_perf_context_print:        eval time =   13410.96 ms /    32 runs   (  419.09 ms per token,     2.39 tokens per second)
0.14.811.436 I llama_perf_context_print:       total time =   13494.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m57.327s
user	3m1.929s
sys	0m9.461s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3921 (0a99a0ec)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199214.88 ms
main:    total time = 199214.88 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.632 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.828 I main: llama backend init
0.00.002.791 I main: load the model and apply lora adapter, if any
0.00.024.692 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.896 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.981 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.992 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.993 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.998 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.999 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.000 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.001 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.003 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.003 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.009 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.010 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.012 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.013 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.015 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.599 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.624 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.533 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.541 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.542 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.543 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.544 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.545 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.546 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.550 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.551 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.552 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.553 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.554 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.562 I llama_model_loader: - type  f32:   37 tensors
0.00.267.566 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.567 I llama_model_loader: - type q6_K:   19 tensors
0.00.438.015 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.481.876 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.483.770 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.489.535 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.501.308 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.502.254 I llm_load_vocab: special tokens cache size = 5
0.00.599.771 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.599.842 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.599.843 I llm_load_print_meta: arch             = gemma
0.00.599.844 I llm_load_print_meta: vocab type       = SPM
0.00.599.845 I llm_load_print_meta: n_vocab          = 256000
0.00.599.847 I llm_load_print_meta: n_merges         = 0
0.00.599.848 I llm_load_print_meta: vocab_only       = 0
0.00.599.849 I llm_load_print_meta: n_ctx_train      = 8192
0.00.599.849 I llm_load_print_meta: n_embd           = 2048
0.00.599.849 I llm_load_print_meta: n_layer          = 18
0.00.599.913 I llm_load_print_meta: n_head           = 8
0.00.599.920 I llm_load_print_meta: n_head_kv        = 1
0.00.599.920 I llm_load_print_meta: n_rot            = 256
0.00.599.921 I llm_load_print_meta: n_swa            = 0
0.00.599.921 I llm_load_print_meta: n_embd_head_k    = 256
0.00.599.921 I llm_load_print_meta: n_embd_head_v    = 256
0.00.599.926 I llm_load_print_meta: n_gqa            = 8
0.00.599.930 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.599.936 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.599.937 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.599.938 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.599.939 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.599.939 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.599.944 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.599.949 I llm_load_print_meta: n_ff             = 16384
0.00.599.950 I llm_load_print_meta: n_expert         = 0
0.00.599.950 I llm_load_print_meta: n_expert_used    = 0
0.00.599.951 I llm_load_print_meta: causal attn      = 1
0.00.599.952 I llm_load_print_meta: pooling type     = 0
0.00.599.952 I llm_load_print_meta: rope type        = 2
0.00.599.953 I llm_load_print_meta: rope scaling     = linear
0.00.599.955 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.599.956 I llm_load_print_meta: freq_scale_train = 1
0.00.599.959 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.599.960 I llm_load_print_meta: rope_finetuned   = unknown
0.00.599.960 I llm_load_print_meta: ssm_d_conv       = 0
0.00.599.960 I llm_load_print_meta: ssm_d_inner      = 0
0.00.599.961 I llm_load_print_meta: ssm_d_state      = 0
0.00.599.961 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.599.961 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.599.962 I llm_load_print_meta: model type       = 2B
0.00.599.963 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.599.964 I llm_load_print_meta: model params     = 2.51 B
0.00.599.964 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.599.965 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.599.965 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.599.965 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.599.966 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.599.966 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.599.966 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.599.967 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.599.972 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.599.974 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.599.975 I llm_load_print_meta: max token length = 93
0.00.600.144 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.659.391 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.659.402 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.659.403 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.659.403 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.659.404 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.659.405 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.664.945 I llama_new_context_with_model: n_ctx      = 8192
0.00.664.952 I llama_new_context_with_model: n_batch    = 2048
0.00.664.953 I llama_new_context_with_model: n_ubatch   = 512
0.00.664.953 I llama_new_context_with_model: flash_attn = 0
0.00.664.955 I llama_new_context_with_model: freq_base  = 10000.0
0.00.664.956 I llama_new_context_with_model: freq_scale = 1
0.00.693.804 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.693.844 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.693.960 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.695.338 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.695.343 I llama_new_context_with_model: graph nodes  = 601
0.00.695.344 I llama_new_context_with_model: graph splits = 1
0.00.695.359 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.271.971 I main: llama threadpool init, n_threads = 4
0.01.271.981 I 
0.01.272.088 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.272.092 I 
0.01.272.268 I sampler seed: 476799115
0.01.272.280 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.272.297 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.272.300 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.272.301 I 
 fufilling's new single, "The Feels."

**Summary:**

"The Feels" is a smooth and sensual track that captures the essence of modern

0.12.207.368 I llama_perf_sampler_print:    sampling time =      49.05 ms /    33 runs   (    1.49 ms per token,   672.84 tokens per second)
0.12.207.371 I llama_perf_context_print:        load time =    1269.09 ms
0.12.207.373 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.207.386 I llama_perf_context_print:        eval time =   10854.18 ms /    32 runs   (  339.19 ms per token,     2.95 tokens per second)
0.12.207.388 I llama_perf_context_print:       total time =   10935.41 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3921 (0a99a0ec)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199106.28 ms
main:    total time = 199106.28 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.849 I main: llama backend init
0.00.002.790 I main: load the model and apply lora adapter, if any
0.00.024.987 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.080 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.093 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.097 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.102 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.104 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.105 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.106 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.107 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.109 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.114 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.115 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.117 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.118 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.120 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.526 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.600 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.769 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.776 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.777 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.778 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.779 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.781 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.782 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.786 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.786 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.795 I llama_model_loader: - type  f32:   37 tensors
0.00.267.799 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.801 I llama_model_loader: - type q6_K:   19 tensors
0.00.431.804 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.471.954 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.473.618 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.478.552 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.489.011 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.489.915 I llm_load_vocab: special tokens cache size = 5
0.00.602.603 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.602.675 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.602.676 I llm_load_print_meta: arch             = gemma
0.00.602.677 I llm_load_print_meta: vocab type       = SPM
0.00.602.678 I llm_load_print_meta: n_vocab          = 256000
0.00.602.680 I llm_load_print_meta: n_merges         = 0
0.00.602.680 I llm_load_print_meta: vocab_only       = 0
0.00.602.681 I llm_load_print_meta: n_ctx_train      = 8192
0.00.602.681 I llm_load_print_meta: n_embd           = 2048
0.00.602.682 I llm_load_print_meta: n_layer          = 18
0.00.602.748 I llm_load_print_meta: n_head           = 8
0.00.602.755 I llm_load_print_meta: n_head_kv        = 1
0.00.602.756 I llm_load_print_meta: n_rot            = 256
0.00.602.756 I llm_load_print_meta: n_swa            = 0
0.00.602.756 I llm_load_print_meta: n_embd_head_k    = 256
0.00.602.757 I llm_load_print_meta: n_embd_head_v    = 256
0.00.602.761 I llm_load_print_meta: n_gqa            = 8
0.00.602.766 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.602.772 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.602.783 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.602.786 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.602.786 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.602.787 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.602.799 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.602.804 I llm_load_print_meta: n_ff             = 16384
0.00.602.806 I llm_load_print_meta: n_expert         = 0
0.00.602.806 I llm_load_print_meta: n_expert_used    = 0
0.00.602.807 I llm_load_print_meta: causal attn      = 1
0.00.602.807 I llm_load_print_meta: pooling type     = 0
0.00.602.807 I llm_load_print_meta: rope type        = 2
0.00.602.808 I llm_load_print_meta: rope scaling     = linear
0.00.602.809 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.602.810 I llm_load_print_meta: freq_scale_train = 1
0.00.602.810 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.602.811 I llm_load_print_meta: rope_finetuned   = unknown
0.00.602.812 I llm_load_print_meta: ssm_d_conv       = 0
0.00.602.812 I llm_load_print_meta: ssm_d_inner      = 0
0.00.602.812 I llm_load_print_meta: ssm_d_state      = 0
0.00.602.813 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.602.813 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.602.814 I llm_load_print_meta: model type       = 2B
0.00.602.815 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.602.815 I llm_load_print_meta: model params     = 2.51 B
0.00.602.817 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.602.817 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.602.818 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.602.818 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.602.819 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.602.819 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.602.820 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.602.820 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.602.826 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.602.827 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.602.836 I llm_load_print_meta: max token length = 93
0.00.603.002 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.661.561 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.667.159 I llama_new_context_with_model: n_ctx      = 8192
0.00.667.167 I llama_new_context_with_model: n_batch    = 2048
0.00.667.167 I llama_new_context_with_model: n_ubatch   = 512
0.00.667.168 I llama_new_context_with_model: flash_attn = 0
0.00.667.170 I llama_new_context_with_model: freq_base  = 10000.0
0.00.667.171 I llama_new_context_with_model: freq_scale = 1
0.00.695.963 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.696.007 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.696.125 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.697.585 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.697.590 I llama_new_context_with_model: graph nodes  = 601
0.00.697.591 I llama_new_context_with_model: graph splits = 1
0.00.697.607 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.275.918 I main: llama threadpool init, n_threads = 4
0.01.275.929 I 
0.01.276.039 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.276.043 I 
0.01.276.224 I sampler seed: 4032722113
0.01.276.235 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.276.242 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.276.243 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.276.244 I 
 increasities in the human genome identified through whole-genome sequencing data.

**Objective:** To identify novel human polymorphisms that may be associated with increased risk of cardiovascular

0.12.269.033 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.88 tokens per second)
0.12.269.036 I llama_perf_context_print:        load time =    1273.04 ms
0.12.269.037 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.269.039 I llama_perf_context_print:        eval time =   10911.49 ms /    32 runs   (  340.98 ms per token,     2.93 tokens per second)
0.12.269.060 I llama_perf_context_print:       total time =   10993.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m5.795s
user	50m7.626s
sys	0m6.395s
