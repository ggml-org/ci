+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.547 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.850 I main: load the model and apply lora adapter, if any
0.00.022.295 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.345 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.355 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.360 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.363 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.367 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.368 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.368 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.369 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.370 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.370 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.374 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.375 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.376 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.376 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.377 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.326 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.053 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.907 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.913 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.914 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.914 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.915 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.915 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.916 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.918 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.919 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.919 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.920 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.921 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.924 I llama_model_loader: - type  f32:   37 tensors
0.00.132.927 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.066 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.234.854 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.235.872 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.239.128 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.245.674 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.150 I llm_load_vocab: special tokens cache size = 5
0.00.266.837 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.853 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.853 I llm_load_print_meta: arch             = gemma
0.00.266.854 I llm_load_print_meta: vocab type       = SPM
0.00.266.854 I llm_load_print_meta: n_vocab          = 256000
0.00.266.855 I llm_load_print_meta: n_merges         = 0
0.00.266.855 I llm_load_print_meta: vocab_only       = 0
0.00.266.855 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.856 I llm_load_print_meta: n_embd           = 2048
0.00.266.856 I llm_load_print_meta: n_layer          = 18
0.00.266.866 I llm_load_print_meta: n_head           = 8
0.00.266.867 I llm_load_print_meta: n_head_kv        = 1
0.00.266.868 I llm_load_print_meta: n_rot            = 256
0.00.266.868 I llm_load_print_meta: n_swa            = 0
0.00.266.869 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.869 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.870 I llm_load_print_meta: n_gqa            = 8
0.00.266.871 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.872 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.873 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.874 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.874 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.875 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.875 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.876 I llm_load_print_meta: n_ff             = 16384
0.00.266.876 I llm_load_print_meta: n_expert         = 0
0.00.266.877 I llm_load_print_meta: n_expert_used    = 0
0.00.266.877 I llm_load_print_meta: causal attn      = 1
0.00.266.877 I llm_load_print_meta: pooling type     = 0
0.00.266.877 I llm_load_print_meta: rope type        = 2
0.00.266.878 I llm_load_print_meta: rope scaling     = linear
0.00.266.879 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.880 I llm_load_print_meta: freq_scale_train = 1
0.00.266.880 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.880 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.881 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.881 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.881 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.881 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.881 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.882 I llm_load_print_meta: model type       = 2B
0.00.266.883 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.884 I llm_load_print_meta: model params     = 2.51 B
0.00.266.885 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.885 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.885 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.886 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.886 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.886 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.887 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.887 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.887 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.888 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.888 I llm_load_print_meta: max token length = 93
0.00.266.907 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.367.845 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.367.852 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.367.853 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.367.854 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.367.854 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.367.855 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.374.068 I llama_new_context_with_model: n_ctx      = 8192
0.00.374.073 I llama_new_context_with_model: n_batch    = 2048
0.00.374.073 I llama_new_context_with_model: n_ubatch   = 512
0.00.374.074 I llama_new_context_with_model: flash_attn = 0
0.00.374.076 I llama_new_context_with_model: freq_base  = 10000.0
0.00.374.076 I llama_new_context_with_model: freq_scale = 1
0.00.402.405 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.402.418 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.402.509 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.403.353 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.403.361 I llama_new_context_with_model: graph nodes  = 601
0.00.403.361 I llama_new_context_with_model: graph splits = 1
0.00.403.363 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.494.301 I main: llama threadpool init, n_threads = 4
0.00.494.313 I 
0.00.494.390 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.494.393 I 
0.00.494.433 I sampler seed: 3205876106
0.00.494.443 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.494.452 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.494.452 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.494.453 I 
 increasements, and other limitations. [end of text]


0.01.063.674 I llama_perf_sampler_print:    sampling time =       1.41 ms /     9 runs   (    0.16 ms per token,  6369.43 tokens per second)
0.01.063.677 I llama_perf_context_print:        load time =     492.43 ms
0.01.063.678 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.063.679 I llama_perf_context_print:        eval time =     564.10 ms /     8 runs   (   70.51 ms per token,    14.18 tokens per second)
0.01.063.680 I llama_perf_context_print:       total time =     569.38 ms /     9 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.522 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.722 I main: llama backend init
0.00.001.848 I main: load the model and apply lora adapter, if any
0.00.021.856 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.866 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.873 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.874 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.878 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.879 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.880 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.881 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.881 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.881 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.886 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.887 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.887 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.888 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.888 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.060 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.903 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.738 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.744 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.745 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.746 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.747 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.748 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.749 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.753 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.753 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.754 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.755 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.756 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.759 I llama_model_loader: - type  f32:   37 tensors
0.00.131.762 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.861 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.233.456 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.234.548 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.237.824 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.244.139 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.592 I llm_load_vocab: special tokens cache size = 5
0.00.265.204 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.224 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.224 I llm_load_print_meta: arch             = gemma
0.00.265.225 I llm_load_print_meta: vocab type       = SPM
0.00.265.226 I llm_load_print_meta: n_vocab          = 256000
0.00.265.226 I llm_load_print_meta: n_merges         = 0
0.00.265.226 I llm_load_print_meta: vocab_only       = 0
0.00.265.227 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.227 I llm_load_print_meta: n_embd           = 2048
0.00.265.227 I llm_load_print_meta: n_layer          = 18
0.00.265.240 I llm_load_print_meta: n_head           = 8
0.00.265.241 I llm_load_print_meta: n_head_kv        = 1
0.00.265.241 I llm_load_print_meta: n_rot            = 256
0.00.265.241 I llm_load_print_meta: n_swa            = 0
0.00.265.242 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.242 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.243 I llm_load_print_meta: n_gqa            = 8
0.00.265.244 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.245 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.246 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.247 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.247 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.248 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.248 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.249 I llm_load_print_meta: n_ff             = 16384
0.00.265.249 I llm_load_print_meta: n_expert         = 0
0.00.265.249 I llm_load_print_meta: n_expert_used    = 0
0.00.265.250 I llm_load_print_meta: causal attn      = 1
0.00.265.250 I llm_load_print_meta: pooling type     = 0
0.00.265.250 I llm_load_print_meta: rope type        = 2
0.00.265.251 I llm_load_print_meta: rope scaling     = linear
0.00.265.252 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.253 I llm_load_print_meta: freq_scale_train = 1
0.00.265.253 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.253 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.254 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.254 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.254 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.254 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.254 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.255 I llm_load_print_meta: model type       = 2B
0.00.265.255 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.256 I llm_load_print_meta: model params     = 2.51 B
0.00.265.257 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.257 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.258 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.258 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.258 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.259 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.259 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.259 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.259 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.260 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.260 I llm_load_print_meta: max token length = 93
0.00.265.289 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.359.285 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.364.306 I llama_new_context_with_model: n_ctx      = 8192
0.00.364.312 I llama_new_context_with_model: n_batch    = 2048
0.00.364.312 I llama_new_context_with_model: n_ubatch   = 512
0.00.364.313 I llama_new_context_with_model: flash_attn = 0
0.00.364.315 I llama_new_context_with_model: freq_base  = 10000.0
0.00.364.315 I llama_new_context_with_model: freq_scale = 1
0.00.393.409 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.393.426 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.393.516 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.394.382 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.394.391 I llama_new_context_with_model: graph nodes  = 601
0.00.394.391 I llama_new_context_with_model: graph splits = 1
0.00.394.393 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.482.605 I main: llama threadpool init, n_threads = 4
0.00.482.617 I 
0.00.482.693 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.482.696 I 
0.00.482.736 I sampler seed: 3416283552
0.00.482.747 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.482.750 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.482.751 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.482.751 I 
 increasities. [end of text]


0.00.760.278 I llama_perf_sampler_print:    sampling time =       0.72 ms /     5 runs   (    0.14 ms per token,  6963.79 tokens per second)
0.00.760.280 I llama_perf_context_print:        load time =     480.74 ms
0.00.760.281 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.760.283 I llama_perf_context_print:        eval time =     274.18 ms /     4 runs   (   68.55 ms per token,    14.59 tokens per second)
0.00.760.283 I llama_perf_context_print:       total time =     277.68 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.546 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.887 I main: load the model and apply lora adapter, if any
0.00.021.900 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.954 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.968 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.977 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.981 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.985 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.986 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.987 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.988 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.989 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.990 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.996 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.997 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.997 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.998 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.999 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.299 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.790 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.678 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.698 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.698 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.699 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.700 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.700 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.701 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.703 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.704 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.704 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.705 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.705 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.709 I llama_model_loader: - type  f32:   37 tensors
0.00.131.711 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.174 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.001 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.239.183 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.242.734 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.249.992 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.522 I llm_load_vocab: special tokens cache size = 5
0.00.271.184 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.201 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.202 I llm_load_print_meta: arch             = gemma
0.00.271.202 I llm_load_print_meta: vocab type       = SPM
0.00.271.203 I llm_load_print_meta: n_vocab          = 256000
0.00.271.203 I llm_load_print_meta: n_merges         = 0
0.00.271.203 I llm_load_print_meta: vocab_only       = 0
0.00.271.204 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.204 I llm_load_print_meta: n_embd           = 2048
0.00.271.204 I llm_load_print_meta: n_layer          = 18
0.00.271.216 I llm_load_print_meta: n_head           = 8
0.00.271.217 I llm_load_print_meta: n_head_kv        = 1
0.00.271.217 I llm_load_print_meta: n_rot            = 256
0.00.271.218 I llm_load_print_meta: n_swa            = 0
0.00.271.218 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.218 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.220 I llm_load_print_meta: n_gqa            = 8
0.00.271.222 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.223 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.225 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.226 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.228 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.228 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.229 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.230 I llm_load_print_meta: n_ff             = 16384
0.00.271.231 I llm_load_print_meta: n_expert         = 0
0.00.271.231 I llm_load_print_meta: n_expert_used    = 0
0.00.271.232 I llm_load_print_meta: causal attn      = 1
0.00.271.232 I llm_load_print_meta: pooling type     = 0
0.00.271.233 I llm_load_print_meta: rope type        = 2
0.00.271.234 I llm_load_print_meta: rope scaling     = linear
0.00.271.236 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.236 I llm_load_print_meta: freq_scale_train = 1
0.00.271.237 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.237 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.238 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.238 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.239 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.240 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.240 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.241 I llm_load_print_meta: model type       = 2B
0.00.271.241 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.243 I llm_load_print_meta: model params     = 2.51 B
0.00.271.244 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.245 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.246 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.246 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.247 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.247 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.248 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.249 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.249 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.250 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.250 I llm_load_print_meta: max token length = 93
0.00.271.275 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.347.031 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.347.039 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.347.040 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.347.040 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.347.041 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.347.042 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.352.155 I llama_new_context_with_model: n_ctx      = 8192
0.00.352.160 I llama_new_context_with_model: n_batch    = 2048
0.00.352.161 I llama_new_context_with_model: n_ubatch   = 512
0.00.352.161 I llama_new_context_with_model: flash_attn = 0
0.00.352.163 I llama_new_context_with_model: freq_base  = 10000.0
0.00.352.164 I llama_new_context_with_model: freq_scale = 1
0.00.381.453 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.381.467 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.381.570 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.382.444 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.382.453 I llama_new_context_with_model: graph nodes  = 601
0.00.382.453 I llama_new_context_with_model: graph splits = 1
0.00.382.455 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.476.069 I main: llama threadpool init, n_threads = 4
0.00.476.080 I 
0.00.476.163 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.476.167 I 
0.00.476.218 I sampler seed: 1919668396
0.00.476.235 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.476.238 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.476.238 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.476.238 I 
 increasels. 

The word "is" is repeated three times in this sentence. What is the purpose of repeating the word "is"? [end of text]


0.02.633.659 I llama_perf_sampler_print:    sampling time =       5.33 ms /    31 runs   (    0.17 ms per token,  5810.68 tokens per second)
0.02.633.662 I llama_perf_context_print:        load time =     474.16 ms
0.02.633.664 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.633.666 I llama_perf_context_print:        eval time =    2139.59 ms /    30 runs   (   71.32 ms per token,    14.02 tokens per second)
0.02.633.667 I llama_perf_context_print:       total time =    2157.60 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.537 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.001.823 I main: load the model and apply lora adapter, if any
0.00.021.990 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.036 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.043 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.048 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.049 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.052 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.053 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.053 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.055 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.056 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.056 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.061 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.062 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.063 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.063 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.064 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.685 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.690 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.616 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.622 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.622 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.623 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.624 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.624 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.625 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.627 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.628 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.628 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.138.630 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.138.631 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.138.634 I llama_model_loader: - type  f32:   37 tensors
0.00.138.638 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.056 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.546 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.256.923 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.261.813 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.270.247 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.841 I llm_load_vocab: special tokens cache size = 5
0.00.291.595 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.291.616 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.291.616 I llm_load_print_meta: arch             = gemma
0.00.291.617 I llm_load_print_meta: vocab type       = SPM
0.00.291.618 I llm_load_print_meta: n_vocab          = 256000
0.00.291.618 I llm_load_print_meta: n_merges         = 0
0.00.291.618 I llm_load_print_meta: vocab_only       = 0
0.00.291.619 I llm_load_print_meta: n_ctx_train      = 8192
0.00.291.619 I llm_load_print_meta: n_embd           = 2048
0.00.291.619 I llm_load_print_meta: n_layer          = 18
0.00.291.633 I llm_load_print_meta: n_head           = 8
0.00.291.634 I llm_load_print_meta: n_head_kv        = 1
0.00.291.634 I llm_load_print_meta: n_rot            = 256
0.00.291.635 I llm_load_print_meta: n_swa            = 0
0.00.291.635 I llm_load_print_meta: n_embd_head_k    = 256
0.00.291.636 I llm_load_print_meta: n_embd_head_v    = 256
0.00.291.637 I llm_load_print_meta: n_gqa            = 8
0.00.291.638 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.291.639 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.291.640 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.291.641 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.291.642 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.291.642 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.291.643 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.291.644 I llm_load_print_meta: n_ff             = 16384
0.00.291.644 I llm_load_print_meta: n_expert         = 0
0.00.291.644 I llm_load_print_meta: n_expert_used    = 0
0.00.291.646 I llm_load_print_meta: causal attn      = 1
0.00.291.646 I llm_load_print_meta: pooling type     = 0
0.00.291.646 I llm_load_print_meta: rope type        = 2
0.00.291.647 I llm_load_print_meta: rope scaling     = linear
0.00.291.649 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.291.649 I llm_load_print_meta: freq_scale_train = 1
0.00.291.650 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.291.650 I llm_load_print_meta: rope_finetuned   = unknown
0.00.291.650 I llm_load_print_meta: ssm_d_conv       = 0
0.00.291.650 I llm_load_print_meta: ssm_d_inner      = 0
0.00.291.651 I llm_load_print_meta: ssm_d_state      = 0
0.00.291.651 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.291.652 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.291.652 I llm_load_print_meta: model type       = 2B
0.00.291.653 I llm_load_print_meta: model ftype      = Q8_0
0.00.291.654 I llm_load_print_meta: model params     = 2.51 B
0.00.291.656 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.291.656 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.291.657 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.291.657 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.291.658 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.291.658 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.291.658 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.291.659 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.291.659 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.291.660 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.291.660 I llm_load_print_meta: max token length = 93
0.00.291.686 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.361.839 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.361.847 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.366.978 I llama_new_context_with_model: n_ctx      = 8192
0.00.366.984 I llama_new_context_with_model: n_batch    = 2048
0.00.366.985 I llama_new_context_with_model: n_ubatch   = 512
0.00.366.985 I llama_new_context_with_model: flash_attn = 0
0.00.366.988 I llama_new_context_with_model: freq_base  = 10000.0
0.00.366.989 I llama_new_context_with_model: freq_scale = 1
0.00.396.126 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.396.144 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.396.239 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.397.143 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.397.150 I llama_new_context_with_model: graph nodes  = 601
0.00.397.150 I llama_new_context_with_model: graph splits = 1
0.00.397.151 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.491.008 I main: llama threadpool init, n_threads = 4
0.00.491.021 I 
0.00.491.102 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.491.106 I 
0.00.491.156 I sampler seed: 2080374723
0.00.491.167 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.491.170 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.491.171 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.491.171 I 
 increasities, and other forms of sexual harassment can have devastating effects on victims, including physical, emotional, and financial harm. It is important to create a safe

0.02.901.816 I llama_perf_sampler_print:    sampling time =       5.80 ms /    33 runs   (    0.18 ms per token,  5689.66 tokens per second)
0.02.901.819 I llama_perf_context_print:        load time =     489.17 ms
0.02.901.820 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.901.821 I llama_perf_context_print:        eval time =    2390.98 ms /    32 runs   (   74.72 ms per token,    13.38 tokens per second)
0.02.901.822 I llama_perf_context_print:       total time =    2410.82 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.867s
user	0m24.577s
sys	0m9.427s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3921 (0a99a0ec)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32040.03 ms
main:    total time = 32040.03 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.001.853 I main: load the model and apply lora adapter, if any
0.00.022.237 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.286 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.297 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.302 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.306 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.310 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.311 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.312 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.312 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.313 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.313 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.317 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.318 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.318 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.319 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.319 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.726 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.758 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.689 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.695 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.696 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.697 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.697 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.698 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.698 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.701 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.702 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.703 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.703 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.704 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.707 I llama_model_loader: - type  f32:   37 tensors
0.00.132.710 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.711 I llama_model_loader: - type q6_K:   19 tensors
0.00.223.612 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.544 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.256.770 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.260.464 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.267.874 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.268.407 I llm_load_vocab: special tokens cache size = 5
0.00.289.165 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.289.181 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.289.181 I llm_load_print_meta: arch             = gemma
0.00.289.182 I llm_load_print_meta: vocab type       = SPM
0.00.289.183 I llm_load_print_meta: n_vocab          = 256000
0.00.289.183 I llm_load_print_meta: n_merges         = 0
0.00.289.183 I llm_load_print_meta: vocab_only       = 0
0.00.289.184 I llm_load_print_meta: n_ctx_train      = 8192
0.00.289.184 I llm_load_print_meta: n_embd           = 2048
0.00.289.184 I llm_load_print_meta: n_layer          = 18
0.00.289.196 I llm_load_print_meta: n_head           = 8
0.00.289.197 I llm_load_print_meta: n_head_kv        = 1
0.00.289.198 I llm_load_print_meta: n_rot            = 256
0.00.289.199 I llm_load_print_meta: n_swa            = 0
0.00.289.199 I llm_load_print_meta: n_embd_head_k    = 256
0.00.289.200 I llm_load_print_meta: n_embd_head_v    = 256
0.00.289.201 I llm_load_print_meta: n_gqa            = 8
0.00.289.202 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.289.203 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.289.204 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.289.206 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.289.206 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.289.206 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.289.207 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.289.208 I llm_load_print_meta: n_ff             = 16384
0.00.289.208 I llm_load_print_meta: n_expert         = 0
0.00.289.209 I llm_load_print_meta: n_expert_used    = 0
0.00.289.209 I llm_load_print_meta: causal attn      = 1
0.00.289.210 I llm_load_print_meta: pooling type     = 0
0.00.289.210 I llm_load_print_meta: rope type        = 2
0.00.289.211 I llm_load_print_meta: rope scaling     = linear
0.00.289.213 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.289.213 I llm_load_print_meta: freq_scale_train = 1
0.00.289.214 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.289.214 I llm_load_print_meta: rope_finetuned   = unknown
0.00.289.215 I llm_load_print_meta: ssm_d_conv       = 0
0.00.289.215 I llm_load_print_meta: ssm_d_inner      = 0
0.00.289.215 I llm_load_print_meta: ssm_d_state      = 0
0.00.289.216 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.289.217 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.289.217 I llm_load_print_meta: model type       = 2B
0.00.289.218 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.289.219 I llm_load_print_meta: model params     = 2.51 B
0.00.289.219 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.289.220 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.289.221 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.289.221 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.289.222 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.289.222 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.289.223 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.289.223 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.289.223 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.289.224 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.289.224 I llm_load_print_meta: max token length = 93
0.00.289.243 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.347.651 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.347.659 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.347.660 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.347.660 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.347.661 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.347.661 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.352.747 I llama_new_context_with_model: n_ctx      = 8192
0.00.352.753 I llama_new_context_with_model: n_batch    = 2048
0.00.352.754 I llama_new_context_with_model: n_ubatch   = 512
0.00.352.754 I llama_new_context_with_model: flash_attn = 0
0.00.352.756 I llama_new_context_with_model: freq_base  = 10000.0
0.00.352.757 I llama_new_context_with_model: freq_scale = 1
0.00.381.812 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.381.827 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.381.925 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.382.793 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.382.800 I llama_new_context_with_model: graph nodes  = 601
0.00.382.801 I llama_new_context_with_model: graph splits = 1
0.00.382.802 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.260 I main: llama threadpool init, n_threads = 4
0.00.465.271 I 
0.00.465.347 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.351 I 
0.00.465.389 I sampler seed: 2852518
0.00.465.399 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.403 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.465.403 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.403 I 
 seconally to a question that has been asked elsewhere.

I am unable to answer questions that require access to personal information or high profile demographic data. This includes

0.02.095.577 I llama_perf_sampler_print:    sampling time =       5.58 ms /    33 runs   (    0.17 ms per token,  5912.92 tokens per second)
0.02.095.579 I llama_perf_context_print:        load time =     463.38 ms
0.02.095.580 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.095.582 I llama_perf_context_print:        eval time =    1611.01 ms /    32 runs   (   50.34 ms per token,    19.86 tokens per second)
0.02.095.583 I llama_perf_context_print:       total time =    1630.32 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3921 (0a99a0ec)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32073.46 ms
main:    total time = 32073.46 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.571 I build: 3921 (0a99a0ec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.874 I main: load the model and apply lora adapter, if any
0.00.022.459 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.478 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.485 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.486 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.489 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.490 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.491 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.491 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.492 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.492 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.497 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.497 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.498 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.499 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.500 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.515 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.255 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.115 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.121 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.121 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.122 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.123 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.123 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.124 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.127 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.128 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.131 I llama_model_loader: - type  f32:   37 tensors
0.00.132.133 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.134 I llama_model_loader: - type q6_K:   19 tensors
0.00.220.403 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.616 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.252.800 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.256.367 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.263.756 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.264.400 I llm_load_vocab: special tokens cache size = 5
0.00.285.045 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.285.063 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.285.064 I llm_load_print_meta: arch             = gemma
0.00.285.065 I llm_load_print_meta: vocab type       = SPM
0.00.285.065 I llm_load_print_meta: n_vocab          = 256000
0.00.285.065 I llm_load_print_meta: n_merges         = 0
0.00.285.066 I llm_load_print_meta: vocab_only       = 0
0.00.285.066 I llm_load_print_meta: n_ctx_train      = 8192
0.00.285.066 I llm_load_print_meta: n_embd           = 2048
0.00.285.067 I llm_load_print_meta: n_layer          = 18
0.00.285.078 I llm_load_print_meta: n_head           = 8
0.00.285.079 I llm_load_print_meta: n_head_kv        = 1
0.00.285.079 I llm_load_print_meta: n_rot            = 256
0.00.285.080 I llm_load_print_meta: n_swa            = 0
0.00.285.080 I llm_load_print_meta: n_embd_head_k    = 256
0.00.285.080 I llm_load_print_meta: n_embd_head_v    = 256
0.00.285.081 I llm_load_print_meta: n_gqa            = 8
0.00.285.082 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.285.083 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.285.084 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.285.085 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.285.086 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.285.086 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.285.086 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.285.087 I llm_load_print_meta: n_ff             = 16384
0.00.285.087 I llm_load_print_meta: n_expert         = 0
0.00.285.088 I llm_load_print_meta: n_expert_used    = 0
0.00.285.088 I llm_load_print_meta: causal attn      = 1
0.00.285.089 I llm_load_print_meta: pooling type     = 0
0.00.285.090 I llm_load_print_meta: rope type        = 2
0.00.285.090 I llm_load_print_meta: rope scaling     = linear
0.00.285.092 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.285.093 I llm_load_print_meta: freq_scale_train = 1
0.00.285.093 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.285.094 I llm_load_print_meta: rope_finetuned   = unknown
0.00.285.094 I llm_load_print_meta: ssm_d_conv       = 0
0.00.285.095 I llm_load_print_meta: ssm_d_inner      = 0
0.00.285.095 I llm_load_print_meta: ssm_d_state      = 0
0.00.285.095 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.285.096 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.285.097 I llm_load_print_meta: model type       = 2B
0.00.285.097 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.285.098 I llm_load_print_meta: model params     = 2.51 B
0.00.285.102 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.285.102 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.285.103 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.285.103 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.285.103 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.285.103 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.285.104 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.285.104 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.285.104 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.285.105 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.285.105 I llm_load_print_meta: max token length = 93
0.00.285.126 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.441.942 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.447.003 I llama_new_context_with_model: n_ctx      = 8192
0.00.447.010 I llama_new_context_with_model: n_batch    = 2048
0.00.447.010 I llama_new_context_with_model: n_ubatch   = 512
0.00.447.011 I llama_new_context_with_model: flash_attn = 0
0.00.447.013 I llama_new_context_with_model: freq_base  = 10000.0
0.00.447.014 I llama_new_context_with_model: freq_scale = 1
0.00.475.935 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.475.951 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.476.041 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.476.903 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.476.911 I llama_new_context_with_model: graph nodes  = 601
0.00.476.911 I llama_new_context_with_model: graph splits = 1
0.00.476.913 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.559.086 I main: llama threadpool init, n_threads = 4
0.00.559.097 I 
0.00.559.176 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.559.179 I 
0.00.559.220 I sampler seed: 418864941
0.00.559.230 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.559.237 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.559.237 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.559.238 I 
 maneuvously.

I am unable to generate a response as I am unable to access personal information or perform tasks that require access to personal information. [end of text]


0.02.129.231 I llama_perf_sampler_print:    sampling time =       5.51 ms /    32 runs   (    0.17 ms per token,  5809.73 tokens per second)
0.02.129.234 I llama_perf_context_print:        load time =     557.19 ms
0.02.129.235 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.129.236 I llama_perf_context_print:        eval time =    1552.09 ms /    31 runs   (   50.07 ms per token,    19.97 tokens per second)
0.02.129.237 I llama_perf_context_print:       total time =    1570.15 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.196s
user	8m14.834s
sys	0m6.919s
