+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.651 I build: 4000 (c02e5ab2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.861 I main: llama backend init
0.00.002.799 I main: load the model and apply lora adapter, if any
0.00.025.418 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.429 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.516 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.528 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.529 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.533 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.535 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.536 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.537 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.538 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.539 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.545 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.546 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.548 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.549 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.550 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.152 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.938 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.403 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.410 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.412 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.413 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.414 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.415 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.416 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.420 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.421 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.422 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.423 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.269.424 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.432 I llama_model_loader: - type  f32:   37 tensors
0.00.269.434 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.301 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.509.314 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.510.176 I llm_load_vocab: special tokens cache size = 5
0.00.610.664 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.610.730 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.610.731 I llm_load_print_meta: arch             = gemma
0.00.610.732 I llm_load_print_meta: vocab type       = SPM
0.00.610.733 I llm_load_print_meta: n_vocab          = 256000
0.00.610.735 I llm_load_print_meta: n_merges         = 0
0.00.610.736 I llm_load_print_meta: vocab_only       = 0
0.00.610.736 I llm_load_print_meta: n_ctx_train      = 8192
0.00.610.736 I llm_load_print_meta: n_embd           = 2048
0.00.610.737 I llm_load_print_meta: n_layer          = 18
0.00.610.799 I llm_load_print_meta: n_head           = 8
0.00.610.806 I llm_load_print_meta: n_head_kv        = 1
0.00.610.808 I llm_load_print_meta: n_rot            = 256
0.00.610.809 I llm_load_print_meta: n_swa            = 0
0.00.610.821 I llm_load_print_meta: n_embd_head_k    = 256
0.00.610.822 I llm_load_print_meta: n_embd_head_v    = 256
0.00.610.829 I llm_load_print_meta: n_gqa            = 8
0.00.610.833 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.610.838 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.610.840 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.610.842 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.610.842 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.610.842 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.610.853 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.610.862 I llm_load_print_meta: n_ff             = 16384
0.00.610.864 I llm_load_print_meta: n_expert         = 0
0.00.610.865 I llm_load_print_meta: n_expert_used    = 0
0.00.610.865 I llm_load_print_meta: causal attn      = 1
0.00.610.865 I llm_load_print_meta: pooling type     = 0
0.00.610.866 I llm_load_print_meta: rope type        = 2
0.00.610.866 I llm_load_print_meta: rope scaling     = linear
0.00.610.868 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.610.868 I llm_load_print_meta: freq_scale_train = 1
0.00.610.869 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.610.869 I llm_load_print_meta: rope_finetuned   = unknown
0.00.610.869 I llm_load_print_meta: ssm_d_conv       = 0
0.00.610.870 I llm_load_print_meta: ssm_d_inner      = 0
0.00.610.870 I llm_load_print_meta: ssm_d_state      = 0
0.00.610.870 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.610.871 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.610.871 I llm_load_print_meta: model type       = 2B
0.00.610.873 I llm_load_print_meta: model ftype      = Q8_0
0.00.610.873 I llm_load_print_meta: model params     = 2.51 B
0.00.610.874 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.610.875 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.610.875 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.610.877 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.610.877 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.610.878 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.610.879 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.610.879 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.610.885 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.610.887 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.610.887 I llm_load_print_meta: max token length = 93
0.00.720.908 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.720.918 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.720.919 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.720.920 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.720.920 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.720.921 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.726.736 I llama_new_context_with_model: n_ctx      = 8192
0.00.726.743 I llama_new_context_with_model: n_batch    = 2048
0.00.726.743 I llama_new_context_with_model: n_ubatch   = 512
0.00.726.744 I llama_new_context_with_model: flash_attn = 0
0.00.726.746 I llama_new_context_with_model: freq_base  = 10000.0
0.00.726.747 I llama_new_context_with_model: freq_scale = 1
0.00.756.930 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.756.966 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.757.107 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.759.614 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.759.618 I llama_new_context_with_model: graph nodes  = 601
0.00.759.618 I llama_new_context_with_model: graph splits = 1
0.00.759.634 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.370.253 I main: llama threadpool init, n_threads = 4
0.01.370.265 I 
0.01.370.370 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.370.375 I 
0.01.370.608 I sampler seed: 3926731536
0.01.370.621 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.370.627 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.370.629 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.370.629 I 
 increasities and provide examples of how they are used.

**Answer:**

**What are Crescitratios and how are they used?**

Cresc

0.14.840.433 I llama_perf_sampler_print:    sampling time =      49.07 ms /    33 runs   (    1.49 ms per token,   672.48 tokens per second)
0.14.840.436 I llama_perf_context_print:        load time =    1367.36 ms
0.14.840.437 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.840.439 I llama_perf_context_print:        eval time =   13375.68 ms /    32 runs   (  417.99 ms per token,     2.39 tokens per second)
0.14.840.453 I llama_perf_context_print:       total time =   13470.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.650 I build: 4000 (c02e5ab2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.845 I main: llama backend init
0.00.002.781 I main: load the model and apply lora adapter, if any
0.00.025.365 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.466 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.481 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.485 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.489 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.491 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.492 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.493 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.494 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.495 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.502 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.503 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.504 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.505 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.507 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.705 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.634 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.763 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.772 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.773 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.774 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.775 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.777 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.778 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.782 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.783 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.785 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.786 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.787 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.805 I llama_model_loader: - type  f32:   37 tensors
0.00.268.812 I llama_model_loader: - type q8_0:  127 tensors
0.00.446.213 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.512.874 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.513.975 I llm_load_vocab: special tokens cache size = 5
0.00.608.857 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.608.923 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.608.924 I llm_load_print_meta: arch             = gemma
0.00.608.925 I llm_load_print_meta: vocab type       = SPM
0.00.608.926 I llm_load_print_meta: n_vocab          = 256000
0.00.608.928 I llm_load_print_meta: n_merges         = 0
0.00.608.928 I llm_load_print_meta: vocab_only       = 0
0.00.608.929 I llm_load_print_meta: n_ctx_train      = 8192
0.00.608.929 I llm_load_print_meta: n_embd           = 2048
0.00.608.930 I llm_load_print_meta: n_layer          = 18
0.00.608.991 I llm_load_print_meta: n_head           = 8
0.00.608.998 I llm_load_print_meta: n_head_kv        = 1
0.00.608.998 I llm_load_print_meta: n_rot            = 256
0.00.608.999 I llm_load_print_meta: n_swa            = 0
0.00.609.000 I llm_load_print_meta: n_embd_head_k    = 256
0.00.609.000 I llm_load_print_meta: n_embd_head_v    = 256
0.00.609.006 I llm_load_print_meta: n_gqa            = 8
0.00.609.011 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.609.016 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.609.018 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.609.020 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.609.020 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.609.020 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.609.031 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.609.037 I llm_load_print_meta: n_ff             = 16384
0.00.609.038 I llm_load_print_meta: n_expert         = 0
0.00.609.038 I llm_load_print_meta: n_expert_used    = 0
0.00.609.039 I llm_load_print_meta: causal attn      = 1
0.00.609.039 I llm_load_print_meta: pooling type     = 0
0.00.609.040 I llm_load_print_meta: rope type        = 2
0.00.609.041 I llm_load_print_meta: rope scaling     = linear
0.00.609.043 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.609.044 I llm_load_print_meta: freq_scale_train = 1
0.00.609.045 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.609.045 I llm_load_print_meta: rope_finetuned   = unknown
0.00.609.045 I llm_load_print_meta: ssm_d_conv       = 0
0.00.609.046 I llm_load_print_meta: ssm_d_inner      = 0
0.00.609.046 I llm_load_print_meta: ssm_d_state      = 0
0.00.609.046 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.609.058 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.609.059 I llm_load_print_meta: model type       = 2B
0.00.609.061 I llm_load_print_meta: model ftype      = Q8_0
0.00.609.062 I llm_load_print_meta: model params     = 2.51 B
0.00.609.063 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.609.064 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.609.065 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.609.066 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.609.074 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.609.075 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.609.075 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.609.076 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.609.081 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.609.083 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.609.083 I llm_load_print_meta: max token length = 93
0.00.709.802 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.715.714 I llama_new_context_with_model: n_ctx      = 8192
0.00.715.720 I llama_new_context_with_model: n_batch    = 2048
0.00.715.720 I llama_new_context_with_model: n_ubatch   = 512
0.00.715.721 I llama_new_context_with_model: flash_attn = 0
0.00.715.723 I llama_new_context_with_model: freq_base  = 10000.0
0.00.715.724 I llama_new_context_with_model: freq_scale = 1
0.00.744.774 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.744.814 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.744.934 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.747.422 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.747.426 I llama_new_context_with_model: graph nodes  = 601
0.00.747.426 I llama_new_context_with_model: graph splits = 1
0.00.747.441 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.358.058 I main: llama threadpool init, n_threads = 4
0.01.358.071 I 
0.01.358.175 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.358.178 I 
0.01.358.409 I sampler seed: 701212748
0.01.358.422 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.358.428 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.358.431 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.358.432 I 
 increasities.

I am unable to generate a response to this query as it contains sexually suggestive and inappropriate content. My purpose is to assist with tasks that are

0.14.994.416 I llama_perf_sampler_print:    sampling time =      49.48 ms /    33 runs   (    1.50 ms per token,   666.91 tokens per second)
0.14.994.419 I llama_perf_context_print:        load time =    1355.17 ms
0.14.994.420 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.994.422 I llama_perf_context_print:        eval time =   13540.03 ms /    32 runs   (  423.13 ms per token,     2.36 tokens per second)
0.14.994.422 I llama_perf_context_print:       total time =   13636.37 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.638 I build: 4000 (c02e5ab2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.844 I main: llama backend init
0.00.002.831 I main: load the model and apply lora adapter, if any
0.00.025.502 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.513 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.600 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.612 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.614 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.620 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.621 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.623 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.624 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.625 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.626 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.632 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.633 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.634 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.636 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.637 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.075 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.927 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.220 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.228 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.229 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.230 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.231 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.232 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.233 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.237 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.238 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.239 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.240 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.269.241 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.250 I llama_model_loader: - type  f32:   37 tensors
0.00.269.253 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.586 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.516.895 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.518.002 I llm_load_vocab: special tokens cache size = 5
0.00.628.767 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.628.839 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.628.840 I llm_load_print_meta: arch             = gemma
0.00.628.841 I llm_load_print_meta: vocab type       = SPM
0.00.628.841 I llm_load_print_meta: n_vocab          = 256000
0.00.628.843 I llm_load_print_meta: n_merges         = 0
0.00.628.844 I llm_load_print_meta: vocab_only       = 0
0.00.628.844 I llm_load_print_meta: n_ctx_train      = 8192
0.00.628.845 I llm_load_print_meta: n_embd           = 2048
0.00.628.845 I llm_load_print_meta: n_layer          = 18
0.00.628.912 I llm_load_print_meta: n_head           = 8
0.00.628.918 I llm_load_print_meta: n_head_kv        = 1
0.00.628.919 I llm_load_print_meta: n_rot            = 256
0.00.628.920 I llm_load_print_meta: n_swa            = 0
0.00.628.921 I llm_load_print_meta: n_embd_head_k    = 256
0.00.628.922 I llm_load_print_meta: n_embd_head_v    = 256
0.00.628.927 I llm_load_print_meta: n_gqa            = 8
0.00.628.932 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.628.937 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.628.939 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.628.940 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.628.941 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.628.941 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.628.942 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.628.948 I llm_load_print_meta: n_ff             = 16384
0.00.628.948 I llm_load_print_meta: n_expert         = 0
0.00.628.948 I llm_load_print_meta: n_expert_used    = 0
0.00.628.949 I llm_load_print_meta: causal attn      = 1
0.00.628.954 I llm_load_print_meta: pooling type     = 0
0.00.628.954 I llm_load_print_meta: rope type        = 2
0.00.628.955 I llm_load_print_meta: rope scaling     = linear
0.00.628.957 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.628.958 I llm_load_print_meta: freq_scale_train = 1
0.00.628.958 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.628.958 I llm_load_print_meta: rope_finetuned   = unknown
0.00.628.961 I llm_load_print_meta: ssm_d_conv       = 0
0.00.628.962 I llm_load_print_meta: ssm_d_inner      = 0
0.00.628.962 I llm_load_print_meta: ssm_d_state      = 0
0.00.628.962 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.628.963 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.628.963 I llm_load_print_meta: model type       = 2B
0.00.628.964 I llm_load_print_meta: model ftype      = Q8_0
0.00.628.965 I llm_load_print_meta: model params     = 2.51 B
0.00.628.966 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.628.966 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.628.967 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.628.967 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.628.968 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.628.968 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.628.979 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.628.980 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.628.996 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.628.998 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.628.999 I llm_load_print_meta: max token length = 93
0.00.727.358 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.727.366 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.727.367 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.727.367 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.727.368 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.727.369 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.733.211 I llama_new_context_with_model: n_ctx      = 8192
0.00.733.218 I llama_new_context_with_model: n_batch    = 2048
0.00.733.219 I llama_new_context_with_model: n_ubatch   = 512
0.00.733.219 I llama_new_context_with_model: flash_attn = 0
0.00.733.222 I llama_new_context_with_model: freq_base  = 10000.0
0.00.733.223 I llama_new_context_with_model: freq_scale = 1
0.00.762.302 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.762.343 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.762.463 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.764.995 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.764.999 I llama_new_context_with_model: graph nodes  = 601
0.00.764.999 I llama_new_context_with_model: graph splits = 1
0.00.765.015 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.376.870 I main: llama threadpool init, n_threads = 4
0.01.376.884 I 
0.01.376.989 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.376.993 I 
0.01.377.232 I sampler seed: 2518307946
0.01.377.244 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.377.251 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.377.252 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.377.253 I 
 increasities, and other sexually suggestive or obscene content. I am unable to provide this type of content. [end of text]


0.10.630.990 I llama_perf_sampler_print:    sampling time =      33.93 ms /    23 runs   (    1.48 ms per token,   677.81 tokens per second)
0.10.630.993 I llama_perf_context_print:        load time =    1373.94 ms
0.10.630.994 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.631.010 I llama_perf_context_print:        eval time =    9188.12 ms /    22 runs   (  417.64 ms per token,     2.39 tokens per second)
0.10.631.011 I llama_perf_context_print:       total time =    9254.13 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.630 I build: 4000 (c02e5ab2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.825 I main: llama backend init
0.00.002.775 I main: load the model and apply lora adapter, if any
0.00.025.209 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.218 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.302 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.313 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.315 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.319 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.320 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.322 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.324 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.325 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.326 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.332 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.336 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.337 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.338 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.339 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.861 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.975 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.322 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.332 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.333 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.334 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.335 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.336 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.337 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.342 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.343 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.344 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.345 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.268.346 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.355 I llama_model_loader: - type  f32:   37 tensors
0.00.268.359 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.562 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.508.664 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.509.616 I llm_load_vocab: special tokens cache size = 5
0.00.605.304 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.605.368 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.605.373 I llm_load_print_meta: arch             = gemma
0.00.605.374 I llm_load_print_meta: vocab type       = SPM
0.00.605.375 I llm_load_print_meta: n_vocab          = 256000
0.00.605.377 I llm_load_print_meta: n_merges         = 0
0.00.605.377 I llm_load_print_meta: vocab_only       = 0
0.00.605.378 I llm_load_print_meta: n_ctx_train      = 8192
0.00.605.378 I llm_load_print_meta: n_embd           = 2048
0.00.605.380 I llm_load_print_meta: n_layer          = 18
0.00.605.443 I llm_load_print_meta: n_head           = 8
0.00.605.453 I llm_load_print_meta: n_head_kv        = 1
0.00.605.454 I llm_load_print_meta: n_rot            = 256
0.00.605.454 I llm_load_print_meta: n_swa            = 0
0.00.605.455 I llm_load_print_meta: n_embd_head_k    = 256
0.00.605.455 I llm_load_print_meta: n_embd_head_v    = 256
0.00.605.460 I llm_load_print_meta: n_gqa            = 8
0.00.605.465 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.605.471 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.605.475 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.605.476 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.605.477 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.605.477 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.605.478 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.605.483 I llm_load_print_meta: n_ff             = 16384
0.00.605.483 I llm_load_print_meta: n_expert         = 0
0.00.605.484 I llm_load_print_meta: n_expert_used    = 0
0.00.605.484 I llm_load_print_meta: causal attn      = 1
0.00.605.484 I llm_load_print_meta: pooling type     = 0
0.00.605.485 I llm_load_print_meta: rope type        = 2
0.00.605.485 I llm_load_print_meta: rope scaling     = linear
0.00.605.487 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.605.488 I llm_load_print_meta: freq_scale_train = 1
0.00.605.489 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.605.489 I llm_load_print_meta: rope_finetuned   = unknown
0.00.605.490 I llm_load_print_meta: ssm_d_conv       = 0
0.00.605.490 I llm_load_print_meta: ssm_d_inner      = 0
0.00.605.490 I llm_load_print_meta: ssm_d_state      = 0
0.00.605.490 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.605.491 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.605.492 I llm_load_print_meta: model type       = 2B
0.00.605.493 I llm_load_print_meta: model ftype      = Q8_0
0.00.605.494 I llm_load_print_meta: model params     = 2.51 B
0.00.605.495 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.605.495 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.605.496 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.605.497 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.605.497 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.605.498 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.605.498 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.605.499 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.605.504 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.605.506 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.605.506 I llm_load_print_meta: max token length = 93
0.00.692.902 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.692.913 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.698.874 I llama_new_context_with_model: n_ctx      = 8192
0.00.698.882 I llama_new_context_with_model: n_batch    = 2048
0.00.698.882 I llama_new_context_with_model: n_ubatch   = 512
0.00.698.883 I llama_new_context_with_model: flash_attn = 0
0.00.698.885 I llama_new_context_with_model: freq_base  = 10000.0
0.00.698.886 I llama_new_context_with_model: freq_scale = 1
0.00.728.034 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.728.073 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.728.191 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.730.646 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.730.650 I llama_new_context_with_model: graph nodes  = 601
0.00.730.650 I llama_new_context_with_model: graph splits = 1
0.00.730.666 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.341.607 I main: llama threadpool init, n_threads = 4
0.01.341.620 I 
0.01.341.728 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.341.732 I 
0.01.341.975 I sampler seed: 144937719
0.01.341.990 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.341.997 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.342.000 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.342.001 I 
 increably, and for a fleeting moment, it seemed as though the impossible had happened.

But the inevitable return of the darkness forced the world to confront its

0.14.943.637 I llama_perf_sampler_print:    sampling time =      49.37 ms /    33 runs   (    1.50 ms per token,   668.42 tokens per second)
0.14.943.639 I llama_perf_context_print:        load time =    1338.74 ms
0.14.943.641 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.943.642 I llama_perf_context_print:        eval time =   13506.50 ms /    32 runs   (  422.08 ms per token,     2.37 tokens per second)
0.14.943.643 I llama_perf_context_print:       total time =   13602.04 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m5.230s
user	3m32.432s
sys	0m9.737s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4000 (c02e5ab2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200184.58 ms
main:    total time = 200184.58 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.644 I build: 4000 (c02e5ab2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.845 I main: llama backend init
0.00.002.807 I main: load the model and apply lora adapter, if any
0.00.024.482 E llama_model_load: error loading model: tensor 'token_embd.weight' data is not within the file bounds, model is corrupted or incomplete
0.00.024.494 E llama_load_model_from_file: failed to load model
0.00.024.593 E common_init_from_params: failed to load model '/mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf'
0.00.024.596 E main: error: unable to load model

real	3m22.363s
user	24m21.320s
sys	0m4.006s
