+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.598 I build: 3819 (c0389316) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.793 I main: llama backend init
0.00.001.886 I main: load the model and apply lora adapter, if any
0.00.022.237 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.285 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.296 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.302 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.305 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.309 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.310 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.311 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.311 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.312 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.312 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.317 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.318 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.319 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.320 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.321 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.966 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.822 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.090 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.096 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.097 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.098 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.099 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.101 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.101 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.105 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.106 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.107 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.108 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.109 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.112 I llama_model_loader: - type  f32:   37 tensors
0.00.134.115 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.829 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.576 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.291 I llm_load_vocab: special tokens cache size = 5
0.00.231.362 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.375 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.376 I llm_load_print_meta: arch             = gemma
0.00.231.376 I llm_load_print_meta: vocab type       = SPM
0.00.231.377 I llm_load_print_meta: n_vocab          = 256000
0.00.231.377 I llm_load_print_meta: n_merges         = 0
0.00.231.378 I llm_load_print_meta: vocab_only       = 0
0.00.231.378 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.378 I llm_load_print_meta: n_embd           = 2048
0.00.231.379 I llm_load_print_meta: n_layer          = 18
0.00.231.390 I llm_load_print_meta: n_head           = 8
0.00.231.391 I llm_load_print_meta: n_head_kv        = 1
0.00.231.392 I llm_load_print_meta: n_rot            = 256
0.00.231.392 I llm_load_print_meta: n_swa            = 0
0.00.231.392 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.392 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.393 I llm_load_print_meta: n_gqa            = 8
0.00.231.394 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.395 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.396 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.397 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.398 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.398 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.398 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.399 I llm_load_print_meta: n_ff             = 16384
0.00.231.400 I llm_load_print_meta: n_expert         = 0
0.00.231.400 I llm_load_print_meta: n_expert_used    = 0
0.00.231.400 I llm_load_print_meta: causal attn      = 1
0.00.231.401 I llm_load_print_meta: pooling type     = 0
0.00.231.401 I llm_load_print_meta: rope type        = 2
0.00.231.401 I llm_load_print_meta: rope scaling     = linear
0.00.231.402 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.403 I llm_load_print_meta: freq_scale_train = 1
0.00.231.403 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.403 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.404 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.404 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.404 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.404 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.405 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.405 I llm_load_print_meta: model type       = 2B
0.00.231.406 I llm_load_print_meta: model ftype      = Q8_0
0.00.231.407 I llm_load_print_meta: model params     = 2.51 B
0.00.231.407 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.231.408 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.408 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.409 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.409 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.409 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.409 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.410 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.410 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.411 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.411 I llm_load_print_meta: max token length = 93
0.00.231.427 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.331.119 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.331.125 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.331.126 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.331.127 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.331.127 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.331.128 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.336.211 I llama_new_context_with_model: n_ctx      = 8192
0.00.336.217 I llama_new_context_with_model: n_batch    = 2048
0.00.336.218 I llama_new_context_with_model: n_ubatch   = 512
0.00.336.218 I llama_new_context_with_model: flash_attn = 0
0.00.336.221 I llama_new_context_with_model: freq_base  = 10000.0
0.00.336.222 I llama_new_context_with_model: freq_scale = 1
0.00.364.620 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.632 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.718 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.585 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.593 I llama_new_context_with_model: graph nodes  = 601
0.00.365.593 I llama_new_context_with_model: graph splits = 1
0.00.365.595 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.456.116 I main: llama threadpool init, n_threads = 4
0.00.456.127 I 
0.00.456.201 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.456.204 I 
0.00.456.243 I sampler seed: 2664463001
0.00.456.253 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.456.255 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.456.256 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.456.256 I 
 increasities, and other sexually suggestive content are not appropriate on this platform. [end of text]


0.01.571.536 I llama_perf_sampler_print:    sampling time =       2.39 ms /    17 runs   (    0.14 ms per token,  7104.05 tokens per second)
0.01.571.539 I llama_perf_context_print:        load time =     454.21 ms
0.01.571.540 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.571.542 I llama_perf_context_print:        eval time =    1105.61 ms /    16 runs   (   69.10 ms per token,    14.47 tokens per second)
0.01.571.543 I llama_perf_context_print:       total time =    1115.43 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.538 I build: 3819 (c0389316) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.732 I main: llama backend init
0.00.001.847 I main: load the model and apply lora adapter, if any
0.00.022.403 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.414 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.421 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.421 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.425 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.425 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.426 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.427 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.427 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.427 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.431 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.432 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.433 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.433 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.434 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.059 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.134 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.023 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.030 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.031 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.032 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.032 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.033 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.034 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.037 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.039 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.040 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.040 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.041 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.044 I llama_model_loader: - type  f32:   37 tensors
0.00.133.047 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.204 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.197 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.850 I llm_load_vocab: special tokens cache size = 5
0.00.230.246 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.258 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.259 I llm_load_print_meta: arch             = gemma
0.00.230.259 I llm_load_print_meta: vocab type       = SPM
0.00.230.260 I llm_load_print_meta: n_vocab          = 256000
0.00.230.260 I llm_load_print_meta: n_merges         = 0
0.00.230.260 I llm_load_print_meta: vocab_only       = 0
0.00.230.261 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.261 I llm_load_print_meta: n_embd           = 2048
0.00.230.261 I llm_load_print_meta: n_layer          = 18
0.00.230.272 I llm_load_print_meta: n_head           = 8
0.00.230.273 I llm_load_print_meta: n_head_kv        = 1
0.00.230.274 I llm_load_print_meta: n_rot            = 256
0.00.230.274 I llm_load_print_meta: n_swa            = 0
0.00.230.274 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.275 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.275 I llm_load_print_meta: n_gqa            = 8
0.00.230.276 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.277 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.278 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.279 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.280 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.280 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.280 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.281 I llm_load_print_meta: n_ff             = 16384
0.00.230.282 I llm_load_print_meta: n_expert         = 0
0.00.230.282 I llm_load_print_meta: n_expert_used    = 0
0.00.230.282 I llm_load_print_meta: causal attn      = 1
0.00.230.282 I llm_load_print_meta: pooling type     = 0
0.00.230.283 I llm_load_print_meta: rope type        = 2
0.00.230.283 I llm_load_print_meta: rope scaling     = linear
0.00.230.285 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.285 I llm_load_print_meta: freq_scale_train = 1
0.00.230.286 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.286 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.286 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.286 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.287 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.287 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.287 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.288 I llm_load_print_meta: model type       = 2B
0.00.230.288 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.290 I llm_load_print_meta: model params     = 2.51 B
0.00.230.291 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.291 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.291 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.292 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.292 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.292 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.293 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.293 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.293 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.294 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.294 I llm_load_print_meta: max token length = 93
0.00.230.314 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.323.386 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.328.610 I llama_new_context_with_model: n_ctx      = 8192
0.00.328.617 I llama_new_context_with_model: n_batch    = 2048
0.00.328.618 I llama_new_context_with_model: n_ubatch   = 512
0.00.328.618 I llama_new_context_with_model: flash_attn = 0
0.00.328.620 I llama_new_context_with_model: freq_base  = 10000.0
0.00.328.621 I llama_new_context_with_model: freq_scale = 1
0.00.357.991 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.358.007 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.358.106 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.945 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.358.953 I llama_new_context_with_model: graph nodes  = 601
0.00.358.953 I llama_new_context_with_model: graph splits = 1
0.00.358.955 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.656 I main: llama threadpool init, n_threads = 4
0.00.445.667 I 
0.00.445.740 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.743 I 
0.00.445.772 I sampler seed: 4064449639
0.00.445.782 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.785 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.786 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.786 I 
 increably. 

I am unable to access the internet to retrieve this information. [end of text]


0.01.664.339 I llama_perf_sampler_print:    sampling time =       2.86 ms /    19 runs   (    0.15 ms per token,  6643.36 tokens per second)
0.01.664.342 I llama_perf_context_print:        load time =     443.79 ms
0.01.664.343 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.664.345 I llama_perf_context_print:        eval time =    1207.53 ms /    18 runs   (   67.08 ms per token,    14.91 tokens per second)
0.01.664.346 I llama_perf_context_print:       total time =    1218.69 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.542 I build: 3819 (c0389316) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.826 I main: llama backend init
0.00.002.090 I main: load the model and apply lora adapter, if any
0.00.022.234 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.307 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.317 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.323 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.323 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.327 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.328 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.329 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.330 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.331 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.332 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.337 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.338 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.339 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.340 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.341 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.560 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.297 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.124 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.131 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.132 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.132 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.133 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.134 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.135 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.138 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.139 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.140 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.140 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.141 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.145 I llama_model_loader: - type  f32:   37 tensors
0.00.133.147 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.998 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.287 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.083 I llm_load_vocab: special tokens cache size = 5
0.00.230.185 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.199 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.199 I llm_load_print_meta: arch             = gemma
0.00.230.200 I llm_load_print_meta: vocab type       = SPM
0.00.230.200 I llm_load_print_meta: n_vocab          = 256000
0.00.230.201 I llm_load_print_meta: n_merges         = 0
0.00.230.201 I llm_load_print_meta: vocab_only       = 0
0.00.230.201 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.202 I llm_load_print_meta: n_embd           = 2048
0.00.230.202 I llm_load_print_meta: n_layer          = 18
0.00.230.214 I llm_load_print_meta: n_head           = 8
0.00.230.215 I llm_load_print_meta: n_head_kv        = 1
0.00.230.215 I llm_load_print_meta: n_rot            = 256
0.00.230.215 I llm_load_print_meta: n_swa            = 0
0.00.230.216 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.216 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.217 I llm_load_print_meta: n_gqa            = 8
0.00.230.218 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.219 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.220 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.221 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.221 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.222 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.222 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.223 I llm_load_print_meta: n_ff             = 16384
0.00.230.223 I llm_load_print_meta: n_expert         = 0
0.00.230.224 I llm_load_print_meta: n_expert_used    = 0
0.00.230.224 I llm_load_print_meta: causal attn      = 1
0.00.230.224 I llm_load_print_meta: pooling type     = 0
0.00.230.225 I llm_load_print_meta: rope type        = 2
0.00.230.225 I llm_load_print_meta: rope scaling     = linear
0.00.230.226 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.227 I llm_load_print_meta: freq_scale_train = 1
0.00.230.227 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.227 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.227 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.228 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.228 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.229 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.229 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.229 I llm_load_print_meta: model type       = 2B
0.00.230.230 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.231 I llm_load_print_meta: model params     = 2.51 B
0.00.230.231 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.232 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.232 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.232 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.233 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.233 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.233 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.233 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.234 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.234 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.235 I llm_load_print_meta: max token length = 93
0.00.230.251 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.305.967 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.305.976 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.305.977 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.305.978 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.305.979 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.305.979 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.311.254 I llama_new_context_with_model: n_ctx      = 8192
0.00.311.262 I llama_new_context_with_model: n_batch    = 2048
0.00.311.262 I llama_new_context_with_model: n_ubatch   = 512
0.00.311.263 I llama_new_context_with_model: flash_attn = 0
0.00.311.266 I llama_new_context_with_model: freq_base  = 10000.0
0.00.311.267 I llama_new_context_with_model: freq_scale = 1
0.00.341.984 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.341.998 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.342.091 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.342.996 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.343.005 I llama_new_context_with_model: graph nodes  = 601
0.00.343.005 I llama_new_context_with_model: graph splits = 1
0.00.343.007 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.462 I main: llama threadpool init, n_threads = 4
0.00.435.476 I 
0.00.435.556 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.435.560 I 
0.00.435.602 I sampler seed: 1490836586
0.00.435.611 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.435.614 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.435.615 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.435.615 I 
 increasities in your city.

I am unable to access the text you have provided, therefore I am unable to provide an answer. [end of text]


0.02.401.501 I llama_perf_sampler_print:    sampling time =       4.32 ms /    29 runs   (    0.15 ms per token,  6719.18 tokens per second)
0.02.401.504 I llama_perf_context_print:        load time =     433.35 ms
0.02.401.506 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.401.508 I llama_perf_context_print:        eval time =    1949.36 ms /    28 runs   (   69.62 ms per token,    14.36 tokens per second)
0.02.401.509 I llama_perf_context_print:       total time =    1966.05 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.555 I build: 3819 (c0389316) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.001.840 I main: load the model and apply lora adapter, if any
0.00.021.919 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.965 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.976 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.985 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.989 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.992 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.992 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.993 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.994 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.995 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.996 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.002 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.003 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.004 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.004 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.005 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.676 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.516 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.403 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.409 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.410 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.411 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.411 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.413 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.414 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.418 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.419 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.420 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.421 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.422 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.425 I llama_model_loader: - type  f32:   37 tensors
0.00.132.428 I llama_model_loader: - type q8_0:  127 tensors
0.00.195.468 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.337 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.979 I llm_load_vocab: special tokens cache size = 5
0.00.227.146 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.159 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.160 I llm_load_print_meta: arch             = gemma
0.00.227.160 I llm_load_print_meta: vocab type       = SPM
0.00.227.161 I llm_load_print_meta: n_vocab          = 256000
0.00.227.161 I llm_load_print_meta: n_merges         = 0
0.00.227.162 I llm_load_print_meta: vocab_only       = 0
0.00.227.163 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.164 I llm_load_print_meta: n_embd           = 2048
0.00.227.164 I llm_load_print_meta: n_layer          = 18
0.00.227.178 I llm_load_print_meta: n_head           = 8
0.00.227.179 I llm_load_print_meta: n_head_kv        = 1
0.00.227.179 I llm_load_print_meta: n_rot            = 256
0.00.227.180 I llm_load_print_meta: n_swa            = 0
0.00.227.180 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.181 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.182 I llm_load_print_meta: n_gqa            = 8
0.00.227.184 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.185 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.186 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.188 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.188 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.189 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.189 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.190 I llm_load_print_meta: n_ff             = 16384
0.00.227.191 I llm_load_print_meta: n_expert         = 0
0.00.227.191 I llm_load_print_meta: n_expert_used    = 0
0.00.227.192 I llm_load_print_meta: causal attn      = 1
0.00.227.192 I llm_load_print_meta: pooling type     = 0
0.00.227.192 I llm_load_print_meta: rope type        = 2
0.00.227.193 I llm_load_print_meta: rope scaling     = linear
0.00.227.195 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.195 I llm_load_print_meta: freq_scale_train = 1
0.00.227.195 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.196 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.196 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.197 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.197 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.197 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.198 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.198 I llm_load_print_meta: model type       = 2B
0.00.227.199 I llm_load_print_meta: model ftype      = Q8_0
0.00.227.200 I llm_load_print_meta: model params     = 2.51 B
0.00.227.201 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.227.201 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.201 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.202 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.202 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.202 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.203 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.203 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.203 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.205 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.205 I llm_load_print_meta: max token length = 93
0.00.227.223 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.298.053 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.298.061 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.303.121 I llama_new_context_with_model: n_ctx      = 8192
0.00.303.127 I llama_new_context_with_model: n_batch    = 2048
0.00.303.128 I llama_new_context_with_model: n_ubatch   = 512
0.00.303.128 I llama_new_context_with_model: flash_attn = 0
0.00.303.130 I llama_new_context_with_model: freq_base  = 10000.0
0.00.303.131 I llama_new_context_with_model: freq_scale = 1
0.00.332.365 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.332.380 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.332.470 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.333.312 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.333.321 I llama_new_context_with_model: graph nodes  = 601
0.00.333.321 I llama_new_context_with_model: graph splits = 1
0.00.333.323 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.426.152 I main: llama threadpool init, n_threads = 4
0.00.426.164 I 
0.00.426.238 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.426.242 I 
0.00.426.280 I sampler seed: 1189266799
0.00.426.289 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.426.293 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.426.293 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.426.293 I 
 increasities. [end of text]


0.00.732.161 I llama_perf_sampler_print:    sampling time =       0.63 ms /     5 runs   (    0.13 ms per token,  7898.89 tokens per second)
0.00.732.164 I llama_perf_context_print:        load time =     424.29 ms
0.00.732.165 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.732.168 I llama_perf_context_print:        eval time =     302.63 ms /     4 runs   (   75.66 ms per token,    13.22 tokens per second)
0.00.732.169 I llama_perf_context_print:       total time =     306.02 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.569s
user	0m21.174s
sys	0m9.321s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3819 (c0389316)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32254.09 ms
main:    total time = 32254.09 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.552 I build: 3819 (c0389316) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.879 I main: load the model and apply lora adapter, if any
0.00.022.244 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.292 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.300 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.304 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.305 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.309 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.310 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.311 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.312 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.312 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.313 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.317 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.317 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.318 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.319 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.320 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.972 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.268 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.093 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.099 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.100 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.100 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.101 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.102 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.102 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.105 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.106 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.107 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.108 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.109 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.111 I llama_model_loader: - type  f32:   37 tensors
0.00.133.113 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.115 I llama_model_loader: - type q6_K:   19 tensors
0.00.196.994 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.209.857 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.427 I llm_load_vocab: special tokens cache size = 5
0.00.228.682 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.694 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.695 I llm_load_print_meta: arch             = gemma
0.00.228.696 I llm_load_print_meta: vocab type       = SPM
0.00.228.696 I llm_load_print_meta: n_vocab          = 256000
0.00.228.696 I llm_load_print_meta: n_merges         = 0
0.00.228.697 I llm_load_print_meta: vocab_only       = 0
0.00.228.697 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.697 I llm_load_print_meta: n_embd           = 2048
0.00.228.698 I llm_load_print_meta: n_layer          = 18
0.00.228.709 I llm_load_print_meta: n_head           = 8
0.00.228.710 I llm_load_print_meta: n_head_kv        = 1
0.00.228.710 I llm_load_print_meta: n_rot            = 256
0.00.228.711 I llm_load_print_meta: n_swa            = 0
0.00.228.711 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.711 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.712 I llm_load_print_meta: n_gqa            = 8
0.00.228.713 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.714 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.715 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.716 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.717 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.718 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.718 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.719 I llm_load_print_meta: n_ff             = 16384
0.00.228.720 I llm_load_print_meta: n_expert         = 0
0.00.228.720 I llm_load_print_meta: n_expert_used    = 0
0.00.228.721 I llm_load_print_meta: causal attn      = 1
0.00.228.722 I llm_load_print_meta: pooling type     = 0
0.00.228.722 I llm_load_print_meta: rope type        = 2
0.00.228.722 I llm_load_print_meta: rope scaling     = linear
0.00.228.724 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.724 I llm_load_print_meta: freq_scale_train = 1
0.00.228.725 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.725 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.725 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.726 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.726 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.727 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.727 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.728 I llm_load_print_meta: model type       = 2B
0.00.228.728 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.228.729 I llm_load_print_meta: model params     = 2.51 B
0.00.228.730 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.228.730 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.731 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.732 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.732 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.733 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.734 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.734 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.734 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.735 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.735 I llm_load_print_meta: max token length = 93
0.00.228.758 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.285.829 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.285.837 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.285.838 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.285.839 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.285.839 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.285.840 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.290.780 I llama_new_context_with_model: n_ctx      = 8192
0.00.290.786 I llama_new_context_with_model: n_batch    = 2048
0.00.290.786 I llama_new_context_with_model: n_ubatch   = 512
0.00.290.787 I llama_new_context_with_model: flash_attn = 0
0.00.290.789 I llama_new_context_with_model: freq_base  = 10000.0
0.00.290.790 I llama_new_context_with_model: freq_scale = 1
0.00.321.392 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.321.407 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.321.494 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.322.350 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.322.358 I llama_new_context_with_model: graph nodes  = 601
0.00.322.359 I llama_new_context_with_model: graph splits = 1
0.00.322.361 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.402.919 I main: llama threadpool init, n_threads = 4
0.00.402.931 I 
0.00.403.004 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.403.008 I 
0.00.403.036 I sampler seed: 1969423540
0.00.403.045 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.403.048 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.403.048 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.403.048 I 
 increamically in the 20th century, and the world witnessed unprecedented technological advancements during this time.

**Identify the key technological advancements during the 2

0.01.968.683 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7009.35 tokens per second)
0.01.968.685 I llama_perf_context_print:        load time =     401.02 ms
0.01.968.686 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.968.687 I llama_perf_context_print:        eval time =    1548.87 ms /    32 runs   (   48.40 ms per token,    20.66 tokens per second)
0.01.968.688 I llama_perf_context_print:       total time =    1565.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3819 (c0389316)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32029.91 ms
main:    total time = 32029.91 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.571 I build: 3819 (c0389316) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.780 I main: llama backend init
0.00.001.892 I main: load the model and apply lora adapter, if any
0.00.021.534 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.545 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.552 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.553 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.556 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.557 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.558 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.558 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.560 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.560 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.564 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.565 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.566 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.567 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.568 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.022 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.783 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.672 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.678 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.679 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.680 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.680 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.681 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.682 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.685 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.685 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.688 I llama_model_loader: - type  f32:   37 tensors
0.00.131.690 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.691 I llama_model_loader: - type q6_K:   19 tensors
0.00.195.971 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.209.492 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.197 I llm_load_vocab: special tokens cache size = 5
0.00.228.402 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.415 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.416 I llm_load_print_meta: arch             = gemma
0.00.228.416 I llm_load_print_meta: vocab type       = SPM
0.00.228.417 I llm_load_print_meta: n_vocab          = 256000
0.00.228.417 I llm_load_print_meta: n_merges         = 0
0.00.228.417 I llm_load_print_meta: vocab_only       = 0
0.00.228.418 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.418 I llm_load_print_meta: n_embd           = 2048
0.00.228.418 I llm_load_print_meta: n_layer          = 18
0.00.228.430 I llm_load_print_meta: n_head           = 8
0.00.228.431 I llm_load_print_meta: n_head_kv        = 1
0.00.228.432 I llm_load_print_meta: n_rot            = 256
0.00.228.432 I llm_load_print_meta: n_swa            = 0
0.00.228.432 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.433 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.434 I llm_load_print_meta: n_gqa            = 8
0.00.228.434 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.435 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.436 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.437 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.437 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.438 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.438 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.439 I llm_load_print_meta: n_ff             = 16384
0.00.228.439 I llm_load_print_meta: n_expert         = 0
0.00.228.440 I llm_load_print_meta: n_expert_used    = 0
0.00.228.440 I llm_load_print_meta: causal attn      = 1
0.00.228.440 I llm_load_print_meta: pooling type     = 0
0.00.228.441 I llm_load_print_meta: rope type        = 2
0.00.228.441 I llm_load_print_meta: rope scaling     = linear
0.00.228.442 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.443 I llm_load_print_meta: freq_scale_train = 1
0.00.228.443 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.444 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.444 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.444 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.444 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.444 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.445 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.445 I llm_load_print_meta: model type       = 2B
0.00.228.446 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.228.447 I llm_load_print_meta: model params     = 2.51 B
0.00.228.447 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.228.448 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.448 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.449 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.449 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.449 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.450 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.450 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.450 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.451 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.451 I llm_load_print_meta: max token length = 93
0.00.228.474 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.286.404 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.291.381 I llama_new_context_with_model: n_ctx      = 8192
0.00.291.389 I llama_new_context_with_model: n_batch    = 2048
0.00.291.389 I llama_new_context_with_model: n_ubatch   = 512
0.00.291.390 I llama_new_context_with_model: flash_attn = 0
0.00.291.394 I llama_new_context_with_model: freq_base  = 10000.0
0.00.291.395 I llama_new_context_with_model: freq_scale = 1
0.00.320.977 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.320.993 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.321.083 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.321.915 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.321.923 I llama_new_context_with_model: graph nodes  = 601
0.00.321.924 I llama_new_context_with_model: graph splits = 1
0.00.321.925 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.401.982 I main: llama threadpool init, n_threads = 4
0.00.401.993 I 
0.00.402.071 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.402.075 I 
0.00.402.115 I sampler seed: 1289113671
0.00.402.131 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.402.135 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.402.136 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.402.136 I 
 encompasses the broad spectrum of the digital world and is characterized by rapid technological advancements and continuous innovation.

**Discuss how the characteristics of digital world described above impact

0.01.988.558 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7007.86 tokens per second)
0.01.988.561 I llama_perf_context_print:        load time =     400.07 ms
0.01.988.562 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.988.563 I llama_perf_context_print:        eval time =    1569.07 ms /    32 runs   (   49.03 ms per token,    20.39 tokens per second)
0.01.988.564 I llama_perf_context_print:       total time =    1586.58 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.454s
user	8m14.192s
sys	0m6.794s
