+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.572 I build: 3907 (96776405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.768 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.022.311 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.360 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.371 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.377 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.380 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.384 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.387 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.388 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.389 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.389 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.389 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.394 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.395 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.395 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.396 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.396 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.906 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.853 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.770 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.777 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.778 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.778 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.779 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.780 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.781 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.783 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.784 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.785 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.785 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.786 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.790 I llama_model_loader: - type  f32:   37 tensors
0.00.132.793 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.881 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.988 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.741 I llm_load_vocab: special tokens cache size = 5
0.00.236.858 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.236.876 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.236.876 I llm_load_print_meta: arch             = gemma
0.00.236.877 I llm_load_print_meta: vocab type       = SPM
0.00.236.878 I llm_load_print_meta: n_vocab          = 256000
0.00.236.879 I llm_load_print_meta: n_merges         = 0
0.00.236.879 I llm_load_print_meta: vocab_only       = 0
0.00.236.879 I llm_load_print_meta: n_ctx_train      = 8192
0.00.236.880 I llm_load_print_meta: n_embd           = 2048
0.00.236.880 I llm_load_print_meta: n_layer          = 18
0.00.236.893 I llm_load_print_meta: n_head           = 8
0.00.236.894 I llm_load_print_meta: n_head_kv        = 1
0.00.236.894 I llm_load_print_meta: n_rot            = 256
0.00.236.895 I llm_load_print_meta: n_swa            = 0
0.00.236.895 I llm_load_print_meta: n_embd_head_k    = 256
0.00.236.895 I llm_load_print_meta: n_embd_head_v    = 256
0.00.236.896 I llm_load_print_meta: n_gqa            = 8
0.00.236.897 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.236.898 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.236.899 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.236.900 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.236.901 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.236.902 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.236.902 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.236.903 I llm_load_print_meta: n_ff             = 16384
0.00.236.903 I llm_load_print_meta: n_expert         = 0
0.00.236.903 I llm_load_print_meta: n_expert_used    = 0
0.00.236.904 I llm_load_print_meta: causal attn      = 1
0.00.236.904 I llm_load_print_meta: pooling type     = 0
0.00.236.904 I llm_load_print_meta: rope type        = 2
0.00.236.905 I llm_load_print_meta: rope scaling     = linear
0.00.236.906 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.236.907 I llm_load_print_meta: freq_scale_train = 1
0.00.236.907 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.236.908 I llm_load_print_meta: rope_finetuned   = unknown
0.00.236.908 I llm_load_print_meta: ssm_d_conv       = 0
0.00.236.908 I llm_load_print_meta: ssm_d_inner      = 0
0.00.236.909 I llm_load_print_meta: ssm_d_state      = 0
0.00.236.909 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.236.909 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.236.910 I llm_load_print_meta: model type       = 2B
0.00.236.910 I llm_load_print_meta: model ftype      = Q8_0
0.00.236.911 I llm_load_print_meta: model params     = 2.51 B
0.00.236.912 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.236.912 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.236.913 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.236.913 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.236.913 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.236.914 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.236.914 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.236.914 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.236.915 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.236.915 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.236.916 I llm_load_print_meta: max token length = 93
0.00.236.935 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.336.042 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.336.051 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.336.052 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.336.053 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.336.053 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.336.054 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.341.085 I llama_new_context_with_model: n_ctx      = 8192
0.00.341.092 I llama_new_context_with_model: n_batch    = 2048
0.00.341.093 I llama_new_context_with_model: n_ubatch   = 512
0.00.341.093 I llama_new_context_with_model: flash_attn = 0
0.00.341.096 I llama_new_context_with_model: freq_base  = 10000.0
0.00.341.096 I llama_new_context_with_model: freq_scale = 1
0.00.370.489 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.506 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.600 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.496 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.505 I llama_new_context_with_model: graph nodes  = 601
0.00.371.505 I llama_new_context_with_model: graph splits = 1
0.00.371.507 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.001 I main: llama threadpool init, n_threads = 4
0.00.463.013 I 
0.00.463.092 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.095 I 
0.00.463.130 I sampler seed: 2973147807
0.00.463.139 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.142 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.463.143 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.143 I 
 increasively, blurring the line between the observer and the observed.

**How does this blurring occur?**

The blurring occurs because of the **distortion

0.02.752.598 I llama_perf_sampler_print:    sampling time =       5.16 ms /    33 runs   (    0.16 ms per token,  6396.59 tokens per second)
0.02.752.600 I llama_perf_context_print:        load time =     461.08 ms
0.02.752.601 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.752.603 I llama_perf_context_print:        eval time =    2271.16 ms /    32 runs   (   70.97 ms per token,    14.09 tokens per second)
0.02.752.604 I llama_perf_context_print:       total time =    2289.60 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.596 I build: 3907 (96776405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.836 I main: llama backend init
0.00.001.958 I main: load the model and apply lora adapter, if any
0.00.021.937 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.950 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.958 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.959 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.962 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.963 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.964 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.964 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.965 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.965 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.970 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.971 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.972 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.972 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.973 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.471 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.199 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.031 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.037 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.038 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.039 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.039 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.040 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.041 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.043 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.044 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.044 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.045 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.046 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.050 I llama_model_loader: - type  f32:   37 tensors
0.00.132.053 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.745 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.201 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.988 I llm_load_vocab: special tokens cache size = 5
0.00.242.236 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.242.250 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.242.251 I llm_load_print_meta: arch             = gemma
0.00.242.251 I llm_load_print_meta: vocab type       = SPM
0.00.242.252 I llm_load_print_meta: n_vocab          = 256000
0.00.242.252 I llm_load_print_meta: n_merges         = 0
0.00.242.253 I llm_load_print_meta: vocab_only       = 0
0.00.242.253 I llm_load_print_meta: n_ctx_train      = 8192
0.00.242.253 I llm_load_print_meta: n_embd           = 2048
0.00.242.254 I llm_load_print_meta: n_layer          = 18
0.00.242.267 I llm_load_print_meta: n_head           = 8
0.00.242.268 I llm_load_print_meta: n_head_kv        = 1
0.00.242.269 I llm_load_print_meta: n_rot            = 256
0.00.242.269 I llm_load_print_meta: n_swa            = 0
0.00.242.269 I llm_load_print_meta: n_embd_head_k    = 256
0.00.242.270 I llm_load_print_meta: n_embd_head_v    = 256
0.00.242.271 I llm_load_print_meta: n_gqa            = 8
0.00.242.272 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.242.273 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.242.274 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.242.275 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.242.276 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.242.276 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.242.276 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.242.277 I llm_load_print_meta: n_ff             = 16384
0.00.242.278 I llm_load_print_meta: n_expert         = 0
0.00.242.278 I llm_load_print_meta: n_expert_used    = 0
0.00.242.278 I llm_load_print_meta: causal attn      = 1
0.00.242.278 I llm_load_print_meta: pooling type     = 0
0.00.242.278 I llm_load_print_meta: rope type        = 2
0.00.242.279 I llm_load_print_meta: rope scaling     = linear
0.00.242.280 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.242.281 I llm_load_print_meta: freq_scale_train = 1
0.00.242.281 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.242.282 I llm_load_print_meta: rope_finetuned   = unknown
0.00.242.282 I llm_load_print_meta: ssm_d_conv       = 0
0.00.242.282 I llm_load_print_meta: ssm_d_inner      = 0
0.00.242.282 I llm_load_print_meta: ssm_d_state      = 0
0.00.242.283 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.242.283 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.242.284 I llm_load_print_meta: model type       = 2B
0.00.242.284 I llm_load_print_meta: model ftype      = Q8_0
0.00.242.285 I llm_load_print_meta: model params     = 2.51 B
0.00.242.287 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.242.287 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.242.287 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.242.288 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.242.289 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.242.290 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.242.291 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.242.292 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.242.292 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.242.292 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.242.293 I llm_load_print_meta: max token length = 93
0.00.242.311 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.336.085 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.342.167 I llama_new_context_with_model: n_ctx      = 8192
0.00.342.173 I llama_new_context_with_model: n_batch    = 2048
0.00.342.173 I llama_new_context_with_model: n_ubatch   = 512
0.00.342.174 I llama_new_context_with_model: flash_attn = 0
0.00.342.177 I llama_new_context_with_model: freq_base  = 10000.0
0.00.342.178 I llama_new_context_with_model: freq_scale = 1
0.00.371.710 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.371.727 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.371.817 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.659 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.372.666 I llama_new_context_with_model: graph nodes  = 601
0.00.372.667 I llama_new_context_with_model: graph splits = 1
0.00.372.668 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.019 I main: llama threadpool init, n_threads = 4
0.00.460.031 I 
0.00.460.110 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.113 I 
0.00.460.151 I sampler seed: 2770293895
0.00.460.160 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.170 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.170 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.171 I 
 increasities:

**1. The Great War (1914-1918)**

- The deadliest conflict in human history, resulting in

0.02.675.371 I llama_perf_sampler_print:    sampling time =       4.97 ms /    33 runs   (    0.15 ms per token,  6641.18 tokens per second)
0.02.675.373 I llama_perf_context_print:        load time =     458.04 ms
0.02.675.375 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.675.376 I llama_perf_context_print:        eval time =    2196.82 ms /    32 runs   (   68.65 ms per token,    14.57 tokens per second)
0.02.675.377 I llama_perf_context_print:       total time =    2215.36 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.544 I build: 3907 (96776405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.741 I main: llama backend init
0.00.001.825 I main: load the model and apply lora adapter, if any
0.00.022.529 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.580 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.591 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.596 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.600 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.606 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.607 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.607 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.608 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.608 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.609 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.613 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.614 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.615 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.615 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.616 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.476 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.991 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.895 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.902 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.902 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.903 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.904 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.904 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.905 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.908 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.909 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.910 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.910 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.911 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.914 I llama_model_loader: - type  f32:   37 tensors
0.00.133.916 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.618 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.229.325 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.230.101 I llm_load_vocab: special tokens cache size = 5
0.00.251.311 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.251.326 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.251.327 I llm_load_print_meta: arch             = gemma
0.00.251.328 I llm_load_print_meta: vocab type       = SPM
0.00.251.329 I llm_load_print_meta: n_vocab          = 256000
0.00.251.329 I llm_load_print_meta: n_merges         = 0
0.00.251.330 I llm_load_print_meta: vocab_only       = 0
0.00.251.330 I llm_load_print_meta: n_ctx_train      = 8192
0.00.251.330 I llm_load_print_meta: n_embd           = 2048
0.00.251.330 I llm_load_print_meta: n_layer          = 18
0.00.251.344 I llm_load_print_meta: n_head           = 8
0.00.251.345 I llm_load_print_meta: n_head_kv        = 1
0.00.251.345 I llm_load_print_meta: n_rot            = 256
0.00.251.345 I llm_load_print_meta: n_swa            = 0
0.00.251.346 I llm_load_print_meta: n_embd_head_k    = 256
0.00.251.346 I llm_load_print_meta: n_embd_head_v    = 256
0.00.251.348 I llm_load_print_meta: n_gqa            = 8
0.00.251.349 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.251.350 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.251.352 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.251.353 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.251.353 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.251.354 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.251.354 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.251.355 I llm_load_print_meta: n_ff             = 16384
0.00.251.356 I llm_load_print_meta: n_expert         = 0
0.00.251.356 I llm_load_print_meta: n_expert_used    = 0
0.00.251.357 I llm_load_print_meta: causal attn      = 1
0.00.251.357 I llm_load_print_meta: pooling type     = 0
0.00.251.357 I llm_load_print_meta: rope type        = 2
0.00.251.358 I llm_load_print_meta: rope scaling     = linear
0.00.251.359 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.251.360 I llm_load_print_meta: freq_scale_train = 1
0.00.251.361 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.251.361 I llm_load_print_meta: rope_finetuned   = unknown
0.00.251.362 I llm_load_print_meta: ssm_d_conv       = 0
0.00.251.362 I llm_load_print_meta: ssm_d_inner      = 0
0.00.251.362 I llm_load_print_meta: ssm_d_state      = 0
0.00.251.362 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.251.363 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.251.364 I llm_load_print_meta: model type       = 2B
0.00.251.364 I llm_load_print_meta: model ftype      = Q8_0
0.00.251.365 I llm_load_print_meta: model params     = 2.51 B
0.00.251.366 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.251.366 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.251.368 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.251.368 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.251.369 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.251.369 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.251.370 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.251.370 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.251.371 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.251.371 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.251.371 I llm_load_print_meta: max token length = 93
0.00.251.393 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.328.549 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.328.556 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.328.556 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.328.557 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.328.558 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.328.558 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.333.767 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.775 I llama_new_context_with_model: n_batch    = 2048
0.00.333.775 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.776 I llama_new_context_with_model: flash_attn = 0
0.00.333.779 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.780 I llama_new_context_with_model: freq_scale = 1
0.00.364.572 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.587 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.681 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.558 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.566 I llama_new_context_with_model: graph nodes  = 601
0.00.365.567 I llama_new_context_with_model: graph splits = 1
0.00.365.569 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.584 I main: llama threadpool init, n_threads = 4
0.00.461.597 I 
0.00.461.676 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.680 I 
0.00.461.719 I sampler seed: 42966476
0.00.461.730 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.733 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.461.734 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.734 I 
 increamically, highlighting the dramatic changes that have unfolded.

The world we once knew has been shattered, replaced by a tapestry of chaos and uncertainty. The air

0.02.791.303 I llama_perf_sampler_print:    sampling time =       5.25 ms /    33 runs   (    0.16 ms per token,  6290.51 tokens per second)
0.02.791.306 I llama_perf_context_print:        load time =     459.74 ms
0.02.791.307 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.791.309 I llama_perf_context_print:        eval time =    2309.88 ms /    32 runs   (   72.18 ms per token,    13.85 tokens per second)
0.02.791.310 I llama_perf_context_print:       total time =    2329.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.597 I build: 3907 (96776405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.796 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.021.770 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.818 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.830 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.835 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.839 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.843 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.844 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.845 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.846 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.847 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.847 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.851 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.852 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.853 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.853 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.854 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.893 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.281 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.236 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.244 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.245 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.246 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.247 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.248 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.249 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.254 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.254 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.255 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.256 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.257 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.261 I llama_model_loader: - type  f32:   37 tensors
0.00.133.264 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.157 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.225.131 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.225.958 I llm_load_vocab: special tokens cache size = 5
0.00.247.545 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.247.561 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.247.562 I llm_load_print_meta: arch             = gemma
0.00.247.563 I llm_load_print_meta: vocab type       = SPM
0.00.247.563 I llm_load_print_meta: n_vocab          = 256000
0.00.247.564 I llm_load_print_meta: n_merges         = 0
0.00.247.564 I llm_load_print_meta: vocab_only       = 0
0.00.247.564 I llm_load_print_meta: n_ctx_train      = 8192
0.00.247.565 I llm_load_print_meta: n_embd           = 2048
0.00.247.565 I llm_load_print_meta: n_layer          = 18
0.00.247.578 I llm_load_print_meta: n_head           = 8
0.00.247.579 I llm_load_print_meta: n_head_kv        = 1
0.00.247.580 I llm_load_print_meta: n_rot            = 256
0.00.247.580 I llm_load_print_meta: n_swa            = 0
0.00.247.580 I llm_load_print_meta: n_embd_head_k    = 256
0.00.247.581 I llm_load_print_meta: n_embd_head_v    = 256
0.00.247.582 I llm_load_print_meta: n_gqa            = 8
0.00.247.582 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.247.583 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.247.584 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.247.585 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.247.586 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.247.586 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.247.586 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.247.587 I llm_load_print_meta: n_ff             = 16384
0.00.247.587 I llm_load_print_meta: n_expert         = 0
0.00.247.588 I llm_load_print_meta: n_expert_used    = 0
0.00.247.588 I llm_load_print_meta: causal attn      = 1
0.00.247.588 I llm_load_print_meta: pooling type     = 0
0.00.247.589 I llm_load_print_meta: rope type        = 2
0.00.247.589 I llm_load_print_meta: rope scaling     = linear
0.00.247.590 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.247.591 I llm_load_print_meta: freq_scale_train = 1
0.00.247.591 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.247.592 I llm_load_print_meta: rope_finetuned   = unknown
0.00.247.592 I llm_load_print_meta: ssm_d_conv       = 0
0.00.247.592 I llm_load_print_meta: ssm_d_inner      = 0
0.00.247.593 I llm_load_print_meta: ssm_d_state      = 0
0.00.247.593 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.247.593 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.247.594 I llm_load_print_meta: model type       = 2B
0.00.247.594 I llm_load_print_meta: model ftype      = Q8_0
0.00.247.595 I llm_load_print_meta: model params     = 2.51 B
0.00.247.596 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.247.596 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.247.597 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.247.598 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.247.598 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.247.598 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.247.599 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.247.599 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.247.599 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.247.600 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.247.600 I llm_load_print_meta: max token length = 93
0.00.247.620 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.512 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.317.521 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.323.362 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.370 I llama_new_context_with_model: n_batch    = 2048
0.00.323.370 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.371 I llama_new_context_with_model: flash_attn = 0
0.00.323.373 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.375 I llama_new_context_with_model: freq_scale = 1
0.00.354.192 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.208 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.309 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.199 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.355.207 I llama_new_context_with_model: graph nodes  = 601
0.00.355.207 I llama_new_context_with_model: graph splits = 1
0.00.355.209 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.453.512 I main: llama threadpool init, n_threads = 4
0.00.453.527 I 
0.00.453.609 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.453.613 I 
0.00.453.657 I sampler seed: 2277862464
0.00.453.668 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.453.671 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.453.671 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.453.671 I 
 increasively, the following:

1. The basic metabolic pathway
2. The citric acid cycle
3. Glycolysis
4. Electron Transport Chain



0.02.953.896 I llama_perf_sampler_print:    sampling time =       5.05 ms /    33 runs   (    0.15 ms per token,  6529.48 tokens per second)
0.02.953.898 I llama_perf_context_print:        load time =     451.61 ms
0.02.953.899 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.953.901 I llama_perf_context_print:        eval time =    2480.31 ms /    32 runs   (   77.51 ms per token,    12.90 tokens per second)
0.02.953.901 I llama_perf_context_print:       total time =    2500.39 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.886s
user	0m40.283s
sys	0m9.500s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3907 (96776405)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32036.62 ms
main:    total time = 32036.62 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.594 I build: 3907 (96776405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.794 I main: llama backend init
0.00.001.919 I main: load the model and apply lora adapter, if any
0.00.021.863 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.909 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.919 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.925 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.926 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.929 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.930 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.930 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.931 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.931 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.932 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.935 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.935 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.936 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.936 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.937 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.433 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.342 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.259 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.265 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.266 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.267 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.268 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.269 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.270 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.274 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.275 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.275 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.276 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.277 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.280 I llama_model_loader: - type  f32:   37 tensors
0.00.132.283 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.284 I llama_model_loader: - type q6_K:   19 tensors
0.00.193.171 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.206.413 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.207.158 I llm_load_vocab: special tokens cache size = 5
0.00.228.525 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.542 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.543 I llm_load_print_meta: arch             = gemma
0.00.228.543 I llm_load_print_meta: vocab type       = SPM
0.00.228.544 I llm_load_print_meta: n_vocab          = 256000
0.00.228.545 I llm_load_print_meta: n_merges         = 0
0.00.228.546 I llm_load_print_meta: vocab_only       = 0
0.00.228.546 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.546 I llm_load_print_meta: n_embd           = 2048
0.00.228.547 I llm_load_print_meta: n_layer          = 18
0.00.228.559 I llm_load_print_meta: n_head           = 8
0.00.228.560 I llm_load_print_meta: n_head_kv        = 1
0.00.228.560 I llm_load_print_meta: n_rot            = 256
0.00.228.561 I llm_load_print_meta: n_swa            = 0
0.00.228.561 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.561 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.562 I llm_load_print_meta: n_gqa            = 8
0.00.228.563 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.564 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.565 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.566 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.567 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.568 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.568 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.569 I llm_load_print_meta: n_ff             = 16384
0.00.228.569 I llm_load_print_meta: n_expert         = 0
0.00.228.570 I llm_load_print_meta: n_expert_used    = 0
0.00.228.570 I llm_load_print_meta: causal attn      = 1
0.00.228.570 I llm_load_print_meta: pooling type     = 0
0.00.228.570 I llm_load_print_meta: rope type        = 2
0.00.228.571 I llm_load_print_meta: rope scaling     = linear
0.00.228.572 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.573 I llm_load_print_meta: freq_scale_train = 1
0.00.228.573 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.574 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.574 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.574 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.574 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.575 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.575 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.575 I llm_load_print_meta: model type       = 2B
0.00.228.576 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.228.577 I llm_load_print_meta: model params     = 2.51 B
0.00.228.577 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.228.578 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.578 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.578 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.579 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.579 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.579 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.580 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.580 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.580 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.580 I llm_load_print_meta: max token length = 93
0.00.228.603 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.287.060 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.287.069 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.287.070 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.287.070 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.287.071 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.287.071 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.292.146 I llama_new_context_with_model: n_ctx      = 8192
0.00.292.152 I llama_new_context_with_model: n_batch    = 2048
0.00.292.152 I llama_new_context_with_model: n_ubatch   = 512
0.00.292.153 I llama_new_context_with_model: flash_attn = 0
0.00.292.156 I llama_new_context_with_model: freq_base  = 10000.0
0.00.292.157 I llama_new_context_with_model: freq_scale = 1
0.00.321.671 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.321.687 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.321.780 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.322.651 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.322.660 I llama_new_context_with_model: graph nodes  = 601
0.00.322.661 I llama_new_context_with_model: graph splits = 1
0.00.322.663 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.404.354 I main: llama threadpool init, n_threads = 4
0.00.404.366 I 
0.00.404.441 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.404.444 I 
0.00.404.480 I sampler seed: 3375173004
0.00.404.490 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.404.493 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.404.494 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.404.494 I 
 seconally.

I am unable to answer this question as I am not able to make inferences about individuals or make assumptions about their personal characteristics. [end of text]


0.01.963.972 I llama_perf_sampler_print:    sampling time =       4.44 ms /    31 runs   (    0.14 ms per token,  6975.70 tokens per second)
0.01.963.975 I llama_perf_context_print:        load time =     402.41 ms
0.01.963.976 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.963.978 I llama_perf_context_print:        eval time =    1542.59 ms /    30 runs   (   51.42 ms per token,    19.45 tokens per second)
0.01.963.978 I llama_perf_context_print:       total time =    1559.63 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3907 (96776405)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32117.75 ms
main:    total time = 32117.75 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.561 I build: 3907 (96776405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.001.845 I main: load the model and apply lora adapter, if any
0.00.022.458 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.476 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.484 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.485 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.491 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.492 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.493 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.494 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.494 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.495 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.500 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.500 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.501 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.501 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.502 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.134 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.448 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.427 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.434 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.435 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.435 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.436 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.437 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.437 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.440 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.440 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.445 I llama_model_loader: - type  f32:   37 tensors
0.00.133.447 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.447 I llama_model_loader: - type q6_K:   19 tensors
0.00.197.399 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.605 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.391 I llm_load_vocab: special tokens cache size = 5
0.00.234.821 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.837 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.837 I llm_load_print_meta: arch             = gemma
0.00.234.838 I llm_load_print_meta: vocab type       = SPM
0.00.234.839 I llm_load_print_meta: n_vocab          = 256000
0.00.234.839 I llm_load_print_meta: n_merges         = 0
0.00.234.839 I llm_load_print_meta: vocab_only       = 0
0.00.234.840 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.840 I llm_load_print_meta: n_embd           = 2048
0.00.234.840 I llm_load_print_meta: n_layer          = 18
0.00.234.852 I llm_load_print_meta: n_head           = 8
0.00.234.853 I llm_load_print_meta: n_head_kv        = 1
0.00.234.853 I llm_load_print_meta: n_rot            = 256
0.00.234.853 I llm_load_print_meta: n_swa            = 0
0.00.234.854 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.854 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.855 I llm_load_print_meta: n_gqa            = 8
0.00.234.856 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.857 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.858 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.859 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.859 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.860 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.860 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.861 I llm_load_print_meta: n_ff             = 16384
0.00.234.862 I llm_load_print_meta: n_expert         = 0
0.00.234.862 I llm_load_print_meta: n_expert_used    = 0
0.00.234.862 I llm_load_print_meta: causal attn      = 1
0.00.234.862 I llm_load_print_meta: pooling type     = 0
0.00.234.863 I llm_load_print_meta: rope type        = 2
0.00.234.863 I llm_load_print_meta: rope scaling     = linear
0.00.234.864 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.865 I llm_load_print_meta: freq_scale_train = 1
0.00.234.865 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.866 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.866 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.866 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.866 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.867 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.867 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.867 I llm_load_print_meta: model type       = 2B
0.00.234.868 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.234.869 I llm_load_print_meta: model params     = 2.51 B
0.00.234.870 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.234.870 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.871 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.871 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.871 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.872 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.872 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.872 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.873 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.873 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.874 I llm_load_print_meta: max token length = 93
0.00.234.893 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.293.051 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.298.264 I llama_new_context_with_model: n_ctx      = 8192
0.00.298.272 I llama_new_context_with_model: n_batch    = 2048
0.00.298.272 I llama_new_context_with_model: n_ubatch   = 512
0.00.298.273 I llama_new_context_with_model: flash_attn = 0
0.00.298.276 I llama_new_context_with_model: freq_base  = 10000.0
0.00.298.277 I llama_new_context_with_model: freq_scale = 1
0.00.332.525 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.332.542 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.332.642 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.333.579 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.333.587 I llama_new_context_with_model: graph nodes  = 601
0.00.333.587 I llama_new_context_with_model: graph splits = 1
0.00.333.589 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.418.206 I main: llama threadpool init, n_threads = 4
0.00.418.220 I 
0.00.418.296 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.418.299 I 
0.00.418.341 I sampler seed: 231183994
0.00.418.351 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.418.354 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.418.355 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.418.355 I 
 squaRED.

I am unable to access the requested file.

**Possible Causes:**

* The file may have been deleted.
* The file may

0.02.070.106 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6670.71 tokens per second)
0.02.070.108 I llama_perf_context_print:        load time =     416.34 ms
0.02.070.109 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.070.111 I llama_perf_context_print:        eval time =    1633.42 ms /    32 runs   (   51.04 ms per token,    19.59 tokens per second)
0.02.070.112 I llama_perf_context_print:       total time =    1651.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.092s
user	8m14.897s
sys	0m7.150s
