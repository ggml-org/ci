+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.537 I build: 4145 (9abe9eea) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.000.750 I main: load the model and apply lora adapter, if any
0.00.021.000 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.010 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.017 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.023 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.024 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.027 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.028 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.029 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.029 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.030 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.030 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.034 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.035 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.035 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.036 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.037 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.467 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.578 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.487 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.494 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.495 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.495 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.496 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.497 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.498 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.500 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.501 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.502 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.502 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.503 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.507 I llama_model_loader: - type  f32:   37 tensors
0.00.130.508 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.196 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.484 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.179 I llm_load_vocab: special tokens cache size = 5
0.00.269.122 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.138 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.139 I llm_load_print_meta: arch             = gemma
0.00.269.139 I llm_load_print_meta: vocab type       = SPM
0.00.269.140 I llm_load_print_meta: n_vocab          = 256000
0.00.269.141 I llm_load_print_meta: n_merges         = 0
0.00.269.141 I llm_load_print_meta: vocab_only       = 0
0.00.269.141 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.142 I llm_load_print_meta: n_embd           = 2048
0.00.269.142 I llm_load_print_meta: n_layer          = 18
0.00.269.154 I llm_load_print_meta: n_head           = 8
0.00.269.155 I llm_load_print_meta: n_head_kv        = 1
0.00.269.156 I llm_load_print_meta: n_rot            = 256
0.00.269.156 I llm_load_print_meta: n_swa            = 0
0.00.269.156 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.156 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.157 I llm_load_print_meta: n_gqa            = 8
0.00.269.158 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.159 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.160 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.161 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.162 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.162 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.162 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.163 I llm_load_print_meta: n_ff             = 16384
0.00.269.163 I llm_load_print_meta: n_expert         = 0
0.00.269.164 I llm_load_print_meta: n_expert_used    = 0
0.00.269.164 I llm_load_print_meta: causal attn      = 1
0.00.269.164 I llm_load_print_meta: pooling type     = 0
0.00.269.165 I llm_load_print_meta: rope type        = 2
0.00.269.165 I llm_load_print_meta: rope scaling     = linear
0.00.269.166 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.167 I llm_load_print_meta: freq_scale_train = 1
0.00.269.167 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.167 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.167 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.168 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.168 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.168 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.168 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.169 I llm_load_print_meta: model type       = 2B
0.00.269.170 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.170 I llm_load_print_meta: model params     = 2.51 B
0.00.269.171 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.171 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.172 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.173 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.173 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.173 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.173 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.174 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.174 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.174 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.175 I llm_load_print_meta: max token length = 93
0.00.369.098 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.369.106 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.369.107 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.369.108 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.369.108 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.369.109 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.374.309 I llama_new_context_with_model: n_seq_max     = 1
0.00.374.316 I llama_new_context_with_model: n_ctx         = 4096
0.00.374.316 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.374.317 I llama_new_context_with_model: n_batch       = 2048
0.00.374.317 I llama_new_context_with_model: n_ubatch      = 512
0.00.374.318 I llama_new_context_with_model: flash_attn    = 0
0.00.374.321 I llama_new_context_with_model: freq_base     = 10000.0
0.00.374.322 I llama_new_context_with_model: freq_scale    = 1
0.00.374.323 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.389.681 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.389.695 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.389.799 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.391.118 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.391.123 I llama_new_context_with_model: graph nodes  = 601
0.00.391.123 I llama_new_context_with_model: graph splits = 1
0.00.391.125 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.523 I main: llama threadpool init, n_threads = 4
0.00.478.538 I 
0.00.478.613 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.478.616 I 
0.00.478.658 I sampler seed: 3616580147
0.00.478.670 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.673 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.478.673 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.673 I 
 increably.

I am unable to generate the requested text because it violates our content policy against sexually suggestive or sexually explicit content. [end of text]


0.02.409.884 I llama_perf_sampler_print:    sampling time =       3.99 ms /    28 runs   (    0.14 ms per token,  7017.54 tokens per second)
0.02.409.887 I llama_perf_context_print:        load time =     477.75 ms
0.02.409.888 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.409.889 I llama_perf_context_print:        eval time =    1915.16 ms /    27 runs   (   70.93 ms per token,    14.10 tokens per second)
0.02.409.890 I llama_perf_context_print:       total time =    1931.37 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.570 I build: 4145 (9abe9eea) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.776 I main: llama backend init
0.00.000.783 I main: load the model and apply lora adapter, if any
0.00.021.063 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.081 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.093 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.094 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.099 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.100 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.101 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.102 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.103 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.104 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.109 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.110 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.110 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.111 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.111 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.388 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.333 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.293 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.300 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.301 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.302 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.302 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.303 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.303 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.306 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.306 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.307 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.308 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.309 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.312 I llama_model_loader: - type  f32:   37 tensors
0.00.130.313 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.350 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.251 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.898 I llm_load_vocab: special tokens cache size = 5
0.00.273.021 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.040 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.041 I llm_load_print_meta: arch             = gemma
0.00.273.041 I llm_load_print_meta: vocab type       = SPM
0.00.273.042 I llm_load_print_meta: n_vocab          = 256000
0.00.273.043 I llm_load_print_meta: n_merges         = 0
0.00.273.043 I llm_load_print_meta: vocab_only       = 0
0.00.273.043 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.043 I llm_load_print_meta: n_embd           = 2048
0.00.273.044 I llm_load_print_meta: n_layer          = 18
0.00.273.057 I llm_load_print_meta: n_head           = 8
0.00.273.058 I llm_load_print_meta: n_head_kv        = 1
0.00.273.059 I llm_load_print_meta: n_rot            = 256
0.00.273.059 I llm_load_print_meta: n_swa            = 0
0.00.273.060 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.060 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.061 I llm_load_print_meta: n_gqa            = 8
0.00.273.062 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.063 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.063 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.066 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.066 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.066 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.067 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.067 I llm_load_print_meta: n_ff             = 16384
0.00.273.068 I llm_load_print_meta: n_expert         = 0
0.00.273.069 I llm_load_print_meta: n_expert_used    = 0
0.00.273.069 I llm_load_print_meta: causal attn      = 1
0.00.273.070 I llm_load_print_meta: pooling type     = 0
0.00.273.070 I llm_load_print_meta: rope type        = 2
0.00.273.070 I llm_load_print_meta: rope scaling     = linear
0.00.273.071 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.072 I llm_load_print_meta: freq_scale_train = 1
0.00.273.072 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.073 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.073 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.073 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.074 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.074 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.074 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.075 I llm_load_print_meta: model type       = 2B
0.00.273.075 I llm_load_print_meta: model ftype      = Q8_0
0.00.273.076 I llm_load_print_meta: model params     = 2.51 B
0.00.273.077 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.273.077 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.078 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.078 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.078 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.079 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.079 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.079 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.079 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.080 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.081 I llm_load_print_meta: max token length = 93
0.00.366.233 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.371.299 I llama_new_context_with_model: n_seq_max     = 1
0.00.371.305 I llama_new_context_with_model: n_ctx         = 4096
0.00.371.305 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.371.306 I llama_new_context_with_model: n_batch       = 2048
0.00.371.306 I llama_new_context_with_model: n_ubatch      = 512
0.00.371.307 I llama_new_context_with_model: flash_attn    = 0
0.00.371.309 I llama_new_context_with_model: freq_base     = 10000.0
0.00.371.310 I llama_new_context_with_model: freq_scale    = 1
0.00.371.311 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.386.062 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.386.076 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.386.169 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.407 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.387.412 I llama_new_context_with_model: graph nodes  = 601
0.00.387.412 I llama_new_context_with_model: graph splits = 1
0.00.387.415 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.410 I main: llama threadpool init, n_threads = 4
0.00.468.424 I 
0.00.468.501 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.468.504 I 
0.00.468.550 I sampler seed: 1968201586
0.00.468.561 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.565 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.566 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.568 I 
 increasities!

I apologize, but I am unable to provide sexually suggestive or inappropriate responses. My purpose is to assist with tasks and questions that comply with ethical

0.02.688.425 I llama_perf_sampler_print:    sampling time =       4.94 ms /    33 runs   (    0.15 ms per token,  6676.11 tokens per second)
0.02.688.428 I llama_perf_context_print:        load time =     467.61 ms
0.02.688.429 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.688.433 I llama_perf_context_print:        eval time =    2200.65 ms /    32 runs   (   68.77 ms per token,    14.54 tokens per second)
0.02.688.434 I llama_perf_context_print:       total time =    2220.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.551 I build: 4145 (9abe9eea) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.000.757 I main: load the model and apply lora adapter, if any
0.00.021.423 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.435 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.444 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.450 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.451 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.456 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.457 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.457 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.458 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.459 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.459 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.464 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.465 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.465 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.466 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.467 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.504 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.860 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.784 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.791 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.792 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.792 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.793 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.794 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.794 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.797 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.798 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.799 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.799 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.130.800 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.804 I llama_model_loader: - type  f32:   37 tensors
0.00.130.806 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.167 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.276.412 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.277.119 I llm_load_vocab: special tokens cache size = 5
0.00.298.342 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.298.363 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.298.364 I llm_load_print_meta: arch             = gemma
0.00.298.364 I llm_load_print_meta: vocab type       = SPM
0.00.298.365 I llm_load_print_meta: n_vocab          = 256000
0.00.298.366 I llm_load_print_meta: n_merges         = 0
0.00.298.366 I llm_load_print_meta: vocab_only       = 0
0.00.298.366 I llm_load_print_meta: n_ctx_train      = 8192
0.00.298.367 I llm_load_print_meta: n_embd           = 2048
0.00.298.367 I llm_load_print_meta: n_layer          = 18
0.00.298.378 I llm_load_print_meta: n_head           = 8
0.00.298.379 I llm_load_print_meta: n_head_kv        = 1
0.00.298.379 I llm_load_print_meta: n_rot            = 256
0.00.298.380 I llm_load_print_meta: n_swa            = 0
0.00.298.380 I llm_load_print_meta: n_embd_head_k    = 256
0.00.298.380 I llm_load_print_meta: n_embd_head_v    = 256
0.00.298.381 I llm_load_print_meta: n_gqa            = 8
0.00.298.382 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.298.383 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.298.384 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.298.386 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.298.387 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.298.387 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.298.387 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.298.388 I llm_load_print_meta: n_ff             = 16384
0.00.298.389 I llm_load_print_meta: n_expert         = 0
0.00.298.389 I llm_load_print_meta: n_expert_used    = 0
0.00.298.389 I llm_load_print_meta: causal attn      = 1
0.00.298.390 I llm_load_print_meta: pooling type     = 0
0.00.298.390 I llm_load_print_meta: rope type        = 2
0.00.298.390 I llm_load_print_meta: rope scaling     = linear
0.00.298.392 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.298.392 I llm_load_print_meta: freq_scale_train = 1
0.00.298.392 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.298.393 I llm_load_print_meta: rope_finetuned   = unknown
0.00.298.393 I llm_load_print_meta: ssm_d_conv       = 0
0.00.298.393 I llm_load_print_meta: ssm_d_inner      = 0
0.00.298.393 I llm_load_print_meta: ssm_d_state      = 0
0.00.298.394 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.298.394 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.298.394 I llm_load_print_meta: model type       = 2B
0.00.298.395 I llm_load_print_meta: model ftype      = Q8_0
0.00.298.396 I llm_load_print_meta: model params     = 2.51 B
0.00.298.397 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.298.397 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.298.397 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.298.398 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.298.398 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.298.398 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.298.398 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.298.399 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.298.399 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.298.400 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.298.400 I llm_load_print_meta: max token length = 93
0.00.371.089 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.371.093 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.371.095 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.371.095 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.371.096 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.371.097 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.376.346 I llama_new_context_with_model: n_seq_max     = 1
0.00.376.354 I llama_new_context_with_model: n_ctx         = 4096
0.00.376.355 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.376.355 I llama_new_context_with_model: n_batch       = 2048
0.00.376.355 I llama_new_context_with_model: n_ubatch      = 512
0.00.376.356 I llama_new_context_with_model: flash_attn    = 0
0.00.376.358 I llama_new_context_with_model: freq_base     = 10000.0
0.00.376.359 I llama_new_context_with_model: freq_scale    = 1
0.00.376.360 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.392.280 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.392.295 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.392.400 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.393.652 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.393.659 I llama_new_context_with_model: graph nodes  = 601
0.00.393.659 I llama_new_context_with_model: graph splits = 1
0.00.393.661 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.482.141 I main: llama threadpool init, n_threads = 4
0.00.482.157 I 
0.00.482.238 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.482.241 I 
0.00.482.284 I sampler seed: 3155571565
0.00.482.295 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.482.303 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.482.306 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.482.306 I 
 increasities and engage in acts of sexual arousal. [end of text]


0.01.294.982 I llama_perf_sampler_print:    sampling time =       1.78 ms /    12 runs   (    0.15 ms per token,  6737.79 tokens per second)
0.01.294.984 I llama_perf_context_print:        load time =     481.36 ms
0.01.294.986 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.294.987 I llama_perf_context_print:        eval time =     805.45 ms /    11 runs   (   73.22 ms per token,    13.66 tokens per second)
0.01.294.988 I llama_perf_context_print:       total time =     812.85 ms /    12 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.576 I build: 4145 (9abe9eea) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.826 I main: llama backend init
0.00.000.833 I main: load the model and apply lora adapter, if any
0.00.021.620 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.630 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.639 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.644 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.645 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.650 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.650 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.651 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.653 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.654 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.654 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.660 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.660 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.662 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.662 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.663 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.081 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.192 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.248 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.255 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.255 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.256 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.257 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.258 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.258 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.261 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.262 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.263 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.263 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.264 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.268 I llama_model_loader: - type  f32:   37 tensors
0.00.132.269 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.886 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.275.206 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.275.799 I llm_load_vocab: special tokens cache size = 5
0.00.296.819 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.296.836 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.296.837 I llm_load_print_meta: arch             = gemma
0.00.296.837 I llm_load_print_meta: vocab type       = SPM
0.00.296.838 I llm_load_print_meta: n_vocab          = 256000
0.00.296.839 I llm_load_print_meta: n_merges         = 0
0.00.296.839 I llm_load_print_meta: vocab_only       = 0
0.00.296.839 I llm_load_print_meta: n_ctx_train      = 8192
0.00.296.840 I llm_load_print_meta: n_embd           = 2048
0.00.296.840 I llm_load_print_meta: n_layer          = 18
0.00.296.853 I llm_load_print_meta: n_head           = 8
0.00.296.854 I llm_load_print_meta: n_head_kv        = 1
0.00.296.854 I llm_load_print_meta: n_rot            = 256
0.00.296.854 I llm_load_print_meta: n_swa            = 0
0.00.296.854 I llm_load_print_meta: n_embd_head_k    = 256
0.00.296.855 I llm_load_print_meta: n_embd_head_v    = 256
0.00.296.856 I llm_load_print_meta: n_gqa            = 8
0.00.296.857 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.296.857 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.296.858 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.296.859 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.296.860 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.296.860 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.296.860 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.296.861 I llm_load_print_meta: n_ff             = 16384
0.00.296.862 I llm_load_print_meta: n_expert         = 0
0.00.296.862 I llm_load_print_meta: n_expert_used    = 0
0.00.296.862 I llm_load_print_meta: causal attn      = 1
0.00.296.863 I llm_load_print_meta: pooling type     = 0
0.00.296.863 I llm_load_print_meta: rope type        = 2
0.00.296.863 I llm_load_print_meta: rope scaling     = linear
0.00.296.865 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.296.865 I llm_load_print_meta: freq_scale_train = 1
0.00.296.866 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.296.866 I llm_load_print_meta: rope_finetuned   = unknown
0.00.296.866 I llm_load_print_meta: ssm_d_conv       = 0
0.00.296.866 I llm_load_print_meta: ssm_d_inner      = 0
0.00.296.867 I llm_load_print_meta: ssm_d_state      = 0
0.00.296.867 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.296.867 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.296.868 I llm_load_print_meta: model type       = 2B
0.00.296.868 I llm_load_print_meta: model ftype      = Q8_0
0.00.296.869 I llm_load_print_meta: model params     = 2.51 B
0.00.296.870 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.296.870 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.296.870 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.296.871 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.296.871 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.296.871 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.296.871 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.296.872 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.296.872 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.296.873 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.296.873 I llm_load_print_meta: max token length = 93
0.00.367.928 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.367.937 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.373.236 I llama_new_context_with_model: n_seq_max     = 1
0.00.373.242 I llama_new_context_with_model: n_ctx         = 4096
0.00.373.242 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.373.243 I llama_new_context_with_model: n_batch       = 2048
0.00.373.243 I llama_new_context_with_model: n_ubatch      = 512
0.00.373.243 I llama_new_context_with_model: flash_attn    = 0
0.00.373.246 I llama_new_context_with_model: freq_base     = 10000.0
0.00.373.247 I llama_new_context_with_model: freq_scale    = 1
0.00.373.248 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.389.314 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.389.329 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.389.427 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.685 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.691 I llama_new_context_with_model: graph nodes  = 601
0.00.390.691 I llama_new_context_with_model: graph splits = 1
0.00.390.693 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.480.811 I main: llama threadpool init, n_threads = 4
0.00.480.829 I 
0.00.480.928 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.480.932 I 
0.00.480.990 I sampler seed: 721871058
0.00.481.004 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.481.008 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.481.012 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.481.013 I 
 increasities.

I am unable to generate responses that contain sexually suggestive or inappropriate content. [end of text]


0.01.954.056 I llama_perf_sampler_print:    sampling time =       3.02 ms /    20 runs   (    0.15 ms per token,  6611.57 tokens per second)
0.01.954.058 I llama_perf_context_print:        load time =     479.95 ms
0.01.954.059 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.954.060 I llama_perf_context_print:        eval time =    1461.07 ms /    19 runs   (   76.90 ms per token,    13.00 tokens per second)
0.01.954.061 I llama_perf_context_print:       total time =    1473.25 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.260s
user	0m28.704s
sys	0m9.551s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4145 (9abe9eea)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40229.02 ms
main:    total time = 40229.02 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.544 I build: 4145 (9abe9eea) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.000.744 I main: load the model and apply lora adapter, if any
0.00.021.545 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.556 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.565 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.573 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.577 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.581 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.582 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.583 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.583 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.584 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.584 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.589 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.589 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.590 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.591 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.591 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.730 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.939 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.860 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.867 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.867 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.868 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.869 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.870 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.870 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.873 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.874 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.874 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.875 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.876 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.880 I llama_model_loader: - type  f32:   37 tensors
0.00.130.881 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.881 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.098 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.258 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.875 I llm_load_vocab: special tokens cache size = 5
0.00.270.774 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.792 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.792 I llm_load_print_meta: arch             = gemma
0.00.270.793 I llm_load_print_meta: vocab type       = SPM
0.00.270.793 I llm_load_print_meta: n_vocab          = 256000
0.00.270.794 I llm_load_print_meta: n_merges         = 0
0.00.270.794 I llm_load_print_meta: vocab_only       = 0
0.00.270.795 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.795 I llm_load_print_meta: n_embd           = 2048
0.00.270.795 I llm_load_print_meta: n_layer          = 18
0.00.270.806 I llm_load_print_meta: n_head           = 8
0.00.270.808 I llm_load_print_meta: n_head_kv        = 1
0.00.270.808 I llm_load_print_meta: n_rot            = 256
0.00.270.808 I llm_load_print_meta: n_swa            = 0
0.00.270.809 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.809 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.810 I llm_load_print_meta: n_gqa            = 8
0.00.270.811 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.812 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.813 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.814 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.814 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.815 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.815 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.816 I llm_load_print_meta: n_ff             = 16384
0.00.270.816 I llm_load_print_meta: n_expert         = 0
0.00.270.817 I llm_load_print_meta: n_expert_used    = 0
0.00.270.817 I llm_load_print_meta: causal attn      = 1
0.00.270.817 I llm_load_print_meta: pooling type     = 0
0.00.270.817 I llm_load_print_meta: rope type        = 2
0.00.270.818 I llm_load_print_meta: rope scaling     = linear
0.00.270.819 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.820 I llm_load_print_meta: freq_scale_train = 1
0.00.270.820 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.820 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.821 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.821 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.821 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.821 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.822 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.822 I llm_load_print_meta: model type       = 2B
0.00.270.823 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.270.824 I llm_load_print_meta: model params     = 2.51 B
0.00.270.824 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.270.825 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.825 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.825 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.825 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.826 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.826 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.826 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.827 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.828 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.828 I llm_load_print_meta: max token length = 93
0.00.330.119 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.330.128 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.330.129 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.330.130 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.330.130 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.330.131 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.335.494 I llama_new_context_with_model: n_seq_max     = 1
0.00.335.501 I llama_new_context_with_model: n_ctx         = 4096
0.00.335.501 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.335.502 I llama_new_context_with_model: n_batch       = 2048
0.00.335.502 I llama_new_context_with_model: n_ubatch      = 512
0.00.335.503 I llama_new_context_with_model: flash_attn    = 0
0.00.335.506 I llama_new_context_with_model: freq_base     = 10000.0
0.00.335.507 I llama_new_context_with_model: freq_scale    = 1
0.00.335.508 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.350.809 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.350.826 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.350.923 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.262 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.352.269 I llama_new_context_with_model: graph nodes  = 601
0.00.352.270 I llama_new_context_with_model: graph splits = 1
0.00.352.272 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.302 I main: llama threadpool init, n_threads = 4
0.00.431.317 I 
0.00.431.394 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.397 I 
0.00.431.437 I sampler seed: 2388829260
0.00.431.448 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.452 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.431.452 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.453 I 
 squaRED text. The provided text is obscured due to safety concerns. [end of text]


0.01.202.364 I llama_perf_sampler_print:    sampling time =       2.35 ms /    16 runs   (    0.15 ms per token,  6805.61 tokens per second)
0.01.202.367 I llama_perf_context_print:        load time =     430.54 ms
0.01.202.369 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.202.372 I llama_perf_context_print:        eval time =     761.15 ms /    15 runs   (   50.74 ms per token,    19.71 tokens per second)
0.01.202.373 I llama_perf_context_print:       total time =     771.07 ms /    16 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4145 (9abe9eea)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40233.47 ms
main:    total time = 40233.47 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.544 I build: 4145 (9abe9eea) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.000.742 I main: load the model and apply lora adapter, if any
0.00.021.264 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.279 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.286 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.287 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.291 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.292 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.293 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.294 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.294 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.294 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.299 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.299 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.300 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.301 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.302 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.536 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.854 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.842 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.850 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.851 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.852 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.852 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.853 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.854 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.856 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.857 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.861 I llama_model_loader: - type  f32:   37 tensors
0.00.130.861 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.862 I llama_model_loader: - type q6_K:   19 tensors
0.00.219.568 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.270.284 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.906 I llm_load_vocab: special tokens cache size = 5
0.00.291.998 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.292.016 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.292.016 I llm_load_print_meta: arch             = gemma
0.00.292.017 I llm_load_print_meta: vocab type       = SPM
0.00.292.018 I llm_load_print_meta: n_vocab          = 256000
0.00.292.018 I llm_load_print_meta: n_merges         = 0
0.00.292.019 I llm_load_print_meta: vocab_only       = 0
0.00.292.019 I llm_load_print_meta: n_ctx_train      = 8192
0.00.292.019 I llm_load_print_meta: n_embd           = 2048
0.00.292.020 I llm_load_print_meta: n_layer          = 18
0.00.292.031 I llm_load_print_meta: n_head           = 8
0.00.292.032 I llm_load_print_meta: n_head_kv        = 1
0.00.292.032 I llm_load_print_meta: n_rot            = 256
0.00.292.033 I llm_load_print_meta: n_swa            = 0
0.00.292.033 I llm_load_print_meta: n_embd_head_k    = 256
0.00.292.033 I llm_load_print_meta: n_embd_head_v    = 256
0.00.292.034 I llm_load_print_meta: n_gqa            = 8
0.00.292.035 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.292.036 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.292.038 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.292.038 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.292.039 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.292.039 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.292.039 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.292.040 I llm_load_print_meta: n_ff             = 16384
0.00.292.041 I llm_load_print_meta: n_expert         = 0
0.00.292.041 I llm_load_print_meta: n_expert_used    = 0
0.00.292.041 I llm_load_print_meta: causal attn      = 1
0.00.292.042 I llm_load_print_meta: pooling type     = 0
0.00.292.042 I llm_load_print_meta: rope type        = 2
0.00.292.042 I llm_load_print_meta: rope scaling     = linear
0.00.292.044 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.292.044 I llm_load_print_meta: freq_scale_train = 1
0.00.292.045 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.292.045 I llm_load_print_meta: rope_finetuned   = unknown
0.00.292.045 I llm_load_print_meta: ssm_d_conv       = 0
0.00.292.045 I llm_load_print_meta: ssm_d_inner      = 0
0.00.292.045 I llm_load_print_meta: ssm_d_state      = 0
0.00.292.046 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.292.046 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.292.047 I llm_load_print_meta: model type       = 2B
0.00.292.047 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.292.048 I llm_load_print_meta: model params     = 2.51 B
0.00.292.048 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.292.049 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.292.049 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.292.050 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.292.051 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.292.051 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.292.051 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.292.052 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.292.052 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.292.052 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.292.053 I llm_load_print_meta: max token length = 93
0.00.346.431 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.351.553 I llama_new_context_with_model: n_seq_max     = 1
0.00.351.560 I llama_new_context_with_model: n_ctx         = 4096
0.00.351.560 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.351.561 I llama_new_context_with_model: n_batch       = 2048
0.00.351.561 I llama_new_context_with_model: n_ubatch      = 512
0.00.351.562 I llama_new_context_with_model: flash_attn    = 0
0.00.351.565 I llama_new_context_with_model: freq_base     = 10000.0
0.00.351.565 I llama_new_context_with_model: freq_scale    = 1
0.00.351.566 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.367.146 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.367.161 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.367.258 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.549 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.368.556 I llama_new_context_with_model: graph nodes  = 601
0.00.368.556 I llama_new_context_with_model: graph splits = 1
0.00.368.558 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.649 I main: llama threadpool init, n_threads = 4
0.00.446.661 I 
0.00.446.733 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.737 I 
0.00.446.781 I sampler seed: 1498348359
0.00.446.793 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.795 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.446.796 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.797 I 
 strick by adding an appropriate preposition.

The company is _______ expanding its operations.
a) expanding
b) extend
c) extended
d) extension

0.02.088.817 I llama_perf_sampler_print:    sampling time =       5.08 ms /    33 runs   (    0.15 ms per token,  6497.34 tokens per second)
0.02.088.819 I llama_perf_context_print:        load time =     445.89 ms
0.02.088.821 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.088.823 I llama_perf_context_print:        eval time =    1622.08 ms /    32 runs   (   50.69 ms per token,    19.73 tokens per second)
0.02.088.824 I llama_perf_context_print:       total time =    1642.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.896s
user	10m21.205s
sys	0m7.034s
