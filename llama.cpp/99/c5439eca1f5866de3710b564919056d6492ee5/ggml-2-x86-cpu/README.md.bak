### ctest_debug

Runs ctest in debug mode
- status: 0
```
+ ctest --output-on-failure -L main -E test-opt
Test project /home/ggml/work/llama.cpp/build-ci-debug
      Start  1: test-tokenizer-0-bert-bge
 1/27 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.12 sec
      Start  2: test-tokenizer-0-command-r
 2/27 Test  #2: test-tokenizer-0-command-r ........   Passed    2.49 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/27 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.39 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/27 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    0.95 sec
      Start  5: test-tokenizer-0-falcon
 5/27 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.59 sec
      Start  6: test-tokenizer-0-gpt-2
 6/27 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.45 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/27 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    1.75 sec
      Start  8: test-tokenizer-0-llama-spm
 8/27 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.12 sec
      Start  9: test-tokenizer-0-mpt
 9/27 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.45 sec
      Start 10: test-tokenizer-0-phi-3
10/27 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.12 sec
      Start 11: test-tokenizer-0-qwen2
11/27 Test #11: test-tokenizer-0-qwen2 ............   Passed    1.71 sec
      Start 12: test-tokenizer-0-refact
12/27 Test #12: test-tokenizer-0-refact ...........   Passed    0.45 sec
      Start 13: test-tokenizer-0-starcoder
13/27 Test #13: test-tokenizer-0-starcoder ........   Passed    0.46 sec
      Start 14: test-tokenizer-1-llama-spm
14/27 Test #14: test-tokenizer-1-llama-spm ........   Passed    1.72 sec
      Start 15: test-log
15/27 Test #15: test-log ..........................   Passed    0.02 sec
      Start 16: test-arg-parser
16/27 Test #16: test-arg-parser ...................   Passed    0.04 sec
      Start 17: test-sampling
17/27 Test #17: test-sampling .....................   Passed    6.38 sec
      Start 18: test-chat-template
18/27 Test #18: test-chat-template ................   Passed    0.00 sec
      Start 19: test-grammar-parser
19/27 Test #19: test-grammar-parser ...............   Passed    0.00 sec
      Start 20: test-grammar-integration
20/27 Test #20: test-grammar-integration ..........   Passed    0.03 sec
      Start 21: test-llama-grammar
21/27 Test #21: test-llama-grammar ................   Passed    0.00 sec
      Start 22: test-backend-ops
22/27 Test #22: test-backend-ops ..................   Passed    0.01 sec
      Start 25: test-barrier
23/27 Test #25: test-barrier ......................   Passed    1.32 sec
      Start 26: test-quantize-fns
24/27 Test #26: test-quantize-fns .................   Passed   30.87 sec
      Start 27: test-quantize-perf
25/27 Test #27: test-quantize-perf ................   Passed    0.62 sec
      Start 28: test-rope
26/27 Test #28: test-rope .........................   Passed    0.06 sec
      Start 29: test-json-schema-to-grammar
27/27 Test #29: test-json-schema-to-grammar .......   Passed    1.94 sec

100% tests passed, 0 tests failed out of 27

Label Time Summary:
main    =  53.04 sec*proc (27 tests)

Total Test time (real) =  53.05 sec

real	0m53.116s
user	1m8.309s
sys	0m0.655s
```

### ctest_release

Runs ctest in release mode
- status: 0
```
+ ctest --output-on-failure -L main
Test project /home/ggml/work/llama.cpp/build-ci-release
      Start  1: test-tokenizer-0-bert-bge
 1/27 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.03 sec
      Start  2: test-tokenizer-0-command-r
 2/27 Test  #2: test-tokenizer-0-command-r ........   Passed    0.61 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/27 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.07 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/27 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    0.21 sec
      Start  5: test-tokenizer-0-falcon
 5/27 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.12 sec
      Start  6: test-tokenizer-0-gpt-2
 6/27 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.09 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/27 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    0.41 sec
      Start  8: test-tokenizer-0-llama-spm
 8/27 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.04 sec
      Start  9: test-tokenizer-0-mpt
 9/27 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.09 sec
      Start 10: test-tokenizer-0-phi-3
10/27 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.04 sec
      Start 11: test-tokenizer-0-qwen2
11/27 Test #11: test-tokenizer-0-qwen2 ............   Passed    0.32 sec
      Start 12: test-tokenizer-0-refact
12/27 Test #12: test-tokenizer-0-refact ...........   Passed    0.09 sec
      Start 13: test-tokenizer-0-starcoder
13/27 Test #13: test-tokenizer-0-starcoder ........   Passed    0.09 sec
      Start 14: test-tokenizer-1-llama-spm
14/27 Test #14: test-tokenizer-1-llama-spm ........   Passed    0.24 sec
      Start 15: test-log
15/27 Test #15: test-log ..........................   Passed    0.02 sec
      Start 16: test-arg-parser
16/27 Test #16: test-arg-parser ...................   Passed    0.02 sec
      Start 17: test-sampling
17/27 Test #17: test-sampling .....................   Passed    1.28 sec
      Start 18: test-chat-template
18/27 Test #18: test-chat-template ................   Passed    0.00 sec
      Start 19: test-grammar-parser
19/27 Test #19: test-grammar-parser ...............   Passed    0.00 sec
      Start 20: test-grammar-integration
20/27 Test #20: test-grammar-integration ..........   Passed    0.01 sec
      Start 21: test-llama-grammar
21/27 Test #21: test-llama-grammar ................   Passed    0.00 sec
      Start 22: test-backend-ops
22/27 Test #22: test-backend-ops ..................   Passed    0.00 sec
      Start 25: test-barrier
23/27 Test #25: test-barrier ......................   Passed    0.31 sec
      Start 26: test-quantize-fns
24/27 Test #26: test-quantize-fns .................   Passed   16.61 sec
      Start 27: test-quantize-perf
25/27 Test #27: test-quantize-perf ................   Passed    0.08 sec
      Start 28: test-rope
26/27 Test #28: test-rope .........................   Passed    0.04 sec
      Start 29: test-json-schema-to-grammar
27/27 Test #29: test-json-schema-to-grammar .......   Passed    1.88 sec

100% tests passed, 0 tests failed out of 27

Label Time Summary:
main    =  22.69 sec*proc (27 tests)

Total Test time (real) =  22.70 sec

real	0m22.770s
user	0m24.350s
sys	0m0.684s
```
### embd_bge_small

BGE Small (BERT):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-f16.gguf -p 'I believe the meaning of life is' -ngl 99 -c 0
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.588 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.003.830 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.003.842 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.003.848 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.003.849 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.003.850 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.003.850 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.003.851 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.003.854 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.003.854 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.003.855 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.003.856 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.003.856 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.003.859 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.003.860 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.003.860 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.003.861 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.003.861 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.003.862 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.003.862 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.007.260 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.008.040 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.008.044 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.008.044 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.008.045 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.008.045 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.008.046 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.008.046 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.008.047 I llama_model_loader: - type  f32:  124 tensors
0.00.008.048 I llama_model_loader: - type  f16:   73 tensors
0.00.019.346 I llm_load_vocab: special tokens cache size = 5
0.00.022.082 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.022.098 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.022.099 I llm_load_print_meta: arch             = bert
0.00.022.099 I llm_load_print_meta: vocab type       = WPM
0.00.022.100 I llm_load_print_meta: n_vocab          = 30522
0.00.022.100 I llm_load_print_meta: n_merges         = 0
0.00.022.100 I llm_load_print_meta: vocab_only       = 0
0.00.022.101 I llm_load_print_meta: n_ctx_train      = 512
0.00.022.101 I llm_load_print_meta: n_embd           = 384
0.00.022.101 I llm_load_print_meta: n_layer          = 12
0.00.022.109 I llm_load_print_meta: n_head           = 12
0.00.022.110 I llm_load_print_meta: n_head_kv        = 12
0.00.022.110 I llm_load_print_meta: n_rot            = 32
0.00.022.111 I llm_load_print_meta: n_swa            = 0
0.00.022.112 I llm_load_print_meta: n_embd_head_k    = 32
0.00.022.112 I llm_load_print_meta: n_embd_head_v    = 32
0.00.022.113 I llm_load_print_meta: n_gqa            = 1
0.00.022.115 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.022.116 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.022.117 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.022.117 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.022.118 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.022.118 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.022.119 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.022.120 I llm_load_print_meta: n_ff             = 1536
0.00.022.121 I llm_load_print_meta: n_expert         = 0
0.00.022.121 I llm_load_print_meta: n_expert_used    = 0
0.00.022.122 I llm_load_print_meta: causal attn      = 0
0.00.022.122 I llm_load_print_meta: pooling type     = 2
0.00.022.123 I llm_load_print_meta: rope type        = 2
0.00.022.123 I llm_load_print_meta: rope scaling     = linear
0.00.022.124 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.022.125 I llm_load_print_meta: freq_scale_train = 1
0.00.022.125 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.022.126 I llm_load_print_meta: rope_finetuned   = unknown
0.00.022.126 I llm_load_print_meta: ssm_d_conv       = 0
0.00.022.127 I llm_load_print_meta: ssm_d_inner      = 0
0.00.022.127 I llm_load_print_meta: ssm_d_state      = 0
0.00.022.128 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.022.128 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.022.130 I llm_load_print_meta: model type       = 33M
0.00.022.131 I llm_load_print_meta: model ftype      = F16
0.00.022.131 I llm_load_print_meta: model params     = 33.21 M
0.00.022.132 I llm_load_print_meta: model size       = 63.84 MiB (16.12 BPW) 
0.00.022.133 I llm_load_print_meta: general.name     = Bge Small
0.00.022.133 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.022.134 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.022.134 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.022.135 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.022.135 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.022.135 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.022.136 I llm_load_print_meta: max token length = 21
0.00.026.729 I llm_load_tensors:   CPU_Mapped model buffer size =    63.84 MiB
...............................................
0.00.027.768 I llama_new_context_with_model: n_seq_max     = 1
0.00.027.772 I llama_new_context_with_model: n_ctx         = 512
0.00.027.773 I llama_new_context_with_model: n_ctx_per_seq = 512
0.00.027.773 I llama_new_context_with_model: n_batch       = 2048
0.00.027.774 I llama_new_context_with_model: n_ubatch      = 2048
0.00.027.774 I llama_new_context_with_model: flash_attn    = 0
0.00.027.776 I llama_new_context_with_model: freq_base     = 10000.0
0.00.027.776 I llama_new_context_with_model: freq_scale    = 1
0.00.030.108 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.030.115 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.030.121 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.031.579 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.031.585 I llama_new_context_with_model: graph nodes  = 429
0.00.031.585 I llama_new_context_with_model: graph splits = 1
0.00.031.587 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.035.489 I 
0.00.035.568 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.037.308 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.043981 -0.019912  0.007653 -0.000817  0.001368 -0.037036  0.109434  0.042551  0.092053 -0.015928  0.006786 -0.035685 -0.017891  0.015067  0.018122  0.015897 -0.011289  0.010462 -0.085223 -0.008462  0.091371 -0.017062 -0.060338 -0.024475  0.027552  0.076068  0.027959 -0.014586  0.017650 -0.033272 -0.037874 -0.018970  0.068696 -0.009850 -0.025049  0.072347 -0.046561  0.011048 -0.050250  0.047711  0.032363 -0.011729  0.022058  0.049651  0.010451  0.005790 -0.028889  0.008910 -0.018504 -0.051470 -0.046051  0.030501 -0.035401  0.054201 -0.069637  0.044231  0.029804  0.046312  0.073396 -0.042574  0.076081  0.038866 -0.181164  0.082478  0.042289 -0.064568 -0.060101 -0.017852  0.006443  0.005881  0.017190 -0.026621  0.064579  0.112592  0.035119 -0.067439  0.027085 -0.067310 -0.033500 -0.033203  0.033284  0.013506 -0.003304 -0.037496 -0.052081  0.055139 -0.002003 -0.038281  0.064455  0.028829 -0.043329 -0.029286 -0.039474  0.036341  0.008404 -0.015484 -0.036588  0.018115  0.028594  0.342771 -0.044499  0.056128  0.017652 -0.020864 -0.066821  0.000156 -0.037885 -0.030052 -0.008532 -0.021580  0.000528 -0.003207  0.004002  0.018917 -0.008578  0.025847  0.049425  0.000093  0.050960 -0.042520 -0.031882  0.023591  0.030688 -0.023180 -0.046251 -0.079296  0.115182  0.046762  0.027825 -0.040706  0.067815 -0.022944  0.010327 -0.032950 -0.018314  0.043851  0.024273  0.052408  0.007479  0.008896  0.011261 -0.074641 -0.065550 -0.026755 -0.041183 -0.023861  0.026700  0.006908  0.027733  0.052891 -0.036685  0.057699 -0.000166  0.031751 -0.019797 -0.022062  0.041041 -0.058920  0.019588  0.043124  0.043576  0.041590 -0.022536  0.027068 -0.021847  0.005468 -0.041329 -0.001252  0.024406  0.002114  0.044361 -0.022769  0.043658  0.064761  0.055420  0.037071 -0.000892  0.046132  0.045799 -0.008473  0.063054 -0.073263 -0.011963  0.032102  0.023951  0.014715 -0.033687  0.001103 -0.015832 -0.019009  0.047889  0.110844  0.028409  0.031342 -0.013292 -0.057500  0.006651  0.005130 -0.012266 -0.051441 -0.000961 -0.017656 -0.019406 -0.040925  0.009218 -0.057942  0.050951  0.052334 -0.009604 -0.040249 -0.014093 -0.024869 -0.017245  0.006308  0.006589 -0.026888  0.015623  0.030737  0.002593  0.023236 -0.022227 -0.098571 -0.051117 -0.278013 -0.014983 -0.061554 -0.027217  0.017664 -0.010937 -0.017106  0.035068  0.047014 -0.015436  0.015181 -0.025469  0.047838 -0.005962 -0.000707 -0.061015 -0.068932 -0.060372 -0.035959  0.043333 -0.055008  0.015049  0.000546 -0.058232 -0.010431  0.012631  0.151511  0.127122 -0.013588  0.042000 -0.025680  0.014036 -0.001037 -0.150464  0.044853  0.005319 -0.036292 -0.029771 -0.020195 -0.034879  0.010257  0.033528 -0.048161 -0.051813 -0.017459 -0.023496  0.047369  0.052034 -0.016808 -0.055448  0.025848 -0.005719  0.010710  0.038711  0.008214 -0.009744 -0.105767 -0.027430 -0.096152  0.025073 -0.011257  0.092356  0.056104  0.003724  0.027786  0.002081 -0.051055 -0.039905 -0.013559 -0.044960 -0.015337  0.002931 -0.043514 -0.077954  0.065211 -0.006809 -0.001642 -0.014600  0.071543  0.023728 -0.037174  0.009152  0.001557 -0.032289  0.015478  0.037923  0.000353 -0.053199  0.021299 -0.039830  0.000027  0.013394  0.019804 -0.057902  0.006492 -0.049545 -0.267872  0.039153 -0.067966  0.038268 -0.012340  0.041505 -0.016141  0.052383 -0.071362  0.011378  0.024707 -0.007224  0.082095  0.028495 -0.021513  0.040507 -0.004541 -0.074590 -0.014750  0.020038  0.002290  0.023143  0.197207 -0.043248 -0.026016 -0.004951 -0.019268  0.074266  0.001757 -0.031968 -0.036601 -0.045052  0.000560 -0.011559  0.018118 -0.029477 -0.008451  0.006411  0.050800 -0.014935  0.006192  0.026092 -0.030786  0.048049  0.114067 -0.040810 -0.011428  0.005412 -0.003587  0.025157 -0.059144  0.013758 -0.010409  0.038707  0.051460  0.035409  0.035034 -0.017059  0.026389 -0.014506 -0.050054  0.003248  0.054119  0.039741 -0.039141 

0.00.045.161 I llama_perf_context_print:        load time =      34.87 ms
0.00.045.165 I llama_perf_context_print: prompt eval time =       7.48 ms /     9 tokens (    0.83 ms per token,  1203.53 tokens per second)
0.00.045.167 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.045.168 I llama_perf_context_print:       total time =       9.67 ms /    10 tokens

real	0m0.057s
user	0m0.096s
sys	0m0.012s
```
- q8_0:
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-q8_0.gguf -p 'I believe the meaning of life is' -ngl 99 -c 0
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.547 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.003.720 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.003.732 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.003.738 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.003.739 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.003.739 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.003.740 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.003.740 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.003.743 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.003.744 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.003.744 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.003.745 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.003.745 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.003.748 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.003.749 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.003.750 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.003.750 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.003.750 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.003.752 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.003.752 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.007.152 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.007.945 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.007.949 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.007.949 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.007.950 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.007.950 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.007.950 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.007.951 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.007.952 I llama_model_loader: - type  f32:  124 tensors
0.00.007.953 I llama_model_loader: - type q8_0:   73 tensors
0.00.019.244 I llm_load_vocab: special tokens cache size = 5
0.00.021.950 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.021.959 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.021.960 I llm_load_print_meta: arch             = bert
0.00.021.961 I llm_load_print_meta: vocab type       = WPM
0.00.021.961 I llm_load_print_meta: n_vocab          = 30522
0.00.021.961 I llm_load_print_meta: n_merges         = 0
0.00.021.962 I llm_load_print_meta: vocab_only       = 0
0.00.021.962 I llm_load_print_meta: n_ctx_train      = 512
0.00.021.962 I llm_load_print_meta: n_embd           = 384
0.00.021.962 I llm_load_print_meta: n_layer          = 12
0.00.021.968 I llm_load_print_meta: n_head           = 12
0.00.021.969 I llm_load_print_meta: n_head_kv        = 12
0.00.021.970 I llm_load_print_meta: n_rot            = 32
0.00.021.970 I llm_load_print_meta: n_swa            = 0
0.00.021.970 I llm_load_print_meta: n_embd_head_k    = 32
0.00.021.971 I llm_load_print_meta: n_embd_head_v    = 32
0.00.021.972 I llm_load_print_meta: n_gqa            = 1
0.00.021.974 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.021.976 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.021.977 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.021.977 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.021.978 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.021.978 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.021.978 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.021.979 I llm_load_print_meta: n_ff             = 1536
0.00.021.979 I llm_load_print_meta: n_expert         = 0
0.00.021.980 I llm_load_print_meta: n_expert_used    = 0
0.00.021.980 I llm_load_print_meta: causal attn      = 0
0.00.021.980 I llm_load_print_meta: pooling type     = 2
0.00.021.980 I llm_load_print_meta: rope type        = 2
0.00.021.981 I llm_load_print_meta: rope scaling     = linear
0.00.021.982 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.021.983 I llm_load_print_meta: freq_scale_train = 1
0.00.021.983 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.021.984 I llm_load_print_meta: rope_finetuned   = unknown
0.00.021.984 I llm_load_print_meta: ssm_d_conv       = 0
0.00.021.984 I llm_load_print_meta: ssm_d_inner      = 0
0.00.021.984 I llm_load_print_meta: ssm_d_state      = 0
0.00.021.985 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.021.986 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.021.986 I llm_load_print_meta: model type       = 33M
0.00.021.987 I llm_load_print_meta: model ftype      = Q8_0
0.00.021.988 I llm_load_print_meta: model params     = 33.21 M
0.00.021.989 I llm_load_print_meta: model size       = 34.38 MiB (8.68 BPW) 
0.00.021.989 I llm_load_print_meta: general.name     = Bge Small
0.00.021.989 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.021.990 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.021.990 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.021.991 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.021.991 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.021.991 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.021.991 I llm_load_print_meta: max token length = 21
0.00.025.284 I llm_load_tensors:   CPU_Mapped model buffer size =    34.38 MiB
.................................................
0.00.026.202 I llama_new_context_with_model: n_seq_max     = 1
0.00.026.207 I llama_new_context_with_model: n_ctx         = 512
0.00.026.207 I llama_new_context_with_model: n_ctx_per_seq = 512
0.00.026.207 I llama_new_context_with_model: n_batch       = 2048
0.00.026.207 I llama_new_context_with_model: n_ubatch      = 2048
0.00.026.208 I llama_new_context_with_model: flash_attn    = 0
0.00.026.209 I llama_new_context_with_model: freq_base     = 10000.0
0.00.026.210 I llama_new_context_with_model: freq_scale    = 1
0.00.028.084 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.028.093 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.028.098 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.029.937 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.029.942 I llama_new_context_with_model: graph nodes  = 429
0.00.029.943 I llama_new_context_with_model: graph splits = 1
0.00.029.945 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.032.481 I 
0.00.032.567 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.034.001 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.044922 -0.019413  0.009515 -0.002102  0.002819 -0.037346  0.108884  0.042320  0.092050 -0.015802  0.006203 -0.037483 -0.019315  0.014838  0.017312  0.014293 -0.014406  0.012199 -0.084337 -0.007969  0.092391 -0.017228 -0.062058 -0.024418  0.027417  0.077134  0.028219 -0.014623  0.017895 -0.035334 -0.038133 -0.018044  0.068934 -0.010808 -0.024000  0.071910 -0.045750  0.011734 -0.050866  0.050023  0.032255 -0.012384  0.022736  0.051037  0.009457  0.005324 -0.028037  0.007784 -0.019140 -0.054168 -0.047119  0.029088 -0.036035  0.053016 -0.067690  0.044014  0.029616  0.047229  0.073648 -0.043168  0.075918  0.037900 -0.183180  0.081508  0.042762 -0.066165 -0.059699 -0.017308  0.007110  0.005047  0.016962 -0.027730  0.064833  0.111964  0.034996 -0.068446  0.026829 -0.066310 -0.034038 -0.035547  0.032486  0.014914 -0.004339 -0.037040 -0.051606  0.053873 -0.002577 -0.037109  0.062467  0.029008 -0.041969 -0.029640 -0.039698  0.037257  0.007866 -0.014732 -0.036933  0.018711  0.029345  0.345662 -0.043828  0.055518  0.015965 -0.021585 -0.062967  0.000030 -0.037829 -0.031117 -0.008600 -0.019632  0.000917 -0.003949  0.004752  0.017646 -0.010475  0.024866  0.048859 -0.001073  0.050841 -0.042711 -0.029936  0.023056  0.031158 -0.023216 -0.044477 -0.079865  0.114434  0.046968  0.027606 -0.040895  0.067793 -0.022368  0.009769 -0.034681 -0.016154  0.044193  0.022540  0.051639  0.007797  0.007391  0.010083 -0.074316 -0.064372 -0.025101 -0.041340 -0.024550  0.027224  0.005440  0.026617  0.051940 -0.036700  0.058742  0.001461  0.032451 -0.020921 -0.021366  0.040976 -0.059863  0.019722  0.043085  0.042850  0.040582 -0.022107  0.029685 -0.022324  0.007497 -0.040081  0.000397  0.023739  0.002122  0.044315 -0.022987  0.043469  0.064731  0.056117  0.038352  0.000367  0.048953  0.045241 -0.009339  0.060821 -0.073344 -0.011166  0.032674  0.022647  0.014999 -0.033428  0.000347 -0.015448 -0.018743  0.048620  0.110470  0.029597  0.030962 -0.011328 -0.056829  0.006497  0.004694 -0.012985 -0.051779 -0.003150 -0.017702 -0.019727 -0.040388  0.009924 -0.059078  0.050095  0.052471 -0.010575 -0.039471 -0.015563 -0.023734 -0.016019  0.005706  0.007087 -0.027253  0.016754  0.030656  0.001635  0.023381 -0.021934 -0.097271 -0.050370 -0.277306 -0.014223 -0.061428 -0.027445  0.017050 -0.009608 -0.017319  0.033824  0.048471 -0.016368  0.016177 -0.022949  0.049435 -0.005335  0.000750 -0.060800 -0.068838 -0.059804 -0.036057  0.042588 -0.054961  0.014508 -0.000423 -0.059416 -0.009816  0.010768  0.150426  0.126644 -0.011118  0.042668 -0.025554  0.015019 -0.000210 -0.150502  0.042745  0.005784 -0.036606 -0.029014 -0.019236 -0.034275  0.009913  0.034990 -0.049935 -0.053754 -0.017105 -0.024232  0.048749  0.050670 -0.016684 -0.056609  0.023764 -0.005639  0.011582  0.038581  0.006578 -0.008041 -0.106921 -0.027615 -0.097465  0.025000 -0.011210  0.092479  0.055639  0.005293  0.026939  0.001806 -0.051768 -0.038913 -0.013483 -0.046246 -0.014757  0.001830 -0.044614 -0.077737  0.066446 -0.006428 -0.000018 -0.014871  0.071112  0.024387 -0.036434  0.008250  0.001929 -0.033247  0.017147  0.038480  0.001671 -0.051957  0.021081 -0.038685  0.000496  0.012745  0.021241 -0.057647  0.004903 -0.049491 -0.267161  0.038997 -0.067915  0.037074 -0.011075  0.043293 -0.015534  0.050443 -0.070772  0.012405  0.024955 -0.006946  0.082643  0.029026 -0.022356  0.042367 -0.003229 -0.074061 -0.015830  0.020035  0.002637  0.023772  0.196120 -0.044049 -0.024944 -0.004666 -0.017908  0.073222  0.001813 -0.031931 -0.035815 -0.044377 -0.000573 -0.011445  0.018698 -0.027002 -0.010099  0.005813  0.048950 -0.014805  0.006814  0.027005 -0.030880  0.048526  0.111968 -0.039582 -0.012955  0.004347 -0.002677  0.025424 -0.060709  0.014993 -0.008847  0.037792  0.050273  0.035482  0.036962 -0.017363  0.025554 -0.016189 -0.050841  0.003358  0.054623  0.039363 -0.039516 

0.00.038.024 I llama_perf_context_print:        load time =      31.91 ms
0.00.038.026 I llama_perf_context_print: prompt eval time =       3.77 ms /     9 tokens (    0.42 ms per token,  2387.90 tokens per second)
0.00.038.027 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.038.027 I llama_perf_context_print:       total time =       5.54 ms /    10 tokens

real	0m0.047s
user	0m0.062s
sys	0m0.019s
```
### rerank_tiny

Rerank Tiny (Jina):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/rerank-tiny/ggml-model-f16.gguf -p 'what is panda?</s></s>hi\nwhat is panda?</s></s>it'\''s a bear\nwhat is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.' -ngl 99 -c 0 --pooling rank --embd-normalize -1 --verbose-prompt
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.537 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.008.426 I llama_model_loader: loaded meta data with 29 key-value pairs and 70 tensors from ../models-mnt/rerank-tiny/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.008.437 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.008.442 I llama_model_loader: - kv   0:                       general.architecture str              = jina-bert-v2
0.00.008.444 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.008.444 I llama_model_loader: - kv   2:                               general.name str              = Jina Bert Implementation
0.00.008.445 I llama_model_loader: - kv   3:                       general.organization str              = Jinaai
0.00.008.446 I llama_model_loader: - kv   4:                         general.size_label str              = 33M
0.00.008.448 I llama_model_loader: - kv   5:                   jina-bert-v2.block_count u32              = 4
0.00.008.449 I llama_model_loader: - kv   6:                jina-bert-v2.context_length u32              = 8192
0.00.008.450 I llama_model_loader: - kv   7:              jina-bert-v2.embedding_length u32              = 384
0.00.008.450 I llama_model_loader: - kv   8:           jina-bert-v2.feed_forward_length u32              = 1536
0.00.008.451 I llama_model_loader: - kv   9:          jina-bert-v2.attention.head_count u32              = 12
0.00.008.454 I llama_model_loader: - kv  10:  jina-bert-v2.attention.layer_norm_epsilon f32              = 0.000000
0.00.008.456 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.008.457 I llama_model_loader: - kv  12:              jina-bert-v2.attention.causal bool             = false
0.00.008.457 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.008.458 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = jina-v1-en
0.00.014.967 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,61056]   = ["<s>", "<pad>", "</s>", "<unk>", "<m...
0.00.016.583 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,61056]   = [3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, ...
0.00.020.566 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,39382]   = ["t h", "i n", "a n", "e r", "th e", ...
0.00.020.572 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.020.572 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 2
0.00.020.573 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.020.574 I llama_model_loader: - kv  21:          tokenizer.ggml.seperator_token_id u32              = 2
0.00.020.574 I llama_model_loader: - kv  22:            tokenizer.ggml.padding_token_id u32              = 1
0.00.020.575 I llama_model_loader: - kv  23:                tokenizer.ggml.cls_token_id u32              = 0
0.00.020.575 I llama_model_loader: - kv  24:               tokenizer.ggml.mask_token_id u32              = 4
0.00.020.575 I llama_model_loader: - kv  25:            tokenizer.ggml.token_type_count u32              = 2
0.00.020.576 I llama_model_loader: - kv  26:               tokenizer.ggml.add_bos_token bool             = true
0.00.020.577 I llama_model_loader: - kv  27:               tokenizer.ggml.add_eos_token bool             = true
0.00.020.577 I llama_model_loader: - kv  28:               general.quantization_version u32              = 2
0.00.020.579 I llama_model_loader: - type  f32:   41 tensors
0.00.020.580 I llama_model_loader: - type  f16:   29 tensors
0.00.039.636 W llm_load_vocab: empty token at index 5
0.00.049.826 W llm_load_vocab: model vocab missing newline token, using special_pad_id instead
0.00.063.600 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.063.696 I llm_load_vocab: special tokens cache size = 5
0.00.422.169 I llm_load_vocab: token to piece cache size = 1.5060 MB
0.00.422.188 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.422.189 I llm_load_print_meta: arch             = jina-bert-v2
0.00.422.189 I llm_load_print_meta: vocab type       = BPE
0.00.422.190 I llm_load_print_meta: n_vocab          = 61056
0.00.422.190 I llm_load_print_meta: n_merges         = 39382
0.00.422.191 I llm_load_print_meta: vocab_only       = 0
0.00.422.191 I llm_load_print_meta: n_ctx_train      = 8192
0.00.422.191 I llm_load_print_meta: n_embd           = 384
0.00.422.192 I llm_load_print_meta: n_layer          = 4
0.00.422.202 I llm_load_print_meta: n_head           = 12
0.00.422.202 I llm_load_print_meta: n_head_kv        = 12
0.00.422.203 I llm_load_print_meta: n_rot            = 32
0.00.422.203 I llm_load_print_meta: n_swa            = 0
0.00.422.203 I llm_load_print_meta: n_embd_head_k    = 32
0.00.422.204 I llm_load_print_meta: n_embd_head_v    = 32
0.00.422.205 I llm_load_print_meta: n_gqa            = 1
0.00.422.205 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.422.206 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.422.208 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.422.208 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.422.208 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.422.209 I llm_load_print_meta: f_max_alibi_bias = 8.0e+00
0.00.422.209 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.422.210 I llm_load_print_meta: n_ff             = 1536
0.00.422.210 I llm_load_print_meta: n_expert         = 0
0.00.422.211 I llm_load_print_meta: n_expert_used    = 0
0.00.422.211 I llm_load_print_meta: causal attn      = 0
0.00.422.211 I llm_load_print_meta: pooling type     = -1
0.00.422.211 I llm_load_print_meta: rope type        = -1
0.00.422.212 I llm_load_print_meta: rope scaling     = linear
0.00.422.213 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.422.213 I llm_load_print_meta: freq_scale_train = 1
0.00.422.213 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.422.214 I llm_load_print_meta: rope_finetuned   = unknown
0.00.422.214 I llm_load_print_meta: ssm_d_conv       = 0
0.00.422.214 I llm_load_print_meta: ssm_d_inner      = 0
0.00.422.215 I llm_load_print_meta: ssm_d_state      = 0
0.00.422.215 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.422.215 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.422.216 I llm_load_print_meta: model type       = 33M
0.00.422.216 I llm_load_print_meta: model ftype      = F16
0.00.422.217 I llm_load_print_meta: model params     = 32.90 M
0.00.422.218 I llm_load_print_meta: model size       = 62.78 MiB (16.01 BPW) 
0.00.422.218 I llm_load_print_meta: general.name     = Jina Bert Implementation
0.00.422.219 I llm_load_print_meta: BOS token        = 0 '<s>'
0.00.422.219 I llm_load_print_meta: EOS token        = 2 '</s>'
0.00.422.219 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.422.220 I llm_load_print_meta: SEP token        = 2 '</s>'
0.00.422.220 I llm_load_print_meta: PAD token        = 1 '<pad>'
0.00.422.220 I llm_load_print_meta: CLS token        = 0 '<s>'
0.00.422.220 I llm_load_print_meta: MASK token       = 4 '<mask>'
0.00.422.221 I llm_load_print_meta: EOG token        = 2 '</s>'
0.00.422.221 I llm_load_print_meta: max token length = 45
0.00.425.924 I llm_load_tensors:   CPU_Mapped model buffer size =    62.78 MiB
......................
0.00.427.988 I llama_new_context_with_model: n_seq_max     = 1
0.00.427.993 I llama_new_context_with_model: n_ctx         = 8192
0.00.427.994 I llama_new_context_with_model: n_ctx_per_seq = 8192
0.00.427.994 I llama_new_context_with_model: n_batch       = 2048
0.00.427.995 I llama_new_context_with_model: n_ubatch      = 2048
0.00.427.995 I llama_new_context_with_model: flash_attn    = 0
0.00.427.997 I llama_new_context_with_model: freq_base     = 10000.0
0.00.427.997 I llama_new_context_with_model: freq_scale    = 1
0.00.437.856 I llama_kv_cache_init:        CPU KV buffer size =    48.00 MiB
0.00.437.867 I llama_new_context_with_model: KV self size  =   48.00 MiB, K (f16):   24.00 MiB, V (f16):   24.00 MiB
0.00.437.875 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.439.175 I llama_new_context_with_model:        CPU compute buffer size =   220.02 MiB
0.00.439.180 I llama_new_context_with_model: graph nodes  = 154
0.00.439.181 I llama_new_context_with_model: graph splits = 1
0.00.439.183 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.480 I 
0.00.446.557 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.446.801 I main: prompt 0: 'what is panda?</s></s>hi'
0.00.446.804 I main: number of tokens in prompt = 9
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 23233 -> 'hi'
     2 -> '</s>'


0.00.446.811 I main: prompt 1: 'what is panda?</s></s>it's a bear'
0.00.446.811 I main: number of tokens in prompt = 13
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21153 -> 'it'
    37 -> '''
    87 -> 's'
    69 -> 'a'
 25706 -> 'bear'
     2 -> '</s>'


0.00.446.820 I main: prompt 2: 'what is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.'
0.00.446.820 I main: number of tokens in prompt = 40
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21215 -> 'he'
 28390 -> 'giant'
 49990 -> 'panda'
    38 -> '('
 21163 -> 'il'
 26237 -> 'uro'
 21223 -> 'po'
 23179 -> 'da'
 36906 -> 'melan'
 26791 -> 'ole'
    89 -> 'u'
 21402 -> 'ca'
 21686 -> '),'
 23314 -> 'sometimes'
 22517 -> 'called'
    69 -> 'a'
 49990 -> 'panda'
 25706 -> 'bear'
 21142 -> 'or'
 22810 -> 'simply'
 49990 -> 'panda'
    42 -> ','
 21152 -> 'is'
    69 -> 'a'
 25706 -> 'bear'
 25677 -> 'species'
 28930 -> 'ende'
 22024 -> 'mic'
 21148 -> 'to'
    76 -> 'h'
 22344 -> 'ina'
    44 -> '.'
     2 -> '</s>'


0.00.450.296 I batch_decode: n_tokens = 62, n_seq = 3

rerank score 0:    0.023
rerank score 1:    0.024
rerank score 2:    0.199

0.00.466.084 I llama_perf_context_print:        load time =     445.91 ms
0.00.466.087 I llama_perf_context_print: prompt eval time =      15.56 ms /    62 tokens (    0.25 ms per token,  3984.83 tokens per second)
0.00.466.089 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.466.091 I llama_perf_context_print:       total time =      19.60 ms /    63 tokens

real	0m0.485s
user	0m0.541s
sys	0m0.024s
  - rerank score 0 @ 0.023 OK
  - rerank score 1 @ 0.024 OK
  - rerank score 2 @ 0.199 OK
```
### test_scripts_debug

Runs test scripts in debug mode
- status: 0
```
+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.705 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.903 I main: llama backend init
0.00.000.911 I main: load the model and apply lora adapter, if any
0.00.023.464 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.474 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.560 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.571 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.573 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.578 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.582 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.584 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.585 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.586 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.587 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.594 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.596 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.597 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.598 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.599 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.222.050 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.323.800 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.347.337 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.347.345 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.347.347 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.347.348 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.347.349 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.347.351 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.347.352 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.347.357 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.347.358 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.347.360 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.347.361 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.347.363 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.347.370 I llama_model_loader: - type  f32:   37 tensors
0.00.347.373 I llama_model_loader: - type q8_0:  127 tensors
0.00.568.763 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.627.755 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.628.733 I llm_load_vocab: special tokens cache size = 5
0.00.819.153 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.819.222 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.819.226 I llm_load_print_meta: arch             = gemma
0.00.819.227 I llm_load_print_meta: vocab type       = SPM
0.00.819.228 I llm_load_print_meta: n_vocab          = 256000
0.00.819.230 I llm_load_print_meta: n_merges         = 0
0.00.819.231 I llm_load_print_meta: vocab_only       = 0
0.00.819.231 I llm_load_print_meta: n_ctx_train      = 8192
0.00.819.231 I llm_load_print_meta: n_embd           = 2048
0.00.819.232 I llm_load_print_meta: n_layer          = 18
0.00.819.296 I llm_load_print_meta: n_head           = 8
0.00.819.307 I llm_load_print_meta: n_head_kv        = 1
0.00.819.308 I llm_load_print_meta: n_rot            = 256
0.00.819.308 I llm_load_print_meta: n_swa            = 0
0.00.819.309 I llm_load_print_meta: n_embd_head_k    = 256
0.00.819.309 I llm_load_print_meta: n_embd_head_v    = 256
0.00.819.314 I llm_load_print_meta: n_gqa            = 8
0.00.819.319 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.819.326 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.819.327 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.819.328 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.819.329 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.819.330 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.819.331 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.819.336 I llm_load_print_meta: n_ff             = 16384
0.00.819.338 I llm_load_print_meta: n_expert         = 0
0.00.819.338 I llm_load_print_meta: n_expert_used    = 0
0.00.819.339 I llm_load_print_meta: causal attn      = 1
0.00.819.339 I llm_load_print_meta: pooling type     = 0
0.00.819.339 I llm_load_print_meta: rope type        = 2
0.00.819.340 I llm_load_print_meta: rope scaling     = linear
0.00.819.341 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.819.342 I llm_load_print_meta: freq_scale_train = 1
0.00.819.343 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.819.343 I llm_load_print_meta: rope_finetuned   = unknown
0.00.819.343 I llm_load_print_meta: ssm_d_conv       = 0
0.00.819.344 I llm_load_print_meta: ssm_d_inner      = 0
0.00.819.345 I llm_load_print_meta: ssm_d_state      = 0
0.00.819.345 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.819.346 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.819.358 I llm_load_print_meta: model type       = 2B
0.00.819.359 I llm_load_print_meta: model ftype      = Q8_0
0.00.819.360 I llm_load_print_meta: model params     = 2.51 B
0.00.819.369 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.819.370 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.819.371 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.819.371 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.819.372 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.819.373 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.819.373 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.819.374 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.819.380 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.819.382 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.819.382 I llm_load_print_meta: max token length = 93
0.00.920.979 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.920.991 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.920.992 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.920.992 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.920.993 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.920.994 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.927.004 I llama_new_context_with_model: n_seq_max     = 1
0.00.927.012 I llama_new_context_with_model: n_ctx         = 4096
0.00.927.012 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.927.013 I llama_new_context_with_model: n_batch       = 2048
0.00.927.016 I llama_new_context_with_model: n_ubatch      = 512
0.00.927.017 I llama_new_context_with_model: flash_attn    = 0
0.00.927.021 I llama_new_context_with_model: freq_base     = 10000.0
0.00.927.024 I llama_new_context_with_model: freq_scale    = 1
0.00.927.025 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.942.525 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.942.564 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.942.695 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.945.302 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.945.306 I llama_new_context_with_model: graph nodes  = 601
0.00.945.307 I llama_new_context_with_model: graph splits = 1
0.00.945.331 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.675.140 I main: llama threadpool init, n_threads = 4
0.01.675.155 I 
0.01.675.277 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.675.281 I 
0.01.675.522 I sampler seed: 1274622453
0.01.675.536 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.675.546 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.675.549 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.675.549 I 
 seconally, focusing on the differences between the two given statements:

**Statement 1:** "The future of artificial intelligence (AI) is optimistic, with

0.15.066.375 I llama_perf_sampler_print:    sampling time =      49.03 ms /    33 runs   (    1.49 ms per token,   673.08 tokens per second)
0.15.066.381 I llama_perf_context_print:        load time =    1674.14 ms
0.15.066.383 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.066.384 I llama_perf_context_print:        eval time =   13302.10 ms /    32 runs   (  415.69 ms per token,     2.41 tokens per second)
0.15.066.388 I llama_perf_context_print:       total time =   13391.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.680 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.898 I main: llama backend init
0.00.000.906 I main: load the model and apply lora adapter, if any
0.00.023.626 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.729 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.745 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.748 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.759 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.764 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.765 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.767 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.768 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.769 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.780 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.781 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.783 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.784 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.785 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.243.828 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.346.157 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.369.675 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.369.686 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.369.687 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.369.688 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.369.690 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.369.691 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.369.692 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.369.696 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.369.698 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.369.699 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.369.701 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.369.702 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.369.712 I llama_model_loader: - type  f32:   37 tensors
0.00.369.714 I llama_model_loader: - type q8_0:  127 tensors
0.00.603.826 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.665.332 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.666.306 I llm_load_vocab: special tokens cache size = 5
0.00.865.025 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.865.105 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.865.107 I llm_load_print_meta: arch             = gemma
0.00.865.108 I llm_load_print_meta: vocab type       = SPM
0.00.865.109 I llm_load_print_meta: n_vocab          = 256000
0.00.865.111 I llm_load_print_meta: n_merges         = 0
0.00.865.112 I llm_load_print_meta: vocab_only       = 0
0.00.865.112 I llm_load_print_meta: n_ctx_train      = 8192
0.00.865.113 I llm_load_print_meta: n_embd           = 2048
0.00.865.113 I llm_load_print_meta: n_layer          = 18
0.00.865.178 I llm_load_print_meta: n_head           = 8
0.00.865.185 I llm_load_print_meta: n_head_kv        = 1
0.00.865.185 I llm_load_print_meta: n_rot            = 256
0.00.865.186 I llm_load_print_meta: n_swa            = 0
0.00.865.186 I llm_load_print_meta: n_embd_head_k    = 256
0.00.865.186 I llm_load_print_meta: n_embd_head_v    = 256
0.00.865.191 I llm_load_print_meta: n_gqa            = 8
0.00.865.195 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.865.200 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.865.201 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.865.203 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.865.203 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.865.204 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.865.205 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.865.210 I llm_load_print_meta: n_ff             = 16384
0.00.865.210 I llm_load_print_meta: n_expert         = 0
0.00.865.211 I llm_load_print_meta: n_expert_used    = 0
0.00.865.212 I llm_load_print_meta: causal attn      = 1
0.00.865.213 I llm_load_print_meta: pooling type     = 0
0.00.865.213 I llm_load_print_meta: rope type        = 2
0.00.865.214 I llm_load_print_meta: rope scaling     = linear
0.00.865.215 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.865.215 I llm_load_print_meta: freq_scale_train = 1
0.00.865.216 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.865.216 I llm_load_print_meta: rope_finetuned   = unknown
0.00.865.216 I llm_load_print_meta: ssm_d_conv       = 0
0.00.865.230 I llm_load_print_meta: ssm_d_inner      = 0
0.00.865.231 I llm_load_print_meta: ssm_d_state      = 0
0.00.865.231 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.865.244 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.865.248 I llm_load_print_meta: model type       = 2B
0.00.865.249 I llm_load_print_meta: model ftype      = Q8_0
0.00.865.250 I llm_load_print_meta: model params     = 2.51 B
0.00.865.259 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.865.260 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.865.260 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.865.262 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.865.263 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.865.263 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.865.263 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.865.264 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.865.271 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.865.272 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.865.273 I llm_load_print_meta: max token length = 93
0.00.963.721 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.970.334 I llama_new_context_with_model: n_seq_max     = 1
0.00.970.342 I llama_new_context_with_model: n_ctx         = 4096
0.00.970.343 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.970.343 I llama_new_context_with_model: n_batch       = 2048
0.00.970.343 I llama_new_context_with_model: n_ubatch      = 512
0.00.970.344 I llama_new_context_with_model: flash_attn    = 0
0.00.970.346 I llama_new_context_with_model: freq_base     = 10000.0
0.00.970.347 I llama_new_context_with_model: freq_scale    = 1
0.00.970.348 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.985.403 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.985.445 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.985.566 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.988.068 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.988.071 I llama_new_context_with_model: graph nodes  = 601
0.00.988.072 I llama_new_context_with_model: graph splits = 1
0.00.988.095 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.728.271 I main: llama threadpool init, n_threads = 4
0.01.728.287 I 
0.01.728.409 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.728.413 I 
0.01.728.656 I sampler seed: 2004526252
0.01.728.671 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.728.684 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.728.684 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.728.685 I 
 increasities and disrespect.

It is important to remember that our words have power, and we must use them responsibly. We should strive to communicate respectfully and effectively

0.15.191.934 I llama_perf_sampler_print:    sampling time =      48.96 ms /    33 runs   (    1.48 ms per token,   674.07 tokens per second)
0.15.191.936 I llama_perf_context_print:        load time =    1727.26 ms
0.15.191.938 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.191.939 I llama_perf_context_print:        eval time =   13374.46 ms /    32 runs   (  417.95 ms per token,     2.39 tokens per second)
0.15.191.940 I llama_perf_context_print:       total time =   13463.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.662 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.859 I main: llama backend init
0.00.000.867 I main: load the model and apply lora adapter, if any
0.00.023.587 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.595 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.689 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.701 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.703 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.709 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.713 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.715 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.716 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.717 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.718 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.729 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.730 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.732 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.734 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.735 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.459 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.213 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.348.723 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.348.733 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.348.734 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.348.736 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.348.737 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.348.739 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.348.740 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.348.744 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.348.746 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.348.747 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.348.748 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.348.750 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.348.759 I llama_model_loader: - type  f32:   37 tensors
0.00.348.762 I llama_model_loader: - type q8_0:  127 tensors
0.00.570.115 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.635.348 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.636.396 I llm_load_vocab: special tokens cache size = 5
0.00.821.480 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.821.549 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.821.551 I llm_load_print_meta: arch             = gemma
0.00.821.551 I llm_load_print_meta: vocab type       = SPM
0.00.821.552 I llm_load_print_meta: n_vocab          = 256000
0.00.821.554 I llm_load_print_meta: n_merges         = 0
0.00.821.555 I llm_load_print_meta: vocab_only       = 0
0.00.821.555 I llm_load_print_meta: n_ctx_train      = 8192
0.00.821.556 I llm_load_print_meta: n_embd           = 2048
0.00.821.556 I llm_load_print_meta: n_layer          = 18
0.00.821.624 I llm_load_print_meta: n_head           = 8
0.00.821.632 I llm_load_print_meta: n_head_kv        = 1
0.00.821.633 I llm_load_print_meta: n_rot            = 256
0.00.821.633 I llm_load_print_meta: n_swa            = 0
0.00.821.634 I llm_load_print_meta: n_embd_head_k    = 256
0.00.821.634 I llm_load_print_meta: n_embd_head_v    = 256
0.00.821.639 I llm_load_print_meta: n_gqa            = 8
0.00.821.643 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.821.648 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.821.649 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.821.651 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.821.651 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.821.652 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.821.652 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.821.657 I llm_load_print_meta: n_ff             = 16384
0.00.821.658 I llm_load_print_meta: n_expert         = 0
0.00.821.659 I llm_load_print_meta: n_expert_used    = 0
0.00.821.664 I llm_load_print_meta: causal attn      = 1
0.00.821.664 I llm_load_print_meta: pooling type     = 0
0.00.821.665 I llm_load_print_meta: rope type        = 2
0.00.821.665 I llm_load_print_meta: rope scaling     = linear
0.00.821.667 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.821.668 I llm_load_print_meta: freq_scale_train = 1
0.00.821.668 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.821.680 I llm_load_print_meta: rope_finetuned   = unknown
0.00.821.681 I llm_load_print_meta: ssm_d_conv       = 0
0.00.821.681 I llm_load_print_meta: ssm_d_inner      = 0
0.00.821.682 I llm_load_print_meta: ssm_d_state      = 0
0.00.821.682 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.821.682 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.821.684 I llm_load_print_meta: model type       = 2B
0.00.821.685 I llm_load_print_meta: model ftype      = Q8_0
0.00.821.685 I llm_load_print_meta: model params     = 2.51 B
0.00.821.696 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.821.696 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.821.697 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.821.697 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.821.698 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.821.698 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.821.699 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.821.700 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.821.706 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.821.707 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.821.708 I llm_load_print_meta: max token length = 93
0.00.899.554 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.899.563 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.899.564 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.899.580 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.899.581 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.899.582 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.905.576 I llama_new_context_with_model: n_seq_max     = 1
0.00.905.584 I llama_new_context_with_model: n_ctx         = 4096
0.00.905.585 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.905.585 I llama_new_context_with_model: n_batch       = 2048
0.00.905.585 I llama_new_context_with_model: n_ubatch      = 512
0.00.905.586 I llama_new_context_with_model: flash_attn    = 0
0.00.905.588 I llama_new_context_with_model: freq_base     = 10000.0
0.00.905.589 I llama_new_context_with_model: freq_scale    = 1
0.00.905.589 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.919.967 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.920.010 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.920.142 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.922.760 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.922.765 I llama_new_context_with_model: graph nodes  = 601
0.00.922.765 I llama_new_context_with_model: graph splits = 1
0.00.922.788 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.653.322 I main: llama threadpool init, n_threads = 4
0.01.653.338 I 
0.01.653.458 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.653.462 I 
0.01.653.705 I sampler seed: 309090956
0.01.653.718 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.653.728 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.653.731 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.653.731 I 
 increably, a symphony of laughter, music, and dance.

The stage was transformed into a canvas of twinkling lights and vibrant colors, adorned with a whimsical

0.15.028.127 I llama_perf_sampler_print:    sampling time =      49.17 ms /    33 runs   (    1.49 ms per token,   671.18 tokens per second)
0.15.028.130 I llama_perf_context_print:        load time =    1652.36 ms
0.15.028.131 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.028.133 I llama_perf_context_print:        eval time =   13285.56 ms /    32 runs   (  415.17 ms per token,     2.41 tokens per second)
0.15.028.134 I llama_perf_context_print:       total time =   13374.81 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.692 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.909 I main: llama backend init
0.00.000.918 I main: load the model and apply lora adapter, if any
0.00.023.567 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.581 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.671 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.683 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.684 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.691 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.695 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.696 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.698 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.699 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.701 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.712 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.716 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.717 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.718 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.720 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.429 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.436 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.968 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.978 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.979 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.980 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.982 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.983 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.985 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.350.000 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.350.002 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.350.003 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.350.005 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.350.006 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.350.015 I llama_model_loader: - type  f32:   37 tensors
0.00.350.018 I llama_model_loader: - type q8_0:  127 tensors
0.00.581.916 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.652.240 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.653.317 I llm_load_vocab: special tokens cache size = 5
0.00.856.344 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.856.416 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.856.420 I llm_load_print_meta: arch             = gemma
0.00.856.420 I llm_load_print_meta: vocab type       = SPM
0.00.856.421 I llm_load_print_meta: n_vocab          = 256000
0.00.856.424 I llm_load_print_meta: n_merges         = 0
0.00.856.424 I llm_load_print_meta: vocab_only       = 0
0.00.856.425 I llm_load_print_meta: n_ctx_train      = 8192
0.00.856.425 I llm_load_print_meta: n_embd           = 2048
0.00.856.425 I llm_load_print_meta: n_layer          = 18
0.00.856.497 I llm_load_print_meta: n_head           = 8
0.00.856.507 I llm_load_print_meta: n_head_kv        = 1
0.00.856.509 I llm_load_print_meta: n_rot            = 256
0.00.856.509 I llm_load_print_meta: n_swa            = 0
0.00.856.509 I llm_load_print_meta: n_embd_head_k    = 256
0.00.856.510 I llm_load_print_meta: n_embd_head_v    = 256
0.00.856.514 I llm_load_print_meta: n_gqa            = 8
0.00.856.519 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.856.525 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.856.528 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.856.530 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.856.531 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.856.531 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.856.531 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.856.537 I llm_load_print_meta: n_ff             = 16384
0.00.856.537 I llm_load_print_meta: n_expert         = 0
0.00.856.538 I llm_load_print_meta: n_expert_used    = 0
0.00.856.541 I llm_load_print_meta: causal attn      = 1
0.00.856.541 I llm_load_print_meta: pooling type     = 0
0.00.856.541 I llm_load_print_meta: rope type        = 2
0.00.856.542 I llm_load_print_meta: rope scaling     = linear
0.00.856.543 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.856.543 I llm_load_print_meta: freq_scale_train = 1
0.00.856.544 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.856.544 I llm_load_print_meta: rope_finetuned   = unknown
0.00.856.544 I llm_load_print_meta: ssm_d_conv       = 0
0.00.856.545 I llm_load_print_meta: ssm_d_inner      = 0
0.00.856.545 I llm_load_print_meta: ssm_d_state      = 0
0.00.856.545 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.856.546 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.856.546 I llm_load_print_meta: model type       = 2B
0.00.856.549 I llm_load_print_meta: model ftype      = Q8_0
0.00.856.549 I llm_load_print_meta: model params     = 2.51 B
0.00.856.557 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.856.558 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.856.558 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.856.559 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.856.560 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.856.560 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.856.561 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.856.562 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.856.569 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.856.570 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.856.571 I llm_load_print_meta: max token length = 93
0.00.929.775 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.929.785 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.935.588 I llama_new_context_with_model: n_seq_max     = 1
0.00.935.595 I llama_new_context_with_model: n_ctx         = 4096
0.00.935.596 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.935.596 I llama_new_context_with_model: n_batch       = 2048
0.00.935.597 I llama_new_context_with_model: n_ubatch      = 512
0.00.935.597 I llama_new_context_with_model: flash_attn    = 0
0.00.935.600 I llama_new_context_with_model: freq_base     = 10000.0
0.00.935.600 I llama_new_context_with_model: freq_scale    = 1
0.00.935.601 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.950.249 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.950.289 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.950.421 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.952.943 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.952.947 I llama_new_context_with_model: graph nodes  = 601
0.00.952.948 I llama_new_context_with_model: graph splits = 1
0.00.952.971 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.686.541 I main: llama threadpool init, n_threads = 4
0.01.686.556 I 
0.01.686.679 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.686.684 I 
0.01.686.920 I sampler seed: 3946172091
0.01.686.933 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.686.945 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.686.946 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.686.946 I 
 increasities in this context.

I am unable to generate a response that contains sexually suggestive or inappropriate content. My purpose is to assist with tasks and provide information

0.15.165.988 I llama_perf_sampler_print:    sampling time =      49.60 ms /    33 runs   (    1.50 ms per token,   665.36 tokens per second)
0.15.165.991 I llama_perf_context_print:        load time =    1685.52 ms
0.15.165.993 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.165.994 I llama_perf_context_print:        eval time =   13389.04 ms /    32 runs   (  418.41 ms per token,     2.39 tokens per second)
0.15.165.995 I llama_perf_context_print:       total time =   13479.46 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m10.077s
user	3m50.434s
sys	0m9.347s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4202 (99c5439e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186792.91 ms
main:    total time = 186792.91 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.656 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.873 I main: llama backend init
0.00.000.881 I main: load the model and apply lora adapter, if any
0.00.023.207 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.216 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.306 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.317 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.318 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.324 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.327 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.328 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.329 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.330 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.331 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.340 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.342 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.343 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.344 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.346 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.222.604 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.324.630 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.348.079 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.348.089 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.348.091 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.348.092 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.348.094 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.348.096 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.348.097 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.348.103 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.348.114 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.348.118 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.348.119 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.348.121 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.348.129 I llama_model_loader: - type  f32:   37 tensors
0.00.348.132 I llama_model_loader: - type q4_K:  108 tensors
0.00.348.146 I llama_model_loader: - type q6_K:   19 tensors
0.00.563.926 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.621.418 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.622.281 I llm_load_vocab: special tokens cache size = 5
0.00.820.066 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.820.142 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.820.146 I llm_load_print_meta: arch             = gemma
0.00.820.147 I llm_load_print_meta: vocab type       = SPM
0.00.820.148 I llm_load_print_meta: n_vocab          = 256000
0.00.820.150 I llm_load_print_meta: n_merges         = 0
0.00.820.151 I llm_load_print_meta: vocab_only       = 0
0.00.820.151 I llm_load_print_meta: n_ctx_train      = 8192
0.00.820.151 I llm_load_print_meta: n_embd           = 2048
0.00.820.152 I llm_load_print_meta: n_layer          = 18
0.00.820.217 I llm_load_print_meta: n_head           = 8
0.00.820.226 I llm_load_print_meta: n_head_kv        = 1
0.00.820.227 I llm_load_print_meta: n_rot            = 256
0.00.820.227 I llm_load_print_meta: n_swa            = 0
0.00.820.228 I llm_load_print_meta: n_embd_head_k    = 256
0.00.820.229 I llm_load_print_meta: n_embd_head_v    = 256
0.00.820.234 I llm_load_print_meta: n_gqa            = 8
0.00.820.239 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.820.247 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.820.249 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.820.250 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.820.251 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.820.252 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.820.252 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.820.257 I llm_load_print_meta: n_ff             = 16384
0.00.820.258 I llm_load_print_meta: n_expert         = 0
0.00.820.258 I llm_load_print_meta: n_expert_used    = 0
0.00.820.259 I llm_load_print_meta: causal attn      = 1
0.00.820.259 I llm_load_print_meta: pooling type     = 0
0.00.820.260 I llm_load_print_meta: rope type        = 2
0.00.820.261 I llm_load_print_meta: rope scaling     = linear
0.00.820.263 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.820.263 I llm_load_print_meta: freq_scale_train = 1
0.00.820.264 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.820.264 I llm_load_print_meta: rope_finetuned   = unknown
0.00.820.265 I llm_load_print_meta: ssm_d_conv       = 0
0.00.820.265 I llm_load_print_meta: ssm_d_inner      = 0
0.00.820.289 I llm_load_print_meta: ssm_d_state      = 0
0.00.820.291 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.820.291 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.820.292 I llm_load_print_meta: model type       = 2B
0.00.820.293 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.820.293 I llm_load_print_meta: model params     = 2.51 B
0.00.820.303 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.820.303 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.820.304 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.820.305 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.820.305 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.820.314 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.820.315 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.820.315 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.820.321 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.820.325 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.820.326 I llm_load_print_meta: max token length = 93
0.00.881.207 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.881.215 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.881.216 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.881.217 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.881.217 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.881.218 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.887.009 I llama_new_context_with_model: n_seq_max     = 1
0.00.887.017 I llama_new_context_with_model: n_ctx         = 4096
0.00.887.017 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.887.018 I llama_new_context_with_model: n_batch       = 2048
0.00.887.018 I llama_new_context_with_model: n_ubatch      = 512
0.00.887.019 I llama_new_context_with_model: flash_attn    = 0
0.00.887.021 I llama_new_context_with_model: freq_base     = 10000.0
0.00.887.022 I llama_new_context_with_model: freq_scale    = 1
0.00.887.023 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.901.949 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.901.993 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.902.124 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.904.757 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.904.761 I llama_new_context_with_model: graph nodes  = 601
0.00.904.761 I llama_new_context_with_model: graph splits = 1
0.00.904.785 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.491.950 I main: llama threadpool init, n_threads = 4
0.01.491.967 I 
0.01.492.083 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.492.087 I 
0.01.492.325 I sampler seed: 3385349934
0.01.492.339 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.492.351 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.492.352 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.492.352 I 
 increasively, engulfing the world in a dazzling spectacle.

This is the description of a supernova. A dazzling explosion of energy and light, a phenomenon that

0.12.653.660 I llama_perf_sampler_print:    sampling time =      49.24 ms /    33 runs   (    1.49 ms per token,   670.20 tokens per second)
0.12.653.664 I llama_perf_context_print:        load time =    1490.98 ms
0.12.653.666 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.653.667 I llama_perf_context_print:        eval time =   11072.75 ms /    32 runs   (  346.02 ms per token,     2.89 tokens per second)
0.12.653.668 I llama_perf_context_print:       total time =   11161.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4202 (99c5439e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186822.50 ms
main:    total time = 186822.50 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.642 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.835 I main: llama backend init
0.00.000.843 I main: load the model and apply lora adapter, if any
0.00.023.400 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.508 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.526 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.531 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.539 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.540 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.542 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.543 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.545 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.547 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.564 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.568 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.569 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.570 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.572 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.367 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.560 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.020 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.030 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.032 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.033 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.034 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.036 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.037 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.042 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.043 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.052 I llama_model_loader: - type  f32:   37 tensors
0.00.349.054 I llama_model_loader: - type q4_K:  108 tensors
0.00.349.055 I llama_model_loader: - type q6_K:   19 tensors
0.00.576.053 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.647.274 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.648.341 I llm_load_vocab: special tokens cache size = 5
0.00.836.537 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.836.610 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.836.611 I llm_load_print_meta: arch             = gemma
0.00.836.612 I llm_load_print_meta: vocab type       = SPM
0.00.836.613 I llm_load_print_meta: n_vocab          = 256000
0.00.836.615 I llm_load_print_meta: n_merges         = 0
0.00.836.616 I llm_load_print_meta: vocab_only       = 0
0.00.836.616 I llm_load_print_meta: n_ctx_train      = 8192
0.00.836.616 I llm_load_print_meta: n_embd           = 2048
0.00.836.617 I llm_load_print_meta: n_layer          = 18
0.00.836.681 I llm_load_print_meta: n_head           = 8
0.00.836.689 I llm_load_print_meta: n_head_kv        = 1
0.00.836.689 I llm_load_print_meta: n_rot            = 256
0.00.836.690 I llm_load_print_meta: n_swa            = 0
0.00.836.690 I llm_load_print_meta: n_embd_head_k    = 256
0.00.836.690 I llm_load_print_meta: n_embd_head_v    = 256
0.00.836.695 I llm_load_print_meta: n_gqa            = 8
0.00.836.700 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.836.705 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.836.706 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.836.707 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.836.708 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.836.708 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.836.708 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.836.738 I llm_load_print_meta: n_ff             = 16384
0.00.836.740 I llm_load_print_meta: n_expert         = 0
0.00.836.741 I llm_load_print_meta: n_expert_used    = 0
0.00.836.741 I llm_load_print_meta: causal attn      = 1
0.00.836.742 I llm_load_print_meta: pooling type     = 0
0.00.836.742 I llm_load_print_meta: rope type        = 2
0.00.836.742 I llm_load_print_meta: rope scaling     = linear
0.00.836.744 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.836.745 I llm_load_print_meta: freq_scale_train = 1
0.00.836.745 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.836.745 I llm_load_print_meta: rope_finetuned   = unknown
0.00.836.746 I llm_load_print_meta: ssm_d_conv       = 0
0.00.836.746 I llm_load_print_meta: ssm_d_inner      = 0
0.00.836.751 I llm_load_print_meta: ssm_d_state      = 0
0.00.836.751 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.836.752 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.836.753 I llm_load_print_meta: model type       = 2B
0.00.836.755 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.836.755 I llm_load_print_meta: model params     = 2.51 B
0.00.836.765 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.836.765 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.836.769 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.836.769 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.836.770 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.836.770 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.836.771 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.836.771 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.836.778 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.836.780 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.836.781 I llm_load_print_meta: max token length = 93
0.00.894.350 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.900.256 I llama_new_context_with_model: n_seq_max     = 1
0.00.900.263 I llama_new_context_with_model: n_ctx         = 4096
0.00.900.263 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.900.263 I llama_new_context_with_model: n_batch       = 2048
0.00.900.264 I llama_new_context_with_model: n_ubatch      = 512
0.00.900.264 I llama_new_context_with_model: flash_attn    = 0
0.00.900.268 I llama_new_context_with_model: freq_base     = 10000.0
0.00.900.268 I llama_new_context_with_model: freq_scale    = 1
0.00.900.269 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.915.431 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.915.472 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.915.595 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.918.139 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.918.143 I llama_new_context_with_model: graph nodes  = 601
0.00.918.144 I llama_new_context_with_model: graph splits = 1
0.00.918.168 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.505.059 I main: llama threadpool init, n_threads = 4
0.01.505.076 I 
0.01.505.203 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.505.207 I 
0.01.505.443 I sampler seed: 3366906006
0.01.505.457 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.505.467 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.505.470 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.505.470 I 
 increasities as a child, my daughter developed a speech impediment and difficulty swallowing. She went through a lot of testing and evaluation, and the diagnosis was made that

0.12.711.143 I llama_perf_sampler_print:    sampling time =      49.09 ms /    33 runs   (    1.49 ms per token,   672.29 tokens per second)
0.12.711.164 I llama_perf_context_print:        load time =    1504.13 ms
0.12.711.166 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.711.172 I llama_perf_context_print:        eval time =   11117.47 ms /    32 runs   (  347.42 ms per token,     2.88 tokens per second)
0.12.711.174 I llama_perf_context_print:       total time =   11206.09 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m41.850s
user	46m49.500s
sys	0m6.219s
```

### test_scripts_release

Runs test scripts in release mode
- status: 0
```
+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.176 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.374 I main: llama backend init
0.00.000.380 I main: load the model and apply lora adapter, if any
0.00.020.884 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.894 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.902 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.910 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.914 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.918 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.918 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.919 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.920 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.920 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.920 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.925 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.926 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.926 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.927 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.927 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.700 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.866 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.840 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.847 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.848 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.849 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.849 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.850 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.851 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.853 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.855 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.856 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.856 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.857 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.861 I llama_model_loader: - type  f32:   37 tensors
0.00.131.862 I llama_model_loader: - type q8_0:  127 tensors
0.00.217.936 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.268.959 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.269.528 I llm_load_vocab: special tokens cache size = 5
0.00.290.426 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.442 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.443 I llm_load_print_meta: arch             = gemma
0.00.290.443 I llm_load_print_meta: vocab type       = SPM
0.00.290.444 I llm_load_print_meta: n_vocab          = 256000
0.00.290.444 I llm_load_print_meta: n_merges         = 0
0.00.290.444 I llm_load_print_meta: vocab_only       = 0
0.00.290.445 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.445 I llm_load_print_meta: n_embd           = 2048
0.00.290.445 I llm_load_print_meta: n_layer          = 18
0.00.290.457 I llm_load_print_meta: n_head           = 8
0.00.290.458 I llm_load_print_meta: n_head_kv        = 1
0.00.290.459 I llm_load_print_meta: n_rot            = 256
0.00.290.459 I llm_load_print_meta: n_swa            = 0
0.00.290.459 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.459 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.460 I llm_load_print_meta: n_gqa            = 8
0.00.290.461 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.462 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.463 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.464 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.464 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.465 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.465 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.466 I llm_load_print_meta: n_ff             = 16384
0.00.290.466 I llm_load_print_meta: n_expert         = 0
0.00.290.466 I llm_load_print_meta: n_expert_used    = 0
0.00.290.467 I llm_load_print_meta: causal attn      = 1
0.00.290.468 I llm_load_print_meta: pooling type     = 0
0.00.290.468 I llm_load_print_meta: rope type        = 2
0.00.290.469 I llm_load_print_meta: rope scaling     = linear
0.00.290.470 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.471 I llm_load_print_meta: freq_scale_train = 1
0.00.290.471 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.472 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.473 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.473 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.474 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.474 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.475 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.475 I llm_load_print_meta: model type       = 2B
0.00.290.475 I llm_load_print_meta: model ftype      = Q8_0
0.00.290.476 I llm_load_print_meta: model params     = 2.51 B
0.00.290.477 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.290.478 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.482 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.482 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.483 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.483 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.483 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.484 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.484 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.484 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.485 I llm_load_print_meta: max token length = 93
0.00.392.379 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.392.385 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.392.386 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.392.386 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.392.387 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.392.387 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.397.765 I llama_new_context_with_model: n_seq_max     = 1
0.00.397.770 I llama_new_context_with_model: n_ctx         = 4096
0.00.397.771 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.397.771 I llama_new_context_with_model: n_batch       = 2048
0.00.397.772 I llama_new_context_with_model: n_ubatch      = 512
0.00.397.772 I llama_new_context_with_model: flash_attn    = 0
0.00.397.774 I llama_new_context_with_model: freq_base     = 10000.0
0.00.397.775 I llama_new_context_with_model: freq_scale    = 1
0.00.397.776 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.411.999 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.412.012 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.412.098 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.413.382 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.413.386 I llama_new_context_with_model: graph nodes  = 601
0.00.413.386 I llama_new_context_with_model: graph splits = 1
0.00.413.388 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.514.354 I main: llama threadpool init, n_threads = 4
0.00.514.369 I 
0.00.514.440 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.514.444 I 
0.00.514.485 I sampler seed: 1440004297
0.00.514.496 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.514.498 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.514.500 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.514.500 I 
 increably, a smile twisting her lips into a radiant glow. [end of text]


0.01.504.916 I llama_perf_sampler_print:    sampling time =       2.19 ms /    15 runs   (    0.15 ms per token,  6855.58 tokens per second)
0.01.504.918 I llama_perf_context_print:        load time =     513.95 ms
0.01.504.920 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.504.922 I llama_perf_context_print:        eval time =     981.61 ms /    14 runs   (   70.11 ms per token,    14.26 tokens per second)
0.01.504.922 I llama_perf_context_print:       total time =     990.57 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.518 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.728 I main: llama backend init
0.00.000.735 I main: load the model and apply lora adapter, if any
0.00.021.573 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.587 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.595 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.596 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.605 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.610 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.611 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.611 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.612 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.613 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.619 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.623 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.624 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.625 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.626 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.711 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.181 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.099 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.106 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.107 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.108 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.109 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.110 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.111 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.114 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.115 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.115 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.116 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.117 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.120 I llama_model_loader: - type  f32:   37 tensors
0.00.133.122 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.398 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.793 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.518 I llm_load_vocab: special tokens cache size = 5
0.00.276.698 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.718 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.719 I llm_load_print_meta: arch             = gemma
0.00.276.719 I llm_load_print_meta: vocab type       = SPM
0.00.276.720 I llm_load_print_meta: n_vocab          = 256000
0.00.276.721 I llm_load_print_meta: n_merges         = 0
0.00.276.721 I llm_load_print_meta: vocab_only       = 0
0.00.276.722 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.722 I llm_load_print_meta: n_embd           = 2048
0.00.276.722 I llm_load_print_meta: n_layer          = 18
0.00.276.735 I llm_load_print_meta: n_head           = 8
0.00.276.736 I llm_load_print_meta: n_head_kv        = 1
0.00.276.737 I llm_load_print_meta: n_rot            = 256
0.00.276.737 I llm_load_print_meta: n_swa            = 0
0.00.276.737 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.738 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.739 I llm_load_print_meta: n_gqa            = 8
0.00.276.740 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.741 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.741 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.743 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.743 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.743 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.744 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.744 I llm_load_print_meta: n_ff             = 16384
0.00.276.745 I llm_load_print_meta: n_expert         = 0
0.00.276.745 I llm_load_print_meta: n_expert_used    = 0
0.00.276.745 I llm_load_print_meta: causal attn      = 1
0.00.276.746 I llm_load_print_meta: pooling type     = 0
0.00.276.746 I llm_load_print_meta: rope type        = 2
0.00.276.746 I llm_load_print_meta: rope scaling     = linear
0.00.276.748 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.748 I llm_load_print_meta: freq_scale_train = 1
0.00.276.749 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.749 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.749 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.749 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.749 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.750 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.750 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.751 I llm_load_print_meta: model type       = 2B
0.00.276.751 I llm_load_print_meta: model ftype      = Q8_0
0.00.276.752 I llm_load_print_meta: model params     = 2.51 B
0.00.276.753 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.276.753 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.754 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.754 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.755 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.755 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.755 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.756 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.756 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.756 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.757 I llm_load_print_meta: max token length = 93
0.00.370.046 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.375.514 I llama_new_context_with_model: n_seq_max     = 1
0.00.375.521 I llama_new_context_with_model: n_ctx         = 4096
0.00.375.521 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.375.522 I llama_new_context_with_model: n_batch       = 2048
0.00.375.522 I llama_new_context_with_model: n_ubatch      = 512
0.00.375.523 I llama_new_context_with_model: flash_attn    = 0
0.00.375.525 I llama_new_context_with_model: freq_base     = 10000.0
0.00.375.526 I llama_new_context_with_model: freq_scale    = 1
0.00.375.527 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.390.504 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.390.520 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.390.631 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.391.928 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.391.933 I llama_new_context_with_model: graph nodes  = 601
0.00.391.934 I llama_new_context_with_model: graph splits = 1
0.00.391.937 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.974 I main: llama threadpool init, n_threads = 4
0.00.489.989 I 
0.00.490.073 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.490.077 I 
0.00.490.131 I sampler seed: 2170868081
0.00.490.141 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.145 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.490.147 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.148 I 
 increasively as the value of x increases.

$$x=1$$

$$x=2$$

$$x=3$$

$$x=4

0.02.690.614 I llama_perf_sampler_print:    sampling time =       4.67 ms /    33 runs   (    0.14 ms per token,  7072.44 tokens per second)
0.02.690.617 I llama_perf_context_print:        load time =     489.22 ms
0.02.690.618 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.690.620 I llama_perf_context_print:        eval time =    2181.71 ms /    32 runs   (   68.18 ms per token,    14.67 tokens per second)
0.02.690.621 I llama_perf_context_print:       total time =    2200.65 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.594 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.786 I main: llama backend init
0.00.000.792 I main: load the model and apply lora adapter, if any
0.00.021.687 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.699 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.706 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.712 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.713 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.717 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.718 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.718 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.719 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.719 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.720 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.725 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.725 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.726 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.727 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.727 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.626 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.056 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.020 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.029 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.030 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.030 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.031 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.033 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.033 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.037 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.038 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.039 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.039 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.041 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.045 I llama_model_loader: - type  f32:   37 tensors
0.00.133.046 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.611 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.268.233 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.268.916 I llm_load_vocab: special tokens cache size = 5
0.00.290.157 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.179 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.180 I llm_load_print_meta: arch             = gemma
0.00.290.180 I llm_load_print_meta: vocab type       = SPM
0.00.290.181 I llm_load_print_meta: n_vocab          = 256000
0.00.290.182 I llm_load_print_meta: n_merges         = 0
0.00.290.182 I llm_load_print_meta: vocab_only       = 0
0.00.290.182 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.183 I llm_load_print_meta: n_embd           = 2048
0.00.290.184 I llm_load_print_meta: n_layer          = 18
0.00.290.196 I llm_load_print_meta: n_head           = 8
0.00.290.197 I llm_load_print_meta: n_head_kv        = 1
0.00.290.197 I llm_load_print_meta: n_rot            = 256
0.00.290.197 I llm_load_print_meta: n_swa            = 0
0.00.290.198 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.198 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.199 I llm_load_print_meta: n_gqa            = 8
0.00.290.200 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.201 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.201 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.203 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.203 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.204 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.204 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.205 I llm_load_print_meta: n_ff             = 16384
0.00.290.205 I llm_load_print_meta: n_expert         = 0
0.00.290.205 I llm_load_print_meta: n_expert_used    = 0
0.00.290.206 I llm_load_print_meta: causal attn      = 1
0.00.290.206 I llm_load_print_meta: pooling type     = 0
0.00.290.207 I llm_load_print_meta: rope type        = 2
0.00.290.208 I llm_load_print_meta: rope scaling     = linear
0.00.290.209 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.209 I llm_load_print_meta: freq_scale_train = 1
0.00.290.210 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.210 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.210 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.210 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.211 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.211 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.211 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.212 I llm_load_print_meta: model type       = 2B
0.00.290.212 I llm_load_print_meta: model ftype      = Q8_0
0.00.290.213 I llm_load_print_meta: model params     = 2.51 B
0.00.290.214 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.290.214 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.215 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.215 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.216 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.216 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.216 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.217 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.217 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.218 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.218 I llm_load_print_meta: max token length = 93
0.00.365.599 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.365.607 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.365.607 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.365.608 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.365.609 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.365.609 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.370.788 I llama_new_context_with_model: n_seq_max     = 1
0.00.370.794 I llama_new_context_with_model: n_ctx         = 4096
0.00.370.795 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.370.795 I llama_new_context_with_model: n_batch       = 2048
0.00.370.795 I llama_new_context_with_model: n_ubatch      = 512
0.00.370.796 I llama_new_context_with_model: flash_attn    = 0
0.00.370.799 I llama_new_context_with_model: freq_base     = 10000.0
0.00.370.799 I llama_new_context_with_model: freq_scale    = 1
0.00.370.800 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.385.727 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.385.744 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.385.838 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.253 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.387.258 I llama_new_context_with_model: graph nodes  = 601
0.00.387.259 I llama_new_context_with_model: graph splits = 1
0.00.387.261 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.486.217 I main: llama threadpool init, n_threads = 4
0.00.486.232 I 
0.00.486.305 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.486.308 I 
0.00.486.355 I sampler seed: 1164605178
0.00.486.366 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.486.377 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.486.381 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.486.381 I 
 increably. [end of text]


0.00.770.979 I llama_perf_sampler_print:    sampling time =       0.64 ms /     5 runs   (    0.13 ms per token,  7763.98 tokens per second)
0.00.770.982 I llama_perf_context_print:        load time =     485.41 ms
0.00.770.983 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.770.986 I llama_perf_context_print:        eval time =     281.50 ms /     4 runs   (   70.38 ms per token,    14.21 tokens per second)
0.00.770.987 I llama_perf_context_print:       total time =     284.77 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.557 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.000.790 I main: load the model and apply lora adapter, if any
0.00.021.200 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.211 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.219 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.229 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.233 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.237 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.238 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.239 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.240 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.240 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.241 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.246 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.247 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.248 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.248 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.249 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.941 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.306 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.183 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.189 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.190 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.191 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.191 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.192 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.193 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.195 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.195 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.196 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.197 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.198 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.202 I llama_model_loader: - type  f32:   37 tensors
0.00.132.203 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.457 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.573 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.127 I llm_load_vocab: special tokens cache size = 5
0.00.270.927 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.945 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.946 I llm_load_print_meta: arch             = gemma
0.00.270.946 I llm_load_print_meta: vocab type       = SPM
0.00.270.947 I llm_load_print_meta: n_vocab          = 256000
0.00.270.948 I llm_load_print_meta: n_merges         = 0
0.00.270.948 I llm_load_print_meta: vocab_only       = 0
0.00.270.948 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.949 I llm_load_print_meta: n_embd           = 2048
0.00.270.949 I llm_load_print_meta: n_layer          = 18
0.00.270.962 I llm_load_print_meta: n_head           = 8
0.00.270.963 I llm_load_print_meta: n_head_kv        = 1
0.00.270.963 I llm_load_print_meta: n_rot            = 256
0.00.270.963 I llm_load_print_meta: n_swa            = 0
0.00.270.964 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.964 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.965 I llm_load_print_meta: n_gqa            = 8
0.00.270.966 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.967 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.968 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.969 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.970 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.970 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.971 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.971 I llm_load_print_meta: n_ff             = 16384
0.00.270.972 I llm_load_print_meta: n_expert         = 0
0.00.270.972 I llm_load_print_meta: n_expert_used    = 0
0.00.270.972 I llm_load_print_meta: causal attn      = 1
0.00.270.973 I llm_load_print_meta: pooling type     = 0
0.00.270.973 I llm_load_print_meta: rope type        = 2
0.00.270.973 I llm_load_print_meta: rope scaling     = linear
0.00.270.974 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.975 I llm_load_print_meta: freq_scale_train = 1
0.00.270.975 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.976 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.976 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.976 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.976 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.977 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.977 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.977 I llm_load_print_meta: model type       = 2B
0.00.270.978 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.979 I llm_load_print_meta: model params     = 2.51 B
0.00.270.980 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.980 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.981 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.981 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.982 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.982 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.982 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.982 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.983 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.983 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.983 I llm_load_print_meta: max token length = 93
0.00.342.720 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.342.727 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.347.850 I llama_new_context_with_model: n_seq_max     = 1
0.00.347.857 I llama_new_context_with_model: n_ctx         = 4096
0.00.347.858 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.347.858 I llama_new_context_with_model: n_batch       = 2048
0.00.347.859 I llama_new_context_with_model: n_ubatch      = 512
0.00.347.859 I llama_new_context_with_model: flash_attn    = 0
0.00.347.861 I llama_new_context_with_model: freq_base     = 10000.0
0.00.347.862 I llama_new_context_with_model: freq_scale    = 1
0.00.347.863 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.362.233 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.362.247 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.362.346 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.577 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.363.585 I llama_new_context_with_model: graph nodes  = 601
0.00.363.585 I llama_new_context_with_model: graph splits = 1
0.00.363.587 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.466.021 I main: llama threadpool init, n_threads = 4
0.00.466.038 I 
0.00.466.121 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.466.126 I 
0.00.466.181 I sampler seed: 2617616350
0.00.466.193 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.466.205 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.466.209 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.466.210 I 
 increasities

**Answer:**

I am unable to provide a response that promotes or engages in sexually suggestive or inappropriate content. My purpose is to assist with tasks

0.02.893.207 I llama_perf_sampler_print:    sampling time =       5.32 ms /    33 runs   (    0.16 ms per token,  6207.67 tokens per second)
0.02.893.209 I llama_perf_context_print:        load time =     465.21 ms
0.02.893.211 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.893.213 I llama_perf_context_print:        eval time =    2407.48 ms /    32 runs   (   75.23 ms per token,    13.29 tokens per second)
0.02.893.214 I llama_perf_context_print:       total time =    2427.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.493s
user	0m26.796s
sys	0m9.385s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4202 (99c5439e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40210.61 ms
main:    total time = 40210.61 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.595 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.000.808 I main: load the model and apply lora adapter, if any
0.00.021.153 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.163 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.172 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.177 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.179 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.185 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.186 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.186 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.188 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.188 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.188 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.194 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.195 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.195 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.196 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.197 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.076 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.578 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.449 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.455 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.456 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.456 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.457 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.458 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.459 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.461 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.462 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.463 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.463 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.464 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.468 I llama_model_loader: - type  f32:   37 tensors
0.00.132.469 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.470 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.854 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.938 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.530 I llm_load_vocab: special tokens cache size = 5
0.00.268.608 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.626 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.626 I llm_load_print_meta: arch             = gemma
0.00.268.627 I llm_load_print_meta: vocab type       = SPM
0.00.268.628 I llm_load_print_meta: n_vocab          = 256000
0.00.268.628 I llm_load_print_meta: n_merges         = 0
0.00.268.629 I llm_load_print_meta: vocab_only       = 0
0.00.268.629 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.629 I llm_load_print_meta: n_embd           = 2048
0.00.268.630 I llm_load_print_meta: n_layer          = 18
0.00.268.642 I llm_load_print_meta: n_head           = 8
0.00.268.643 I llm_load_print_meta: n_head_kv        = 1
0.00.268.643 I llm_load_print_meta: n_rot            = 256
0.00.268.644 I llm_load_print_meta: n_swa            = 0
0.00.268.644 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.644 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.645 I llm_load_print_meta: n_gqa            = 8
0.00.268.646 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.647 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.647 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.649 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.649 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.649 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.650 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.651 I llm_load_print_meta: n_ff             = 16384
0.00.268.651 I llm_load_print_meta: n_expert         = 0
0.00.268.651 I llm_load_print_meta: n_expert_used    = 0
0.00.268.652 I llm_load_print_meta: causal attn      = 1
0.00.268.652 I llm_load_print_meta: pooling type     = 0
0.00.268.652 I llm_load_print_meta: rope type        = 2
0.00.268.652 I llm_load_print_meta: rope scaling     = linear
0.00.268.654 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.654 I llm_load_print_meta: freq_scale_train = 1
0.00.268.654 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.655 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.655 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.655 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.655 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.656 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.656 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.656 I llm_load_print_meta: model type       = 2B
0.00.268.657 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.268.658 I llm_load_print_meta: model params     = 2.51 B
0.00.268.659 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.268.659 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.660 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.660 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.660 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.660 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.661 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.661 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.661 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.662 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.662 I llm_load_print_meta: max token length = 93
0.00.328.568 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.328.577 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.328.578 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.328.578 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.328.579 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.328.580 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.333.814 I llama_new_context_with_model: n_seq_max     = 1
0.00.333.820 I llama_new_context_with_model: n_ctx         = 4096
0.00.333.820 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.333.821 I llama_new_context_with_model: n_batch       = 2048
0.00.333.821 I llama_new_context_with_model: n_ubatch      = 512
0.00.333.822 I llama_new_context_with_model: flash_attn    = 0
0.00.333.825 I llama_new_context_with_model: freq_base     = 10000.0
0.00.333.826 I llama_new_context_with_model: freq_scale    = 1
0.00.333.826 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.348.579 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.348.594 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.348.685 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.350.009 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.350.014 I llama_new_context_with_model: graph nodes  = 601
0.00.350.015 I llama_new_context_with_model: graph splits = 1
0.00.350.017 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.744 I main: llama threadpool init, n_threads = 4
0.00.425.757 I 
0.00.425.829 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.425.832 I 
0.00.425.876 I sampler seed: 556323663
0.00.425.886 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.890 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.425.890 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.891 I 
 seconded "The Importance of Empathy" to your list of important life lessons.

**The Importance of Empathy**

Empathy is the ability to understand and

0.02.059.436 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6563.25 tokens per second)
0.02.059.438 I llama_perf_context_print:        load time =     424.92 ms
0.02.059.439 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.059.441 I llama_perf_context_print:        eval time =    1614.64 ms /    32 runs   (   50.46 ms per token,    19.82 tokens per second)
0.02.059.442 I llama_perf_context_print:       total time =    1633.70 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4202 (99c5439e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40190.72 ms
main:    total time = 40190.72 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.526 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.000.750 I main: load the model and apply lora adapter, if any
0.00.020.731 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.020.747 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.752 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.753 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.757 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.758 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.758 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.759 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.760 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.761 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.764 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.765 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.766 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.766 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.768 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.699 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.712 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.581 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.587 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.588 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.589 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.589 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.590 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.591 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.593 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.594 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.598 I llama_model_loader: - type  f32:   37 tensors
0.00.131.599 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.599 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.122 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.237 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.785 I llm_load_vocab: special tokens cache size = 5
0.00.264.949 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.965 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.966 I llm_load_print_meta: arch             = gemma
0.00.264.967 I llm_load_print_meta: vocab type       = SPM
0.00.264.967 I llm_load_print_meta: n_vocab          = 256000
0.00.264.968 I llm_load_print_meta: n_merges         = 0
0.00.264.968 I llm_load_print_meta: vocab_only       = 0
0.00.264.968 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.969 I llm_load_print_meta: n_embd           = 2048
0.00.264.969 I llm_load_print_meta: n_layer          = 18
0.00.264.980 I llm_load_print_meta: n_head           = 8
0.00.264.981 I llm_load_print_meta: n_head_kv        = 1
0.00.264.982 I llm_load_print_meta: n_rot            = 256
0.00.264.982 I llm_load_print_meta: n_swa            = 0
0.00.264.982 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.982 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.984 I llm_load_print_meta: n_gqa            = 8
0.00.264.985 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.986 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.986 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.988 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.988 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.988 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.989 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.990 I llm_load_print_meta: n_ff             = 16384
0.00.264.990 I llm_load_print_meta: n_expert         = 0
0.00.264.990 I llm_load_print_meta: n_expert_used    = 0
0.00.264.991 I llm_load_print_meta: causal attn      = 1
0.00.264.991 I llm_load_print_meta: pooling type     = 0
0.00.264.991 I llm_load_print_meta: rope type        = 2
0.00.264.992 I llm_load_print_meta: rope scaling     = linear
0.00.264.993 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.994 I llm_load_print_meta: freq_scale_train = 1
0.00.264.994 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.995 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.995 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.995 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.996 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.996 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.996 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.997 I llm_load_print_meta: model type       = 2B
0.00.264.997 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.264.998 I llm_load_print_meta: model params     = 2.51 B
0.00.264.999 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.264.999 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.999 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.000 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.000 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.001 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.001 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.001 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.002 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.002 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.002 I llm_load_print_meta: max token length = 93
0.00.321.649 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.326.619 I llama_new_context_with_model: n_seq_max     = 1
0.00.326.625 I llama_new_context_with_model: n_ctx         = 4096
0.00.326.625 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.326.626 I llama_new_context_with_model: n_batch       = 2048
0.00.326.626 I llama_new_context_with_model: n_ubatch      = 512
0.00.326.626 I llama_new_context_with_model: flash_attn    = 0
0.00.326.628 I llama_new_context_with_model: freq_base     = 10000.0
0.00.326.629 I llama_new_context_with_model: freq_scale    = 1
0.00.326.630 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.341.171 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.341.186 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.341.273 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.342.468 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.342.475 I llama_new_context_with_model: graph nodes  = 601
0.00.342.475 I llama_new_context_with_model: graph splits = 1
0.00.342.477 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.417.372 I main: llama threadpool init, n_threads = 4
0.00.417.388 I 
0.00.417.460 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.417.463 I 
0.00.417.506 I sampler seed: 2792273075
0.00.417.516 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.417.528 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.417.532 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.417.532 I 
 squared in the news. What does this mean for the future of organ transplantation?

The recent news about the scarcity of organs for transplantation has raised concerns about

0.01.982.885 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6672.06 tokens per second)
0.01.982.888 I llama_perf_context_print:        load time =     416.60 ms
0.01.982.889 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.982.891 I llama_perf_context_print:        eval time =    1546.86 ms /    32 runs   (   48.34 ms per token,    20.69 tokens per second)
0.01.982.893 I llama_perf_context_print:       total time =    1565.52 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.251s
user	10m24.210s
sys	0m6.889s
```

### pythia_1_4b

Pythia 1.4B:
- status: 0
- perplexity:
  - f16 @ 10.1383 OK
  - q8_0 @ 10.1294 OK
  - q4_0 @ 11.2190 OK
  - q4_1 @ 10.5418 OK
  - q5_0 @ 10.0568 OK
  - q5_1 @ 10.0893 OK
  - q3_k @ 12.7265 OK
  - q4_k @ 10.5531 OK
  - q5_k @ 10.5345 OK
  - q6_k @ 10.5551 OK
- imatrix:
```
Final estimate: PPL = 10.1383 +/- 3.22270
```
- f16: 
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-f16.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.555 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.768 I main: llama backend init
0.00.000.774 I main: load the model and apply lora adapter, if any
0.00.009.695 I llama_model_loader: loaded meta data with 22 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.009.709 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.714 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.715 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.715 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.716 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.716 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.721 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.722 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.723 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.723 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.724 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.724 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.726 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.729 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.729 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.730 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.599 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.928 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.363 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.369 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.369 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.370 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.370 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.372 I llama_model_loader: - type  f32:  194 tensors
0.00.022.373 I llama_model_loader: - type  f16:   98 tensors
0.00.066.770 I llm_load_vocab: special tokens cache size = 25
0.00.080.562 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.573 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.574 I llm_load_print_meta: arch             = gptneox
0.00.080.574 I llm_load_print_meta: vocab type       = BPE
0.00.080.575 I llm_load_print_meta: n_vocab          = 50304
0.00.080.576 I llm_load_print_meta: n_merges         = 50009
0.00.080.577 I llm_load_print_meta: vocab_only       = 0
0.00.080.577 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.577 I llm_load_print_meta: n_embd           = 2048
0.00.080.578 I llm_load_print_meta: n_layer          = 24
0.00.080.587 I llm_load_print_meta: n_head           = 16
0.00.080.588 I llm_load_print_meta: n_head_kv        = 16
0.00.080.588 I llm_load_print_meta: n_rot            = 32
0.00.080.589 I llm_load_print_meta: n_swa            = 0
0.00.080.589 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.589 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.590 I llm_load_print_meta: n_gqa            = 1
0.00.080.592 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.595 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.596 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.597 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.597 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.597 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.598 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.599 I llm_load_print_meta: n_ff             = 8192
0.00.080.599 I llm_load_print_meta: n_expert         = 0
0.00.080.599 I llm_load_print_meta: n_expert_used    = 0
0.00.080.599 I llm_load_print_meta: causal attn      = 1
0.00.080.600 I llm_load_print_meta: pooling type     = 0
0.00.080.600 I llm_load_print_meta: rope type        = 2
0.00.080.600 I llm_load_print_meta: rope scaling     = linear
0.00.080.601 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.602 I llm_load_print_meta: freq_scale_train = 1
0.00.080.602 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.603 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.603 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.603 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.604 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.604 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.604 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.605 I llm_load_print_meta: model type       = 1.4B
0.00.080.606 I llm_load_print_meta: model ftype      = all F32 (guessed)
0.00.080.606 I llm_load_print_meta: model params     = 1.41 B
0.00.080.608 I llm_load_print_meta: model size       = 2.64 GiB (16.01 BPW) 
0.00.080.608 I llm_load_print_meta: general.name     = 1.4B
0.00.080.608 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.608 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.609 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.610 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.611 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.611 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.612 I llm_load_print_meta: max token length = 1024
0.00.222.520 I llm_load_tensors:   CPU_Mapped model buffer size =  2699.45 MiB
...............................................................................
0.00.225.037 I llama_new_context_with_model: n_seq_max     = 1
0.00.225.043 I llama_new_context_with_model: n_ctx         = 2048
0.00.225.043 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.225.043 I llama_new_context_with_model: n_batch       = 2048
0.00.225.044 I llama_new_context_with_model: n_ubatch      = 512
0.00.225.044 I llama_new_context_with_model: flash_attn    = 0
0.00.225.046 I llama_new_context_with_model: freq_base     = 10000.0
0.00.225.047 I llama_new_context_with_model: freq_scale    = 1
0.00.300.016 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.300.033 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.300.061 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.302.290 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.302.296 I llama_new_context_with_model: graph nodes  = 967
0.00.302.296 I llama_new_context_with_model: graph splits = 1
0.00.302.299 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.421.589 I main: llama threadpool init, n_threads = 4
0.00.421.608 I 
0.00.421.683 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.421.687 I 
0.00.421.796 I sampler seed: 1234
0.00.421.808 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.421.812 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.421.812 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.421.813 I 
I believe the meaning of life is to do the things we love, with the people we love, and the world we love.

I believe that our only fear is not knowing. And I believe that’s the fear that keeps us from doing the things that we know are good for us.

I believe that we have a choice.

0.04.786.709 I llama_perf_sampler_print:    sampling time =       2.83 ms /    71 runs   (    0.04 ms per token, 25132.74 tokens per second)
0.04.786.712 I llama_perf_context_print:        load time =     420.80 ms
0.04.786.714 I llama_perf_context_print: prompt eval time =     183.12 ms /     7 tokens (   26.16 ms per token,    38.23 tokens per second)
0.04.786.716 I llama_perf_context_print:        eval time =    4171.49 ms /    63 runs   (   66.21 ms per token,    15.10 tokens per second)
0.04.786.741 I llama_perf_context_print:       total time =    4365.13 ms /    70 tokens

real	0m4.881s
user	0m17.940s
sys	0m0.320s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-f16.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.242 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.193 I llama_model_loader: loaded meta data with 22 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.009.207 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.216 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.217 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.218 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.219 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.219 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.223 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.224 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.224 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.226 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.226 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.227 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.228 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.232 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.233 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.233 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.021 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.338 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.704 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.710 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.710 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.711 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.711 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.713 I llama_model_loader: - type  f32:  194 tensors
0.00.021.714 I llama_model_loader: - type  f16:   98 tensors
0.00.067.032 I llm_load_vocab: special tokens cache size = 25
0.00.080.949 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.961 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.962 I llm_load_print_meta: arch             = gptneox
0.00.080.963 I llm_load_print_meta: vocab type       = BPE
0.00.080.963 I llm_load_print_meta: n_vocab          = 50304
0.00.080.963 I llm_load_print_meta: n_merges         = 50009
0.00.080.964 I llm_load_print_meta: vocab_only       = 0
0.00.080.964 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.964 I llm_load_print_meta: n_embd           = 2048
0.00.080.965 I llm_load_print_meta: n_layer          = 24
0.00.080.976 I llm_load_print_meta: n_head           = 16
0.00.080.977 I llm_load_print_meta: n_head_kv        = 16
0.00.080.977 I llm_load_print_meta: n_rot            = 32
0.00.080.977 I llm_load_print_meta: n_swa            = 0
0.00.080.978 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.978 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.979 I llm_load_print_meta: n_gqa            = 1
0.00.080.981 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.981 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.983 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.984 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.984 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.985 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.985 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.986 I llm_load_print_meta: n_ff             = 8192
0.00.080.986 I llm_load_print_meta: n_expert         = 0
0.00.080.986 I llm_load_print_meta: n_expert_used    = 0
0.00.080.987 I llm_load_print_meta: causal attn      = 1
0.00.080.987 I llm_load_print_meta: pooling type     = 0
0.00.080.987 I llm_load_print_meta: rope type        = 2
0.00.080.988 I llm_load_print_meta: rope scaling     = linear
0.00.080.989 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.990 I llm_load_print_meta: freq_scale_train = 1
0.00.080.990 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.990 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.991 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.991 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.991 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.991 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.992 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.992 I llm_load_print_meta: model type       = 1.4B
0.00.080.993 I llm_load_print_meta: model ftype      = all F32 (guessed)
0.00.080.994 I llm_load_print_meta: model params     = 1.41 B
0.00.080.995 I llm_load_print_meta: model size       = 2.64 GiB (16.01 BPW) 
0.00.080.995 I llm_load_print_meta: general.name     = 1.4B
0.00.080.996 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.996 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.997 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.997 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.997 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.998 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.998 I llm_load_print_meta: max token length = 1024
0.00.225.994 I llm_load_tensors:   CPU_Mapped model buffer size =  2699.45 MiB
...............................................................................
0.00.228.488 I llama_new_context_with_model: n_seq_max     = 1
0.00.228.494 I llama_new_context_with_model: n_ctx         = 128
0.00.228.495 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.228.495 I llama_new_context_with_model: n_batch       = 128
0.00.228.496 I llama_new_context_with_model: n_ubatch      = 128
0.00.228.496 I llama_new_context_with_model: flash_attn    = 0
0.00.228.498 I llama_new_context_with_model: freq_base     = 10000.0
0.00.228.499 I llama_new_context_with_model: freq_scale    = 1
0.00.228.500 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.233.907 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.233.918 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.233.938 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.236.162 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.236.169 I llama_new_context_with_model: graph nodes  = 967
0.00.236.169 I llama_new_context_with_model: graph splits = 1
0.00.236.171 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.326.566 I 
0.00.326.653 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.326.662 I perplexity: tokenizing the input ..
0.00.336.756 I perplexity: tokenization took 10.088 ms
0.00.336.782 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.03.160.300 I perplexity: 2.82 seconds per pass - ETA 0.03 minutes
[1]10.1383,
0.03.165.515 I Final estimate: PPL = 10.1383 +/- 3.22270

0.03.165.545 I llama_perf_context_print:        load time =     326.30 ms
0.03.165.547 I llama_perf_context_print: prompt eval time =    2821.53 ms /   128 tokens (   22.04 ms per token,    45.37 tokens per second)
0.03.165.548 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.03.165.549 I llama_perf_context_print:       total time =    2838.98 ms /   129 tokens

real	0m3.259s
user	0m11.780s
sys	0m0.236s
```
- q8_0:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.535 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.733 I main: llama backend init
0.00.000.739 I main: load the model and apply lora adapter, if any
0.00.009.663 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.009.675 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.683 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.687 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.687 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.688 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.688 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.693 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.694 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.694 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.695 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.695 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.696 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.697 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.700 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.700 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.701 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.489 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.994 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.388 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.393 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.394 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.394 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.395 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.395 I llama_model_loader: - kv  22:                          general.file_type u32              = 7
0.00.022.397 I llama_model_loader: - type  f32:  194 tensors
0.00.022.398 I llama_model_loader: - type q8_0:   98 tensors
0.00.066.776 I llm_load_vocab: special tokens cache size = 25
0.00.080.587 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.599 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.600 I llm_load_print_meta: arch             = gptneox
0.00.080.600 I llm_load_print_meta: vocab type       = BPE
0.00.080.601 I llm_load_print_meta: n_vocab          = 50304
0.00.080.601 I llm_load_print_meta: n_merges         = 50009
0.00.080.602 I llm_load_print_meta: vocab_only       = 0
0.00.080.602 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.602 I llm_load_print_meta: n_embd           = 2048
0.00.080.603 I llm_load_print_meta: n_layer          = 24
0.00.080.612 I llm_load_print_meta: n_head           = 16
0.00.080.613 I llm_load_print_meta: n_head_kv        = 16
0.00.080.614 I llm_load_print_meta: n_rot            = 32
0.00.080.614 I llm_load_print_meta: n_swa            = 0
0.00.080.615 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.615 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.616 I llm_load_print_meta: n_gqa            = 1
0.00.080.617 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.618 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.619 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.620 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.620 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.620 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.621 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.622 I llm_load_print_meta: n_ff             = 8192
0.00.080.622 I llm_load_print_meta: n_expert         = 0
0.00.080.622 I llm_load_print_meta: n_expert_used    = 0
0.00.080.623 I llm_load_print_meta: causal attn      = 1
0.00.080.623 I llm_load_print_meta: pooling type     = 0
0.00.080.623 I llm_load_print_meta: rope type        = 2
0.00.080.623 I llm_load_print_meta: rope scaling     = linear
0.00.080.625 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.626 I llm_load_print_meta: freq_scale_train = 1
0.00.080.626 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.627 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.627 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.627 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.628 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.628 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.628 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.628 I llm_load_print_meta: model type       = 1.4B
0.00.080.629 I llm_load_print_meta: model ftype      = Q8_0
0.00.080.630 I llm_load_print_meta: model params     = 1.41 B
0.00.080.631 I llm_load_print_meta: model size       = 1.40 GiB (8.51 BPW) 
0.00.080.631 I llm_load_print_meta: general.name     = 1.4B
0.00.080.631 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.632 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.632 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.633 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.633 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.633 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.634 I llm_load_print_meta: max token length = 1024
0.00.163.202 I llm_load_tensors:   CPU_Mapped model buffer size =  1435.23 MiB
...............................................................................
0.00.165.752 I llama_new_context_with_model: n_seq_max     = 1
0.00.165.757 I llama_new_context_with_model: n_ctx         = 2048
0.00.165.758 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.165.758 I llama_new_context_with_model: n_batch       = 2048
0.00.165.759 I llama_new_context_with_model: n_ubatch      = 512
0.00.165.759 I llama_new_context_with_model: flash_attn    = 0
0.00.165.761 I llama_new_context_with_model: freq_base     = 10000.0
0.00.165.762 I llama_new_context_with_model: freq_scale    = 1
0.00.242.615 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.242.630 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.242.660 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.245.218 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.245.224 I llama_new_context_with_model: graph nodes  = 967
0.00.245.224 I llama_new_context_with_model: graph splits = 1
0.00.245.227 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.333.456 I main: llama threadpool init, n_threads = 4
0.00.333.472 I 
0.00.333.542 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.333.546 I 
0.00.333.645 I sampler seed: 1234
0.00.333.655 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.333.668 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.333.671 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.333.672 I 
I believe the meaning of life is to become as
spiritual as you can, and to become spiritual as you can.

I have lived
in the spiritual world and have been able to touch the spirit of the
beasts. I believe I am now spiritually connected with them. I believe
that I am spiritually connected with the

0.03.038.128 I llama_perf_sampler_print:    sampling time =       2.36 ms /    71 runs   (    0.03 ms per token, 30084.75 tokens per second)
0.03.038.131 I llama_perf_context_print:        load time =     332.70 ms
0.03.038.133 I llama_perf_context_print: prompt eval time =     118.25 ms /     7 tokens (   16.89 ms per token,    59.20 tokens per second)
0.03.038.135 I llama_perf_context_print:        eval time =    2576.74 ms /    63 runs   (   40.90 ms per token,    24.45 tokens per second)
0.03.038.136 I llama_perf_context_print:       total time =    2704.68 ms /    70 tokens

real	0m3.109s
user	0m11.190s
sys	0m0.224s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.617 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.606 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.009.620 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.626 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.627 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.627 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.628 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.628 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.633 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.634 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.634 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.635 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.635 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.636 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.637 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.641 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.642 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.643 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.399 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.740 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.110 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.116 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.116 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.116 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.117 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.117 I llama_model_loader: - kv  22:                          general.file_type u32              = 7
0.00.022.119 I llama_model_loader: - type  f32:  194 tensors
0.00.022.120 I llama_model_loader: - type q8_0:   98 tensors
0.00.068.620 I llm_load_vocab: special tokens cache size = 25
0.00.082.518 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.082.533 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.082.533 I llm_load_print_meta: arch             = gptneox
0.00.082.534 I llm_load_print_meta: vocab type       = BPE
0.00.082.535 I llm_load_print_meta: n_vocab          = 50304
0.00.082.535 I llm_load_print_meta: n_merges         = 50009
0.00.082.535 I llm_load_print_meta: vocab_only       = 0
0.00.082.536 I llm_load_print_meta: n_ctx_train      = 2048
0.00.082.536 I llm_load_print_meta: n_embd           = 2048
0.00.082.536 I llm_load_print_meta: n_layer          = 24
0.00.082.548 I llm_load_print_meta: n_head           = 16
0.00.082.549 I llm_load_print_meta: n_head_kv        = 16
0.00.082.549 I llm_load_print_meta: n_rot            = 32
0.00.082.550 I llm_load_print_meta: n_swa            = 0
0.00.082.550 I llm_load_print_meta: n_embd_head_k    = 128
0.00.082.550 I llm_load_print_meta: n_embd_head_v    = 128
0.00.082.551 I llm_load_print_meta: n_gqa            = 1
0.00.082.552 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.082.553 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.082.554 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.082.555 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.082.555 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.082.555 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.082.555 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.082.556 I llm_load_print_meta: n_ff             = 8192
0.00.082.556 I llm_load_print_meta: n_expert         = 0
0.00.082.557 I llm_load_print_meta: n_expert_used    = 0
0.00.082.557 I llm_load_print_meta: causal attn      = 1
0.00.082.557 I llm_load_print_meta: pooling type     = 0
0.00.082.558 I llm_load_print_meta: rope type        = 2
0.00.082.558 I llm_load_print_meta: rope scaling     = linear
0.00.082.559 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.082.560 I llm_load_print_meta: freq_scale_train = 1
0.00.082.560 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.082.561 I llm_load_print_meta: rope_finetuned   = unknown
0.00.082.561 I llm_load_print_meta: ssm_d_conv       = 0
0.00.082.561 I llm_load_print_meta: ssm_d_inner      = 0
0.00.082.561 I llm_load_print_meta: ssm_d_state      = 0
0.00.082.562 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.082.562 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.082.562 I llm_load_print_meta: model type       = 1.4B
0.00.082.563 I llm_load_print_meta: model ftype      = Q8_0
0.00.082.564 I llm_load_print_meta: model params     = 1.41 B
0.00.082.564 I llm_load_print_meta: model size       = 1.40 GiB (8.51 BPW) 
0.00.082.565 I llm_load_print_meta: general.name     = 1.4B
0.00.082.565 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.082.566 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.082.566 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.082.566 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.082.567 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.082.567 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.082.567 I llm_load_print_meta: max token length = 1024
0.00.163.669 I llm_load_tensors:   CPU_Mapped model buffer size =  1435.23 MiB
...............................................................................
0.00.166.495 I llama_new_context_with_model: n_seq_max     = 1
0.00.166.499 I llama_new_context_with_model: n_ctx         = 128
0.00.166.500 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.166.500 I llama_new_context_with_model: n_batch       = 128
0.00.166.500 I llama_new_context_with_model: n_ubatch      = 128
0.00.166.501 I llama_new_context_with_model: flash_attn    = 0
0.00.166.503 I llama_new_context_with_model: freq_base     = 10000.0
0.00.166.504 I llama_new_context_with_model: freq_scale    = 1
0.00.166.505 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.171.651 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.171.663 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.171.682 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.174.168 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.174.174 I llama_new_context_with_model: graph nodes  = 967
0.00.174.174 I llama_new_context_with_model: graph splits = 1
0.00.174.176 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.232.409 I 
0.00.232.488 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.232.499 I perplexity: tokenizing the input ..
0.00.242.638 I perplexity: tokenization took 10.135 ms
0.00.242.656 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.966.392 I perplexity: 1.72 seconds per pass - ETA 0.02 minutes
[1]10.1294,
0.01.971.578 I Final estimate: PPL = 10.1294 +/- 3.21719

0.01.971.610 I llama_perf_context_print:        load time =     231.76 ms
0.01.971.612 I llama_perf_context_print: prompt eval time =    1722.12 ms /   128 tokens (   13.45 ms per token,    74.33 tokens per second)
0.01.971.614 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.971.615 I llama_perf_context_print:       total time =    1739.20 ms /   129 tokens

real	0m2.033s
user	0m7.251s
sys	0m0.148s
```
- q4_0:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.536 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.000.751 I main: load the model and apply lora adapter, if any
0.00.009.748 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
0.00.009.762 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.769 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.770 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.771 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.771 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.772 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.777 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.777 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.778 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.779 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.780 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.780 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.781 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.784 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.785 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.785 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.570 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.897 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.373 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.378 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.378 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.379 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.379 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.380 I llama_model_loader: - kv  22:                          general.file_type u32              = 2
0.00.022.381 I llama_model_loader: - type  f32:  194 tensors
0.00.022.382 I llama_model_loader: - type q4_0:   97 tensors
0.00.022.383 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.329 I llm_load_vocab: special tokens cache size = 25
0.00.081.104 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.117 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.117 I llm_load_print_meta: arch             = gptneox
0.00.081.118 I llm_load_print_meta: vocab type       = BPE
0.00.081.119 I llm_load_print_meta: n_vocab          = 50304
0.00.081.119 I llm_load_print_meta: n_merges         = 50009
0.00.081.120 I llm_load_print_meta: vocab_only       = 0
0.00.081.120 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.121 I llm_load_print_meta: n_embd           = 2048
0.00.081.121 I llm_load_print_meta: n_layer          = 24
0.00.081.131 I llm_load_print_meta: n_head           = 16
0.00.081.132 I llm_load_print_meta: n_head_kv        = 16
0.00.081.132 I llm_load_print_meta: n_rot            = 32
0.00.081.133 I llm_load_print_meta: n_swa            = 0
0.00.081.133 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.133 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.134 I llm_load_print_meta: n_gqa            = 1
0.00.081.135 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.136 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.138 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.139 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.139 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.139 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.140 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.141 I llm_load_print_meta: n_ff             = 8192
0.00.081.142 I llm_load_print_meta: n_expert         = 0
0.00.081.143 I llm_load_print_meta: n_expert_used    = 0
0.00.081.143 I llm_load_print_meta: causal attn      = 1
0.00.081.143 I llm_load_print_meta: pooling type     = 0
0.00.081.143 I llm_load_print_meta: rope type        = 2
0.00.081.144 I llm_load_print_meta: rope scaling     = linear
0.00.081.145 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.146 I llm_load_print_meta: freq_scale_train = 1
0.00.081.146 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.146 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.147 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.147 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.148 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.148 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.148 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.149 I llm_load_print_meta: model type       = 1.4B
0.00.081.149 I llm_load_print_meta: model ftype      = Q4_0
0.00.081.150 I llm_load_print_meta: model params     = 1.41 B
0.00.081.151 I llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
0.00.081.152 I llm_load_print_meta: general.name     = 1.4B
0.00.081.152 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.153 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.153 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.153 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.156 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.156 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.156 I llm_load_print_meta: max token length = 1024
0.00.125.684 I llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
0.00.128.195 I llama_new_context_with_model: n_seq_max     = 1
0.00.128.200 I llama_new_context_with_model: n_ctx         = 2048
0.00.128.200 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.128.200 I llama_new_context_with_model: n_batch       = 2048
0.00.128.201 I llama_new_context_with_model: n_ubatch      = 512
0.00.128.201 I llama_new_context_with_model: flash_attn    = 0
0.00.128.203 I llama_new_context_with_model: freq_base     = 10000.0
0.00.128.204 I llama_new_context_with_model: freq_scale    = 1
0.00.205.498 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.205.514 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.205.543 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.208.084 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.208.091 I llama_new_context_with_model: graph nodes  = 967
0.00.208.091 I llama_new_context_with_model: graph splits = 1
0.00.208.095 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.286.200 I main: llama threadpool init, n_threads = 4
0.00.286.218 I 
0.00.286.291 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.286.295 I 
0.00.286.402 I sampler seed: 1234
0.00.286.412 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.286.415 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.286.416 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.286.417 I 
I believe the meaning of life is to know and experience what you love and to do it in a way that you enjoy.

I have lived most of my life in the U.S.A. and I feel that the U.S.A. is a very forgiving country for mistakes as long as you don’t hurt anyone else

0.02.335.463 I llama_perf_sampler_print:    sampling time =       2.39 ms /    71 runs   (    0.03 ms per token, 29731.99 tokens per second)
0.02.335.466 I llama_perf_context_print:        load time =     285.43 ms
0.02.335.467 I llama_perf_context_print: prompt eval time =     116.41 ms /     7 tokens (   16.63 ms per token,    60.13 tokens per second)
0.02.335.469 I llama_perf_context_print:        eval time =    1923.44 ms /    63 runs   (   30.53 ms per token,    32.75 tokens per second)
0.02.335.469 I llama_perf_context_print:       total time =    2049.27 ms /    70 tokens

real	0m2.382s
user	0m8.539s
sys	0m0.156s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.596 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.564 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
0.00.009.577 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.582 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.584 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.584 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.586 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.586 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.590 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.590 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.591 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.592 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.592 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.593 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.594 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.597 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.597 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.598 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.353 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.682 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.094 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.099 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.100 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.100 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.101 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.101 I llama_model_loader: - kv  22:                          general.file_type u32              = 2
0.00.022.103 I llama_model_loader: - type  f32:  194 tensors
0.00.022.104 I llama_model_loader: - type q4_0:   97 tensors
0.00.022.104 I llama_model_loader: - type q6_K:    1 tensors
0.00.068.909 I llm_load_vocab: special tokens cache size = 25
0.00.082.921 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.082.936 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.082.937 I llm_load_print_meta: arch             = gptneox
0.00.082.937 I llm_load_print_meta: vocab type       = BPE
0.00.082.938 I llm_load_print_meta: n_vocab          = 50304
0.00.082.938 I llm_load_print_meta: n_merges         = 50009
0.00.082.938 I llm_load_print_meta: vocab_only       = 0
0.00.082.939 I llm_load_print_meta: n_ctx_train      = 2048
0.00.082.939 I llm_load_print_meta: n_embd           = 2048
0.00.082.939 I llm_load_print_meta: n_layer          = 24
0.00.082.951 I llm_load_print_meta: n_head           = 16
0.00.082.952 I llm_load_print_meta: n_head_kv        = 16
0.00.082.953 I llm_load_print_meta: n_rot            = 32
0.00.082.953 I llm_load_print_meta: n_swa            = 0
0.00.082.953 I llm_load_print_meta: n_embd_head_k    = 128
0.00.082.953 I llm_load_print_meta: n_embd_head_v    = 128
0.00.082.954 I llm_load_print_meta: n_gqa            = 1
0.00.082.955 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.082.956 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.082.958 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.082.958 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.082.959 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.082.959 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.082.959 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.082.960 I llm_load_print_meta: n_ff             = 8192
0.00.082.960 I llm_load_print_meta: n_expert         = 0
0.00.082.961 I llm_load_print_meta: n_expert_used    = 0
0.00.082.961 I llm_load_print_meta: causal attn      = 1
0.00.082.961 I llm_load_print_meta: pooling type     = 0
0.00.082.961 I llm_load_print_meta: rope type        = 2
0.00.082.962 I llm_load_print_meta: rope scaling     = linear
0.00.082.963 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.082.964 I llm_load_print_meta: freq_scale_train = 1
0.00.082.964 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.082.964 I llm_load_print_meta: rope_finetuned   = unknown
0.00.082.965 I llm_load_print_meta: ssm_d_conv       = 0
0.00.082.965 I llm_load_print_meta: ssm_d_inner      = 0
0.00.082.965 I llm_load_print_meta: ssm_d_state      = 0
0.00.082.965 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.082.965 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.082.966 I llm_load_print_meta: model type       = 1.4B
0.00.082.966 I llm_load_print_meta: model ftype      = Q4_0
0.00.082.967 I llm_load_print_meta: model params     = 1.41 B
0.00.082.968 I llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
0.00.082.969 I llm_load_print_meta: general.name     = 1.4B
0.00.082.970 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.082.970 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.082.971 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.082.971 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.082.971 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.082.972 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.082.972 I llm_load_print_meta: max token length = 1024
0.00.127.307 I llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
0.00.129.865 I llama_new_context_with_model: n_seq_max     = 1
0.00.129.870 I llama_new_context_with_model: n_ctx         = 128
0.00.129.870 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.129.870 I llama_new_context_with_model: n_batch       = 128
0.00.129.871 I llama_new_context_with_model: n_ubatch      = 128
0.00.129.871 I llama_new_context_with_model: flash_attn    = 0
0.00.129.873 I llama_new_context_with_model: freq_base     = 10000.0
0.00.129.874 I llama_new_context_with_model: freq_scale    = 1
0.00.129.875 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.134.946 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.134.956 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.134.974 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.137.078 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.137.083 I llama_new_context_with_model: graph nodes  = 967
0.00.137.084 I llama_new_context_with_model: graph splits = 1
0.00.137.086 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.184.940 I 
0.00.185.044 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.185.053 I perplexity: tokenizing the input ..
0.00.195.281 I perplexity: tokenization took 10.223 ms
0.00.195.307 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.112.294 I perplexity: 1.92 seconds per pass - ETA 0.02 minutes
[1]11.2190,
0.02.120.522 I Final estimate: PPL = 11.2190 +/- 3.50798

0.02.120.553 I llama_perf_context_print:        load time =     184.32 ms
0.02.120.555 I llama_perf_context_print: prompt eval time =    1915.14 ms /   128 tokens (   14.96 ms per token,    66.84 tokens per second)
0.02.120.556 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.120.557 I llama_perf_context_print:       total time =    1935.61 ms /   129 tokens

real	0m2.159s
user	0m7.964s
sys	0m0.112s
```
- q4_1:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.568 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.000.754 I main: load the model and apply lora adapter, if any
0.00.009.787 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf (version GGUF V3 (latest))
0.00.009.801 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.807 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.808 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.809 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.809 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.810 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.814 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.815 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.816 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.817 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.817 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.817 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.818 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.823 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.824 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.824 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.616 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.941 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.315 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.320 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.321 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.321 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.322 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.323 I llama_model_loader: - kv  22:                          general.file_type u32              = 3
0.00.022.325 I llama_model_loader: - type  f32:  194 tensors
0.00.022.326 I llama_model_loader: - type q4_1:   97 tensors
0.00.022.326 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.848 I llm_load_vocab: special tokens cache size = 25
0.00.081.722 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.739 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.740 I llm_load_print_meta: arch             = gptneox
0.00.081.740 I llm_load_print_meta: vocab type       = BPE
0.00.081.741 I llm_load_print_meta: n_vocab          = 50304
0.00.081.742 I llm_load_print_meta: n_merges         = 50009
0.00.081.742 I llm_load_print_meta: vocab_only       = 0
0.00.081.743 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.743 I llm_load_print_meta: n_embd           = 2048
0.00.081.743 I llm_load_print_meta: n_layer          = 24
0.00.081.755 I llm_load_print_meta: n_head           = 16
0.00.081.756 I llm_load_print_meta: n_head_kv        = 16
0.00.081.756 I llm_load_print_meta: n_rot            = 32
0.00.081.756 I llm_load_print_meta: n_swa            = 0
0.00.081.757 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.757 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.758 I llm_load_print_meta: n_gqa            = 1
0.00.081.759 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.760 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.761 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.762 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.762 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.763 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.763 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.764 I llm_load_print_meta: n_ff             = 8192
0.00.081.764 I llm_load_print_meta: n_expert         = 0
0.00.081.764 I llm_load_print_meta: n_expert_used    = 0
0.00.081.765 I llm_load_print_meta: causal attn      = 1
0.00.081.765 I llm_load_print_meta: pooling type     = 0
0.00.081.765 I llm_load_print_meta: rope type        = 2
0.00.081.766 I llm_load_print_meta: rope scaling     = linear
0.00.081.767 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.768 I llm_load_print_meta: freq_scale_train = 1
0.00.081.768 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.768 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.769 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.769 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.769 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.769 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.770 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.770 I llm_load_print_meta: model type       = 1.4B
0.00.081.771 I llm_load_print_meta: model ftype      = Q4_1
0.00.081.772 I llm_load_print_meta: model params     = 1.41 B
0.00.081.772 I llm_load_print_meta: model size       = 864.46 MiB (5.13 BPW) 
0.00.081.773 I llm_load_print_meta: general.name     = 1.4B
0.00.081.773 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.774 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.774 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.775 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.775 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.776 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.776 I llm_load_print_meta: max token length = 1024
0.00.130.581 I llm_load_tensors:   CPU_Mapped model buffer size =   864.46 MiB
..............................................................................
0.00.133.147 I llama_new_context_with_model: n_seq_max     = 1
0.00.133.153 I llama_new_context_with_model: n_ctx         = 2048
0.00.133.153 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.133.154 I llama_new_context_with_model: n_batch       = 2048
0.00.133.154 I llama_new_context_with_model: n_ubatch      = 512
0.00.133.155 I llama_new_context_with_model: flash_attn    = 0
0.00.133.157 I llama_new_context_with_model: freq_base     = 10000.0
0.00.133.158 I llama_new_context_with_model: freq_scale    = 1
0.00.211.066 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.211.082 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.211.110 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.213.677 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.213.683 I llama_new_context_with_model: graph nodes  = 967
0.00.213.684 I llama_new_context_with_model: graph splits = 1
0.00.213.687 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.297.324 I main: llama threadpool init, n_threads = 4
0.00.297.339 I 
0.00.297.413 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.297.416 I 
0.00.297.525 I sampler seed: 1234
0.00.297.535 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.297.539 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.297.540 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.297.542 I 
I believe the meaning of life is that one should always think of the other person as one's own.

I have a friend who has an extreme case of this. She has a brother who, when he was a child, would make fun of her every time he could and she would just go through the motions. She would try to make him

0.02.443.188 I llama_perf_sampler_print:    sampling time =       2.50 ms /    71 runs   (    0.04 ms per token, 28445.51 tokens per second)
0.02.443.190 I llama_perf_context_print:        load time =     296.55 ms
0.02.443.192 I llama_perf_context_print: prompt eval time =     133.99 ms /     7 tokens (   19.14 ms per token,    52.24 tokens per second)
0.02.443.193 I llama_perf_context_print:        eval time =    2002.37 ms /    63 runs   (   31.78 ms per token,    31.46 tokens per second)
0.02.443.194 I llama_perf_context_print:       total time =    2145.87 ms /    70 tokens

real	0m2.493s
user	0m8.916s
sys	0m0.196s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.633 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.725 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf (version GGUF V3 (latest))
0.00.009.738 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.749 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.753 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.753 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.754 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.754 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.758 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.758 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.759 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.759 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.760 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.761 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.762 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.767 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.767 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.768 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.554 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.871 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.256 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.261 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.261 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.262 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.262 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.263 I llama_model_loader: - kv  22:                          general.file_type u32              = 3
0.00.022.265 I llama_model_loader: - type  f32:  194 tensors
0.00.022.266 I llama_model_loader: - type q4_1:   97 tensors
0.00.022.266 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.022 I llm_load_vocab: special tokens cache size = 25
0.00.080.807 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.820 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.820 I llm_load_print_meta: arch             = gptneox
0.00.080.821 I llm_load_print_meta: vocab type       = BPE
0.00.080.821 I llm_load_print_meta: n_vocab          = 50304
0.00.080.822 I llm_load_print_meta: n_merges         = 50009
0.00.080.823 I llm_load_print_meta: vocab_only       = 0
0.00.080.824 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.824 I llm_load_print_meta: n_embd           = 2048
0.00.080.824 I llm_load_print_meta: n_layer          = 24
0.00.080.835 I llm_load_print_meta: n_head           = 16
0.00.080.836 I llm_load_print_meta: n_head_kv        = 16
0.00.080.836 I llm_load_print_meta: n_rot            = 32
0.00.080.836 I llm_load_print_meta: n_swa            = 0
0.00.080.837 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.838 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.839 I llm_load_print_meta: n_gqa            = 1
0.00.080.840 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.841 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.843 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.843 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.843 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.844 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.844 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.846 I llm_load_print_meta: n_ff             = 8192
0.00.080.846 I llm_load_print_meta: n_expert         = 0
0.00.080.846 I llm_load_print_meta: n_expert_used    = 0
0.00.080.847 I llm_load_print_meta: causal attn      = 1
0.00.080.850 I llm_load_print_meta: pooling type     = 0
0.00.080.850 I llm_load_print_meta: rope type        = 2
0.00.080.850 I llm_load_print_meta: rope scaling     = linear
0.00.080.853 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.853 I llm_load_print_meta: freq_scale_train = 1
0.00.080.853 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.854 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.854 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.854 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.855 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.855 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.855 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.856 I llm_load_print_meta: model type       = 1.4B
0.00.080.856 I llm_load_print_meta: model ftype      = Q4_1
0.00.080.857 I llm_load_print_meta: model params     = 1.41 B
0.00.080.858 I llm_load_print_meta: model size       = 864.46 MiB (5.13 BPW) 
0.00.080.859 I llm_load_print_meta: general.name     = 1.4B
0.00.080.861 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.861 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.862 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.862 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.863 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.863 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.863 I llm_load_print_meta: max token length = 1024
0.00.130.162 I llm_load_tensors:   CPU_Mapped model buffer size =   864.46 MiB
..............................................................................
0.00.132.701 I llama_new_context_with_model: n_seq_max     = 1
0.00.132.706 I llama_new_context_with_model: n_ctx         = 128
0.00.132.707 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.132.707 I llama_new_context_with_model: n_batch       = 128
0.00.132.707 I llama_new_context_with_model: n_ubatch      = 128
0.00.132.707 I llama_new_context_with_model: flash_attn    = 0
0.00.132.709 I llama_new_context_with_model: freq_base     = 10000.0
0.00.132.710 I llama_new_context_with_model: freq_scale    = 1
0.00.132.711 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.138.047 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.138.059 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.138.083 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.140.656 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.140.662 I llama_new_context_with_model: graph nodes  = 967
0.00.140.663 I llama_new_context_with_model: graph splits = 1
0.00.140.665 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.197.155 I 
0.00.197.236 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.197.245 I perplexity: tokenizing the input ..
0.00.207.415 I perplexity: tokenization took 10.166 ms
0.00.207.436 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.431.899 I perplexity: 2.22 seconds per pass - ETA 0.03 minutes
[1]10.5418,
0.02.440.125 I Final estimate: PPL = 10.5418 +/- 3.33699

0.02.440.153 I llama_perf_context_print:        load time =     196.49 ms
0.02.440.155 I llama_perf_context_print: prompt eval time =    2223.00 ms /   128 tokens (   17.37 ms per token,    57.58 tokens per second)
0.02.440.156 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.440.157 I llama_perf_context_print:       total time =    2243.00 ms /   129 tokens

real	0m2.484s
user	0m9.252s
sys	0m0.104s
```
- q5_0:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.188 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.366 I main: llama backend init
0.00.000.373 I main: load the model and apply lora adapter, if any
0.00.009.323 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf (version GGUF V3 (latest))
0.00.009.337 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.343 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.347 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.347 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.348 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.348 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.351 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.351 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.352 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.353 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.353 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.353 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.354 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.357 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.357 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.358 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.100 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.448 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.817 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.823 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.823 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.824 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.824 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.824 I llama_model_loader: - kv  22:                          general.file_type u32              = 8
0.00.021.826 I llama_model_loader: - type  f32:  194 tensors
0.00.021.827 I llama_model_loader: - type q5_0:   97 tensors
0.00.021.827 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.074 I llm_load_vocab: special tokens cache size = 25
0.00.079.915 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.079.926 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.079.927 I llm_load_print_meta: arch             = gptneox
0.00.079.927 I llm_load_print_meta: vocab type       = BPE
0.00.079.928 I llm_load_print_meta: n_vocab          = 50304
0.00.079.928 I llm_load_print_meta: n_merges         = 50009
0.00.079.929 I llm_load_print_meta: vocab_only       = 0
0.00.079.929 I llm_load_print_meta: n_ctx_train      = 2048
0.00.079.929 I llm_load_print_meta: n_embd           = 2048
0.00.079.930 I llm_load_print_meta: n_layer          = 24
0.00.079.937 I llm_load_print_meta: n_head           = 16
0.00.079.938 I llm_load_print_meta: n_head_kv        = 16
0.00.079.939 I llm_load_print_meta: n_rot            = 32
0.00.079.939 I llm_load_print_meta: n_swa            = 0
0.00.079.939 I llm_load_print_meta: n_embd_head_k    = 128
0.00.079.940 I llm_load_print_meta: n_embd_head_v    = 128
0.00.079.941 I llm_load_print_meta: n_gqa            = 1
0.00.079.942 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.079.943 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.079.944 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.079.945 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.079.945 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.079.946 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.079.946 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.079.947 I llm_load_print_meta: n_ff             = 8192
0.00.079.947 I llm_load_print_meta: n_expert         = 0
0.00.079.947 I llm_load_print_meta: n_expert_used    = 0
0.00.079.948 I llm_load_print_meta: causal attn      = 1
0.00.079.948 I llm_load_print_meta: pooling type     = 0
0.00.079.948 I llm_load_print_meta: rope type        = 2
0.00.079.949 I llm_load_print_meta: rope scaling     = linear
0.00.079.950 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.079.951 I llm_load_print_meta: freq_scale_train = 1
0.00.079.951 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.079.951 I llm_load_print_meta: rope_finetuned   = unknown
0.00.079.952 I llm_load_print_meta: ssm_d_conv       = 0
0.00.079.952 I llm_load_print_meta: ssm_d_inner      = 0
0.00.079.952 I llm_load_print_meta: ssm_d_state      = 0
0.00.079.952 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.079.953 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.079.953 I llm_load_print_meta: model type       = 1.4B
0.00.079.954 I llm_load_print_meta: model ftype      = Q5_0
0.00.079.955 I llm_load_print_meta: model params     = 1.41 B
0.00.079.955 I llm_load_print_meta: model size       = 942.60 MiB (5.59 BPW) 
0.00.079.956 I llm_load_print_meta: general.name     = 1.4B
0.00.079.956 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.079.957 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.079.957 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.079.957 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.079.958 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.079.958 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.079.958 I llm_load_print_meta: max token length = 1024
0.00.134.456 I llm_load_tensors:   CPU_Mapped model buffer size =   942.60 MiB
..................................................................................
0.00.137.009 I llama_new_context_with_model: n_seq_max     = 1
0.00.137.014 I llama_new_context_with_model: n_ctx         = 2048
0.00.137.014 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.137.014 I llama_new_context_with_model: n_batch       = 2048
0.00.137.015 I llama_new_context_with_model: n_ubatch      = 512
0.00.137.015 I llama_new_context_with_model: flash_attn    = 0
0.00.137.017 I llama_new_context_with_model: freq_base     = 10000.0
0.00.137.017 I llama_new_context_with_model: freq_scale    = 1
0.00.215.521 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.215.536 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.215.565 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.217.776 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.217.782 I llama_new_context_with_model: graph nodes  = 967
0.00.217.783 I llama_new_context_with_model: graph splits = 1
0.00.217.786 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.304.855 I main: llama threadpool init, n_threads = 4
0.00.304.874 I 
0.00.304.947 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.304.948 I 
0.00.305.055 I sampler seed: 1234
0.00.305.067 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.305.070 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.305.071 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.305.071 I 
I believe the meaning of life is to learn and grow, and to share what you have learned with others."

"You are a very special young lady, and I have loved being your mother from the very beginning."

"Thank you, Father. And now it is time for me to go."

"I am sure you will

0.02.653.035 I llama_perf_sampler_print:    sampling time =       2.41 ms /    71 runs   (    0.03 ms per token, 29497.30 tokens per second)
0.02.653.037 I llama_perf_context_print:        load time =     304.47 ms
0.02.653.038 I llama_perf_context_print: prompt eval time =     143.09 ms /     7 tokens (   20.44 ms per token,    48.92 tokens per second)
0.02.653.040 I llama_perf_context_print:        eval time =    2195.50 ms /    63 runs   (   34.85 ms per token,    28.70 tokens per second)
0.02.653.041 I llama_perf_context_print:       total time =    2348.19 ms /    70 tokens

real	0m2.706s
user	0m9.750s
sys	0m0.192s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.649 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.702 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf (version GGUF V3 (latest))
0.00.009.715 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.721 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.725 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.726 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.726 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.727 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.730 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.730 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.731 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.731 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.732 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.733 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.734 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.738 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.738 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.739 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.542 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.893 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.266 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.271 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.271 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.271 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.272 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.272 I llama_model_loader: - kv  22:                          general.file_type u32              = 8
0.00.022.275 I llama_model_loader: - type  f32:  194 tensors
0.00.022.276 I llama_model_loader: - type q5_0:   97 tensors
0.00.022.276 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.091 I llm_load_vocab: special tokens cache size = 25
0.00.080.897 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.909 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.909 I llm_load_print_meta: arch             = gptneox
0.00.080.910 I llm_load_print_meta: vocab type       = BPE
0.00.080.910 I llm_load_print_meta: n_vocab          = 50304
0.00.080.910 I llm_load_print_meta: n_merges         = 50009
0.00.080.911 I llm_load_print_meta: vocab_only       = 0
0.00.080.911 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.911 I llm_load_print_meta: n_embd           = 2048
0.00.080.912 I llm_load_print_meta: n_layer          = 24
0.00.080.920 I llm_load_print_meta: n_head           = 16
0.00.080.921 I llm_load_print_meta: n_head_kv        = 16
0.00.080.922 I llm_load_print_meta: n_rot            = 32
0.00.080.923 I llm_load_print_meta: n_swa            = 0
0.00.080.923 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.923 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.924 I llm_load_print_meta: n_gqa            = 1
0.00.080.925 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.926 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.927 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.928 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.928 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.928 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.929 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.929 I llm_load_print_meta: n_ff             = 8192
0.00.080.930 I llm_load_print_meta: n_expert         = 0
0.00.080.930 I llm_load_print_meta: n_expert_used    = 0
0.00.080.931 I llm_load_print_meta: causal attn      = 1
0.00.080.931 I llm_load_print_meta: pooling type     = 0
0.00.080.931 I llm_load_print_meta: rope type        = 2
0.00.080.932 I llm_load_print_meta: rope scaling     = linear
0.00.080.933 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.934 I llm_load_print_meta: freq_scale_train = 1
0.00.080.934 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.935 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.935 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.935 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.935 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.936 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.936 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.936 I llm_load_print_meta: model type       = 1.4B
0.00.080.937 I llm_load_print_meta: model ftype      = Q5_0
0.00.080.938 I llm_load_print_meta: model params     = 1.41 B
0.00.080.939 I llm_load_print_meta: model size       = 942.60 MiB (5.59 BPW) 
0.00.080.939 I llm_load_print_meta: general.name     = 1.4B
0.00.080.940 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.940 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.940 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.941 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.941 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.941 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.942 I llm_load_print_meta: max token length = 1024
0.00.135.339 I llm_load_tensors:   CPU_Mapped model buffer size =   942.60 MiB
..................................................................................
0.00.137.849 I llama_new_context_with_model: n_seq_max     = 1
0.00.137.854 I llama_new_context_with_model: n_ctx         = 128
0.00.137.854 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.137.855 I llama_new_context_with_model: n_batch       = 128
0.00.137.855 I llama_new_context_with_model: n_ubatch      = 128
0.00.137.855 I llama_new_context_with_model: flash_attn    = 0
0.00.137.858 I llama_new_context_with_model: freq_base     = 10000.0
0.00.137.858 I llama_new_context_with_model: freq_scale    = 1
0.00.137.859 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.142.856 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.142.868 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.142.887 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.145.059 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.145.065 I llama_new_context_with_model: graph nodes  = 967
0.00.145.066 I llama_new_context_with_model: graph splits = 1
0.00.145.068 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.202.930 I 
0.00.203.013 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.203.021 I perplexity: tokenizing the input ..
0.00.213.158 I perplexity: tokenization took 10.132 ms
0.00.213.179 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.564.050 I perplexity: 2.35 seconds per pass - ETA 0.03 minutes
[1]10.0568,
0.02.572.364 I Final estimate: PPL = 10.0568 +/- 3.19956

0.02.572.395 I llama_perf_context_print:        load time =     202.25 ms
0.02.572.397 I llama_perf_context_print: prompt eval time =    2348.89 ms /   128 tokens (   18.35 ms per token,    54.49 tokens per second)
0.02.572.398 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.572.399 I llama_perf_context_print:       total time =    2369.47 ms /   129 tokens

real	0m2.617s
user	0m9.766s
sys	0m0.104s
```
- q5_1:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.555 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.000.747 I main: load the model and apply lora adapter, if any
0.00.009.659 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf (version GGUF V3 (latest))
0.00.009.672 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.678 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.679 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.680 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.681 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.682 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.685 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.686 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.687 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.688 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.692 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.692 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.693 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.697 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.697 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.698 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.453 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.859 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.220 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.225 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.225 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.226 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.226 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.226 I llama_model_loader: - kv  22:                          general.file_type u32              = 9
0.00.022.228 I llama_model_loader: - type  f32:  194 tensors
0.00.022.229 I llama_model_loader: - type q5_1:   97 tensors
0.00.022.229 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.974 I llm_load_vocab: special tokens cache size = 25
0.00.081.810 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.822 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.823 I llm_load_print_meta: arch             = gptneox
0.00.081.824 I llm_load_print_meta: vocab type       = BPE
0.00.081.825 I llm_load_print_meta: n_vocab          = 50304
0.00.081.825 I llm_load_print_meta: n_merges         = 50009
0.00.081.826 I llm_load_print_meta: vocab_only       = 0
0.00.081.826 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.826 I llm_load_print_meta: n_embd           = 2048
0.00.081.827 I llm_load_print_meta: n_layer          = 24
0.00.081.837 I llm_load_print_meta: n_head           = 16
0.00.081.837 I llm_load_print_meta: n_head_kv        = 16
0.00.081.838 I llm_load_print_meta: n_rot            = 32
0.00.081.838 I llm_load_print_meta: n_swa            = 0
0.00.081.838 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.839 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.840 I llm_load_print_meta: n_gqa            = 1
0.00.081.841 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.842 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.843 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.844 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.844 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.844 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.845 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.846 I llm_load_print_meta: n_ff             = 8192
0.00.081.846 I llm_load_print_meta: n_expert         = 0
0.00.081.846 I llm_load_print_meta: n_expert_used    = 0
0.00.081.847 I llm_load_print_meta: causal attn      = 1
0.00.081.847 I llm_load_print_meta: pooling type     = 0
0.00.081.847 I llm_load_print_meta: rope type        = 2
0.00.081.848 I llm_load_print_meta: rope scaling     = linear
0.00.081.849 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.850 I llm_load_print_meta: freq_scale_train = 1
0.00.081.850 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.850 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.851 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.851 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.851 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.851 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.852 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.852 I llm_load_print_meta: model type       = 1.4B
0.00.081.853 I llm_load_print_meta: model ftype      = Q5_1
0.00.081.854 I llm_load_print_meta: model params     = 1.41 B
0.00.081.855 I llm_load_print_meta: model size       = 1020.74 MiB (6.05 BPW) 
0.00.081.855 I llm_load_print_meta: general.name     = 1.4B
0.00.081.855 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.856 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.856 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.856 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.857 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.858 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.858 I llm_load_print_meta: max token length = 1024
0.00.139.370 I llm_load_tensors:   CPU_Mapped model buffer size =  1020.74 MiB
...............................................................................
0.00.141.964 I llama_new_context_with_model: n_seq_max     = 1
0.00.141.969 I llama_new_context_with_model: n_ctx         = 2048
0.00.141.970 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.141.970 I llama_new_context_with_model: n_batch       = 2048
0.00.141.970 I llama_new_context_with_model: n_ubatch      = 512
0.00.141.971 I llama_new_context_with_model: flash_attn    = 0
0.00.141.973 I llama_new_context_with_model: freq_base     = 10000.0
0.00.141.974 I llama_new_context_with_model: freq_scale    = 1
0.00.220.938 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.220.957 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.220.985 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.223.166 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.223.172 I llama_new_context_with_model: graph nodes  = 967
0.00.223.173 I llama_new_context_with_model: graph splits = 1
0.00.223.176 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.313.480 I main: llama threadpool init, n_threads = 4
0.00.313.496 I 
0.00.313.572 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.313.575 I 
0.00.313.678 I sampler seed: 1234
0.00.313.689 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.313.692 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.313.693 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.313.693 I 
I believe the meaning of life is to give one’s life for the freedom of others. I believe the meaning of life is to give one’s life for the freedom of the animals. I believe the meaning of life is to give one’s life for the freedom of all living beings.

I believe the meaning of life is to give

0.02.793.609 I llama_perf_sampler_print:    sampling time =       2.40 ms /    71 runs   (    0.03 ms per token, 29546.40 tokens per second)
0.02.793.611 I llama_perf_context_print:        load time =     312.72 ms
0.02.793.612 I llama_perf_context_print: prompt eval time =     152.04 ms /     7 tokens (   21.72 ms per token,    46.04 tokens per second)
0.02.793.614 I llama_perf_context_print:        eval time =    2318.61 ms /    63 runs   (   36.80 ms per token,    27.17 tokens per second)
0.02.793.615 I llama_perf_context_print:       total time =    2480.14 ms /    70 tokens

real	0m2.847s
user	0m10.272s
sys	0m0.212s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.629 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.554 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf (version GGUF V3 (latest))
0.00.009.569 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.579 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.579 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.580 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.580 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.581 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.584 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.584 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.585 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.585 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.585 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.586 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.586 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.590 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.590 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.590 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.016.107 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.018.094 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.024.277 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.024.282 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.024.282 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.024.283 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.024.283 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.024.284 I llama_model_loader: - kv  22:                          general.file_type u32              = 9
0.00.024.286 I llama_model_loader: - type  f32:  194 tensors
0.00.024.286 I llama_model_loader: - type q5_1:   97 tensors
0.00.024.287 I llama_model_loader: - type q6_K:    1 tensors
0.00.069.215 I llm_load_vocab: special tokens cache size = 25
0.00.083.098 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.083.112 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.083.113 I llm_load_print_meta: arch             = gptneox
0.00.083.113 I llm_load_print_meta: vocab type       = BPE
0.00.083.114 I llm_load_print_meta: n_vocab          = 50304
0.00.083.114 I llm_load_print_meta: n_merges         = 50009
0.00.083.115 I llm_load_print_meta: vocab_only       = 0
0.00.083.115 I llm_load_print_meta: n_ctx_train      = 2048
0.00.083.116 I llm_load_print_meta: n_embd           = 2048
0.00.083.116 I llm_load_print_meta: n_layer          = 24
0.00.083.125 I llm_load_print_meta: n_head           = 16
0.00.083.127 I llm_load_print_meta: n_head_kv        = 16
0.00.083.127 I llm_load_print_meta: n_rot            = 32
0.00.083.127 I llm_load_print_meta: n_swa            = 0
0.00.083.128 I llm_load_print_meta: n_embd_head_k    = 128
0.00.083.128 I llm_load_print_meta: n_embd_head_v    = 128
0.00.083.129 I llm_load_print_meta: n_gqa            = 1
0.00.083.130 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.083.131 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.083.132 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.083.133 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.083.133 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.083.133 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.083.134 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.083.135 I llm_load_print_meta: n_ff             = 8192
0.00.083.135 I llm_load_print_meta: n_expert         = 0
0.00.083.135 I llm_load_print_meta: n_expert_used    = 0
0.00.083.135 I llm_load_print_meta: causal attn      = 1
0.00.083.136 I llm_load_print_meta: pooling type     = 0
0.00.083.136 I llm_load_print_meta: rope type        = 2
0.00.083.136 I llm_load_print_meta: rope scaling     = linear
0.00.083.138 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.083.139 I llm_load_print_meta: freq_scale_train = 1
0.00.083.139 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.083.139 I llm_load_print_meta: rope_finetuned   = unknown
0.00.083.140 I llm_load_print_meta: ssm_d_conv       = 0
0.00.083.140 I llm_load_print_meta: ssm_d_inner      = 0
0.00.083.140 I llm_load_print_meta: ssm_d_state      = 0
0.00.083.141 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.083.141 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.083.141 I llm_load_print_meta: model type       = 1.4B
0.00.083.142 I llm_load_print_meta: model ftype      = Q5_1
0.00.083.143 I llm_load_print_meta: model params     = 1.41 B
0.00.083.144 I llm_load_print_meta: model size       = 1020.74 MiB (6.05 BPW) 
0.00.083.145 I llm_load_print_meta: general.name     = 1.4B
0.00.083.145 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.083.145 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.083.146 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.083.146 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.083.147 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.083.147 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.083.147 I llm_load_print_meta: max token length = 1024
0.00.142.156 I llm_load_tensors:   CPU_Mapped model buffer size =  1020.74 MiB
...............................................................................
0.00.144.973 I llama_new_context_with_model: n_seq_max     = 1
0.00.144.979 I llama_new_context_with_model: n_ctx         = 128
0.00.144.979 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.144.980 I llama_new_context_with_model: n_batch       = 128
0.00.144.980 I llama_new_context_with_model: n_ubatch      = 128
0.00.144.980 I llama_new_context_with_model: flash_attn    = 0
0.00.144.983 I llama_new_context_with_model: freq_base     = 10000.0
0.00.144.984 I llama_new_context_with_model: freq_scale    = 1
0.00.144.984 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.150.212 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.150.226 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.150.247 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.152.758 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.152.764 I llama_new_context_with_model: graph nodes  = 967
0.00.152.765 I llama_new_context_with_model: graph splits = 1
0.00.152.767 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.213.955 I 
0.00.214.039 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.214.048 I perplexity: tokenizing the input ..
0.00.224.141 I perplexity: tokenization took 10.089 ms
0.00.224.161 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.726.964 I perplexity: 2.50 seconds per pass - ETA 0.03 minutes
[1]10.0893,
0.02.735.226 I Final estimate: PPL = 10.0893 +/- 3.15432

0.02.735.260 I llama_perf_context_print:        load time =     213.30 ms
0.02.735.262 I llama_perf_context_print: prompt eval time =    2501.07 ms /   128 tokens (   19.54 ms per token,    51.18 tokens per second)
0.02.735.264 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.735.268 I llama_perf_context_print:       total time =    2521.31 ms /   129 tokens

real	0m2.782s
user	0m10.393s
sys	0m0.104s
```
- q2_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.550 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.765 I main: llama backend init
0.00.000.772 I main: load the model and apply lora adapter, if any
0.00.009.849 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf (version GGUF V3 (latest))
0.00.009.863 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.869 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.873 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.873 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.874 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.874 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.878 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.878 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.879 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.880 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.881 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.883 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.884 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.889 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.889 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.890 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.611 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.989 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.377 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.383 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.383 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.384 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.384 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.385 I llama_model_loader: - kv  22:                          general.file_type u32              = 10
0.00.022.387 I llama_model_loader: - type  f32:  194 tensors
0.00.022.390 I llama_model_loader: - type q2_K:   49 tensors
0.00.022.390 I llama_model_loader: - type q3_K:   48 tensors
0.00.022.391 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.363 I llm_load_vocab: special tokens cache size = 25
0.00.080.156 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.167 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.168 I llm_load_print_meta: arch             = gptneox
0.00.080.168 I llm_load_print_meta: vocab type       = BPE
0.00.080.169 I llm_load_print_meta: n_vocab          = 50304
0.00.080.169 I llm_load_print_meta: n_merges         = 50009
0.00.080.170 I llm_load_print_meta: vocab_only       = 0
0.00.080.170 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.171 I llm_load_print_meta: n_embd           = 2048
0.00.080.171 I llm_load_print_meta: n_layer          = 24
0.00.080.179 I llm_load_print_meta: n_head           = 16
0.00.080.180 I llm_load_print_meta: n_head_kv        = 16
0.00.080.180 I llm_load_print_meta: n_rot            = 32
0.00.080.181 I llm_load_print_meta: n_swa            = 0
0.00.080.181 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.181 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.182 I llm_load_print_meta: n_gqa            = 1
0.00.080.183 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.185 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.186 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.187 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.187 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.188 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.188 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.189 I llm_load_print_meta: n_ff             = 8192
0.00.080.189 I llm_load_print_meta: n_expert         = 0
0.00.080.189 I llm_load_print_meta: n_expert_used    = 0
0.00.080.190 I llm_load_print_meta: causal attn      = 1
0.00.080.190 I llm_load_print_meta: pooling type     = 0
0.00.080.190 I llm_load_print_meta: rope type        = 2
0.00.080.191 I llm_load_print_meta: rope scaling     = linear
0.00.080.192 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.192 I llm_load_print_meta: freq_scale_train = 1
0.00.080.193 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.193 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.193 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.194 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.194 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.194 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.195 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.195 I llm_load_print_meta: model type       = 1.4B
0.00.080.196 I llm_load_print_meta: model ftype      = Q2_K - Medium
0.00.080.196 I llm_load_print_meta: model params     = 1.41 B
0.00.080.197 I llm_load_print_meta: model size       = 542.04 MiB (3.21 BPW) 
0.00.080.198 I llm_load_print_meta: general.name     = 1.4B
0.00.080.198 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.198 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.199 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.199 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.200 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.200 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.200 I llm_load_print_meta: max token length = 1024
0.00.111.471 I llm_load_tensors:   CPU_Mapped model buffer size =   542.04 MiB
..........................................................................
0.00.114.047 I llama_new_context_with_model: n_seq_max     = 1
0.00.114.053 I llama_new_context_with_model: n_ctx         = 2048
0.00.114.053 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.114.053 I llama_new_context_with_model: n_batch       = 2048
0.00.114.054 I llama_new_context_with_model: n_ubatch      = 512
0.00.114.054 I llama_new_context_with_model: flash_attn    = 0
0.00.114.056 I llama_new_context_with_model: freq_base     = 10000.0
0.00.114.057 I llama_new_context_with_model: freq_scale    = 1
0.00.194.360 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.194.376 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.194.406 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.196.573 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.196.580 I llama_new_context_with_model: graph nodes  = 967
0.00.196.580 I llama_new_context_with_model: graph splits = 1
0.00.196.584 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.266.792 I main: llama threadpool init, n_threads = 4
0.00.266.808 I 
0.00.266.884 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.266.888 I 
0.00.266.987 I sampler seed: 1234
0.00.266.999 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.267.002 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.267.003 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.267.003 I 
I believe the meaning of life is a shared property, as in the past, and the past, which is a mystery, and the mystery of not.

1:  
[>_         
        
          
                
                        
              
                
                     
                    
                             
.  '                
         

0.01.895.052 I llama_perf_sampler_print:    sampling time =       2.32 ms /    71 runs   (    0.03 ms per token, 30629.85 tokens per second)
0.01.895.054 I llama_perf_context_print:        load time =     266.00 ms
0.01.895.056 I llama_perf_context_print: prompt eval time =      97.00 ms /     7 tokens (   13.86 ms per token,    72.16 tokens per second)
0.01.895.058 I llama_perf_context_print:        eval time =    1521.58 ms /    63 runs   (   24.15 ms per token,    41.40 tokens per second)
0.01.895.059 I llama_perf_context_print:       total time =    1628.27 ms /    70 tokens

real	0m1.932s
user	0m6.821s
sys	0m0.136s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.636 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.620 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf (version GGUF V3 (latest))
0.00.009.636 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.647 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.648 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.649 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.649 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.650 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.653 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.654 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.654 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.655 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.655 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.656 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.656 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.661 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.661 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.661 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.572 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.919 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.322 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.328 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.328 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.329 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.329 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.330 I llama_model_loader: - kv  22:                          general.file_type u32              = 10
0.00.022.332 I llama_model_loader: - type  f32:  194 tensors
0.00.022.333 I llama_model_loader: - type q2_K:   49 tensors
0.00.022.333 I llama_model_loader: - type q3_K:   48 tensors
0.00.022.334 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.174 I llm_load_vocab: special tokens cache size = 25
0.00.080.986 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.005 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.006 I llm_load_print_meta: arch             = gptneox
0.00.081.007 I llm_load_print_meta: vocab type       = BPE
0.00.081.007 I llm_load_print_meta: n_vocab          = 50304
0.00.081.008 I llm_load_print_meta: n_merges         = 50009
0.00.081.008 I llm_load_print_meta: vocab_only       = 0
0.00.081.009 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.009 I llm_load_print_meta: n_embd           = 2048
0.00.081.009 I llm_load_print_meta: n_layer          = 24
0.00.081.020 I llm_load_print_meta: n_head           = 16
0.00.081.021 I llm_load_print_meta: n_head_kv        = 16
0.00.081.021 I llm_load_print_meta: n_rot            = 32
0.00.081.022 I llm_load_print_meta: n_swa            = 0
0.00.081.022 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.022 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.023 I llm_load_print_meta: n_gqa            = 1
0.00.081.024 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.025 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.026 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.027 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.027 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.027 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.028 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.028 I llm_load_print_meta: n_ff             = 8192
0.00.081.029 I llm_load_print_meta: n_expert         = 0
0.00.081.029 I llm_load_print_meta: n_expert_used    = 0
0.00.081.030 I llm_load_print_meta: causal attn      = 1
0.00.081.030 I llm_load_print_meta: pooling type     = 0
0.00.081.030 I llm_load_print_meta: rope type        = 2
0.00.081.031 I llm_load_print_meta: rope scaling     = linear
0.00.081.032 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.032 I llm_load_print_meta: freq_scale_train = 1
0.00.081.033 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.033 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.033 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.033 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.034 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.034 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.034 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.035 I llm_load_print_meta: model type       = 1.4B
0.00.081.035 I llm_load_print_meta: model ftype      = Q2_K - Medium
0.00.081.036 I llm_load_print_meta: model params     = 1.41 B
0.00.081.037 I llm_load_print_meta: model size       = 542.04 MiB (3.21 BPW) 
0.00.081.037 I llm_load_print_meta: general.name     = 1.4B
0.00.081.038 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.038 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.038 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.039 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.039 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.040 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.040 I llm_load_print_meta: max token length = 1024
0.00.112.251 I llm_load_tensors:   CPU_Mapped model buffer size =   542.04 MiB
..........................................................................
0.00.115.049 I llama_new_context_with_model: n_seq_max     = 1
0.00.115.055 I llama_new_context_with_model: n_ctx         = 128
0.00.115.056 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.115.056 I llama_new_context_with_model: n_batch       = 128
0.00.115.056 I llama_new_context_with_model: n_ubatch      = 128
0.00.115.057 I llama_new_context_with_model: flash_attn    = 0
0.00.115.059 I llama_new_context_with_model: freq_base     = 10000.0
0.00.115.060 I llama_new_context_with_model: freq_scale    = 1
0.00.115.060 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.120.413 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.120.426 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.120.449 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.123.124 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.123.132 I llama_new_context_with_model: graph nodes  = 967
0.00.123.132 I llama_new_context_with_model: graph splits = 1
0.00.123.135 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.163.501 I 
0.00.163.607 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.163.619 I perplexity: tokenizing the input ..
0.00.173.997 I perplexity: tokenization took 10.375 ms
0.00.174.017 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.717.774 I perplexity: 1.54 seconds per pass - ETA 0.02 minutes
[1]71.4792,
0.01.726.065 I Final estimate: PPL = 71.4792 +/- 27.83019

0.01.726.095 I llama_perf_context_print:        load time =     162.84 ms
0.01.726.098 I llama_perf_context_print: prompt eval time =    1542.08 ms /   128 tokens (   12.05 ms per token,    83.00 tokens per second)
0.01.726.103 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.726.107 I llama_perf_context_print:       total time =    1562.60 ms /   129 tokens

real	0m1.757s
user	0m6.480s
sys	0m0.068s
```
- q3_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.562 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.000.764 I main: load the model and apply lora adapter, if any
0.00.009.428 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf (version GGUF V3 (latest))
0.00.009.442 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.447 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.451 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.451 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.452 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.452 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.455 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.455 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.456 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.456 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.457 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.457 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.458 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.460 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.461 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.461 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.095 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.574 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.865 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.870 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.870 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.871 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.871 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.872 I llama_model_loader: - kv  22:                          general.file_type u32              = 12
0.00.021.874 I llama_model_loader: - type  f32:  194 tensors
0.00.021.874 I llama_model_loader: - type q3_K:   25 tensors
0.00.021.874 I llama_model_loader: - type q4_K:   71 tensors
0.00.021.875 I llama_model_loader: - type q5_K:    1 tensors
0.00.021.875 I llama_model_loader: - type q6_K:    1 tensors
0.00.065.997 I llm_load_vocab: special tokens cache size = 25
0.00.079.832 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.079.842 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.079.843 I llm_load_print_meta: arch             = gptneox
0.00.079.844 I llm_load_print_meta: vocab type       = BPE
0.00.079.844 I llm_load_print_meta: n_vocab          = 50304
0.00.079.845 I llm_load_print_meta: n_merges         = 50009
0.00.079.845 I llm_load_print_meta: vocab_only       = 0
0.00.079.845 I llm_load_print_meta: n_ctx_train      = 2048
0.00.079.846 I llm_load_print_meta: n_embd           = 2048
0.00.079.846 I llm_load_print_meta: n_layer          = 24
0.00.079.855 I llm_load_print_meta: n_head           = 16
0.00.079.856 I llm_load_print_meta: n_head_kv        = 16
0.00.079.856 I llm_load_print_meta: n_rot            = 32
0.00.079.857 I llm_load_print_meta: n_swa            = 0
0.00.079.857 I llm_load_print_meta: n_embd_head_k    = 128
0.00.079.858 I llm_load_print_meta: n_embd_head_v    = 128
0.00.079.859 I llm_load_print_meta: n_gqa            = 1
0.00.079.860 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.079.861 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.079.862 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.079.862 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.079.863 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.079.863 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.079.863 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.079.864 I llm_load_print_meta: n_ff             = 8192
0.00.079.864 I llm_load_print_meta: n_expert         = 0
0.00.079.865 I llm_load_print_meta: n_expert_used    = 0
0.00.079.865 I llm_load_print_meta: causal attn      = 1
0.00.079.865 I llm_load_print_meta: pooling type     = 0
0.00.079.866 I llm_load_print_meta: rope type        = 2
0.00.079.866 I llm_load_print_meta: rope scaling     = linear
0.00.079.868 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.079.868 I llm_load_print_meta: freq_scale_train = 1
0.00.079.869 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.079.869 I llm_load_print_meta: rope_finetuned   = unknown
0.00.079.869 I llm_load_print_meta: ssm_d_conv       = 0
0.00.079.870 I llm_load_print_meta: ssm_d_inner      = 0
0.00.079.870 I llm_load_print_meta: ssm_d_state      = 0
0.00.079.870 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.079.870 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.079.871 I llm_load_print_meta: model type       = 1.4B
0.00.079.871 I llm_load_print_meta: model ftype      = Q3_K - Medium
0.00.079.872 I llm_load_print_meta: model params     = 1.41 B
0.00.079.873 I llm_load_print_meta: model size       = 724.27 MiB (4.29 BPW) 
0.00.079.874 I llm_load_print_meta: general.name     = 1.4B
0.00.079.874 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.079.874 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.079.875 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.079.875 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.079.876 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.079.876 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.079.876 I llm_load_print_meta: max token length = 1024
0.00.121.467 I llm_load_tensors:   CPU_Mapped model buffer size =   724.27 MiB
...............................................................................
0.00.124.435 I llama_new_context_with_model: n_seq_max     = 1
0.00.124.440 I llama_new_context_with_model: n_ctx         = 2048
0.00.124.440 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.124.440 I llama_new_context_with_model: n_batch       = 2048
0.00.124.441 I llama_new_context_with_model: n_ubatch      = 512
0.00.124.441 I llama_new_context_with_model: flash_attn    = 0
0.00.124.443 I llama_new_context_with_model: freq_base     = 10000.0
0.00.124.443 I llama_new_context_with_model: freq_scale    = 1
0.00.203.803 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.203.818 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.203.848 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.206.379 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.206.386 I llama_new_context_with_model: graph nodes  = 967
0.00.206.386 I llama_new_context_with_model: graph splits = 1
0.00.206.389 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.280.413 I main: llama threadpool init, n_threads = 4
0.00.280.428 I 
0.00.280.500 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.280.503 I 
0.00.280.599 I sampler seed: 1234
0.00.280.610 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.280.614 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.280.614 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.280.615 I 
I believe the meaning of life is to love your fellow human beings. That is the only meaning I am interested in. I am not interested in money or property. I am not interested in worldly success. My only aim is to be a human being. In my book _Love and the Law,_ I have stated that the only way to live is

0.02.114.507 I llama_perf_sampler_print:    sampling time =       2.47 ms /    71 runs   (    0.03 ms per token, 28733.31 tokens per second)
0.02.114.510 I llama_perf_context_print:        load time =     279.63 ms
0.02.114.511 I llama_perf_context_print: prompt eval time =     101.84 ms /     7 tokens (   14.55 ms per token,    68.74 tokens per second)
0.02.114.513 I llama_perf_context_print:        eval time =    1722.82 ms /    63 runs   (   27.35 ms per token,    36.57 tokens per second)
0.02.114.513 I llama_perf_context_print:       total time =    1834.10 ms /    70 tokens

real	0m2.159s
user	0m7.647s
sys	0m0.168s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.247 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.234 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf (version GGUF V3 (latest))
0.00.009.248 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.256 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.260 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.261 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.261 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.262 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.266 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.267 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.268 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.269 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.270 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.270 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.271 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.275 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.275 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.276 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.016 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.371 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.747 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.752 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.753 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.753 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.754 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.755 I llama_model_loader: - kv  22:                          general.file_type u32              = 12
0.00.021.757 I llama_model_loader: - type  f32:  194 tensors
0.00.021.758 I llama_model_loader: - type q3_K:   25 tensors
0.00.021.758 I llama_model_loader: - type q4_K:   71 tensors
0.00.021.759 I llama_model_loader: - type q5_K:    1 tensors
0.00.021.760 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.920 I llm_load_vocab: special tokens cache size = 25
0.00.080.884 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.898 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.898 I llm_load_print_meta: arch             = gptneox
0.00.080.899 I llm_load_print_meta: vocab type       = BPE
0.00.080.901 I llm_load_print_meta: n_vocab          = 50304
0.00.080.901 I llm_load_print_meta: n_merges         = 50009
0.00.080.902 I llm_load_print_meta: vocab_only       = 0
0.00.080.902 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.903 I llm_load_print_meta: n_embd           = 2048
0.00.080.903 I llm_load_print_meta: n_layer          = 24
0.00.080.914 I llm_load_print_meta: n_head           = 16
0.00.080.915 I llm_load_print_meta: n_head_kv        = 16
0.00.080.915 I llm_load_print_meta: n_rot            = 32
0.00.080.916 I llm_load_print_meta: n_swa            = 0
0.00.080.916 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.916 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.918 I llm_load_print_meta: n_gqa            = 1
0.00.080.919 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.920 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.922 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.922 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.923 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.923 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.923 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.924 I llm_load_print_meta: n_ff             = 8192
0.00.080.925 I llm_load_print_meta: n_expert         = 0
0.00.080.925 I llm_load_print_meta: n_expert_used    = 0
0.00.080.925 I llm_load_print_meta: causal attn      = 1
0.00.080.926 I llm_load_print_meta: pooling type     = 0
0.00.080.926 I llm_load_print_meta: rope type        = 2
0.00.080.927 I llm_load_print_meta: rope scaling     = linear
0.00.080.928 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.929 I llm_load_print_meta: freq_scale_train = 1
0.00.080.930 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.930 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.930 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.931 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.931 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.931 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.932 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.932 I llm_load_print_meta: model type       = 1.4B
0.00.080.933 I llm_load_print_meta: model ftype      = Q3_K - Medium
0.00.080.934 I llm_load_print_meta: model params     = 1.41 B
0.00.080.935 I llm_load_print_meta: model size       = 724.27 MiB (4.29 BPW) 
0.00.080.936 I llm_load_print_meta: general.name     = 1.4B
0.00.080.936 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.937 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.937 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.937 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.938 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.938 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.939 I llm_load_print_meta: max token length = 1024
0.00.122.971 I llm_load_tensors:   CPU_Mapped model buffer size =   724.27 MiB
...............................................................................
0.00.125.959 I llama_new_context_with_model: n_seq_max     = 1
0.00.125.965 I llama_new_context_with_model: n_ctx         = 128
0.00.125.965 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.125.966 I llama_new_context_with_model: n_batch       = 128
0.00.125.966 I llama_new_context_with_model: n_ubatch      = 128
0.00.125.966 I llama_new_context_with_model: flash_attn    = 0
0.00.125.968 I llama_new_context_with_model: freq_base     = 10000.0
0.00.125.969 I llama_new_context_with_model: freq_scale    = 1
0.00.125.969 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.131.111 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.131.122 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.131.140 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.133.677 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.133.683 I llama_new_context_with_model: graph nodes  = 967
0.00.133.683 I llama_new_context_with_model: graph splits = 1
0.00.133.685 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.177.149 I 
0.00.177.229 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.177.239 I perplexity: tokenizing the input ..
0.00.187.383 I perplexity: tokenization took 10.139 ms
0.00.187.403 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.822.521 I perplexity: 1.64 seconds per pass - ETA 0.02 minutes
[1]12.7265,
0.01.830.756 I Final estimate: PPL = 12.7265 +/- 4.19142

0.01.830.792 I llama_perf_context_print:        load time =     176.87 ms
0.01.830.793 I llama_perf_context_print: prompt eval time =    1633.58 ms /   128 tokens (   12.76 ms per token,    78.36 tokens per second)
0.01.830.794 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.830.795 I llama_perf_context_print:       total time =    1653.65 ms /   129 tokens

real	0m1.869s
user	0m6.826s
sys	0m0.116s
```
- q4_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.610 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.803 I main: llama backend init
0.00.000.810 I main: load the model and apply lora adapter, if any
0.00.009.659 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf (version GGUF V3 (latest))
0.00.009.673 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.680 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.684 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.685 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.685 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.685 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.689 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.690 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.690 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.691 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.691 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.692 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.693 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.697 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.697 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.698 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.534 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.902 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.362 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.368 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.369 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.369 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.370 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.371 I llama_model_loader: - kv  22:                          general.file_type u32              = 15
0.00.022.373 I llama_model_loader: - type  f32:  194 tensors
0.00.022.375 I llama_model_loader: - type q4_K:   61 tensors
0.00.022.376 I llama_model_loader: - type q5_K:   24 tensors
0.00.022.377 I llama_model_loader: - type q6_K:   13 tensors
0.00.070.210 I llm_load_vocab: special tokens cache size = 25
0.00.084.117 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.084.133 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.084.134 I llm_load_print_meta: arch             = gptneox
0.00.084.135 I llm_load_print_meta: vocab type       = BPE
0.00.084.135 I llm_load_print_meta: n_vocab          = 50304
0.00.084.136 I llm_load_print_meta: n_merges         = 50009
0.00.084.137 I llm_load_print_meta: vocab_only       = 0
0.00.084.137 I llm_load_print_meta: n_ctx_train      = 2048
0.00.084.138 I llm_load_print_meta: n_embd           = 2048
0.00.084.138 I llm_load_print_meta: n_layer          = 24
0.00.084.150 I llm_load_print_meta: n_head           = 16
0.00.084.151 I llm_load_print_meta: n_head_kv        = 16
0.00.084.152 I llm_load_print_meta: n_rot            = 32
0.00.084.152 I llm_load_print_meta: n_swa            = 0
0.00.084.152 I llm_load_print_meta: n_embd_head_k    = 128
0.00.084.153 I llm_load_print_meta: n_embd_head_v    = 128
0.00.084.154 I llm_load_print_meta: n_gqa            = 1
0.00.084.155 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.084.156 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.084.157 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.084.157 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.084.158 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.084.158 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.084.158 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.084.159 I llm_load_print_meta: n_ff             = 8192
0.00.084.160 I llm_load_print_meta: n_expert         = 0
0.00.084.160 I llm_load_print_meta: n_expert_used    = 0
0.00.084.160 I llm_load_print_meta: causal attn      = 1
0.00.084.160 I llm_load_print_meta: pooling type     = 0
0.00.084.161 I llm_load_print_meta: rope type        = 2
0.00.084.161 I llm_load_print_meta: rope scaling     = linear
0.00.084.163 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.084.163 I llm_load_print_meta: freq_scale_train = 1
0.00.084.163 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.084.164 I llm_load_print_meta: rope_finetuned   = unknown
0.00.084.164 I llm_load_print_meta: ssm_d_conv       = 0
0.00.084.164 I llm_load_print_meta: ssm_d_inner      = 0
0.00.084.165 I llm_load_print_meta: ssm_d_state      = 0
0.00.084.165 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.084.165 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.084.166 I llm_load_print_meta: model type       = 1.4B
0.00.084.166 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.084.167 I llm_load_print_meta: model params     = 1.41 B
0.00.084.168 I llm_load_print_meta: model size       = 871.81 MiB (5.17 BPW) 
0.00.084.168 I llm_load_print_meta: general.name     = 1.4B
0.00.084.169 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.084.169 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.084.169 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.084.170 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.084.171 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.084.171 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.084.172 I llm_load_print_meta: max token length = 1024
0.00.133.924 I llm_load_tensors:   CPU_Mapped model buffer size =   871.81 MiB
..............................................................................
0.00.136.437 I llama_new_context_with_model: n_seq_max     = 1
0.00.136.442 I llama_new_context_with_model: n_ctx         = 2048
0.00.136.442 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.136.443 I llama_new_context_with_model: n_batch       = 2048
0.00.136.443 I llama_new_context_with_model: n_ubatch      = 512
0.00.136.443 I llama_new_context_with_model: flash_attn    = 0
0.00.136.445 I llama_new_context_with_model: freq_base     = 10000.0
0.00.136.446 I llama_new_context_with_model: freq_scale    = 1
0.00.214.163 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.214.183 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.214.214 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.216.852 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.216.858 I llama_new_context_with_model: graph nodes  = 967
0.00.216.858 I llama_new_context_with_model: graph splits = 1
0.00.216.861 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.294.846 I main: llama threadpool init, n_threads = 4
0.00.294.863 I 
0.00.294.938 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.294.941 I 
0.00.295.050 I sampler seed: 1234
0.00.295.061 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.295.065 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.295.066 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.295.066 I 
I believe the meaning of life is that which you make of it. And I believe that if you want to be happy, you have to live with those things that you can't change. I want to live with the things I can't change because they are who they are. I don't want to change them because I don't want to be unhappy

0.02.325.141 I llama_perf_sampler_print:    sampling time =       2.45 ms /    71 runs   (    0.03 ms per token, 28991.43 tokens per second)
0.02.325.143 I llama_perf_context_print:        load time =     294.02 ms
0.02.325.145 I llama_perf_context_print: prompt eval time =     107.14 ms /     7 tokens (   15.31 ms per token,    65.34 tokens per second)
0.02.325.147 I llama_perf_context_print:        eval time =    1913.58 ms /    63 runs   (   30.37 ms per token,    32.92 tokens per second)
0.02.325.148 I llama_perf_context_print:       total time =    2030.30 ms /    70 tokens

real	0m2.375s
user	0m8.459s
sys	0m0.168s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.599 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.847 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf (version GGUF V3 (latest))
0.00.009.864 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.875 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.878 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.878 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.879 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.879 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.884 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.884 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.885 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.885 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.886 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.886 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.887 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.892 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.893 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.893 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.766 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.017.088 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.478 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.484 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.484 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.484 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.485 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.486 I llama_model_loader: - kv  22:                          general.file_type u32              = 15
0.00.022.488 I llama_model_loader: - type  f32:  194 tensors
0.00.022.489 I llama_model_loader: - type q4_K:   61 tensors
0.00.022.489 I llama_model_loader: - type q5_K:   24 tensors
0.00.022.491 I llama_model_loader: - type q6_K:   13 tensors
0.00.067.647 I llm_load_vocab: special tokens cache size = 25
0.00.081.576 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.589 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.590 I llm_load_print_meta: arch             = gptneox
0.00.081.590 I llm_load_print_meta: vocab type       = BPE
0.00.081.591 I llm_load_print_meta: n_vocab          = 50304
0.00.081.591 I llm_load_print_meta: n_merges         = 50009
0.00.081.591 I llm_load_print_meta: vocab_only       = 0
0.00.081.592 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.592 I llm_load_print_meta: n_embd           = 2048
0.00.081.592 I llm_load_print_meta: n_layer          = 24
0.00.081.604 I llm_load_print_meta: n_head           = 16
0.00.081.605 I llm_load_print_meta: n_head_kv        = 16
0.00.081.605 I llm_load_print_meta: n_rot            = 32
0.00.081.605 I llm_load_print_meta: n_swa            = 0
0.00.081.606 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.606 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.607 I llm_load_print_meta: n_gqa            = 1
0.00.081.608 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.609 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.610 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.610 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.611 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.611 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.611 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.612 I llm_load_print_meta: n_ff             = 8192
0.00.081.613 I llm_load_print_meta: n_expert         = 0
0.00.081.613 I llm_load_print_meta: n_expert_used    = 0
0.00.081.614 I llm_load_print_meta: causal attn      = 1
0.00.081.614 I llm_load_print_meta: pooling type     = 0
0.00.081.614 I llm_load_print_meta: rope type        = 2
0.00.081.615 I llm_load_print_meta: rope scaling     = linear
0.00.081.616 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.616 I llm_load_print_meta: freq_scale_train = 1
0.00.081.617 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.617 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.617 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.618 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.618 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.618 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.618 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.619 I llm_load_print_meta: model type       = 1.4B
0.00.081.619 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.081.620 I llm_load_print_meta: model params     = 1.41 B
0.00.081.621 I llm_load_print_meta: model size       = 871.81 MiB (5.17 BPW) 
0.00.081.621 I llm_load_print_meta: general.name     = 1.4B
0.00.081.622 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.622 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.623 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.623 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.623 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.624 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.625 I llm_load_print_meta: max token length = 1024
0.00.132.706 I llm_load_tensors:   CPU_Mapped model buffer size =   871.81 MiB
..............................................................................
0.00.135.324 I llama_new_context_with_model: n_seq_max     = 1
0.00.135.330 I llama_new_context_with_model: n_ctx         = 128
0.00.135.330 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.135.330 I llama_new_context_with_model: n_batch       = 128
0.00.135.331 I llama_new_context_with_model: n_ubatch      = 128
0.00.135.331 I llama_new_context_with_model: flash_attn    = 0
0.00.135.334 I llama_new_context_with_model: freq_base     = 10000.0
0.00.135.334 I llama_new_context_with_model: freq_scale    = 1
0.00.135.335 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.140.886 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.140.898 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.140.920 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.143.140 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.143.146 I llama_new_context_with_model: graph nodes  = 967
0.00.143.147 I llama_new_context_with_model: graph splits = 1
0.00.143.149 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.191.646 I 
0.00.191.733 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.191.744 I perplexity: tokenizing the input ..
0.00.201.884 I perplexity: tokenization took 10.135 ms
0.00.201.907 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.895.128 I perplexity: 1.69 seconds per pass - ETA 0.02 minutes
[1]10.5531,
0.01.903.393 I Final estimate: PPL = 10.5531 +/- 3.37082

0.01.903.434 I llama_perf_context_print:        load time =     191.02 ms
0.01.903.436 I llama_perf_context_print: prompt eval time =    1691.51 ms /   128 tokens (   13.21 ms per token,    75.67 tokens per second)
0.01.903.441 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.903.442 I llama_perf_context_print:       total time =    1711.79 ms /   129 tokens

real	0m1.947s
user	0m7.113s
sys	0m0.096s
```
- q5_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.189 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.367 I main: llama backend init
0.00.000.373 I main: load the model and apply lora adapter, if any
0.00.009.455 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf (version GGUF V3 (latest))
0.00.009.468 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.473 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.475 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.476 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.476 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.477 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.481 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.481 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.483 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.483 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.484 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.484 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.485 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.489 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.489 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.490 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.400 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.731 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.088 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.092 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.093 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.093 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.094 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.095 I llama_model_loader: - kv  22:                          general.file_type u32              = 17
0.00.022.097 I llama_model_loader: - type  f32:  194 tensors
0.00.022.097 I llama_model_loader: - type q5_K:   61 tensors
0.00.022.098 I llama_model_loader: - type q6_K:   37 tensors
0.00.066.614 I llm_load_vocab: special tokens cache size = 25
0.00.080.440 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.454 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.455 I llm_load_print_meta: arch             = gptneox
0.00.080.455 I llm_load_print_meta: vocab type       = BPE
0.00.080.456 I llm_load_print_meta: n_vocab          = 50304
0.00.080.456 I llm_load_print_meta: n_merges         = 50009
0.00.080.457 I llm_load_print_meta: vocab_only       = 0
0.00.080.457 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.457 I llm_load_print_meta: n_embd           = 2048
0.00.080.458 I llm_load_print_meta: n_layer          = 24
0.00.080.468 I llm_load_print_meta: n_head           = 16
0.00.080.469 I llm_load_print_meta: n_head_kv        = 16
0.00.080.469 I llm_load_print_meta: n_rot            = 32
0.00.080.470 I llm_load_print_meta: n_swa            = 0
0.00.080.470 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.470 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.471 I llm_load_print_meta: n_gqa            = 1
0.00.080.472 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.473 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.475 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.476 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.476 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.476 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.477 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.478 I llm_load_print_meta: n_ff             = 8192
0.00.080.478 I llm_load_print_meta: n_expert         = 0
0.00.080.478 I llm_load_print_meta: n_expert_used    = 0
0.00.080.478 I llm_load_print_meta: causal attn      = 1
0.00.080.478 I llm_load_print_meta: pooling type     = 0
0.00.080.479 I llm_load_print_meta: rope type        = 2
0.00.080.479 I llm_load_print_meta: rope scaling     = linear
0.00.080.481 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.482 I llm_load_print_meta: freq_scale_train = 1
0.00.080.482 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.482 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.483 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.483 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.483 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.483 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.484 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.484 I llm_load_print_meta: model type       = 1.4B
0.00.080.484 I llm_load_print_meta: model ftype      = Q5_K - Medium
0.00.080.485 I llm_load_print_meta: model params     = 1.41 B
0.00.080.486 I llm_load_print_meta: model size       = 1006.35 MiB (5.97 BPW) 
0.00.080.487 I llm_load_print_meta: general.name     = 1.4B
0.00.080.487 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.487 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.488 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.488 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.489 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.489 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.489 I llm_load_print_meta: max token length = 1024
0.00.139.173 I llm_load_tensors:   CPU_Mapped model buffer size =  1006.35 MiB
................................................................................
0.00.141.743 I llama_new_context_with_model: n_seq_max     = 1
0.00.141.748 I llama_new_context_with_model: n_ctx         = 2048
0.00.141.749 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.141.749 I llama_new_context_with_model: n_batch       = 2048
0.00.141.749 I llama_new_context_with_model: n_ubatch      = 512
0.00.141.750 I llama_new_context_with_model: flash_attn    = 0
0.00.141.752 I llama_new_context_with_model: freq_base     = 10000.0
0.00.141.753 I llama_new_context_with_model: freq_scale    = 1
0.00.219.217 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.219.232 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.219.261 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.221.454 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.221.459 I llama_new_context_with_model: graph nodes  = 967
0.00.221.459 I llama_new_context_with_model: graph splits = 1
0.00.221.462 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.308.616 I main: llama threadpool init, n_threads = 4
0.00.308.632 I 
0.00.308.707 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.308.710 I 
0.00.308.823 I sampler seed: 1234
0.00.308.835 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.308.837 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.308.838 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.308.840 I 
I believe the meaning of life is that one day, if one is fortunate enough to be born, one will die.

I believe the meaning of life is that if one is fortunate enough to be born, one will die.

But I am not so fortunate, I am dying, my parents, my friends, my relatives, all of

0.02.596.184 I llama_perf_sampler_print:    sampling time =       2.45 ms /    71 runs   (    0.03 ms per token, 28979.59 tokens per second)
0.02.596.186 I llama_perf_context_print:        load time =     308.23 ms
0.02.596.188 I llama_perf_context_print: prompt eval time =     123.91 ms /     7 tokens (   17.70 ms per token,    56.49 tokens per second)
0.02.596.189 I llama_perf_context_print:        eval time =    2153.99 ms /    63 runs   (   34.19 ms per token,    29.25 tokens per second)
0.02.596.190 I llama_perf_context_print:       total time =    2287.58 ms /    70 tokens

real	0m2.649s
user	0m9.513s
sys	0m0.188s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.624 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.664 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf (version GGUF V3 (latest))
0.00.009.681 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.687 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.688 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.688 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.689 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.689 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.692 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.693 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.693 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.694 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.695 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.696 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.696 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.703 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.706 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.707 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.692 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.017.033 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.738 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.744 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.745 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.745 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.745 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.746 I llama_model_loader: - kv  22:                          general.file_type u32              = 17
0.00.022.749 I llama_model_loader: - type  f32:  194 tensors
0.00.022.750 I llama_model_loader: - type q5_K:   61 tensors
0.00.022.750 I llama_model_loader: - type q6_K:   37 tensors
0.00.068.436 I llm_load_vocab: special tokens cache size = 25
0.00.082.245 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.082.261 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.082.262 I llm_load_print_meta: arch             = gptneox
0.00.082.262 I llm_load_print_meta: vocab type       = BPE
0.00.082.263 I llm_load_print_meta: n_vocab          = 50304
0.00.082.264 I llm_load_print_meta: n_merges         = 50009
0.00.082.264 I llm_load_print_meta: vocab_only       = 0
0.00.082.265 I llm_load_print_meta: n_ctx_train      = 2048
0.00.082.266 I llm_load_print_meta: n_embd           = 2048
0.00.082.266 I llm_load_print_meta: n_layer          = 24
0.00.082.279 I llm_load_print_meta: n_head           = 16
0.00.082.280 I llm_load_print_meta: n_head_kv        = 16
0.00.082.280 I llm_load_print_meta: n_rot            = 32
0.00.082.281 I llm_load_print_meta: n_swa            = 0
0.00.082.281 I llm_load_print_meta: n_embd_head_k    = 128
0.00.082.282 I llm_load_print_meta: n_embd_head_v    = 128
0.00.082.283 I llm_load_print_meta: n_gqa            = 1
0.00.082.284 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.082.285 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.082.286 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.082.289 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.082.290 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.082.290 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.082.290 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.082.291 I llm_load_print_meta: n_ff             = 8192
0.00.082.292 I llm_load_print_meta: n_expert         = 0
0.00.082.292 I llm_load_print_meta: n_expert_used    = 0
0.00.082.292 I llm_load_print_meta: causal attn      = 1
0.00.082.293 I llm_load_print_meta: pooling type     = 0
0.00.082.293 I llm_load_print_meta: rope type        = 2
0.00.082.294 I llm_load_print_meta: rope scaling     = linear
0.00.082.295 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.082.296 I llm_load_print_meta: freq_scale_train = 1
0.00.082.296 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.082.297 I llm_load_print_meta: rope_finetuned   = unknown
0.00.082.297 I llm_load_print_meta: ssm_d_conv       = 0
0.00.082.298 I llm_load_print_meta: ssm_d_inner      = 0
0.00.082.298 I llm_load_print_meta: ssm_d_state      = 0
0.00.082.298 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.082.298 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.082.299 I llm_load_print_meta: model type       = 1.4B
0.00.082.299 I llm_load_print_meta: model ftype      = Q5_K - Medium
0.00.082.300 I llm_load_print_meta: model params     = 1.41 B
0.00.082.301 I llm_load_print_meta: model size       = 1006.35 MiB (5.97 BPW) 
0.00.082.302 I llm_load_print_meta: general.name     = 1.4B
0.00.082.302 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.082.303 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.082.303 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.082.303 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.082.304 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.082.305 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.082.305 I llm_load_print_meta: max token length = 1024
0.00.138.913 I llm_load_tensors:   CPU_Mapped model buffer size =  1006.35 MiB
................................................................................
0.00.141.732 I llama_new_context_with_model: n_seq_max     = 1
0.00.141.738 I llama_new_context_with_model: n_ctx         = 128
0.00.141.738 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.141.738 I llama_new_context_with_model: n_batch       = 128
0.00.141.739 I llama_new_context_with_model: n_ubatch      = 128
0.00.141.739 I llama_new_context_with_model: flash_attn    = 0
0.00.141.741 I llama_new_context_with_model: freq_base     = 10000.0
0.00.141.742 I llama_new_context_with_model: freq_scale    = 1
0.00.141.742 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.147.017 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.147.032 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.147.055 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.149.229 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.149.236 I llama_new_context_with_model: graph nodes  = 967
0.00.149.237 I llama_new_context_with_model: graph splits = 1
0.00.149.239 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.206.549 I 
0.00.206.635 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.206.649 I perplexity: tokenizing the input ..
0.00.216.646 I perplexity: tokenization took 9.993 ms
0.00.216.665 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.226.002 I perplexity: 2.01 seconds per pass - ETA 0.03 minutes
[1]10.5345,
0.02.234.234 I Final estimate: PPL = 10.5345 +/- 3.32630

0.02.234.264 I llama_perf_context_print:        load time =     205.89 ms
0.02.234.266 I llama_perf_context_print: prompt eval time =    2007.45 ms /   128 tokens (   15.68 ms per token,    63.76 tokens per second)
0.02.234.267 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.234.268 I llama_perf_context_print:       total time =    2027.72 ms /   129 tokens

real	0m2.281s
user	0m8.388s
sys	0m0.112s
```
- q6_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.540 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.708 I main: llama backend init
0.00.000.711 I main: load the model and apply lora adapter, if any
0.00.009.779 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf (version GGUF V3 (latest))
0.00.009.794 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.800 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.801 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.802 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.803 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.804 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.808 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.808 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.809 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.810 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.810 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.811 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.812 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.816 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.816 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.817 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.727 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.017.068 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.505 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.511 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.511 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.512 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.512 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.513 I llama_model_loader: - kv  22:                          general.file_type u32              = 18
0.00.022.516 I llama_model_loader: - type  f32:  194 tensors
0.00.022.517 I llama_model_loader: - type q6_K:   98 tensors
0.00.069.440 I llm_load_vocab: special tokens cache size = 25
0.00.083.375 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.083.390 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.083.390 I llm_load_print_meta: arch             = gptneox
0.00.083.391 I llm_load_print_meta: vocab type       = BPE
0.00.083.392 I llm_load_print_meta: n_vocab          = 50304
0.00.083.392 I llm_load_print_meta: n_merges         = 50009
0.00.083.393 I llm_load_print_meta: vocab_only       = 0
0.00.083.393 I llm_load_print_meta: n_ctx_train      = 2048
0.00.083.394 I llm_load_print_meta: n_embd           = 2048
0.00.083.394 I llm_load_print_meta: n_layer          = 24
0.00.083.405 I llm_load_print_meta: n_head           = 16
0.00.083.406 I llm_load_print_meta: n_head_kv        = 16
0.00.083.406 I llm_load_print_meta: n_rot            = 32
0.00.083.407 I llm_load_print_meta: n_swa            = 0
0.00.083.407 I llm_load_print_meta: n_embd_head_k    = 128
0.00.083.408 I llm_load_print_meta: n_embd_head_v    = 128
0.00.083.409 I llm_load_print_meta: n_gqa            = 1
0.00.083.410 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.083.411 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.083.412 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.083.413 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.083.413 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.083.413 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.083.414 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.083.415 I llm_load_print_meta: n_ff             = 8192
0.00.083.415 I llm_load_print_meta: n_expert         = 0
0.00.083.416 I llm_load_print_meta: n_expert_used    = 0
0.00.083.416 I llm_load_print_meta: causal attn      = 1
0.00.083.416 I llm_load_print_meta: pooling type     = 0
0.00.083.416 I llm_load_print_meta: rope type        = 2
0.00.083.417 I llm_load_print_meta: rope scaling     = linear
0.00.083.418 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.083.419 I llm_load_print_meta: freq_scale_train = 1
0.00.083.420 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.083.420 I llm_load_print_meta: rope_finetuned   = unknown
0.00.083.421 I llm_load_print_meta: ssm_d_conv       = 0
0.00.083.421 I llm_load_print_meta: ssm_d_inner      = 0
0.00.083.421 I llm_load_print_meta: ssm_d_state      = 0
0.00.083.422 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.083.422 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.083.422 I llm_load_print_meta: model type       = 1.4B
0.00.083.423 I llm_load_print_meta: model ftype      = Q6_K
0.00.083.424 I llm_load_print_meta: model params     = 1.41 B
0.00.083.424 I llm_load_print_meta: model size       = 1.08 GiB (6.57 BPW) 
0.00.083.424 I llm_load_print_meta: general.name     = 1.4B
0.00.083.425 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.083.425 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.083.426 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.083.426 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.083.427 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.083.427 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.083.428 I llm_load_print_meta: max token length = 1024
0.00.145.620 I llm_load_tensors:   CPU_Mapped model buffer size =  1108.64 MiB
...............................................................................
0.00.148.186 I llama_new_context_with_model: n_seq_max     = 1
0.00.148.191 I llama_new_context_with_model: n_ctx         = 2048
0.00.148.192 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.148.192 I llama_new_context_with_model: n_batch       = 2048
0.00.148.193 I llama_new_context_with_model: n_ubatch      = 512
0.00.148.193 I llama_new_context_with_model: flash_attn    = 0
0.00.148.195 I llama_new_context_with_model: freq_base     = 10000.0
0.00.148.196 I llama_new_context_with_model: freq_scale    = 1
0.00.225.301 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.225.317 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.225.345 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.227.562 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.227.568 I llama_new_context_with_model: graph nodes  = 967
0.00.227.568 I llama_new_context_with_model: graph splits = 1
0.00.227.571 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.314.596 I main: llama threadpool init, n_threads = 4
0.00.314.613 I 
0.00.314.686 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.314.690 I 
0.00.314.793 I sampler seed: 1234
0.00.314.805 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.314.809 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.314.809 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.314.810 I 
I believe the meaning of life is to die. It’s not a very nice thing to say, but it’s true.

I also believe it’s not a very nice thing to say to a dead person. I don’t think the dead person could ever fully comprehend why you said it, and I’m not sure if

0.02.685.578 I llama_perf_sampler_print:    sampling time =       2.53 ms /    71 runs   (    0.04 ms per token, 28041.07 tokens per second)
0.02.685.582 I llama_perf_context_print:        load time =     313.87 ms
0.02.685.584 I llama_perf_context_print: prompt eval time =     117.43 ms /     7 tokens (   16.78 ms per token,    59.61 tokens per second)
0.02.685.585 I llama_perf_context_print:        eval time =    2243.47 ms /    63 runs   (   35.61 ms per token,    28.08 tokens per second)
0.02.685.587 I llama_perf_context_print:       total time =    2370.99 ms /    70 tokens

real	0m2.745s
user	0m9.862s
sys	0m0.188s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.590 I build: 4202 (99c5439e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.567 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf (version GGUF V3 (latest))
0.00.009.581 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.587 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.588 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.589 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.590 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.591 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.595 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.596 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.596 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.597 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.597 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.598 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.599 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.603 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.603 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.604 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.386 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.723 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.102 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.107 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.107 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.108 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.108 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.109 I llama_model_loader: - kv  22:                          general.file_type u32              = 18
0.00.022.111 I llama_model_loader: - type  f32:  194 tensors
0.00.022.112 I llama_model_loader: - type q6_K:   98 tensors
0.00.066.962 I llm_load_vocab: special tokens cache size = 25
0.00.080.772 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.785 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.786 I llm_load_print_meta: arch             = gptneox
0.00.080.786 I llm_load_print_meta: vocab type       = BPE
0.00.080.787 I llm_load_print_meta: n_vocab          = 50304
0.00.080.787 I llm_load_print_meta: n_merges         = 50009
0.00.080.788 I llm_load_print_meta: vocab_only       = 0
0.00.080.788 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.788 I llm_load_print_meta: n_embd           = 2048
0.00.080.788 I llm_load_print_meta: n_layer          = 24
0.00.080.799 I llm_load_print_meta: n_head           = 16
0.00.080.800 I llm_load_print_meta: n_head_kv        = 16
0.00.080.801 I llm_load_print_meta: n_rot            = 32
0.00.080.801 I llm_load_print_meta: n_swa            = 0
0.00.080.801 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.802 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.803 I llm_load_print_meta: n_gqa            = 1
0.00.080.804 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.805 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.806 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.807 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.807 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.807 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.808 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.808 I llm_load_print_meta: n_ff             = 8192
0.00.080.809 I llm_load_print_meta: n_expert         = 0
0.00.080.809 I llm_load_print_meta: n_expert_used    = 0
0.00.080.809 I llm_load_print_meta: causal attn      = 1
0.00.080.809 I llm_load_print_meta: pooling type     = 0
0.00.080.810 I llm_load_print_meta: rope type        = 2
0.00.080.810 I llm_load_print_meta: rope scaling     = linear
0.00.080.811 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.812 I llm_load_print_meta: freq_scale_train = 1
0.00.080.813 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.813 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.814 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.814 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.814 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.814 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.815 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.815 I llm_load_print_meta: model type       = 1.4B
0.00.080.816 I llm_load_print_meta: model ftype      = Q6_K
0.00.080.816 I llm_load_print_meta: model params     = 1.41 B
0.00.080.817 I llm_load_print_meta: model size       = 1.08 GiB (6.57 BPW) 
0.00.080.817 I llm_load_print_meta: general.name     = 1.4B
0.00.080.818 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.818 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.819 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.819 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.820 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.820 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.820 I llm_load_print_meta: max token length = 1024
0.00.143.390 I llm_load_tensors:   CPU_Mapped model buffer size =  1108.64 MiB
...............................................................................
0.00.145.964 I llama_new_context_with_model: n_seq_max     = 1
0.00.145.970 I llama_new_context_with_model: n_ctx         = 128
0.00.145.970 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.145.970 I llama_new_context_with_model: n_batch       = 128
0.00.145.971 I llama_new_context_with_model: n_ubatch      = 128
0.00.145.971 I llama_new_context_with_model: flash_attn    = 0
0.00.145.973 I llama_new_context_with_model: freq_base     = 10000.0
0.00.145.974 I llama_new_context_with_model: freq_scale    = 1
0.00.145.975 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.151.274 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.151.286 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.151.308 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.153.428 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.153.433 I llama_new_context_with_model: graph nodes  = 967
0.00.153.433 I llama_new_context_with_model: graph splits = 1
0.00.153.435 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.210.089 I 
0.00.210.178 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.210.187 I perplexity: tokenizing the input ..
0.00.220.484 I perplexity: tokenization took 10.292 ms
0.00.220.506 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.066.934 I perplexity: 1.85 seconds per pass - ETA 0.02 minutes
[1]10.5551,
0.02.075.186 I Final estimate: PPL = 10.5551 +/- 3.36749

0.02.075.217 I llama_perf_context_print:        load time =     209.47 ms
0.02.075.219 I llama_perf_context_print: prompt eval time =    1844.66 ms /   128 tokens (   14.41 ms per token,    69.39 tokens per second)
0.02.075.220 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.075.221 I llama_perf_context_print:       total time =    1865.13 ms /   129 tokens

real	0m2.126s
user	0m7.760s
sys	0m0.112s
```
- save-load-state: 
```
+ ./bin/llama-save-load-state --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -ngl 99 -c 0
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
main: build = 4202 (99c5439e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gptneox
llama_model_loader: - kv   1:                               general.type str              = model
llama_model_loader: - kv   2:                               general.name str              = 1.4B
llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
llama_model_loader: - kv  21:               general.quantization_version u32              = 2
llama_model_loader: - kv  22:                          general.file_type u32              = 2
llama_model_loader: - type  f32:  194 tensors
llama_model_loader: - type q4_0:   97 tensors
llama_model_loader: - type q6_K:    1 tensors
llm_load_vocab: control token:      1 '<|padding|>' is not marked as EOG
llm_load_vocab: special tokens cache size = 25
llm_load_vocab: token to piece cache size = 0.2984 MB
llm_load_print_meta: format           = GGUF V3 (latest)
llm_load_print_meta: arch             = gptneox
llm_load_print_meta: vocab type       = BPE
llm_load_print_meta: n_vocab          = 50304
llm_load_print_meta: n_merges         = 50009
llm_load_print_meta: vocab_only       = 0
llm_load_print_meta: n_ctx_train      = 2048
llm_load_print_meta: n_embd           = 2048
llm_load_print_meta: n_layer          = 24
llm_load_print_meta: n_head           = 16
llm_load_print_meta: n_head_kv        = 16
llm_load_print_meta: n_rot            = 32
llm_load_print_meta: n_swa            = 0
llm_load_print_meta: n_embd_head_k    = 128
llm_load_print_meta: n_embd_head_v    = 128
llm_load_print_meta: n_gqa            = 1
llm_load_print_meta: n_embd_k_gqa     = 2048
llm_load_print_meta: n_embd_v_gqa     = 2048
llm_load_print_meta: f_norm_eps       = 1.0e-05
llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
llm_load_print_meta: f_clamp_kqv      = 0.0e+00
llm_load_print_meta: f_max_alibi_bias = 0.0e+00
llm_load_print_meta: f_logit_scale    = 0.0e+00
llm_load_print_meta: n_ff             = 8192
llm_load_print_meta: n_expert         = 0
llm_load_print_meta: n_expert_used    = 0
llm_load_print_meta: causal attn      = 1
llm_load_print_meta: pooling type     = 0
llm_load_print_meta: rope type        = 2
llm_load_print_meta: rope scaling     = linear
llm_load_print_meta: freq_base_train  = 10000.0
llm_load_print_meta: freq_scale_train = 1
llm_load_print_meta: n_ctx_orig_yarn  = 2048
llm_load_print_meta: rope_finetuned   = unknown
llm_load_print_meta: ssm_d_conv       = 0
llm_load_print_meta: ssm_d_inner      = 0
llm_load_print_meta: ssm_d_state      = 0
llm_load_print_meta: ssm_dt_rank      = 0
llm_load_print_meta: ssm_dt_b_c_rms   = 0
llm_load_print_meta: model type       = 1.4B
llm_load_print_meta: model ftype      = Q4_0
llm_load_print_meta: model params     = 1.41 B
llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
llm_load_print_meta: general.name     = 1.4B
llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
llm_load_print_meta: LF token         = 128 'Ä'
llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
llm_load_print_meta: max token length = 1024
llm_load_tensors: tensor 'token_embd.weight' (q4_0) (and 291 others) cannot be used with preferred buffer type CPU_AARCH64, using CPU instead
llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 967
llama_new_context_with_model: graph splits = 1
0.00.208.652 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
main : serialized state into 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 967
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 967
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
main : seq 0 copied, 787052 bytes
main : kv cache cleared
main : seq 1 restored, 787052 bytes

main : success

first run: The quick brown fox jumps over the lazy Dog." "Tell me, what does the D.O


second run: The quick brown fox jumps over the lazy Dog." "Tell me, what does the D.O


single seq run: The quick brown fox jumps over the lazy Dog." "Tell me, what does the D.O

real	0m2.393s
user	0m7.512s
sys	0m0.303s
+ ./bin/llama-save-load-state --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -ngl 99 -c 0 -fa
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
main: build = 4202 (99c5439e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gptneox
llama_model_loader: - kv   1:                               general.type str              = model
llama_model_loader: - kv   2:                               general.name str              = 1.4B
llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
llama_model_loader: - kv  21:               general.quantization_version u32              = 2
llama_model_loader: - kv  22:                          general.file_type u32              = 2
llama_model_loader: - type  f32:  194 tensors
llama_model_loader: - type q4_0:   97 tensors
llama_model_loader: - type q6_K:    1 tensors
llm_load_vocab: control token:      1 '<|padding|>' is not marked as EOG
llm_load_vocab: special tokens cache size = 25
llm_load_vocab: token to piece cache size = 0.2984 MB
llm_load_print_meta: format           = GGUF V3 (latest)
llm_load_print_meta: arch             = gptneox
llm_load_print_meta: vocab type       = BPE
llm_load_print_meta: n_vocab          = 50304
llm_load_print_meta: n_merges         = 50009
llm_load_print_meta: vocab_only       = 0
llm_load_print_meta: n_ctx_train      = 2048
llm_load_print_meta: n_embd           = 2048
llm_load_print_meta: n_layer          = 24
llm_load_print_meta: n_head           = 16
llm_load_print_meta: n_head_kv        = 16
llm_load_print_meta: n_rot            = 32
llm_load_print_meta: n_swa            = 0
llm_load_print_meta: n_embd_head_k    = 128
llm_load_print_meta: n_embd_head_v    = 128
llm_load_print_meta: n_gqa            = 1
llm_load_print_meta: n_embd_k_gqa     = 2048
llm_load_print_meta: n_embd_v_gqa     = 2048
llm_load_print_meta: f_norm_eps       = 1.0e-05
llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
llm_load_print_meta: f_clamp_kqv      = 0.0e+00
llm_load_print_meta: f_max_alibi_bias = 0.0e+00
llm_load_print_meta: f_logit_scale    = 0.0e+00
llm_load_print_meta: n_ff             = 8192
llm_load_print_meta: n_expert         = 0
llm_load_print_meta: n_expert_used    = 0
llm_load_print_meta: causal attn      = 1
llm_load_print_meta: pooling type     = 0
llm_load_print_meta: rope type        = 2
llm_load_print_meta: rope scaling     = linear
llm_load_print_meta: freq_base_train  = 10000.0
llm_load_print_meta: freq_scale_train = 1
llm_load_print_meta: n_ctx_orig_yarn  = 2048
llm_load_print_meta: rope_finetuned   = unknown
llm_load_print_meta: ssm_d_conv       = 0
llm_load_print_meta: ssm_d_inner      = 0
llm_load_print_meta: ssm_d_state      = 0
llm_load_print_meta: ssm_dt_rank      = 0
llm_load_print_meta: ssm_dt_b_c_rms   = 0
llm_load_print_meta: model type       = 1.4B
llm_load_print_meta: model ftype      = Q4_0
llm_load_print_meta: model params     = 1.41 B
llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
llm_load_print_meta: general.name     = 1.4B
llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
llm_load_print_meta: LF token         = 128 'Ä'
llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
llm_load_print_meta: max token length = 1024
llm_load_tensors: tensor 'token_embd.weight' (q4_0) (and 291 others) cannot be used with preferred buffer type CPU_AARCH64, using CPU instead
llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 1
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 872
llama_new_context_with_model: graph splits = 1
0.00.208.499 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
main : serialized state into 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 1
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 872
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 1
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 872
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
main : seq 0 copied, 787052 bytes
main : kv cache cleared
main : seq 1 restored, 787052 bytes

main : success

first run: The quick brown fox jumps over the lazy drunkard. No, not the lazy drunkard, the


second run: The quick brown fox jumps over the lazy drunkard. No, not the lazy drunkard, the


single seq run: The quick brown fox jumps over the lazy drunkard. No, not the lazy drunkard, the

real	0m2.315s
user	0m7.157s
sys	0m0.307s
```
### ctest_with_model_debug

Runs ctest with model files in debug mode
- status: 0
```
+ LLAMACPP_TEST_MODELFILE=/mnt/llama.cpp/models/pythia/1.4B/ggml-model-f16.gguf
+ time ctest --output-on-failure -L model
Test project /home/ggml/work/llama.cpp/build-ci-debug
    Start 23: test-model-load-cancel
1/2 Test #23: test-model-load-cancel ...........   Passed    0.01 sec
    Start 24: test-autorelease
2/2 Test #24: test-autorelease .................   Passed    0.54 sec

100% tests passed, 0 tests failed out of 2

Label Time Summary:
model    =   0.55 sec*proc (2 tests)

Total Test time (real) =   0.55 sec
0.33user 0.27system 0:00.61elapsed 99%CPU (0avgtext+0avgdata 2896792maxresident)k
0inputs+32outputs (0major+55167minor)pagefaults 0swaps
```
### ctest_with_model_release

Runs ctest with model files in release mode
- status: 0
```
+ LLAMACPP_TEST_MODELFILE=/mnt/llama.cpp/models/pythia/1.4B/ggml-model-f16.gguf
+ time ctest --output-on-failure -L model
Test project /home/ggml/work/llama.cpp/build-ci-release
    Start 23: test-model-load-cancel
1/2 Test #23: test-model-load-cancel ...........   Passed    0.00 sec
    Start 24: test-autorelease
2/2 Test #24: test-autorelease .................   Passed    0.34 sec

100% tests passed, 0 tests failed out of 2

Label Time Summary:
model    =   0.34 sec*proc (2 tests)

Total Test time (real) =   0.34 sec
0.13user 0.27system 0:00.40elapsed 99%CPU (0avgtext+0avgdata 2893376maxresident)k
0inputs+32outputs (0major+54497minor)pagefaults 0swaps
```
