+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.562 I build: 3898 (48efee15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.854 I main: load the model and apply lora adapter, if any
0.00.021.776 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.821 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.833 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.841 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.842 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.845 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.848 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.848 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.849 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.850 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.850 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.854 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.855 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.855 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.856 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.857 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.071 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.761 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.603 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.609 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.610 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.610 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.611 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.612 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.613 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.615 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.615 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.616 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.616 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.618 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.621 I llama_model_loader: - type  f32:   37 tensors
0.00.131.624 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.569 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.234.066 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.234.770 I llm_load_vocab: special tokens cache size = 5
0.00.255.609 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.255.621 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.255.622 I llm_load_print_meta: arch             = gemma
0.00.255.622 I llm_load_print_meta: vocab type       = SPM
0.00.255.623 I llm_load_print_meta: n_vocab          = 256000
0.00.255.623 I llm_load_print_meta: n_merges         = 0
0.00.255.624 I llm_load_print_meta: vocab_only       = 0
0.00.255.624 I llm_load_print_meta: n_ctx_train      = 8192
0.00.255.624 I llm_load_print_meta: n_embd           = 2048
0.00.255.624 I llm_load_print_meta: n_layer          = 18
0.00.255.636 I llm_load_print_meta: n_head           = 8
0.00.255.637 I llm_load_print_meta: n_head_kv        = 1
0.00.255.637 I llm_load_print_meta: n_rot            = 256
0.00.255.638 I llm_load_print_meta: n_swa            = 0
0.00.255.638 I llm_load_print_meta: n_embd_head_k    = 256
0.00.255.638 I llm_load_print_meta: n_embd_head_v    = 256
0.00.255.639 I llm_load_print_meta: n_gqa            = 8
0.00.255.640 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.255.641 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.255.642 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.255.643 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.255.644 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.255.644 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.255.645 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.255.646 I llm_load_print_meta: n_ff             = 16384
0.00.255.646 I llm_load_print_meta: n_expert         = 0
0.00.255.646 I llm_load_print_meta: n_expert_used    = 0
0.00.255.646 I llm_load_print_meta: causal attn      = 1
0.00.255.646 I llm_load_print_meta: pooling type     = 0
0.00.255.647 I llm_load_print_meta: rope type        = 2
0.00.255.647 I llm_load_print_meta: rope scaling     = linear
0.00.255.648 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.255.649 I llm_load_print_meta: freq_scale_train = 1
0.00.255.649 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.255.649 I llm_load_print_meta: rope_finetuned   = unknown
0.00.255.650 I llm_load_print_meta: ssm_d_conv       = 0
0.00.255.650 I llm_load_print_meta: ssm_d_inner      = 0
0.00.255.650 I llm_load_print_meta: ssm_d_state      = 0
0.00.255.651 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.255.651 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.255.651 I llm_load_print_meta: model type       = 2B
0.00.255.652 I llm_load_print_meta: model ftype      = Q8_0
0.00.255.653 I llm_load_print_meta: model params     = 2.51 B
0.00.255.654 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.255.654 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.255.654 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.255.655 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.255.655 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.255.655 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.255.656 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.255.656 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.255.656 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.255.657 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.255.657 I llm_load_print_meta: max token length = 93
0.00.255.674 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.359.351 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.359.359 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.359.360 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.359.361 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.359.361 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.359.362 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.364.456 I llama_new_context_with_model: n_ctx      = 8192
0.00.364.462 I llama_new_context_with_model: n_batch    = 2048
0.00.364.463 I llama_new_context_with_model: n_ubatch   = 512
0.00.364.464 I llama_new_context_with_model: flash_attn = 0
0.00.364.466 I llama_new_context_with_model: freq_base  = 10000.0
0.00.364.467 I llama_new_context_with_model: freq_scale = 1
0.00.393.113 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.393.128 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.393.218 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.394.081 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.394.090 I llama_new_context_with_model: graph nodes  = 601
0.00.394.090 I llama_new_context_with_model: graph splits = 1
0.00.394.092 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.484.890 I main: llama threadpool init, n_threads = 4
0.00.484.901 I 
0.00.484.976 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.484.979 I 
0.00.485.015 I sampler seed: 3822194477
0.00.485.024 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.485.027 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.485.028 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.485.028 I 
 increasities and the evolution of our understanding of the world

**I. The Historical Context**

- The development of science and technology in ancient Greece and China

0.02.740.423 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6745.71 tokens per second)
0.02.740.425 I llama_perf_context_print:        load time =     482.98 ms
0.02.740.427 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.740.428 I llama_perf_context_print:        eval time =    2237.71 ms /    32 runs   (   69.93 ms per token,    14.30 tokens per second)
0.02.740.429 I llama_perf_context_print:       total time =    2255.54 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.552 I build: 3898 (48efee15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.839 I main: load the model and apply lora adapter, if any
0.00.022.346 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.360 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.367 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.367 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.372 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.372 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.373 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.373 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.374 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.374 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.380 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.381 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.381 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.382 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.382 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.644 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.406 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.365 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.371 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.372 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.373 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.373 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.374 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.375 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.378 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.378 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.379 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.382 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.383 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.386 I llama_model_loader: - type  f32:   37 tensors
0.00.132.389 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.918 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.750 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.555 I llm_load_vocab: special tokens cache size = 5
0.00.260.306 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.326 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.326 I llm_load_print_meta: arch             = gemma
0.00.260.327 I llm_load_print_meta: vocab type       = SPM
0.00.260.327 I llm_load_print_meta: n_vocab          = 256000
0.00.260.328 I llm_load_print_meta: n_merges         = 0
0.00.260.328 I llm_load_print_meta: vocab_only       = 0
0.00.260.328 I llm_load_print_meta: n_ctx_train      = 8192
0.00.260.329 I llm_load_print_meta: n_embd           = 2048
0.00.260.329 I llm_load_print_meta: n_layer          = 18
0.00.260.340 I llm_load_print_meta: n_head           = 8
0.00.260.341 I llm_load_print_meta: n_head_kv        = 1
0.00.260.342 I llm_load_print_meta: n_rot            = 256
0.00.260.342 I llm_load_print_meta: n_swa            = 0
0.00.260.342 I llm_load_print_meta: n_embd_head_k    = 256
0.00.260.343 I llm_load_print_meta: n_embd_head_v    = 256
0.00.260.344 I llm_load_print_meta: n_gqa            = 8
0.00.260.345 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.260.346 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.260.346 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.260.348 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.260.348 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.260.349 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.260.349 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.260.350 I llm_load_print_meta: n_ff             = 16384
0.00.260.350 I llm_load_print_meta: n_expert         = 0
0.00.260.351 I llm_load_print_meta: n_expert_used    = 0
0.00.260.351 I llm_load_print_meta: causal attn      = 1
0.00.260.351 I llm_load_print_meta: pooling type     = 0
0.00.260.351 I llm_load_print_meta: rope type        = 2
0.00.260.351 I llm_load_print_meta: rope scaling     = linear
0.00.260.353 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.260.353 I llm_load_print_meta: freq_scale_train = 1
0.00.260.353 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.260.354 I llm_load_print_meta: rope_finetuned   = unknown
0.00.260.354 I llm_load_print_meta: ssm_d_conv       = 0
0.00.260.355 I llm_load_print_meta: ssm_d_inner      = 0
0.00.260.355 I llm_load_print_meta: ssm_d_state      = 0
0.00.260.355 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.260.355 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.260.356 I llm_load_print_meta: model type       = 2B
0.00.260.356 I llm_load_print_meta: model ftype      = Q8_0
0.00.260.357 I llm_load_print_meta: model params     = 2.51 B
0.00.260.358 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.260.358 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.260.359 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.260.359 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.260.359 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.260.359 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.260.360 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.260.360 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.260.361 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.260.361 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.260.361 I llm_load_print_meta: max token length = 93
0.00.260.379 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.355.324 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.360.383 I llama_new_context_with_model: n_ctx      = 8192
0.00.360.389 I llama_new_context_with_model: n_batch    = 2048
0.00.360.389 I llama_new_context_with_model: n_ubatch   = 512
0.00.360.390 I llama_new_context_with_model: flash_attn = 0
0.00.360.392 I llama_new_context_with_model: freq_base  = 10000.0
0.00.360.393 I llama_new_context_with_model: freq_scale = 1
0.00.388.893 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.388.907 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.388.999 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.389.838 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.389.846 I llama_new_context_with_model: graph nodes  = 601
0.00.389.846 I llama_new_context_with_model: graph splits = 1
0.00.389.848 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.476.325 I main: llama threadpool init, n_threads = 4
0.00.476.337 I 
0.00.476.414 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.476.417 I 
0.00.476.455 I sampler seed: 2951862175
0.00.476.465 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.476.468 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.476.468 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.476.468 I 
 seconary effects of caffeine include:

(a) Increased alertness
(b) Reduced sleep
(c) Enhanced memory
(d) Increased energy



0.02.638.323 I llama_perf_sampler_print:    sampling time =       4.61 ms /    33 runs   (    0.14 ms per token,  7156.80 tokens per second)
0.02.638.326 I llama_perf_context_print:        load time =     474.42 ms
0.02.638.327 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.638.328 I llama_perf_context_print:        eval time =    2144.54 ms /    32 runs   (   67.02 ms per token,    14.92 tokens per second)
0.02.638.329 I llama_perf_context_print:       total time =    2162.01 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.538 I build: 3898 (48efee15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.001.852 I main: load the model and apply lora adapter, if any
0.00.022.119 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.166 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.177 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.183 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.186 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.190 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.190 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.191 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.192 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.192 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.194 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.199 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.199 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.200 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.200 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.201 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.746 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.370 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.402 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.407 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.408 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.408 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.409 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.410 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.410 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.413 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.413 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.414 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.414 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.415 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.419 I llama_model_loader: - type  f32:   37 tensors
0.00.133.421 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.912 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.237.393 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.238.173 I llm_load_vocab: special tokens cache size = 5
0.00.259.166 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.259.183 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.259.184 I llm_load_print_meta: arch             = gemma
0.00.259.185 I llm_load_print_meta: vocab type       = SPM
0.00.259.186 I llm_load_print_meta: n_vocab          = 256000
0.00.259.186 I llm_load_print_meta: n_merges         = 0
0.00.259.187 I llm_load_print_meta: vocab_only       = 0
0.00.259.187 I llm_load_print_meta: n_ctx_train      = 8192
0.00.259.188 I llm_load_print_meta: n_embd           = 2048
0.00.259.188 I llm_load_print_meta: n_layer          = 18
0.00.259.201 I llm_load_print_meta: n_head           = 8
0.00.259.202 I llm_load_print_meta: n_head_kv        = 1
0.00.259.202 I llm_load_print_meta: n_rot            = 256
0.00.259.202 I llm_load_print_meta: n_swa            = 0
0.00.259.203 I llm_load_print_meta: n_embd_head_k    = 256
0.00.259.203 I llm_load_print_meta: n_embd_head_v    = 256
0.00.259.204 I llm_load_print_meta: n_gqa            = 8
0.00.259.205 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.259.206 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.259.207 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.259.209 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.259.209 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.259.210 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.259.210 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.259.211 I llm_load_print_meta: n_ff             = 16384
0.00.259.211 I llm_load_print_meta: n_expert         = 0
0.00.259.212 I llm_load_print_meta: n_expert_used    = 0
0.00.259.212 I llm_load_print_meta: causal attn      = 1
0.00.259.212 I llm_load_print_meta: pooling type     = 0
0.00.259.212 I llm_load_print_meta: rope type        = 2
0.00.259.213 I llm_load_print_meta: rope scaling     = linear
0.00.259.214 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.259.215 I llm_load_print_meta: freq_scale_train = 1
0.00.259.215 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.259.215 I llm_load_print_meta: rope_finetuned   = unknown
0.00.259.216 I llm_load_print_meta: ssm_d_conv       = 0
0.00.259.216 I llm_load_print_meta: ssm_d_inner      = 0
0.00.259.216 I llm_load_print_meta: ssm_d_state      = 0
0.00.259.216 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.259.217 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.259.218 I llm_load_print_meta: model type       = 2B
0.00.259.218 I llm_load_print_meta: model ftype      = Q8_0
0.00.259.219 I llm_load_print_meta: model params     = 2.51 B
0.00.259.220 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.259.220 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.259.220 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.259.221 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.259.221 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.259.221 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.259.222 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.259.222 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.259.222 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.259.223 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.259.223 I llm_load_print_meta: max token length = 93
0.00.259.246 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.336.468 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.336.475 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.336.475 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.336.476 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.336.477 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.336.477 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.341.528 I llama_new_context_with_model: n_ctx      = 8192
0.00.341.533 I llama_new_context_with_model: n_batch    = 2048
0.00.341.534 I llama_new_context_with_model: n_ubatch   = 512
0.00.341.534 I llama_new_context_with_model: flash_attn = 0
0.00.341.537 I llama_new_context_with_model: freq_base  = 10000.0
0.00.341.538 I llama_new_context_with_model: freq_scale = 1
0.00.370.806 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.821 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.911 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.792 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.799 I llama_new_context_with_model: graph nodes  = 601
0.00.371.799 I llama_new_context_with_model: graph splits = 1
0.00.371.801 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.462.836 I main: llama threadpool init, n_threads = 4
0.00.462.846 I 
0.00.462.923 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.462.926 I 
0.00.462.961 I sampler seed: 3721561728
0.00.462.970 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.973 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.462.974 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.974 I 
 increasels. 
The context does not specify what the context is, so I am unable to answer this question from the provided context. [end of text]


0.02.533.913 I llama_perf_sampler_print:    sampling time =       4.66 ms /    30 runs   (    0.16 ms per token,  6439.15 tokens per second)
0.02.533.917 I llama_perf_context_print:        load time =     460.92 ms
0.02.533.918 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.533.920 I llama_perf_context_print:        eval time =    2053.66 ms /    29 runs   (   70.82 ms per token,    14.12 tokens per second)
0.02.533.921 I llama_perf_context_print:       total time =    2071.09 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.563 I build: 3898 (48efee15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.001.903 I main: load the model and apply lora adapter, if any
0.00.022.196 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.244 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.255 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.262 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.264 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.268 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.271 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.272 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.272 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.273 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.274 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.279 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.279 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.280 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.281 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.281 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.915 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.591 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.524 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.531 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.531 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.532 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.533 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.534 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.534 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.537 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.538 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.538 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.539 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.540 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.544 I llama_model_loader: - type  f32:   37 tensors
0.00.133.547 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.186 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.716 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.541 I llm_load_vocab: special tokens cache size = 5
0.00.263.450 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.462 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.463 I llm_load_print_meta: arch             = gemma
0.00.263.463 I llm_load_print_meta: vocab type       = SPM
0.00.263.464 I llm_load_print_meta: n_vocab          = 256000
0.00.263.465 I llm_load_print_meta: n_merges         = 0
0.00.263.465 I llm_load_print_meta: vocab_only       = 0
0.00.263.466 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.466 I llm_load_print_meta: n_embd           = 2048
0.00.263.466 I llm_load_print_meta: n_layer          = 18
0.00.263.479 I llm_load_print_meta: n_head           = 8
0.00.263.480 I llm_load_print_meta: n_head_kv        = 1
0.00.263.480 I llm_load_print_meta: n_rot            = 256
0.00.263.481 I llm_load_print_meta: n_swa            = 0
0.00.263.481 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.481 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.482 I llm_load_print_meta: n_gqa            = 8
0.00.263.483 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.484 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.485 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.486 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.487 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.487 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.488 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.489 I llm_load_print_meta: n_ff             = 16384
0.00.263.489 I llm_load_print_meta: n_expert         = 0
0.00.263.490 I llm_load_print_meta: n_expert_used    = 0
0.00.263.490 I llm_load_print_meta: causal attn      = 1
0.00.263.490 I llm_load_print_meta: pooling type     = 0
0.00.263.490 I llm_load_print_meta: rope type        = 2
0.00.263.491 I llm_load_print_meta: rope scaling     = linear
0.00.263.492 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.492 I llm_load_print_meta: freq_scale_train = 1
0.00.263.493 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.493 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.493 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.493 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.494 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.494 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.494 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.495 I llm_load_print_meta: model type       = 2B
0.00.263.495 I llm_load_print_meta: model ftype      = Q8_0
0.00.263.496 I llm_load_print_meta: model params     = 2.51 B
0.00.263.497 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.263.497 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.498 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.498 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.498 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.499 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.499 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.499 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.500 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.500 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.501 I llm_load_print_meta: max token length = 93
0.00.263.522 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.333.683 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.333.689 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.338.792 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.799 I llama_new_context_with_model: n_batch    = 2048
0.00.338.800 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.800 I llama_new_context_with_model: flash_attn = 0
0.00.338.803 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.803 I llama_new_context_with_model: freq_scale = 1
0.00.367.338 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.367.353 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.367.444 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.312 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.368.320 I llama_new_context_with_model: graph nodes  = 601
0.00.368.321 I llama_new_context_with_model: graph splits = 1
0.00.368.323 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.462.349 I main: llama threadpool init, n_threads = 4
0.00.462.363 I 
0.00.462.448 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.462.452 I 
0.00.462.502 I sampler seed: 961380054
0.00.462.511 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.515 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.462.515 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.515 I 
 increasities, a concept not entirely clear in the provided text. [end of text]


0.01.515.469 I llama_perf_sampler_print:    sampling time =       2.12 ms /    15 runs   (    0.14 ms per token,  7072.14 tokens per second)
0.01.515.472 I llama_perf_context_print:        load time =     460.38 ms
0.01.515.473 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.515.475 I llama_perf_context_print:        eval time =    1044.60 ms /    14 runs   (   74.61 ms per token,    13.40 tokens per second)
0.01.515.476 I llama_perf_context_print:       total time =    1053.13 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.936s
user	0m32.965s
sys	0m9.435s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3898 (48efee15)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32008.83 ms
main:    total time = 32008.83 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.582 I build: 3898 (48efee15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.804 I main: llama backend init
0.00.001.917 I main: load the model and apply lora adapter, if any
0.00.022.190 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.240 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.255 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.260 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.262 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.266 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.267 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.268 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.268 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.269 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.269 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.275 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.276 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.277 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.277 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.278 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.141 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.367 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.236 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.243 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.244 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.245 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.246 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.247 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.248 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.253 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.253 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.254 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.255 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.257 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.262 I llama_model_loader: - type  f32:   37 tensors
0.00.133.264 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.266 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.602 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.865 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.556 I llm_load_vocab: special tokens cache size = 5
0.00.260.407 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.419 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.420 I llm_load_print_meta: arch             = gemma
0.00.260.420 I llm_load_print_meta: vocab type       = SPM
0.00.260.421 I llm_load_print_meta: n_vocab          = 256000
0.00.260.421 I llm_load_print_meta: n_merges         = 0
0.00.260.422 I llm_load_print_meta: vocab_only       = 0
0.00.260.422 I llm_load_print_meta: n_ctx_train      = 8192
0.00.260.422 I llm_load_print_meta: n_embd           = 2048
0.00.260.423 I llm_load_print_meta: n_layer          = 18
0.00.260.434 I llm_load_print_meta: n_head           = 8
0.00.260.435 I llm_load_print_meta: n_head_kv        = 1
0.00.260.435 I llm_load_print_meta: n_rot            = 256
0.00.260.435 I llm_load_print_meta: n_swa            = 0
0.00.260.436 I llm_load_print_meta: n_embd_head_k    = 256
0.00.260.436 I llm_load_print_meta: n_embd_head_v    = 256
0.00.260.437 I llm_load_print_meta: n_gqa            = 8
0.00.260.438 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.260.439 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.260.440 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.260.441 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.260.441 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.260.442 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.260.442 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.260.443 I llm_load_print_meta: n_ff             = 16384
0.00.260.443 I llm_load_print_meta: n_expert         = 0
0.00.260.444 I llm_load_print_meta: n_expert_used    = 0
0.00.260.444 I llm_load_print_meta: causal attn      = 1
0.00.260.444 I llm_load_print_meta: pooling type     = 0
0.00.260.444 I llm_load_print_meta: rope type        = 2
0.00.260.444 I llm_load_print_meta: rope scaling     = linear
0.00.260.446 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.260.447 I llm_load_print_meta: freq_scale_train = 1
0.00.260.447 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.260.447 I llm_load_print_meta: rope_finetuned   = unknown
0.00.260.448 I llm_load_print_meta: ssm_d_conv       = 0
0.00.260.448 I llm_load_print_meta: ssm_d_inner      = 0
0.00.260.448 I llm_load_print_meta: ssm_d_state      = 0
0.00.260.448 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.260.449 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.260.449 I llm_load_print_meta: model type       = 2B
0.00.260.450 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.260.450 I llm_load_print_meta: model params     = 2.51 B
0.00.260.451 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.260.451 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.260.452 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.260.452 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.260.453 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.260.453 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.260.453 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.260.454 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.260.454 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.260.454 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.260.455 I llm_load_print_meta: max token length = 93
0.00.260.473 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.541 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.319.548 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.319.549 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.319.549 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.319.550 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.319.551 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.324.499 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.505 I llama_new_context_with_model: n_batch    = 2048
0.00.324.506 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.506 I llama_new_context_with_model: flash_attn = 0
0.00.324.508 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.509 I llama_new_context_with_model: freq_scale = 1
0.00.352.934 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.352.948 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.043 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.920 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.353.928 I llama_new_context_with_model: graph nodes  = 601
0.00.353.928 I llama_new_context_with_model: graph splits = 1
0.00.353.930 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.062 I main: llama threadpool init, n_threads = 4
0.00.436.074 I 
0.00.436.152 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.156 I 
0.00.436.191 I sampler seed: 3227520505
0.00.436.200 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.207 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.209 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.209 I 
 seconally.

I am unable to generate a response as requested because I am unable to access external websites or specific data sources. [end of text]


0.01.792.866 I llama_perf_sampler_print:    sampling time =       4.26 ms /    28 runs   (    0.15 ms per token,  6569.69 tokens per second)
0.01.792.869 I llama_perf_context_print:        load time =     434.08 ms
0.01.792.870 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.792.873 I llama_perf_context_print:        eval time =    1341.47 ms /    27 runs   (   49.68 ms per token,    20.13 tokens per second)
0.01.792.873 I llama_perf_context_print:       total time =    1356.81 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3898 (48efee15)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32046.95 ms
main:    total time = 32046.95 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.538 I build: 3898 (48efee15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.001.870 I main: load the model and apply lora adapter, if any
0.00.022.122 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.137 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.142 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.143 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.158 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.159 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.160 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.161 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.161 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.162 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.166 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.166 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.167 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.168 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.168 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.543 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.419 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.249 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.255 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.256 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.257 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.258 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.259 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.260 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.263 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.264 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.268 I llama_model_loader: - type  f32:   37 tensors
0.00.132.270 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.271 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.400 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.235.241 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.235.916 I llm_load_vocab: special tokens cache size = 5
0.00.256.583 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.256.596 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.256.596 I llm_load_print_meta: arch             = gemma
0.00.256.597 I llm_load_print_meta: vocab type       = SPM
0.00.256.598 I llm_load_print_meta: n_vocab          = 256000
0.00.256.598 I llm_load_print_meta: n_merges         = 0
0.00.256.599 I llm_load_print_meta: vocab_only       = 0
0.00.256.599 I llm_load_print_meta: n_ctx_train      = 8192
0.00.256.599 I llm_load_print_meta: n_embd           = 2048
0.00.256.600 I llm_load_print_meta: n_layer          = 18
0.00.256.612 I llm_load_print_meta: n_head           = 8
0.00.256.613 I llm_load_print_meta: n_head_kv        = 1
0.00.256.614 I llm_load_print_meta: n_rot            = 256
0.00.256.614 I llm_load_print_meta: n_swa            = 0
0.00.256.614 I llm_load_print_meta: n_embd_head_k    = 256
0.00.256.614 I llm_load_print_meta: n_embd_head_v    = 256
0.00.256.616 I llm_load_print_meta: n_gqa            = 8
0.00.256.617 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.256.618 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.256.618 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.256.620 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.256.620 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.256.621 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.256.621 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.256.622 I llm_load_print_meta: n_ff             = 16384
0.00.256.622 I llm_load_print_meta: n_expert         = 0
0.00.256.623 I llm_load_print_meta: n_expert_used    = 0
0.00.256.623 I llm_load_print_meta: causal attn      = 1
0.00.256.623 I llm_load_print_meta: pooling type     = 0
0.00.256.624 I llm_load_print_meta: rope type        = 2
0.00.256.624 I llm_load_print_meta: rope scaling     = linear
0.00.256.625 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.256.626 I llm_load_print_meta: freq_scale_train = 1
0.00.256.626 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.256.627 I llm_load_print_meta: rope_finetuned   = unknown
0.00.256.627 I llm_load_print_meta: ssm_d_conv       = 0
0.00.256.627 I llm_load_print_meta: ssm_d_inner      = 0
0.00.256.627 I llm_load_print_meta: ssm_d_state      = 0
0.00.256.628 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.256.628 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.256.629 I llm_load_print_meta: model type       = 2B
0.00.256.629 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.256.630 I llm_load_print_meta: model params     = 2.51 B
0.00.256.630 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.256.631 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.256.631 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.256.632 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.256.632 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.256.632 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.256.632 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.256.633 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.256.633 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.256.634 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.256.634 I llm_load_print_meta: max token length = 93
0.00.256.651 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.417.953 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.423.016 I llama_new_context_with_model: n_ctx      = 8192
0.00.423.021 I llama_new_context_with_model: n_batch    = 2048
0.00.423.022 I llama_new_context_with_model: n_ubatch   = 512
0.00.423.022 I llama_new_context_with_model: flash_attn = 0
0.00.423.025 I llama_new_context_with_model: freq_base  = 10000.0
0.00.423.026 I llama_new_context_with_model: freq_scale = 1
0.00.453.152 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.453.167 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.453.258 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.454.129 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.454.137 I llama_new_context_with_model: graph nodes  = 601
0.00.454.137 I llama_new_context_with_model: graph splits = 1
0.00.454.139 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.534.428 I main: llama threadpool init, n_threads = 4
0.00.534.439 I 
0.00.534.516 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.534.519 I 
0.00.534.557 I sampler seed: 789568741
0.00.534.565 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.534.568 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.534.569 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.534.569 I 
 encompassing a wide range of topics?

**Yes, I can do that.**

**Here are some examples of topics I can discuss:**

* Current

0.02.106.926 I llama_perf_sampler_print:    sampling time =       4.80 ms /    33 runs   (    0.15 ms per token,  6877.87 tokens per second)
0.02.106.928 I llama_perf_context_print:        load time =     532.50 ms
0.02.106.929 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.106.931 I llama_perf_context_print:        eval time =    1555.15 ms /    32 runs   (   48.60 ms per token,    20.58 tokens per second)
0.02.106.932 I llama_perf_context_print:       total time =    1572.51 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.759s
user	8m12.929s
sys	0m7.102s
