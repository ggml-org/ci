+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.602 I build: 4162 (4ff0831c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.808 I main: llama backend init
0.00.000.817 I main: load the model and apply lora adapter, if any
0.00.021.828 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.840 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.848 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.853 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.854 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.859 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.860 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.861 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.861 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.861 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.863 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.868 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.868 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.869 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.870 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.871 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.431 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.442 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.359 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.367 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.368 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.369 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.370 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.371 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.372 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.375 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.376 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.377 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.378 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.379 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.384 I llama_model_loader: - type  f32:   37 tensors
0.00.133.385 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.405 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.277.620 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.278.405 I llm_load_vocab: special tokens cache size = 5
0.00.299.668 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.299.685 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.299.686 I llm_load_print_meta: arch             = gemma
0.00.299.686 I llm_load_print_meta: vocab type       = SPM
0.00.299.687 I llm_load_print_meta: n_vocab          = 256000
0.00.299.688 I llm_load_print_meta: n_merges         = 0
0.00.299.688 I llm_load_print_meta: vocab_only       = 0
0.00.299.688 I llm_load_print_meta: n_ctx_train      = 8192
0.00.299.689 I llm_load_print_meta: n_embd           = 2048
0.00.299.689 I llm_load_print_meta: n_layer          = 18
0.00.299.701 I llm_load_print_meta: n_head           = 8
0.00.299.702 I llm_load_print_meta: n_head_kv        = 1
0.00.299.703 I llm_load_print_meta: n_rot            = 256
0.00.299.703 I llm_load_print_meta: n_swa            = 0
0.00.299.704 I llm_load_print_meta: n_embd_head_k    = 256
0.00.299.704 I llm_load_print_meta: n_embd_head_v    = 256
0.00.299.705 I llm_load_print_meta: n_gqa            = 8
0.00.299.706 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.299.707 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.299.708 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.299.709 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.299.709 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.299.709 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.299.710 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.299.711 I llm_load_print_meta: n_ff             = 16384
0.00.299.711 I llm_load_print_meta: n_expert         = 0
0.00.299.712 I llm_load_print_meta: n_expert_used    = 0
0.00.299.712 I llm_load_print_meta: causal attn      = 1
0.00.299.712 I llm_load_print_meta: pooling type     = 0
0.00.299.712 I llm_load_print_meta: rope type        = 2
0.00.299.713 I llm_load_print_meta: rope scaling     = linear
0.00.299.714 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.299.715 I llm_load_print_meta: freq_scale_train = 1
0.00.299.715 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.299.715 I llm_load_print_meta: rope_finetuned   = unknown
0.00.299.716 I llm_load_print_meta: ssm_d_conv       = 0
0.00.299.716 I llm_load_print_meta: ssm_d_inner      = 0
0.00.299.716 I llm_load_print_meta: ssm_d_state      = 0
0.00.299.716 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.299.717 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.299.717 I llm_load_print_meta: model type       = 2B
0.00.299.718 I llm_load_print_meta: model ftype      = Q8_0
0.00.299.718 I llm_load_print_meta: model params     = 2.51 B
0.00.299.719 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.299.720 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.299.720 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.299.720 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.299.721 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.299.721 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.299.721 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.299.722 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.299.722 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.299.723 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.299.723 I llm_load_print_meta: max token length = 93
0.00.398.968 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.398.977 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.398.978 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.398.979 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.398.979 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.398.980 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.404.490 I llama_new_context_with_model: n_seq_max     = 1
0.00.404.498 I llama_new_context_with_model: n_ctx         = 4096
0.00.404.498 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.404.499 I llama_new_context_with_model: n_batch       = 2048
0.00.404.499 I llama_new_context_with_model: n_ubatch      = 512
0.00.404.500 I llama_new_context_with_model: flash_attn    = 0
0.00.404.503 I llama_new_context_with_model: freq_base     = 10000.0
0.00.404.504 I llama_new_context_with_model: freq_scale    = 1
0.00.404.505 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.419.659 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.419.673 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.419.765 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.420.998 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.421.005 I llama_new_context_with_model: graph nodes  = 601
0.00.421.006 I llama_new_context_with_model: graph splits = 1
0.00.421.008 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.510.011 I main: llama threadpool init, n_threads = 4
0.00.510.025 I 
0.00.510.097 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.510.101 I 
0.00.510.144 I sampler seed: 110160765
0.00.510.155 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.510.158 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.510.159 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.510.159 I 
 increably!

I apologize, but I am unable to generate responses that contain inappropriate or sexually suggestive content. [end of text]


0.02.228.641 I llama_perf_sampler_print:    sampling time =       3.56 ms /    24 runs   (    0.15 ms per token,  6732.12 tokens per second)
0.02.228.644 I llama_perf_context_print:        load time =     509.17 ms
0.02.228.645 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.228.647 I llama_perf_context_print:        eval time =    1703.40 ms /    23 runs   (   74.06 ms per token,    13.50 tokens per second)
0.02.228.648 I llama_perf_context_print:       total time =    1718.64 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.581 I build: 4162 (4ff0831c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.823 I main: llama backend init
0.00.000.831 I main: load the model and apply lora adapter, if any
0.00.021.340 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.357 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.366 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.367 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.372 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.373 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.374 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.374 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.375 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.376 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.381 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.381 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.382 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.382 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.383 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.308 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.968 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.926 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.933 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.934 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.935 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.935 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.937 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.937 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.939 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.940 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.941 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.942 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.134.943 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.948 I llama_model_loader: - type  f32:   37 tensors
0.00.134.950 I llama_model_loader: - type q8_0:  127 tensors
0.00.221.641 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.275.149 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.275.822 I llm_load_vocab: special tokens cache size = 5
0.00.297.184 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.297.212 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.297.213 I llm_load_print_meta: arch             = gemma
0.00.297.214 I llm_load_print_meta: vocab type       = SPM
0.00.297.215 I llm_load_print_meta: n_vocab          = 256000
0.00.297.215 I llm_load_print_meta: n_merges         = 0
0.00.297.216 I llm_load_print_meta: vocab_only       = 0
0.00.297.216 I llm_load_print_meta: n_ctx_train      = 8192
0.00.297.216 I llm_load_print_meta: n_embd           = 2048
0.00.297.216 I llm_load_print_meta: n_layer          = 18
0.00.297.229 I llm_load_print_meta: n_head           = 8
0.00.297.230 I llm_load_print_meta: n_head_kv        = 1
0.00.297.231 I llm_load_print_meta: n_rot            = 256
0.00.297.231 I llm_load_print_meta: n_swa            = 0
0.00.297.231 I llm_load_print_meta: n_embd_head_k    = 256
0.00.297.231 I llm_load_print_meta: n_embd_head_v    = 256
0.00.297.232 I llm_load_print_meta: n_gqa            = 8
0.00.297.233 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.297.234 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.297.235 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.297.236 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.297.237 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.297.237 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.297.237 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.297.238 I llm_load_print_meta: n_ff             = 16384
0.00.297.239 I llm_load_print_meta: n_expert         = 0
0.00.297.239 I llm_load_print_meta: n_expert_used    = 0
0.00.297.239 I llm_load_print_meta: causal attn      = 1
0.00.297.239 I llm_load_print_meta: pooling type     = 0
0.00.297.240 I llm_load_print_meta: rope type        = 2
0.00.297.241 I llm_load_print_meta: rope scaling     = linear
0.00.297.242 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.297.243 I llm_load_print_meta: freq_scale_train = 1
0.00.297.243 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.297.244 I llm_load_print_meta: rope_finetuned   = unknown
0.00.297.244 I llm_load_print_meta: ssm_d_conv       = 0
0.00.297.244 I llm_load_print_meta: ssm_d_inner      = 0
0.00.297.244 I llm_load_print_meta: ssm_d_state      = 0
0.00.297.245 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.297.246 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.297.246 I llm_load_print_meta: model type       = 2B
0.00.297.247 I llm_load_print_meta: model ftype      = Q8_0
0.00.297.248 I llm_load_print_meta: model params     = 2.51 B
0.00.297.249 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.297.249 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.297.250 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.297.250 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.297.250 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.297.251 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.297.251 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.297.251 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.297.251 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.297.252 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.297.253 I llm_load_print_meta: max token length = 93
0.00.391.282 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.396.514 I llama_new_context_with_model: n_seq_max     = 1
0.00.396.521 I llama_new_context_with_model: n_ctx         = 4096
0.00.396.522 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.396.522 I llama_new_context_with_model: n_batch       = 2048
0.00.396.523 I llama_new_context_with_model: n_ubatch      = 512
0.00.396.524 I llama_new_context_with_model: flash_attn    = 0
0.00.396.528 I llama_new_context_with_model: freq_base     = 10000.0
0.00.396.530 I llama_new_context_with_model: freq_scale    = 1
0.00.396.531 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.413.069 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.413.085 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.413.182 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.414.487 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.414.492 I llama_new_context_with_model: graph nodes  = 601
0.00.414.492 I llama_new_context_with_model: graph splits = 1
0.00.414.494 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.980 I main: llama threadpool init, n_threads = 4
0.00.497.993 I 
0.00.498.067 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.498.071 I 
0.00.498.120 I sampler seed: 2113162090
0.00.498.131 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.133 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.498.135 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.136 I 
 increasities can occur due to the following factors:
a) Immune system dysfunction
b) Genetic factors
c) Environmental factors
d) All of the

0.02.725.370 I llama_perf_sampler_print:    sampling time =       5.25 ms /    33 runs   (    0.16 ms per token,  6279.73 tokens per second)
0.02.725.373 I llama_perf_context_print:        load time =     497.13 ms
0.02.725.374 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.725.376 I llama_perf_context_print:        eval time =    2207.37 ms /    32 runs   (   68.98 ms per token,    14.50 tokens per second)
0.02.725.377 I llama_perf_context_print:       total time =    2227.40 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.562 I build: 4162 (4ff0831c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.000.765 I main: load the model and apply lora adapter, if any
0.00.022.199 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.214 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.226 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.233 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.236 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.244 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.245 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.246 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.247 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.248 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.249 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.256 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.258 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.259 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.260 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.261 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.106 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.138.477 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.145.366 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.145.373 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.145.374 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.145.375 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.145.376 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.145.378 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.145.378 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.145.381 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.145.382 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.145.383 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.145.384 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.145.385 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.145.390 I llama_model_loader: - type  f32:   37 tensors
0.00.145.392 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.812 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.271.872 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.603 I llm_load_vocab: special tokens cache size = 5
0.00.294.531 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.294.552 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.294.553 I llm_load_print_meta: arch             = gemma
0.00.294.553 I llm_load_print_meta: vocab type       = SPM
0.00.294.554 I llm_load_print_meta: n_vocab          = 256000
0.00.294.554 I llm_load_print_meta: n_merges         = 0
0.00.294.554 I llm_load_print_meta: vocab_only       = 0
0.00.294.555 I llm_load_print_meta: n_ctx_train      = 8192
0.00.294.555 I llm_load_print_meta: n_embd           = 2048
0.00.294.555 I llm_load_print_meta: n_layer          = 18
0.00.294.569 I llm_load_print_meta: n_head           = 8
0.00.294.570 I llm_load_print_meta: n_head_kv        = 1
0.00.294.570 I llm_load_print_meta: n_rot            = 256
0.00.294.570 I llm_load_print_meta: n_swa            = 0
0.00.294.570 I llm_load_print_meta: n_embd_head_k    = 256
0.00.294.571 I llm_load_print_meta: n_embd_head_v    = 256
0.00.294.571 I llm_load_print_meta: n_gqa            = 8
0.00.294.572 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.294.573 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.294.574 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.294.576 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.294.576 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.294.576 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.294.577 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.294.578 I llm_load_print_meta: n_ff             = 16384
0.00.294.578 I llm_load_print_meta: n_expert         = 0
0.00.294.578 I llm_load_print_meta: n_expert_used    = 0
0.00.294.579 I llm_load_print_meta: causal attn      = 1
0.00.294.579 I llm_load_print_meta: pooling type     = 0
0.00.294.579 I llm_load_print_meta: rope type        = 2
0.00.294.580 I llm_load_print_meta: rope scaling     = linear
0.00.294.581 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.294.581 I llm_load_print_meta: freq_scale_train = 1
0.00.294.582 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.294.582 I llm_load_print_meta: rope_finetuned   = unknown
0.00.294.582 I llm_load_print_meta: ssm_d_conv       = 0
0.00.294.582 I llm_load_print_meta: ssm_d_inner      = 0
0.00.294.583 I llm_load_print_meta: ssm_d_state      = 0
0.00.294.583 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.294.583 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.294.584 I llm_load_print_meta: model type       = 2B
0.00.294.584 I llm_load_print_meta: model ftype      = Q8_0
0.00.294.585 I llm_load_print_meta: model params     = 2.51 B
0.00.294.586 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.294.586 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.294.587 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.294.587 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.294.587 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.294.587 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.294.588 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.294.588 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.294.589 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.294.589 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.294.589 I llm_load_print_meta: max token length = 93
0.00.371.356 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.371.363 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.371.364 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.371.364 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.371.365 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.371.365 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.376.534 I llama_new_context_with_model: n_seq_max     = 1
0.00.376.541 I llama_new_context_with_model: n_ctx         = 4096
0.00.376.541 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.376.541 I llama_new_context_with_model: n_batch       = 2048
0.00.376.542 I llama_new_context_with_model: n_ubatch      = 512
0.00.376.542 I llama_new_context_with_model: flash_attn    = 0
0.00.376.545 I llama_new_context_with_model: freq_base     = 10000.0
0.00.376.545 I llama_new_context_with_model: freq_scale    = 1
0.00.376.546 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.390.893 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.390.907 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.390.999 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.392.290 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.392.297 I llama_new_context_with_model: graph nodes  = 601
0.00.392.297 I llama_new_context_with_model: graph splits = 1
0.00.392.299 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.453 I main: llama threadpool init, n_threads = 4
0.00.478.468 I 
0.00.478.543 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.478.546 I 
0.00.478.589 I sampler seed: 4140983851
0.00.478.599 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.602 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.478.603 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.603 I 
 increably.

I am unable to generate the requested text as it contains sexually suggestive content. [end of text]


0.01.929.024 I llama_perf_sampler_print:    sampling time =       3.18 ms /    21 runs   (    0.15 ms per token,  6597.55 tokens per second)
0.01.929.027 I llama_perf_context_print:        load time =     477.67 ms
0.01.929.028 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.929.029 I llama_perf_context_print:        eval time =    1437.52 ms /    20 runs   (   71.88 ms per token,    13.91 tokens per second)
0.01.929.030 I llama_perf_context_print:       total time =    1450.58 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.557 I build: 4162 (4ff0831c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.771 I main: llama backend init
0.00.000.779 I main: load the model and apply lora adapter, if any
0.00.024.883 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.898 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.910 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.917 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.922 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.928 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.930 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.932 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.934 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.935 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.936 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.942 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.947 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.948 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.949 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.950 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.153 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.137.748 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.144.673 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.144.681 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.144.682 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.144.683 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.144.683 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.144.684 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.144.685 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.144.687 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.144.687 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.144.688 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.144.689 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.144.690 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.144.695 I llama_model_loader: - type  f32:   37 tensors
0.00.144.696 I llama_model_loader: - type q8_0:  127 tensors
0.00.236.688 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.293.702 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.294.487 I llm_load_vocab: special tokens cache size = 5
0.00.315.636 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.315.657 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.315.658 I llm_load_print_meta: arch             = gemma
0.00.315.658 I llm_load_print_meta: vocab type       = SPM
0.00.315.659 I llm_load_print_meta: n_vocab          = 256000
0.00.315.659 I llm_load_print_meta: n_merges         = 0
0.00.315.660 I llm_load_print_meta: vocab_only       = 0
0.00.315.660 I llm_load_print_meta: n_ctx_train      = 8192
0.00.315.660 I llm_load_print_meta: n_embd           = 2048
0.00.315.661 I llm_load_print_meta: n_layer          = 18
0.00.315.673 I llm_load_print_meta: n_head           = 8
0.00.315.674 I llm_load_print_meta: n_head_kv        = 1
0.00.315.674 I llm_load_print_meta: n_rot            = 256
0.00.315.674 I llm_load_print_meta: n_swa            = 0
0.00.315.675 I llm_load_print_meta: n_embd_head_k    = 256
0.00.315.675 I llm_load_print_meta: n_embd_head_v    = 256
0.00.315.676 I llm_load_print_meta: n_gqa            = 8
0.00.315.677 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.315.678 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.315.678 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.315.680 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.315.680 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.315.681 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.315.681 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.315.682 I llm_load_print_meta: n_ff             = 16384
0.00.315.683 I llm_load_print_meta: n_expert         = 0
0.00.315.683 I llm_load_print_meta: n_expert_used    = 0
0.00.315.683 I llm_load_print_meta: causal attn      = 1
0.00.315.683 I llm_load_print_meta: pooling type     = 0
0.00.315.684 I llm_load_print_meta: rope type        = 2
0.00.315.684 I llm_load_print_meta: rope scaling     = linear
0.00.315.685 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.315.686 I llm_load_print_meta: freq_scale_train = 1
0.00.315.686 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.315.687 I llm_load_print_meta: rope_finetuned   = unknown
0.00.315.687 I llm_load_print_meta: ssm_d_conv       = 0
0.00.315.687 I llm_load_print_meta: ssm_d_inner      = 0
0.00.315.687 I llm_load_print_meta: ssm_d_state      = 0
0.00.315.688 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.315.688 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.315.689 I llm_load_print_meta: model type       = 2B
0.00.315.689 I llm_load_print_meta: model ftype      = Q8_0
0.00.315.690 I llm_load_print_meta: model params     = 2.51 B
0.00.315.691 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.315.691 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.315.691 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.315.692 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.315.692 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.315.692 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.315.693 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.315.693 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.315.693 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.315.694 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.315.694 I llm_load_print_meta: max token length = 93
0.00.393.995 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.394.004 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.399.195 I llama_new_context_with_model: n_seq_max     = 1
0.00.399.203 I llama_new_context_with_model: n_ctx         = 4096
0.00.399.204 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.399.204 I llama_new_context_with_model: n_batch       = 2048
0.00.399.205 I llama_new_context_with_model: n_ubatch      = 512
0.00.399.205 I llama_new_context_with_model: flash_attn    = 0
0.00.399.209 I llama_new_context_with_model: freq_base     = 10000.0
0.00.399.210 I llama_new_context_with_model: freq_scale    = 1
0.00.399.211 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.414.369 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.414.385 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.414.483 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.415.755 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.415.762 I llama_new_context_with_model: graph nodes  = 601
0.00.415.762 I llama_new_context_with_model: graph splits = 1
0.00.415.764 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.507.778 I main: llama threadpool init, n_threads = 4
0.00.507.794 I 
0.00.507.881 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.507.884 I 
0.00.507.929 I sampler seed: 2743525514
0.00.507.940 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.507.943 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.507.944 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.507.944 I 
 increably, and then collapsed.

What happened?

The answer is: It rained heavily.

The sentence describes a sudden and intense event. The speaker

0.02.978.355 I llama_perf_sampler_print:    sampling time =       5.01 ms /    33 runs   (    0.15 ms per token,  6584.20 tokens per second)
0.02.978.358 I llama_perf_context_print:        load time =     506.97 ms
0.02.978.359 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.978.360 I llama_perf_context_print:        eval time =    2450.90 ms /    32 runs   (   76.59 ms per token,    13.06 tokens per second)
0.02.978.361 I llama_perf_context_print:       total time =    2470.59 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.940s
user	0m34.524s
sys	0m9.582s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4162 (4ff0831c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40256.85 ms
main:    total time = 40256.85 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.519 I build: 4162 (4ff0831c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.706 I main: llama backend init
0.00.000.713 I main: load the model and apply lora adapter, if any
0.00.021.478 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.490 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.499 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.504 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.505 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.509 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.510 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.511 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.512 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.512 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.513 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.518 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.519 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.519 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.520 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.520 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.193 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.768 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.560 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.566 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.567 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.568 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.569 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.569 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.570 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.572 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.573 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.573 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.574 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.575 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.578 I llama_model_loader: - type  f32:   37 tensors
0.00.132.579 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.579 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.988 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.852 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.430 I llm_load_vocab: special tokens cache size = 5
0.00.272.379 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.397 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.397 I llm_load_print_meta: arch             = gemma
0.00.272.398 I llm_load_print_meta: vocab type       = SPM
0.00.272.399 I llm_load_print_meta: n_vocab          = 256000
0.00.272.399 I llm_load_print_meta: n_merges         = 0
0.00.272.399 I llm_load_print_meta: vocab_only       = 0
0.00.272.400 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.400 I llm_load_print_meta: n_embd           = 2048
0.00.272.401 I llm_load_print_meta: n_layer          = 18
0.00.272.413 I llm_load_print_meta: n_head           = 8
0.00.272.414 I llm_load_print_meta: n_head_kv        = 1
0.00.272.414 I llm_load_print_meta: n_rot            = 256
0.00.272.415 I llm_load_print_meta: n_swa            = 0
0.00.272.415 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.416 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.417 I llm_load_print_meta: n_gqa            = 8
0.00.272.418 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.419 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.420 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.421 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.421 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.422 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.422 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.423 I llm_load_print_meta: n_ff             = 16384
0.00.272.423 I llm_load_print_meta: n_expert         = 0
0.00.272.424 I llm_load_print_meta: n_expert_used    = 0
0.00.272.424 I llm_load_print_meta: causal attn      = 1
0.00.272.424 I llm_load_print_meta: pooling type     = 0
0.00.272.424 I llm_load_print_meta: rope type        = 2
0.00.272.425 I llm_load_print_meta: rope scaling     = linear
0.00.272.426 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.427 I llm_load_print_meta: freq_scale_train = 1
0.00.272.427 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.428 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.428 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.428 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.429 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.429 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.429 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.430 I llm_load_print_meta: model type       = 2B
0.00.272.430 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.272.431 I llm_load_print_meta: model params     = 2.51 B
0.00.272.432 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.272.432 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.433 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.433 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.433 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.433 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.434 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.434 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.434 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.435 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.435 I llm_load_print_meta: max token length = 93
0.00.332.408 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.332.417 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.332.418 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.332.418 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.332.419 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.332.419 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.337.635 I llama_new_context_with_model: n_seq_max     = 1
0.00.337.642 I llama_new_context_with_model: n_ctx         = 4096
0.00.337.643 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.337.643 I llama_new_context_with_model: n_batch       = 2048
0.00.337.643 I llama_new_context_with_model: n_ubatch      = 512
0.00.337.644 I llama_new_context_with_model: flash_attn    = 0
0.00.337.647 I llama_new_context_with_model: freq_base     = 10000.0
0.00.337.648 I llama_new_context_with_model: freq_scale    = 1
0.00.337.649 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.352.296 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.352.310 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.352.405 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.659 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.353.664 I llama_new_context_with_model: graph nodes  = 601
0.00.353.665 I llama_new_context_with_model: graph splits = 1
0.00.353.667 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.141 I main: llama threadpool init, n_threads = 4
0.00.430.155 I 
0.00.430.236 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.430.239 I 
0.00.430.287 I sampler seed: 1813274873
0.00.430.298 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.430.301 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.430.302 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.430.302 I 
 maneuvled.

I am unable to answer your question as it contains offensive and inappropriate language. I am designed to provide safe and respectful responses. [end of text]


0.02.008.395 I llama_perf_sampler_print:    sampling time =       4.98 ms /    32 runs   (    0.16 ms per token,  6425.70 tokens per second)
0.02.008.397 I llama_perf_context_print:        load time =     429.41 ms
0.02.008.398 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.008.400 I llama_perf_context_print:        eval time =    1559.21 ms /    31 runs   (   50.30 ms per token,    19.88 tokens per second)
0.02.008.401 I llama_perf_context_print:       total time =    1578.26 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4162 (4ff0831c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40212.70 ms
main:    total time = 40212.70 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.622 I build: 4162 (4ff0831c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.816 I main: llama backend init
0.00.000.827 I main: load the model and apply lora adapter, if any
0.00.023.125 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.143 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.155 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.156 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.162 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.166 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.167 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.167 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.168 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.168 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.174 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.174 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.175 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.176 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.176 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.997 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.100 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.059 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.067 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.068 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.068 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.070 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.071 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.071 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.073 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.074 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.078 I llama_model_loader: - type  f32:   37 tensors
0.00.135.079 I llama_model_loader: - type q4_K:  108 tensors
0.00.135.080 I llama_model_loader: - type q6_K:   19 tensors
0.00.223.304 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.276.736 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.277.437 I llm_load_vocab: special tokens cache size = 5
0.00.298.391 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.298.413 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.298.414 I llm_load_print_meta: arch             = gemma
0.00.298.414 I llm_load_print_meta: vocab type       = SPM
0.00.298.415 I llm_load_print_meta: n_vocab          = 256000
0.00.298.416 I llm_load_print_meta: n_merges         = 0
0.00.298.416 I llm_load_print_meta: vocab_only       = 0
0.00.298.416 I llm_load_print_meta: n_ctx_train      = 8192
0.00.298.417 I llm_load_print_meta: n_embd           = 2048
0.00.298.417 I llm_load_print_meta: n_layer          = 18
0.00.298.428 I llm_load_print_meta: n_head           = 8
0.00.298.429 I llm_load_print_meta: n_head_kv        = 1
0.00.298.430 I llm_load_print_meta: n_rot            = 256
0.00.298.430 I llm_load_print_meta: n_swa            = 0
0.00.298.430 I llm_load_print_meta: n_embd_head_k    = 256
0.00.298.431 I llm_load_print_meta: n_embd_head_v    = 256
0.00.298.432 I llm_load_print_meta: n_gqa            = 8
0.00.298.433 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.298.434 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.298.435 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.298.436 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.298.437 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.298.437 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.298.437 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.298.438 I llm_load_print_meta: n_ff             = 16384
0.00.298.439 I llm_load_print_meta: n_expert         = 0
0.00.298.439 I llm_load_print_meta: n_expert_used    = 0
0.00.298.439 I llm_load_print_meta: causal attn      = 1
0.00.298.440 I llm_load_print_meta: pooling type     = 0
0.00.298.440 I llm_load_print_meta: rope type        = 2
0.00.298.440 I llm_load_print_meta: rope scaling     = linear
0.00.298.441 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.298.442 I llm_load_print_meta: freq_scale_train = 1
0.00.298.442 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.298.443 I llm_load_print_meta: rope_finetuned   = unknown
0.00.298.443 I llm_load_print_meta: ssm_d_conv       = 0
0.00.298.444 I llm_load_print_meta: ssm_d_inner      = 0
0.00.298.444 I llm_load_print_meta: ssm_d_state      = 0
0.00.298.444 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.298.444 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.298.445 I llm_load_print_meta: model type       = 2B
0.00.298.445 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.298.446 I llm_load_print_meta: model params     = 2.51 B
0.00.298.447 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.298.447 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.298.448 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.298.448 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.298.449 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.298.450 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.298.450 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.298.451 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.298.451 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.298.452 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.298.452 I llm_load_print_meta: max token length = 93
0.00.351.740 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.356.919 I llama_new_context_with_model: n_seq_max     = 1
0.00.356.926 I llama_new_context_with_model: n_ctx         = 4096
0.00.356.926 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.356.926 I llama_new_context_with_model: n_batch       = 2048
0.00.356.927 I llama_new_context_with_model: n_ubatch      = 512
0.00.356.927 I llama_new_context_with_model: flash_attn    = 0
0.00.356.931 I llama_new_context_with_model: freq_base     = 10000.0
0.00.356.931 I llama_new_context_with_model: freq_scale    = 1
0.00.356.932 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.371.874 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.371.890 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.371.983 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.373.304 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.373.309 I llama_new_context_with_model: graph nodes  = 601
0.00.373.310 I llama_new_context_with_model: graph splits = 1
0.00.373.312 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.269 I main: llama threadpool init, n_threads = 4
0.00.450.285 I 
0.00.450.361 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.364 I 
0.00.450.407 I sampler seed: 429930529
0.00.450.419 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.422 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.450.424 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.424 I 
 seconary and tertiary lymphoid organs.

**Secondary lymphoid organs** are those that are formed by the lymphoid tissue in the secondary lymphoid zones of the immune system.

0.02.116.605 I llama_perf_sampler_print:    sampling time =       5.58 ms /    33 runs   (    0.17 ms per token,  5911.86 tokens per second)
0.02.116.608 I llama_perf_context_print:        load time =     449.42 ms
0.02.116.609 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.116.611 I llama_perf_context_print:        eval time =    1645.97 ms /    32 runs   (   51.44 ms per token,    19.44 tokens per second)
0.02.116.612 I llama_perf_context_print:       total time =    1666.34 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.441s
user	10m24.624s
sys	0m7.187s
