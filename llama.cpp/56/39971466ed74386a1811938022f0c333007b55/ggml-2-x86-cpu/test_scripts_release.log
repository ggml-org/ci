+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.543 I build: 3869 (56399714) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.854 I main: load the model and apply lora adapter, if any
0.00.022.567 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.637 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.648 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.653 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.656 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.660 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.661 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.661 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.662 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.663 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.663 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.668 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.668 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.669 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.669 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.670 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.413 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.491 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.273 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.279 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.280 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.281 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.281 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.282 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.283 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.285 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.286 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.287 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.287 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.288 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.292 I llama_model_loader: - type  f32:   37 tensors
0.00.131.294 I llama_model_loader: - type q8_0:  127 tensors
0.00.185.594 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.198.645 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.281 I llm_load_vocab: special tokens cache size = 5
0.00.220.345 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.358 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.358 I llm_load_print_meta: arch             = gemma
0.00.220.359 I llm_load_print_meta: vocab type       = SPM
0.00.220.360 I llm_load_print_meta: n_vocab          = 256000
0.00.220.360 I llm_load_print_meta: n_merges         = 0
0.00.220.361 I llm_load_print_meta: vocab_only       = 0
0.00.220.361 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.361 I llm_load_print_meta: n_embd           = 2048
0.00.220.362 I llm_load_print_meta: n_layer          = 18
0.00.220.373 I llm_load_print_meta: n_head           = 8
0.00.220.374 I llm_load_print_meta: n_head_kv        = 1
0.00.220.374 I llm_load_print_meta: n_rot            = 256
0.00.220.375 I llm_load_print_meta: n_swa            = 0
0.00.220.375 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.375 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.376 I llm_load_print_meta: n_gqa            = 8
0.00.220.377 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.378 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.379 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.380 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.380 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.381 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.381 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.382 I llm_load_print_meta: n_ff             = 16384
0.00.220.382 I llm_load_print_meta: n_expert         = 0
0.00.220.383 I llm_load_print_meta: n_expert_used    = 0
0.00.220.383 I llm_load_print_meta: causal attn      = 1
0.00.220.384 I llm_load_print_meta: pooling type     = 0
0.00.220.384 I llm_load_print_meta: rope type        = 2
0.00.220.384 I llm_load_print_meta: rope scaling     = linear
0.00.220.386 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.386 I llm_load_print_meta: freq_scale_train = 1
0.00.220.387 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.387 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.388 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.388 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.388 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.388 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.389 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.389 I llm_load_print_meta: model type       = 2B
0.00.220.390 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.391 I llm_load_print_meta: model params     = 2.51 B
0.00.220.392 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.392 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.392 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.393 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.393 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.393 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.394 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.394 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.394 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.395 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.395 I llm_load_print_meta: max token length = 93
0.00.220.421 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.718 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.319.725 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.319.726 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.319.726 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.319.727 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.319.727 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.324.843 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.849 I llama_new_context_with_model: n_batch    = 2048
0.00.324.850 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.850 I llama_new_context_with_model: flash_attn = 0
0.00.324.852 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.853 I llama_new_context_with_model: freq_scale = 1
0.00.353.066 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.081 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.169 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.008 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.016 I llama_new_context_with_model: graph nodes  = 601
0.00.354.016 I llama_new_context_with_model: graph splits = 1
0.00.354.018 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.444.156 I main: llama threadpool init, n_threads = 4
0.00.444.168 I 
0.00.444.243 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.444.246 I 
0.00.444.288 I sampler seed: 3680422029
0.00.444.297 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.444.300 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.444.301 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.444.301 I 
 increasities of the universe, the birth of stars and galaxies, and the expansion of space itself.

The story begins with the birth of a tiny singularity,

0.02.688.901 I llama_perf_sampler_print:    sampling time =       4.68 ms /    33 runs   (    0.14 ms per token,  7055.81 tokens per second)
0.02.688.903 I llama_perf_context_print:        load time =     442.27 ms
0.02.688.905 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.688.907 I llama_perf_context_print:        eval time =    2226.14 ms /    32 runs   (   69.57 ms per token,    14.37 tokens per second)
0.02.688.918 I llama_perf_context_print:       total time =    2244.75 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.506 I build: 3869 (56399714) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.710 I main: llama backend init
0.00.001.769 I main: load the model and apply lora adapter, if any
0.00.021.611 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.624 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.631 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.632 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.635 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.635 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.636 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.637 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.637 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.638 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.642 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.643 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.643 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.644 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.644 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.462 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.213 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.124 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.131 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.131 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.132 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.132 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.133 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.134 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.137 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.137 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.139 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.139 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.140 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.144 I llama_model_loader: - type  f32:   37 tensors
0.00.130.147 I llama_model_loader: - type q8_0:  127 tensors
0.00.185.358 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.198.486 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.128 I llm_load_vocab: special tokens cache size = 5
0.00.220.090 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.103 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.104 I llm_load_print_meta: arch             = gemma
0.00.220.104 I llm_load_print_meta: vocab type       = SPM
0.00.220.105 I llm_load_print_meta: n_vocab          = 256000
0.00.220.105 I llm_load_print_meta: n_merges         = 0
0.00.220.105 I llm_load_print_meta: vocab_only       = 0
0.00.220.106 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.106 I llm_load_print_meta: n_embd           = 2048
0.00.220.106 I llm_load_print_meta: n_layer          = 18
0.00.220.119 I llm_load_print_meta: n_head           = 8
0.00.220.120 I llm_load_print_meta: n_head_kv        = 1
0.00.220.120 I llm_load_print_meta: n_rot            = 256
0.00.220.120 I llm_load_print_meta: n_swa            = 0
0.00.220.121 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.121 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.122 I llm_load_print_meta: n_gqa            = 8
0.00.220.123 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.124 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.125 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.126 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.126 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.127 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.127 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.128 I llm_load_print_meta: n_ff             = 16384
0.00.220.128 I llm_load_print_meta: n_expert         = 0
0.00.220.129 I llm_load_print_meta: n_expert_used    = 0
0.00.220.129 I llm_load_print_meta: causal attn      = 1
0.00.220.129 I llm_load_print_meta: pooling type     = 0
0.00.220.130 I llm_load_print_meta: rope type        = 2
0.00.220.130 I llm_load_print_meta: rope scaling     = linear
0.00.220.131 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.132 I llm_load_print_meta: freq_scale_train = 1
0.00.220.132 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.133 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.133 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.133 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.134 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.134 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.134 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.135 I llm_load_print_meta: model type       = 2B
0.00.220.135 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.136 I llm_load_print_meta: model params     = 2.51 B
0.00.220.137 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.137 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.138 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.138 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.138 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.138 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.139 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.139 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.139 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.140 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.140 I llm_load_print_meta: max token length = 93
0.00.220.163 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.314.445 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.319.377 I llama_new_context_with_model: n_ctx      = 8192
0.00.319.383 I llama_new_context_with_model: n_batch    = 2048
0.00.319.383 I llama_new_context_with_model: n_ubatch   = 512
0.00.319.384 I llama_new_context_with_model: flash_attn = 0
0.00.319.386 I llama_new_context_with_model: freq_base  = 10000.0
0.00.319.387 I llama_new_context_with_model: freq_scale = 1
0.00.348.069 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.348.085 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.348.175 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.019 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.349.027 I llama_new_context_with_model: graph nodes  = 601
0.00.349.027 I llama_new_context_with_model: graph splits = 1
0.00.349.030 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.864 I main: llama threadpool init, n_threads = 4
0.00.435.876 I 
0.00.435.948 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.435.952 I 
0.00.435.987 I sampler seed: 1264152223
0.00.435.996 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.003 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.003 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.004 I 
 increasively.

The correct answer is:

A hurricane.

A hurricane is a tropical storm with high winds and heavy rainfall. [end of text]


0.02.329.092 I llama_perf_sampler_print:    sampling time =       4.01 ms /    29 runs   (    0.14 ms per token,  7239.14 tokens per second)
0.02.329.094 I llama_perf_context_print:        load time =     434.07 ms
0.02.329.095 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.329.097 I llama_perf_context_print:        eval time =    1877.23 ms /    28 runs   (   67.04 ms per token,    14.92 tokens per second)
0.02.329.098 I llama_perf_context_print:       total time =    1893.23 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.547 I build: 3869 (56399714) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.839 I main: load the model and apply lora adapter, if any
0.00.021.810 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.861 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.868 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.872 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.873 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.877 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.877 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.878 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.878 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.879 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.880 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.884 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.884 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.885 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.885 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.886 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.050 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.359 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.136 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.141 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.141 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.142 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.143 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.144 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.144 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.146 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.147 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.148 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.149 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.130.150 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.154 I llama_model_loader: - type  f32:   37 tensors
0.00.130.157 I llama_model_loader: - type q8_0:  127 tensors
0.00.183.777 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.196.600 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.197.250 I llm_load_vocab: special tokens cache size = 5
0.00.218.155 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.218.167 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.218.168 I llm_load_print_meta: arch             = gemma
0.00.218.168 I llm_load_print_meta: vocab type       = SPM
0.00.218.169 I llm_load_print_meta: n_vocab          = 256000
0.00.218.170 I llm_load_print_meta: n_merges         = 0
0.00.218.170 I llm_load_print_meta: vocab_only       = 0
0.00.218.170 I llm_load_print_meta: n_ctx_train      = 8192
0.00.218.171 I llm_load_print_meta: n_embd           = 2048
0.00.218.171 I llm_load_print_meta: n_layer          = 18
0.00.218.184 I llm_load_print_meta: n_head           = 8
0.00.218.185 I llm_load_print_meta: n_head_kv        = 1
0.00.218.186 I llm_load_print_meta: n_rot            = 256
0.00.218.186 I llm_load_print_meta: n_swa            = 0
0.00.218.186 I llm_load_print_meta: n_embd_head_k    = 256
0.00.218.186 I llm_load_print_meta: n_embd_head_v    = 256
0.00.218.187 I llm_load_print_meta: n_gqa            = 8
0.00.218.188 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.218.189 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.218.190 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.218.191 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.218.192 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.218.192 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.218.193 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.218.193 I llm_load_print_meta: n_ff             = 16384
0.00.218.194 I llm_load_print_meta: n_expert         = 0
0.00.218.194 I llm_load_print_meta: n_expert_used    = 0
0.00.218.195 I llm_load_print_meta: causal attn      = 1
0.00.218.195 I llm_load_print_meta: pooling type     = 0
0.00.218.195 I llm_load_print_meta: rope type        = 2
0.00.218.195 I llm_load_print_meta: rope scaling     = linear
0.00.218.197 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.218.198 I llm_load_print_meta: freq_scale_train = 1
0.00.218.198 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.218.198 I llm_load_print_meta: rope_finetuned   = unknown
0.00.218.198 I llm_load_print_meta: ssm_d_conv       = 0
0.00.218.199 I llm_load_print_meta: ssm_d_inner      = 0
0.00.218.199 I llm_load_print_meta: ssm_d_state      = 0
0.00.218.199 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.218.200 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.218.200 I llm_load_print_meta: model type       = 2B
0.00.218.201 I llm_load_print_meta: model ftype      = Q8_0
0.00.218.201 I llm_load_print_meta: model params     = 2.51 B
0.00.218.202 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.218.203 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.218.203 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.218.203 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.218.203 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.218.204 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.218.204 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.218.205 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.218.205 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.218.206 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.218.206 I llm_load_print_meta: max token length = 93
0.00.218.223 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.308 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.292.315 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.292.315 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.292.316 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.292.317 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.292.317 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.297.350 I llama_new_context_with_model: n_ctx      = 8192
0.00.297.355 I llama_new_context_with_model: n_batch    = 2048
0.00.297.355 I llama_new_context_with_model: n_ubatch   = 512
0.00.297.356 I llama_new_context_with_model: flash_attn = 0
0.00.297.358 I llama_new_context_with_model: freq_base  = 10000.0
0.00.297.359 I llama_new_context_with_model: freq_scale = 1
0.00.327.029 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.327.045 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.327.135 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.327.974 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.327.982 I llama_new_context_with_model: graph nodes  = 601
0.00.327.982 I llama_new_context_with_model: graph splits = 1
0.00.327.984 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.399 I main: llama threadpool init, n_threads = 4
0.00.422.411 I 
0.00.422.486 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.422.489 I 
0.00.422.527 I sampler seed: 4185289121
0.00.422.537 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.541 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.422.541 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.542 I 
 increasities, and other forms of sexual violence occur frequently in intimate settings, including homes, bedrooms, and cars.

**Discuss the impact of sexual violence on

0.02.708.229 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6953.22 tokens per second)
0.02.708.232 I llama_perf_context_print:        load time =     420.53 ms
0.02.708.233 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.708.234 I llama_perf_context_print:        eval time =    2267.71 ms /    32 runs   (   70.87 ms per token,    14.11 tokens per second)
0.02.708.235 I llama_perf_context_print:       total time =    2285.84 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.552 I build: 3869 (56399714) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.001.900 I main: load the model and apply lora adapter, if any
0.00.021.534 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.587 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.598 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.604 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.608 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.622 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.626 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.627 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.628 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.629 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.629 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.636 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.637 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.638 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.642 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.643 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.666 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.373 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.184 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.190 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.191 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.192 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.192 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.193 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.193 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.196 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.196 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.197 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.199 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.130.200 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.203 I llama_model_loader: - type  f32:   37 tensors
0.00.130.206 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.886 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.179 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.920 I llm_load_vocab: special tokens cache size = 5
0.00.223.809 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.823 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.823 I llm_load_print_meta: arch             = gemma
0.00.223.824 I llm_load_print_meta: vocab type       = SPM
0.00.223.824 I llm_load_print_meta: n_vocab          = 256000
0.00.223.824 I llm_load_print_meta: n_merges         = 0
0.00.223.825 I llm_load_print_meta: vocab_only       = 0
0.00.223.825 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.825 I llm_load_print_meta: n_embd           = 2048
0.00.223.826 I llm_load_print_meta: n_layer          = 18
0.00.223.840 I llm_load_print_meta: n_head           = 8
0.00.223.841 I llm_load_print_meta: n_head_kv        = 1
0.00.223.841 I llm_load_print_meta: n_rot            = 256
0.00.223.841 I llm_load_print_meta: n_swa            = 0
0.00.223.842 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.842 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.843 I llm_load_print_meta: n_gqa            = 8
0.00.223.844 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.845 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.845 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.846 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.847 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.847 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.848 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.848 I llm_load_print_meta: n_ff             = 16384
0.00.223.849 I llm_load_print_meta: n_expert         = 0
0.00.223.849 I llm_load_print_meta: n_expert_used    = 0
0.00.223.849 I llm_load_print_meta: causal attn      = 1
0.00.223.850 I llm_load_print_meta: pooling type     = 0
0.00.223.850 I llm_load_print_meta: rope type        = 2
0.00.223.850 I llm_load_print_meta: rope scaling     = linear
0.00.223.851 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.852 I llm_load_print_meta: freq_scale_train = 1
0.00.223.852 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.852 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.853 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.853 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.853 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.853 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.854 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.854 I llm_load_print_meta: model type       = 2B
0.00.223.855 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.856 I llm_load_print_meta: model params     = 2.51 B
0.00.223.856 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.857 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.857 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.857 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.858 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.858 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.858 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.859 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.859 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.860 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.860 I llm_load_print_meta: max token length = 93
0.00.223.879 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.295.155 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.295.163 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.300.129 I llama_new_context_with_model: n_ctx      = 8192
0.00.300.136 I llama_new_context_with_model: n_batch    = 2048
0.00.300.137 I llama_new_context_with_model: n_ubatch   = 512
0.00.300.137 I llama_new_context_with_model: flash_attn = 0
0.00.300.140 I llama_new_context_with_model: freq_base  = 10000.0
0.00.300.140 I llama_new_context_with_model: freq_scale = 1
0.00.330.538 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.330.554 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.330.658 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.331.539 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.331.547 I llama_new_context_with_model: graph nodes  = 601
0.00.331.548 I llama_new_context_with_model: graph splits = 1
0.00.331.550 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.589 I main: llama threadpool init, n_threads = 4
0.00.425.601 I 
0.00.425.687 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.425.695 I 
0.00.425.741 I sampler seed: 374402387
0.00.425.751 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.754 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.425.755 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.756 I 
 increably, her eyes gleaming with mischief.

"I have a plan," she whispered, leaning closer.

A shiver danced down the spines of the men

0.02.840.046 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6748.47 tokens per second)
0.02.840.049 I llama_perf_context_print:        load time =     423.66 ms
0.02.840.050 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.840.052 I llama_perf_context_print:        eval time =    2395.72 ms /    32 runs   (   74.87 ms per token,    13.36 tokens per second)
0.02.840.053 I llama_perf_context_print:       total time =    2414.47 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.441s
user	0m37.964s
sys	0m9.404s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3869 (56399714)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31965.10 ms
main:    total time = 31965.10 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.554 I build: 3869 (56399714) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.848 I main: load the model and apply lora adapter, if any
0.00.022.145 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.191 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.203 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.208 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.209 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.213 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.214 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.214 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.215 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.216 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.216 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.220 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.221 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.221 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.222 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.222 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.437 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.324 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.136 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.143 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.143 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.144 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.145 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.146 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.147 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.151 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.151 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.152 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.153 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.154 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.157 I llama_model_loader: - type  f32:   37 tensors
0.00.131.159 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.159 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.616 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.282 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.995 I llm_load_vocab: special tokens cache size = 5
0.00.221.880 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.892 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.893 I llm_load_print_meta: arch             = gemma
0.00.221.893 I llm_load_print_meta: vocab type       = SPM
0.00.221.894 I llm_load_print_meta: n_vocab          = 256000
0.00.221.895 I llm_load_print_meta: n_merges         = 0
0.00.221.895 I llm_load_print_meta: vocab_only       = 0
0.00.221.895 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.896 I llm_load_print_meta: n_embd           = 2048
0.00.221.896 I llm_load_print_meta: n_layer          = 18
0.00.221.908 I llm_load_print_meta: n_head           = 8
0.00.221.909 I llm_load_print_meta: n_head_kv        = 1
0.00.221.910 I llm_load_print_meta: n_rot            = 256
0.00.221.910 I llm_load_print_meta: n_swa            = 0
0.00.221.910 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.910 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.911 I llm_load_print_meta: n_gqa            = 8
0.00.221.912 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.913 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.914 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.916 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.916 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.917 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.917 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.918 I llm_load_print_meta: n_ff             = 16384
0.00.221.918 I llm_load_print_meta: n_expert         = 0
0.00.221.919 I llm_load_print_meta: n_expert_used    = 0
0.00.221.919 I llm_load_print_meta: causal attn      = 1
0.00.221.919 I llm_load_print_meta: pooling type     = 0
0.00.221.919 I llm_load_print_meta: rope type        = 2
0.00.221.919 I llm_load_print_meta: rope scaling     = linear
0.00.221.921 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.921 I llm_load_print_meta: freq_scale_train = 1
0.00.221.922 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.922 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.923 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.923 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.923 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.924 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.924 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.924 I llm_load_print_meta: model type       = 2B
0.00.221.925 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.221.926 I llm_load_print_meta: model params     = 2.51 B
0.00.221.927 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.221.927 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.927 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.928 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.929 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.929 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.930 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.931 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.931 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.932 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.932 I llm_load_print_meta: max token length = 93
0.00.221.959 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.279.625 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.279.633 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.279.634 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.279.634 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.279.635 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.279.635 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.284.661 I llama_new_context_with_model: n_ctx      = 8192
0.00.284.668 I llama_new_context_with_model: n_batch    = 2048
0.00.284.668 I llama_new_context_with_model: n_ubatch   = 512
0.00.284.669 I llama_new_context_with_model: flash_attn = 0
0.00.284.671 I llama_new_context_with_model: freq_base  = 10000.0
0.00.284.672 I llama_new_context_with_model: freq_scale = 1
0.00.313.190 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.313.206 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.313.296 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.314.158 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.314.166 I llama_new_context_with_model: graph nodes  = 601
0.00.314.166 I llama_new_context_with_model: graph splits = 1
0.00.314.168 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.394.219 I main: llama threadpool init, n_threads = 4
0.00.394.231 I 
0.00.394.303 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.394.307 I 
0.00.394.348 I sampler seed: 1179761317
0.00.394.357 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.394.359 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.394.360 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.394.360 I 
 maneuvously.

**Answer:** I apologize, but I am unable to provide a response that contains potentially harmful or inappropriate content. [end of text]


0.01.797.665 I llama_perf_sampler_print:    sampling time =       4.30 ms /    29 runs   (    0.15 ms per token,  6750.47 tokens per second)
0.01.797.667 I llama_perf_context_print:        load time =     392.35 ms
0.01.797.668 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.797.670 I llama_perf_context_print:        eval time =    1387.89 ms /    28 runs   (   49.57 ms per token,    20.17 tokens per second)
0.01.797.671 I llama_perf_context_print:       total time =    1403.45 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3869 (56399714)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32043.63 ms
main:    total time = 32043.63 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.563 I build: 3869 (56399714) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.875 I main: load the model and apply lora adapter, if any
0.00.021.953 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.968 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.978 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.981 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.985 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.986 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.987 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.987 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.988 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.989 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.992 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.993 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.994 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.994 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.995 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.097 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.216 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.129.995 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.000 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.001 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.002 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.002 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.003 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.004 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.006 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.007 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.010 I llama_model_loader: - type  f32:   37 tensors
0.00.130.012 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.013 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.093 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.290 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.026 I llm_load_vocab: special tokens cache size = 5
0.00.221.911 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.923 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.924 I llm_load_print_meta: arch             = gemma
0.00.221.924 I llm_load_print_meta: vocab type       = SPM
0.00.221.925 I llm_load_print_meta: n_vocab          = 256000
0.00.221.925 I llm_load_print_meta: n_merges         = 0
0.00.221.925 I llm_load_print_meta: vocab_only       = 0
0.00.221.926 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.926 I llm_load_print_meta: n_embd           = 2048
0.00.221.926 I llm_load_print_meta: n_layer          = 18
0.00.221.939 I llm_load_print_meta: n_head           = 8
0.00.221.940 I llm_load_print_meta: n_head_kv        = 1
0.00.221.940 I llm_load_print_meta: n_rot            = 256
0.00.221.940 I llm_load_print_meta: n_swa            = 0
0.00.221.941 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.941 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.942 I llm_load_print_meta: n_gqa            = 8
0.00.221.943 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.945 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.946 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.947 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.947 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.948 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.948 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.949 I llm_load_print_meta: n_ff             = 16384
0.00.221.950 I llm_load_print_meta: n_expert         = 0
0.00.221.950 I llm_load_print_meta: n_expert_used    = 0
0.00.221.951 I llm_load_print_meta: causal attn      = 1
0.00.221.951 I llm_load_print_meta: pooling type     = 0
0.00.221.951 I llm_load_print_meta: rope type        = 2
0.00.221.952 I llm_load_print_meta: rope scaling     = linear
0.00.221.955 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.956 I llm_load_print_meta: freq_scale_train = 1
0.00.221.956 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.957 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.957 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.957 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.957 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.957 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.958 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.958 I llm_load_print_meta: model type       = 2B
0.00.221.959 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.221.960 I llm_load_print_meta: model params     = 2.51 B
0.00.221.961 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.221.961 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.962 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.962 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.962 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.963 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.963 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.963 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.964 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.965 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.965 I llm_load_print_meta: max token length = 93
0.00.221.992 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.279.964 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.284.897 I llama_new_context_with_model: n_ctx      = 8192
0.00.284.902 I llama_new_context_with_model: n_batch    = 2048
0.00.284.903 I llama_new_context_with_model: n_ubatch   = 512
0.00.284.903 I llama_new_context_with_model: flash_attn = 0
0.00.284.905 I llama_new_context_with_model: freq_base  = 10000.0
0.00.284.906 I llama_new_context_with_model: freq_scale = 1
0.00.314.286 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.314.302 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.314.391 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.315.204 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.315.210 I llama_new_context_with_model: graph nodes  = 601
0.00.315.210 I llama_new_context_with_model: graph splits = 1
0.00.315.212 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.394.678 I main: llama threadpool init, n_threads = 4
0.00.394.689 I 
0.00.394.756 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.394.760 I 
0.00.394.795 I sampler seed: 1630053636
0.00.394.804 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.394.809 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.394.809 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.394.810 I 
 seconally in the sentence "The _____ of the company is to maximize shareholder value."

a) primary
b) secondary
c) primary objective
d

0.01.993.302 I llama_perf_sampler_print:    sampling time =       5.73 ms /    33 runs   (    0.17 ms per token,  5763.19 tokens per second)
0.01.993.306 I llama_perf_context_print:        load time =     392.78 ms
0.01.993.309 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.993.311 I llama_perf_context_print:        eval time =    1578.96 ms /    32 runs   (   49.34 ms per token,    20.27 tokens per second)
0.01.993.312 I llama_perf_context_print:       total time =    1598.63 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.744s
user	8m13.286s
sys	0m6.923s
