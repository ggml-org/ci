+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.583 I build: 4099 (f245cc28) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.779 I main: llama backend init
0.00.000.788 I main: load the model and apply lora adapter, if any
0.00.021.631 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.642 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.649 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.655 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.656 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.660 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.664 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.664 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.665 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.665 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.666 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.669 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.670 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.671 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.671 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.672 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.871 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.483 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.277 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.283 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.283 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.284 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.285 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.286 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.286 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.289 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.289 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.290 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.290 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.291 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.295 I llama_model_loader: - type  f32:   37 tensors
0.00.131.296 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.579 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.574 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.066 I llm_load_vocab: special tokens cache size = 5
0.00.264.866 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.881 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.882 I llm_load_print_meta: arch             = gemma
0.00.264.883 I llm_load_print_meta: vocab type       = SPM
0.00.264.883 I llm_load_print_meta: n_vocab          = 256000
0.00.264.884 I llm_load_print_meta: n_merges         = 0
0.00.264.884 I llm_load_print_meta: vocab_only       = 0
0.00.264.885 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.885 I llm_load_print_meta: n_embd           = 2048
0.00.264.885 I llm_load_print_meta: n_layer          = 18
0.00.264.897 I llm_load_print_meta: n_head           = 8
0.00.264.898 I llm_load_print_meta: n_head_kv        = 1
0.00.264.899 I llm_load_print_meta: n_rot            = 256
0.00.264.899 I llm_load_print_meta: n_swa            = 0
0.00.264.899 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.899 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.900 I llm_load_print_meta: n_gqa            = 8
0.00.264.901 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.902 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.904 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.905 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.905 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.905 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.906 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.907 I llm_load_print_meta: n_ff             = 16384
0.00.264.907 I llm_load_print_meta: n_expert         = 0
0.00.264.908 I llm_load_print_meta: n_expert_used    = 0
0.00.264.908 I llm_load_print_meta: causal attn      = 1
0.00.264.908 I llm_load_print_meta: pooling type     = 0
0.00.264.909 I llm_load_print_meta: rope type        = 2
0.00.264.909 I llm_load_print_meta: rope scaling     = linear
0.00.264.911 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.911 I llm_load_print_meta: freq_scale_train = 1
0.00.264.911 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.912 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.912 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.912 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.912 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.913 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.913 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.913 I llm_load_print_meta: model type       = 2B
0.00.264.914 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.915 I llm_load_print_meta: model params     = 2.51 B
0.00.264.916 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.916 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.917 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.917 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.917 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.918 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.918 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.918 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.918 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.919 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.919 I llm_load_print_meta: max token length = 93
0.00.364.469 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.364.478 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.364.478 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.364.479 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.364.480 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.364.480 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.369.825 I llama_new_context_with_model: n_seq_max     = 1
0.00.369.831 I llama_new_context_with_model: n_ctx         = 4096
0.00.369.832 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.369.832 I llama_new_context_with_model: n_batch       = 2048
0.00.369.832 I llama_new_context_with_model: n_ubatch      = 512
0.00.369.833 I llama_new_context_with_model: flash_attn    = 0
0.00.369.835 I llama_new_context_with_model: freq_base     = 10000.0
0.00.369.836 I llama_new_context_with_model: freq_scale    = 1
0.00.369.837 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.384.141 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.384.155 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.384.245 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.385.578 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.385.585 I llama_new_context_with_model: graph nodes  = 601
0.00.385.585 I llama_new_context_with_model: graph splits = 1
0.00.385.587 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.572 I main: llama threadpool init, n_threads = 4
0.00.470.586 I 
0.00.470.659 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.662 I 
0.00.470.704 I sampler seed: 3920165748
0.00.470.715 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.718 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.470.719 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.721 I 
 increasities. 

I am unable to generate the requested content due to the safety restrictions in place. [end of text]


0.02.007.796 I llama_perf_sampler_print:    sampling time =       3.25 ms /    23 runs   (    0.14 ms per token,  7079.10 tokens per second)
0.02.007.798 I llama_perf_context_print:        load time =     469.76 ms
0.02.007.799 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.007.800 I llama_perf_context_print:        eval time =    1524.35 ms /    22 runs   (   69.29 ms per token,    14.43 tokens per second)
0.02.007.801 I llama_perf_context_print:       total time =    1537.23 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.547 I build: 4099 (f245cc28) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.000.747 I main: load the model and apply lora adapter, if any
0.00.021.190 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.202 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.209 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.210 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.213 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.214 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.215 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.215 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.216 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.216 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.220 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.221 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.221 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.222 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.222 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.158 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.245 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.048 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.055 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.056 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.057 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.058 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.059 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.060 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.063 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.064 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.064 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.065 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.066 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.069 I llama_model_loader: - type  f32:   37 tensors
0.00.130.070 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.988 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.648 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.178 I llm_load_vocab: special tokens cache size = 5
0.00.263.109 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.127 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.127 I llm_load_print_meta: arch             = gemma
0.00.263.128 I llm_load_print_meta: vocab type       = SPM
0.00.263.128 I llm_load_print_meta: n_vocab          = 256000
0.00.263.129 I llm_load_print_meta: n_merges         = 0
0.00.263.129 I llm_load_print_meta: vocab_only       = 0
0.00.263.129 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.130 I llm_load_print_meta: n_embd           = 2048
0.00.263.130 I llm_load_print_meta: n_layer          = 18
0.00.263.142 I llm_load_print_meta: n_head           = 8
0.00.263.143 I llm_load_print_meta: n_head_kv        = 1
0.00.263.143 I llm_load_print_meta: n_rot            = 256
0.00.263.144 I llm_load_print_meta: n_swa            = 0
0.00.263.144 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.144 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.145 I llm_load_print_meta: n_gqa            = 8
0.00.263.146 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.147 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.148 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.149 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.150 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.150 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.150 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.151 I llm_load_print_meta: n_ff             = 16384
0.00.263.152 I llm_load_print_meta: n_expert         = 0
0.00.263.152 I llm_load_print_meta: n_expert_used    = 0
0.00.263.152 I llm_load_print_meta: causal attn      = 1
0.00.263.153 I llm_load_print_meta: pooling type     = 0
0.00.263.153 I llm_load_print_meta: rope type        = 2
0.00.263.153 I llm_load_print_meta: rope scaling     = linear
0.00.263.155 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.156 I llm_load_print_meta: freq_scale_train = 1
0.00.263.156 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.157 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.157 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.157 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.157 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.158 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.158 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.158 I llm_load_print_meta: model type       = 2B
0.00.263.159 I llm_load_print_meta: model ftype      = Q8_0
0.00.263.159 I llm_load_print_meta: model params     = 2.51 B
0.00.263.160 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.263.161 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.161 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.162 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.162 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.162 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.163 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.163 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.164 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.164 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.164 I llm_load_print_meta: max token length = 93
0.00.356.984 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.362.344 I llama_new_context_with_model: n_seq_max     = 1
0.00.362.349 I llama_new_context_with_model: n_ctx         = 4096
0.00.362.350 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.362.350 I llama_new_context_with_model: n_batch       = 2048
0.00.362.351 I llama_new_context_with_model: n_ubatch      = 512
0.00.362.351 I llama_new_context_with_model: flash_attn    = 0
0.00.362.354 I llama_new_context_with_model: freq_base     = 10000.0
0.00.362.355 I llama_new_context_with_model: freq_scale    = 1
0.00.362.356 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.376.877 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.376.890 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.376.980 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.303 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.378.310 I llama_new_context_with_model: graph nodes  = 601
0.00.378.310 I llama_new_context_with_model: graph splits = 1
0.00.378.312 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.535 I main: llama threadpool init, n_threads = 4
0.00.458.549 I 
0.00.458.621 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.624 I 
0.00.458.668 I sampler seed: 1052695592
0.00.458.680 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.687 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.458.690 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.691 I 
 increably.

I am unable to provide an answer as the provided context does not contain any information regarding the context or nature of the question. [end of text]


0.02.492.439 I llama_perf_sampler_print:    sampling time =       4.55 ms /    31 runs   (    0.15 ms per token,  6816.18 tokens per second)
0.02.492.442 I llama_perf_context_print:        load time =     457.77 ms
0.02.492.443 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.492.444 I llama_perf_context_print:        eval time =    2015.85 ms /    30 runs   (   67.20 ms per token,    14.88 tokens per second)
0.02.492.445 I llama_perf_context_print:       total time =    2033.91 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.562 I build: 4099 (f245cc28) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.000.766 I main: load the model and apply lora adapter, if any
0.00.021.154 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.164 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.172 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.176 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.178 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.181 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.182 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.183 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.183 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.184 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.184 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.187 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.189 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.189 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.190 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.190 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.358 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.293 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.164 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.170 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.171 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.171 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.172 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.172 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.173 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.175 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.176 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.176 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.177 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.130.178 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.182 I llama_model_loader: - type  f32:   37 tensors
0.00.130.183 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.473 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.928 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.533 I llm_load_vocab: special tokens cache size = 5
0.00.266.688 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.710 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.711 I llm_load_print_meta: arch             = gemma
0.00.266.711 I llm_load_print_meta: vocab type       = SPM
0.00.266.712 I llm_load_print_meta: n_vocab          = 256000
0.00.266.712 I llm_load_print_meta: n_merges         = 0
0.00.266.713 I llm_load_print_meta: vocab_only       = 0
0.00.266.713 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.713 I llm_load_print_meta: n_embd           = 2048
0.00.266.713 I llm_load_print_meta: n_layer          = 18
0.00.266.727 I llm_load_print_meta: n_head           = 8
0.00.266.728 I llm_load_print_meta: n_head_kv        = 1
0.00.266.728 I llm_load_print_meta: n_rot            = 256
0.00.266.728 I llm_load_print_meta: n_swa            = 0
0.00.266.729 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.729 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.730 I llm_load_print_meta: n_gqa            = 8
0.00.266.731 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.732 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.732 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.734 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.734 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.734 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.735 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.736 I llm_load_print_meta: n_ff             = 16384
0.00.266.736 I llm_load_print_meta: n_expert         = 0
0.00.266.736 I llm_load_print_meta: n_expert_used    = 0
0.00.266.737 I llm_load_print_meta: causal attn      = 1
0.00.266.737 I llm_load_print_meta: pooling type     = 0
0.00.266.737 I llm_load_print_meta: rope type        = 2
0.00.266.737 I llm_load_print_meta: rope scaling     = linear
0.00.266.739 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.740 I llm_load_print_meta: freq_scale_train = 1
0.00.266.740 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.741 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.741 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.741 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.741 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.742 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.742 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.742 I llm_load_print_meta: model type       = 2B
0.00.266.743 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.744 I llm_load_print_meta: model params     = 2.51 B
0.00.266.744 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.745 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.745 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.746 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.746 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.746 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.747 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.747 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.748 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.748 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.749 I llm_load_print_meta: max token length = 93
0.00.343.619 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.343.627 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.343.628 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.343.629 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.343.629 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.343.630 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.348.930 I llama_new_context_with_model: n_seq_max     = 1
0.00.348.937 I llama_new_context_with_model: n_ctx         = 4096
0.00.348.937 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.348.937 I llama_new_context_with_model: n_batch       = 2048
0.00.348.938 I llama_new_context_with_model: n_ubatch      = 512
0.00.348.938 I llama_new_context_with_model: flash_attn    = 0
0.00.348.940 I llama_new_context_with_model: freq_base     = 10000.0
0.00.348.940 I llama_new_context_with_model: freq_scale    = 1
0.00.348.941 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.363.173 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.363.186 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.363.277 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.509 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.364.516 I llama_new_context_with_model: graph nodes  = 601
0.00.364.516 I llama_new_context_with_model: graph splits = 1
0.00.364.518 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.111 I main: llama threadpool init, n_threads = 4
0.00.450.127 I 
0.00.450.205 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.209 I 
0.00.450.263 I sampler seed: 97453274
0.00.450.277 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.281 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.450.282 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.283 I 
 increably.

I am unable to generate a response because the provided context does not contain any information regarding the requested text. [end of text]


0.02.249.482 I llama_perf_sampler_print:    sampling time =       3.83 ms /    27 runs   (    0.14 ms per token,  7040.42 tokens per second)
0.02.249.485 I llama_perf_context_print:        load time =     449.33 ms
0.02.249.486 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.249.488 I llama_perf_context_print:        eval time =    1783.80 ms /    26 runs   (   68.61 ms per token,    14.58 tokens per second)
0.02.249.489 I llama_perf_context_print:       total time =    1799.38 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.551 I build: 4099 (f245cc28) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.000.753 I main: load the model and apply lora adapter, if any
0.00.021.223 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.232 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.239 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.244 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.245 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.248 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.249 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.250 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.250 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.252 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.252 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.256 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.257 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.257 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.258 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.258 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.587 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.829 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.608 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.613 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.614 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.615 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.615 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.616 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.617 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.619 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.619 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.620 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.621 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.130.622 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.625 I llama_model_loader: - type  f32:   37 tensors
0.00.130.626 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.079 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.618 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.333 I llm_load_vocab: special tokens cache size = 5
0.00.266.794 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.809 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.810 I llm_load_print_meta: arch             = gemma
0.00.266.811 I llm_load_print_meta: vocab type       = SPM
0.00.266.812 I llm_load_print_meta: n_vocab          = 256000
0.00.266.812 I llm_load_print_meta: n_merges         = 0
0.00.266.812 I llm_load_print_meta: vocab_only       = 0
0.00.266.812 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.813 I llm_load_print_meta: n_embd           = 2048
0.00.266.813 I llm_load_print_meta: n_layer          = 18
0.00.266.824 I llm_load_print_meta: n_head           = 8
0.00.266.825 I llm_load_print_meta: n_head_kv        = 1
0.00.266.825 I llm_load_print_meta: n_rot            = 256
0.00.266.826 I llm_load_print_meta: n_swa            = 0
0.00.266.826 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.826 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.827 I llm_load_print_meta: n_gqa            = 8
0.00.266.828 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.829 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.830 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.832 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.832 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.832 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.833 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.834 I llm_load_print_meta: n_ff             = 16384
0.00.266.834 I llm_load_print_meta: n_expert         = 0
0.00.266.834 I llm_load_print_meta: n_expert_used    = 0
0.00.266.834 I llm_load_print_meta: causal attn      = 1
0.00.266.835 I llm_load_print_meta: pooling type     = 0
0.00.266.835 I llm_load_print_meta: rope type        = 2
0.00.266.835 I llm_load_print_meta: rope scaling     = linear
0.00.266.837 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.837 I llm_load_print_meta: freq_scale_train = 1
0.00.266.838 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.838 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.838 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.838 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.839 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.839 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.839 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.840 I llm_load_print_meta: model type       = 2B
0.00.266.840 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.841 I llm_load_print_meta: model params     = 2.51 B
0.00.266.842 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.842 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.842 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.843 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.843 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.843 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.844 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.844 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.844 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.845 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.845 I llm_load_print_meta: max token length = 93
0.00.338.854 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.338.860 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.343.898 I llama_new_context_with_model: n_seq_max     = 1
0.00.343.904 I llama_new_context_with_model: n_ctx         = 4096
0.00.343.905 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.343.905 I llama_new_context_with_model: n_batch       = 2048
0.00.343.906 I llama_new_context_with_model: n_ubatch      = 512
0.00.343.906 I llama_new_context_with_model: flash_attn    = 0
0.00.343.908 I llama_new_context_with_model: freq_base     = 10000.0
0.00.343.909 I llama_new_context_with_model: freq_scale    = 1
0.00.343.910 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.358.199 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.358.214 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.358.305 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.550 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.359.554 I llama_new_context_with_model: graph nodes  = 601
0.00.359.555 I llama_new_context_with_model: graph splits = 1
0.00.359.556 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.841 I main: llama threadpool init, n_threads = 4
0.00.446.855 I 
0.00.446.929 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.932 I 
0.00.446.977 I sampler seed: 3667785626
0.00.446.988 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.991 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.446.992 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.992 I 
 increasities, a playful, yet risky, and potentially dangerous dance.

**Definition:**

* A dance that involves a series of interconnected, rapid, and

0.02.871.057 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6564.55 tokens per second)
0.02.871.060 I llama_perf_context_print:        load time =     446.07 ms
0.02.871.061 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.871.062 I llama_perf_context_print:        eval time =    2405.31 ms /    32 runs   (   75.17 ms per token,    13.30 tokens per second)
0.02.871.063 I llama_perf_context_print:       total time =    2424.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.223s
user	0m34.054s
sys	0m9.209s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4099 (f245cc28)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40186.62 ms
main:    total time = 40186.62 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.532 I build: 4099 (f245cc28) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.000.758 I main: load the model and apply lora adapter, if any
0.00.023.181 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.190 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.198 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.206 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.210 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.215 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.216 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.217 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.217 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.218 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.218 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.221 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.222 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.222 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.223 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.223 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.230 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.381 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.140 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.145 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.146 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.147 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.147 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.148 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.149 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.151 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.152 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.152 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.153 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.154 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.157 I llama_model_loader: - type  f32:   37 tensors
0.00.132.158 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.159 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.642 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.558 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.068 I llm_load_vocab: special tokens cache size = 5
0.00.266.933 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.951 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.951 I llm_load_print_meta: arch             = gemma
0.00.266.952 I llm_load_print_meta: vocab type       = SPM
0.00.266.953 I llm_load_print_meta: n_vocab          = 256000
0.00.266.953 I llm_load_print_meta: n_merges         = 0
0.00.266.953 I llm_load_print_meta: vocab_only       = 0
0.00.266.954 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.954 I llm_load_print_meta: n_embd           = 2048
0.00.266.954 I llm_load_print_meta: n_layer          = 18
0.00.266.967 I llm_load_print_meta: n_head           = 8
0.00.266.967 I llm_load_print_meta: n_head_kv        = 1
0.00.266.968 I llm_load_print_meta: n_rot            = 256
0.00.266.968 I llm_load_print_meta: n_swa            = 0
0.00.266.968 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.969 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.970 I llm_load_print_meta: n_gqa            = 8
0.00.266.971 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.972 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.973 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.974 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.975 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.975 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.975 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.976 I llm_load_print_meta: n_ff             = 16384
0.00.266.976 I llm_load_print_meta: n_expert         = 0
0.00.266.977 I llm_load_print_meta: n_expert_used    = 0
0.00.266.977 I llm_load_print_meta: causal attn      = 1
0.00.266.977 I llm_load_print_meta: pooling type     = 0
0.00.266.978 I llm_load_print_meta: rope type        = 2
0.00.266.978 I llm_load_print_meta: rope scaling     = linear
0.00.266.979 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.980 I llm_load_print_meta: freq_scale_train = 1
0.00.266.981 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.981 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.981 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.982 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.982 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.982 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.983 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.983 I llm_load_print_meta: model type       = 2B
0.00.266.984 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.984 I llm_load_print_meta: model params     = 2.51 B
0.00.266.985 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.986 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.986 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.986 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.987 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.987 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.987 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.988 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.988 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.988 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.989 I llm_load_print_meta: max token length = 93
0.00.326.980 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.326.989 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.326.989 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.326.990 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.326.991 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.326.991 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.332.162 I llama_new_context_with_model: n_seq_max     = 1
0.00.332.168 I llama_new_context_with_model: n_ctx         = 4096
0.00.332.169 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.332.169 I llama_new_context_with_model: n_batch       = 2048
0.00.332.169 I llama_new_context_with_model: n_ubatch      = 512
0.00.332.170 I llama_new_context_with_model: flash_attn    = 0
0.00.332.172 I llama_new_context_with_model: freq_base     = 10000.0
0.00.332.173 I llama_new_context_with_model: freq_scale    = 1
0.00.332.174 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.346.862 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.346.878 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.346.968 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.348.327 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.348.333 I llama_new_context_with_model: graph nodes  = 601
0.00.348.333 I llama_new_context_with_model: graph splits = 1
0.00.348.335 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.614 I main: llama threadpool init, n_threads = 4
0.00.422.629 I 
0.00.422.705 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.422.708 I 
0.00.422.750 I sampler seed: 618073907
0.00.422.761 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.768 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.772 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.772 I 
 seconal, the first recorded example of extraterrestrial contact.

**Answer the following questions about the first recorded example of extraterrestrial contact:**

**a)

0.01.994.083 I llama_perf_sampler_print:    sampling time =       5.07 ms /    33 runs   (    0.15 ms per token,  6505.03 tokens per second)
0.01.994.085 I llama_perf_context_print:        load time =     421.84 ms
0.01.994.086 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.994.088 I llama_perf_context_print:        eval time =    1553.10 ms /    32 runs   (   48.53 ms per token,    20.60 tokens per second)
0.01.994.088 I llama_perf_context_print:       total time =    1571.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4099 (f245cc28)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40136.83 ms
main:    total time = 40136.83 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.581 I build: 4099 (f245cc28) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.000.798 I main: load the model and apply lora adapter, if any
0.00.021.473 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.493 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.504 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.505 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.510 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.510 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.511 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.511 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.512 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.512 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.518 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.519 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.520 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.520 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.521 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.175 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.543 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.299 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.306 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.306 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.307 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.308 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.309 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.309 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.311 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.312 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.316 I llama_model_loader: - type  f32:   37 tensors
0.00.131.317 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.318 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.520 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.887 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.464 I llm_load_vocab: special tokens cache size = 5
0.00.264.362 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.377 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.378 I llm_load_print_meta: arch             = gemma
0.00.264.379 I llm_load_print_meta: vocab type       = SPM
0.00.264.379 I llm_load_print_meta: n_vocab          = 256000
0.00.264.379 I llm_load_print_meta: n_merges         = 0
0.00.264.380 I llm_load_print_meta: vocab_only       = 0
0.00.264.380 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.380 I llm_load_print_meta: n_embd           = 2048
0.00.264.381 I llm_load_print_meta: n_layer          = 18
0.00.264.392 I llm_load_print_meta: n_head           = 8
0.00.264.393 I llm_load_print_meta: n_head_kv        = 1
0.00.264.394 I llm_load_print_meta: n_rot            = 256
0.00.264.394 I llm_load_print_meta: n_swa            = 0
0.00.264.394 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.395 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.396 I llm_load_print_meta: n_gqa            = 8
0.00.264.397 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.398 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.398 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.400 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.401 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.401 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.402 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.402 I llm_load_print_meta: n_ff             = 16384
0.00.264.403 I llm_load_print_meta: n_expert         = 0
0.00.264.403 I llm_load_print_meta: n_expert_used    = 0
0.00.264.403 I llm_load_print_meta: causal attn      = 1
0.00.264.404 I llm_load_print_meta: pooling type     = 0
0.00.264.404 I llm_load_print_meta: rope type        = 2
0.00.264.404 I llm_load_print_meta: rope scaling     = linear
0.00.264.406 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.406 I llm_load_print_meta: freq_scale_train = 1
0.00.264.406 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.407 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.407 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.408 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.408 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.408 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.408 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.409 I llm_load_print_meta: model type       = 2B
0.00.264.409 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.264.410 I llm_load_print_meta: model params     = 2.51 B
0.00.264.411 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.264.411 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.411 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.412 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.412 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.412 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.413 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.413 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.414 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.415 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.415 I llm_load_print_meta: max token length = 93
0.00.322.097 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.327.268 I llama_new_context_with_model: n_seq_max     = 1
0.00.327.274 I llama_new_context_with_model: n_ctx         = 4096
0.00.327.275 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.327.275 I llama_new_context_with_model: n_batch       = 2048
0.00.327.275 I llama_new_context_with_model: n_ubatch      = 512
0.00.327.276 I llama_new_context_with_model: flash_attn    = 0
0.00.327.279 I llama_new_context_with_model: freq_base     = 10000.0
0.00.327.279 I llama_new_context_with_model: freq_scale    = 1
0.00.327.280 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.342.137 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.342.151 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.342.244 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.343.498 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.343.503 I llama_new_context_with_model: graph nodes  = 601
0.00.343.504 I llama_new_context_with_model: graph splits = 1
0.00.343.506 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.417.861 I main: llama threadpool init, n_threads = 4
0.00.417.876 I 
0.00.417.949 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.417.952 I 
0.00.417.996 I sampler seed: 2153794313
0.00.418.007 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.418.010 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.418.011 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.418.020 I 
 seconally. [end of text]


0.00.616.742 I llama_perf_sampler_print:    sampling time =       0.64 ms /     5 runs   (    0.13 ms per token,  7849.29 tokens per second)
0.00.616.744 I llama_perf_context_print:        load time =     417.04 ms
0.00.616.745 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.616.746 I llama_perf_context_print:        eval time =     195.74 ms /     4 runs   (   48.94 ms per token,    20.44 tokens per second)
0.00.616.747 I llama_perf_context_print:       total time =     198.89 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m25.673s
user	10m18.161s
sys	0m6.925s
