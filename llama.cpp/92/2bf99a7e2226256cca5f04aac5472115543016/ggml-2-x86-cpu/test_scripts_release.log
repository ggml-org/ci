+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.541 I build: 3840 (922bf99a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.849 I main: load the model and apply lora adapter, if any
0.00.022.011 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.058 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.064 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.069 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.070 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.073 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.073 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.074 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.075 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.075 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.076 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.079 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.080 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.080 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.081 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.081 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.645 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.366 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.213 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.219 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.220 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.220 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.221 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.222 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.223 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.226 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.226 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.227 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.228 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.229 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.232 I llama_model_loader: - type  f32:   37 tensors
0.00.132.234 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.363 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.181 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.825 I llm_load_vocab: special tokens cache size = 5
0.00.221.913 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.925 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.926 I llm_load_print_meta: arch             = gemma
0.00.221.926 I llm_load_print_meta: vocab type       = SPM
0.00.221.927 I llm_load_print_meta: n_vocab          = 256000
0.00.221.927 I llm_load_print_meta: n_merges         = 0
0.00.221.928 I llm_load_print_meta: vocab_only       = 0
0.00.221.928 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.928 I llm_load_print_meta: n_embd           = 2048
0.00.221.929 I llm_load_print_meta: n_layer          = 18
0.00.221.939 I llm_load_print_meta: n_head           = 8
0.00.221.940 I llm_load_print_meta: n_head_kv        = 1
0.00.221.940 I llm_load_print_meta: n_rot            = 256
0.00.221.941 I llm_load_print_meta: n_swa            = 0
0.00.221.941 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.941 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.942 I llm_load_print_meta: n_gqa            = 8
0.00.221.943 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.944 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.945 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.946 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.947 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.947 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.947 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.948 I llm_load_print_meta: n_ff             = 16384
0.00.221.949 I llm_load_print_meta: n_expert         = 0
0.00.221.949 I llm_load_print_meta: n_expert_used    = 0
0.00.221.949 I llm_load_print_meta: causal attn      = 1
0.00.221.949 I llm_load_print_meta: pooling type     = 0
0.00.221.949 I llm_load_print_meta: rope type        = 2
0.00.221.950 I llm_load_print_meta: rope scaling     = linear
0.00.221.951 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.952 I llm_load_print_meta: freq_scale_train = 1
0.00.221.952 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.953 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.953 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.953 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.953 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.954 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.954 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.955 I llm_load_print_meta: model type       = 2B
0.00.221.955 I llm_load_print_meta: model ftype      = Q8_0
0.00.221.956 I llm_load_print_meta: model params     = 2.51 B
0.00.221.957 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.221.957 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.957 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.958 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.958 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.958 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.959 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.959 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.960 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.960 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.960 I llm_load_print_meta: max token length = 93
0.00.221.979 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.922 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.320.929 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.320.929 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.320.930 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.320.931 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.320.931 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.328.248 I llama_new_context_with_model: n_ctx      = 8192
0.00.328.254 I llama_new_context_with_model: n_batch    = 2048
0.00.328.254 I llama_new_context_with_model: n_ubatch   = 512
0.00.328.255 I llama_new_context_with_model: flash_attn = 0
0.00.328.257 I llama_new_context_with_model: freq_base  = 10000.0
0.00.328.258 I llama_new_context_with_model: freq_scale = 1
0.00.358.769 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.358.785 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.358.875 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.727 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.359.735 I llama_new_context_with_model: graph nodes  = 601
0.00.359.735 I llama_new_context_with_model: graph splits = 1
0.00.359.737 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.378 I main: llama threadpool init, n_threads = 4
0.00.450.391 I 
0.00.450.465 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.468 I 
0.00.450.503 I sampler seed: 1089954542
0.00.450.511 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.514 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.450.514 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.515 I 
 increasels and other predators hunt for prey in the shallow waters.

**a) Identify the trophic level represented in the text.**

**b) Explain how

0.02.680.171 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6714.14 tokens per second)
0.02.680.174 I llama_perf_context_print:        load time =     448.51 ms
0.02.680.175 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.680.177 I llama_perf_context_print:        eval time =    2211.24 ms /    32 runs   (   69.10 ms per token,    14.47 tokens per second)
0.02.680.178 I llama_perf_context_print:       total time =    2229.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.591 I build: 3840 (922bf99a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.803 I main: llama backend init
0.00.001.899 I main: load the model and apply lora adapter, if any
0.00.022.489 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.504 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.515 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.519 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.522 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.523 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.524 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.524 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.526 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.526 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.531 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.532 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.533 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.533 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.534 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.867 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.114 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.067 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.074 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.074 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.075 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.075 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.076 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.077 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.080 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.080 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.081 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.082 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.083 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.088 I llama_model_loader: - type  f32:   37 tensors
0.00.133.090 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.146 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.020 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.667 I llm_load_vocab: special tokens cache size = 5
0.00.223.504 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.518 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.519 I llm_load_print_meta: arch             = gemma
0.00.223.519 I llm_load_print_meta: vocab type       = SPM
0.00.223.520 I llm_load_print_meta: n_vocab          = 256000
0.00.223.521 I llm_load_print_meta: n_merges         = 0
0.00.223.521 I llm_load_print_meta: vocab_only       = 0
0.00.223.521 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.522 I llm_load_print_meta: n_embd           = 2048
0.00.223.522 I llm_load_print_meta: n_layer          = 18
0.00.223.533 I llm_load_print_meta: n_head           = 8
0.00.223.534 I llm_load_print_meta: n_head_kv        = 1
0.00.223.534 I llm_load_print_meta: n_rot            = 256
0.00.223.535 I llm_load_print_meta: n_swa            = 0
0.00.223.535 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.535 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.536 I llm_load_print_meta: n_gqa            = 8
0.00.223.537 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.538 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.539 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.540 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.541 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.541 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.542 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.543 I llm_load_print_meta: n_ff             = 16384
0.00.223.543 I llm_load_print_meta: n_expert         = 0
0.00.223.543 I llm_load_print_meta: n_expert_used    = 0
0.00.223.544 I llm_load_print_meta: causal attn      = 1
0.00.223.544 I llm_load_print_meta: pooling type     = 0
0.00.223.544 I llm_load_print_meta: rope type        = 2
0.00.223.545 I llm_load_print_meta: rope scaling     = linear
0.00.223.546 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.546 I llm_load_print_meta: freq_scale_train = 1
0.00.223.547 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.547 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.548 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.548 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.548 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.548 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.549 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.549 I llm_load_print_meta: model type       = 2B
0.00.223.550 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.551 I llm_load_print_meta: model params     = 2.51 B
0.00.223.551 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.552 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.552 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.552 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.552 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.553 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.553 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.554 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.554 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.554 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.555 I llm_load_print_meta: max token length = 93
0.00.223.578 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.278 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.322.339 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.347 I llama_new_context_with_model: n_batch    = 2048
0.00.322.347 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.348 I llama_new_context_with_model: flash_attn = 0
0.00.322.350 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.351 I llama_new_context_with_model: freq_scale = 1
0.00.351.736 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.351.751 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.351.841 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.716 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.352.723 I llama_new_context_with_model: graph nodes  = 601
0.00.352.724 I llama_new_context_with_model: graph splits = 1
0.00.352.726 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.439.898 I main: llama threadpool init, n_threads = 4
0.00.439.911 I 
0.00.439.983 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.439.986 I 
0.00.440.022 I sampler seed: 2680703628
0.00.440.032 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.039 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.040 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.041 I 
 increasities

I am unable to generate responses that are sexually suggestive in nature. Would you like me to try generating something different? [end of text]


0.02.259.685 I llama_perf_sampler_print:    sampling time =       3.99 ms /    28 runs   (    0.14 ms per token,  7019.30 tokens per second)
0.02.259.687 I llama_perf_context_print:        load time =     437.98 ms
0.02.259.689 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.259.690 I llama_perf_context_print:        eval time =    1804.83 ms /    27 runs   (   66.85 ms per token,    14.96 tokens per second)
0.02.259.691 I llama_perf_context_print:       total time =    1819.80 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.540 I build: 3840 (922bf99a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.945 I main: load the model and apply lora adapter, if any
0.00.022.166 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.214 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.224 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.230 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.230 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.235 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.236 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.236 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.237 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.238 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.238 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.242 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.243 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.243 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.244 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.245 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.835 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.807 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.630 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.636 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.637 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.638 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.638 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.639 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.640 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.643 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.643 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.645 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.645 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.646 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.649 I llama_model_loader: - type  f32:   37 tensors
0.00.132.652 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.385 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.928 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.518 I llm_load_vocab: special tokens cache size = 5
0.00.221.313 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.326 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.326 I llm_load_print_meta: arch             = gemma
0.00.221.328 I llm_load_print_meta: vocab type       = SPM
0.00.221.329 I llm_load_print_meta: n_vocab          = 256000
0.00.221.329 I llm_load_print_meta: n_merges         = 0
0.00.221.330 I llm_load_print_meta: vocab_only       = 0
0.00.221.330 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.330 I llm_load_print_meta: n_embd           = 2048
0.00.221.331 I llm_load_print_meta: n_layer          = 18
0.00.221.345 I llm_load_print_meta: n_head           = 8
0.00.221.346 I llm_load_print_meta: n_head_kv        = 1
0.00.221.346 I llm_load_print_meta: n_rot            = 256
0.00.221.346 I llm_load_print_meta: n_swa            = 0
0.00.221.347 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.352 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.353 I llm_load_print_meta: n_gqa            = 8
0.00.221.354 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.355 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.355 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.357 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.358 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.358 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.359 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.360 I llm_load_print_meta: n_ff             = 16384
0.00.221.360 I llm_load_print_meta: n_expert         = 0
0.00.221.360 I llm_load_print_meta: n_expert_used    = 0
0.00.221.360 I llm_load_print_meta: causal attn      = 1
0.00.221.360 I llm_load_print_meta: pooling type     = 0
0.00.221.361 I llm_load_print_meta: rope type        = 2
0.00.221.361 I llm_load_print_meta: rope scaling     = linear
0.00.221.362 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.363 I llm_load_print_meta: freq_scale_train = 1
0.00.221.363 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.365 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.365 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.365 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.366 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.366 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.366 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.367 I llm_load_print_meta: model type       = 2B
0.00.221.368 I llm_load_print_meta: model ftype      = Q8_0
0.00.221.368 I llm_load_print_meta: model params     = 2.51 B
0.00.221.369 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.221.370 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.371 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.371 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.371 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.372 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.372 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.373 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.373 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.374 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.374 I llm_load_print_meta: max token length = 93
0.00.221.391 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.296.609 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.296.615 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.296.616 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.296.616 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.296.617 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.296.617 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.301.668 I llama_new_context_with_model: n_ctx      = 8192
0.00.301.674 I llama_new_context_with_model: n_batch    = 2048
0.00.301.674 I llama_new_context_with_model: n_ubatch   = 512
0.00.301.675 I llama_new_context_with_model: flash_attn = 0
0.00.301.677 I llama_new_context_with_model: freq_base  = 10000.0
0.00.301.678 I llama_new_context_with_model: freq_scale = 1
0.00.330.498 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.330.511 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.330.602 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.331.447 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.331.455 I llama_new_context_with_model: graph nodes  = 601
0.00.331.455 I llama_new_context_with_model: graph splits = 1
0.00.331.457 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.160 I main: llama threadpool init, n_threads = 4
0.00.422.173 I 
0.00.422.250 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.422.253 I 
0.00.422.291 I sampler seed: 2036279479
0.00.422.301 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.303 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.422.304 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.304 I 
 increasities with a sassy, sarcastic, and witty personality. 

**Prompt:** Write a story about a sassy and sarcastic journalist named Amelia Peabody who investigates a

0.02.680.933 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6693.71 tokens per second)
0.02.680.936 I llama_perf_context_print:        load time =     420.20 ms
0.02.680.938 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.680.941 I llama_perf_context_print:        eval time =    2240.69 ms /    32 runs   (   70.02 ms per token,    14.28 tokens per second)
0.02.680.942 I llama_perf_context_print:       total time =    2258.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.604 I build: 3840 (922bf99a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.795 I main: llama backend init
0.00.001.933 I main: load the model and apply lora adapter, if any
0.00.022.057 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.103 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.112 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.118 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.119 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.122 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.123 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.124 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.125 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.126 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.126 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.130 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.131 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.131 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.132 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.132 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.688 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.624 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.452 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.457 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.458 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.459 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.459 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.460 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.461 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.463 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.464 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.465 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.466 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.466 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.469 I llama_model_loader: - type  f32:   37 tensors
0.00.132.471 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.102 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.490 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.137 I llm_load_vocab: special tokens cache size = 5
0.00.222.186 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.197 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.198 I llm_load_print_meta: arch             = gemma
0.00.222.198 I llm_load_print_meta: vocab type       = SPM
0.00.222.199 I llm_load_print_meta: n_vocab          = 256000
0.00.222.199 I llm_load_print_meta: n_merges         = 0
0.00.222.200 I llm_load_print_meta: vocab_only       = 0
0.00.222.200 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.200 I llm_load_print_meta: n_embd           = 2048
0.00.222.201 I llm_load_print_meta: n_layer          = 18
0.00.222.213 I llm_load_print_meta: n_head           = 8
0.00.222.214 I llm_load_print_meta: n_head_kv        = 1
0.00.222.214 I llm_load_print_meta: n_rot            = 256
0.00.222.214 I llm_load_print_meta: n_swa            = 0
0.00.222.214 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.215 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.216 I llm_load_print_meta: n_gqa            = 8
0.00.222.217 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.217 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.218 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.220 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.220 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.221 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.221 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.222 I llm_load_print_meta: n_ff             = 16384
0.00.222.222 I llm_load_print_meta: n_expert         = 0
0.00.222.222 I llm_load_print_meta: n_expert_used    = 0
0.00.222.222 I llm_load_print_meta: causal attn      = 1
0.00.222.223 I llm_load_print_meta: pooling type     = 0
0.00.222.223 I llm_load_print_meta: rope type        = 2
0.00.222.223 I llm_load_print_meta: rope scaling     = linear
0.00.222.225 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.225 I llm_load_print_meta: freq_scale_train = 1
0.00.222.226 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.226 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.226 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.227 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.227 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.227 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.227 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.228 I llm_load_print_meta: model type       = 2B
0.00.222.228 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.229 I llm_load_print_meta: model params     = 2.51 B
0.00.222.230 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.230 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.231 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.231 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.231 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.232 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.232 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.232 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.233 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.233 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.234 I llm_load_print_meta: max token length = 93
0.00.222.257 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.335 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.292.343 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.297.380 I llama_new_context_with_model: n_ctx      = 8192
0.00.297.386 I llama_new_context_with_model: n_batch    = 2048
0.00.297.387 I llama_new_context_with_model: n_ubatch   = 512
0.00.297.388 I llama_new_context_with_model: flash_attn = 0
0.00.297.390 I llama_new_context_with_model: freq_base  = 10000.0
0.00.297.391 I llama_new_context_with_model: freq_scale = 1
0.00.326.122 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.326.139 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.326.229 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.327.116 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.327.123 I llama_new_context_with_model: graph nodes  = 601
0.00.327.124 I llama_new_context_with_model: graph splits = 1
0.00.327.127 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.419.924 I main: llama threadpool init, n_threads = 4
0.00.419.936 I 
0.00.420.012 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.420.015 I 
0.00.420.050 I sampler seed: 3237386629
0.00.420.059 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.420.061 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.420.062 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.420.062 I 
 increably.

I am unable to generate a response as requested as I am unable to generate responses that are sexually suggestive in nature. [end of text]


0.02.534.608 I llama_perf_sampler_print:    sampling time =       4.16 ms /    29 runs   (    0.14 ms per token,  6971.15 tokens per second)
0.02.534.612 I llama_perf_context_print:        load time =     417.97 ms
0.02.534.613 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.534.614 I llama_perf_context_print:        eval time =    2098.82 ms /    28 runs   (   74.96 ms per token,    13.34 tokens per second)
0.02.534.615 I llama_perf_context_print:       total time =    2114.69 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.673s
user	0m36.338s
sys	0m9.395s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3840 (922bf99a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31981.25 ms
main:    total time = 31981.25 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.562 I build: 3840 (922bf99a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.001.873 I main: load the model and apply lora adapter, if any
0.00.021.989 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.043 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.054 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.061 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.062 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.066 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.069 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.070 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.071 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.072 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.072 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.075 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.076 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.076 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.077 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.078 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.098 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.195 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.107 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.113 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.114 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.114 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.115 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.116 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.117 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.119 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.120 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.120 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.121 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.122 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.124 I llama_model_loader: - type  f32:   37 tensors
0.00.133.127 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.127 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.261 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.496 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.129 I llm_load_vocab: special tokens cache size = 5
0.00.223.007 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.020 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.020 I llm_load_print_meta: arch             = gemma
0.00.223.021 I llm_load_print_meta: vocab type       = SPM
0.00.223.021 I llm_load_print_meta: n_vocab          = 256000
0.00.223.021 I llm_load_print_meta: n_merges         = 0
0.00.223.022 I llm_load_print_meta: vocab_only       = 0
0.00.223.022 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.022 I llm_load_print_meta: n_embd           = 2048
0.00.223.023 I llm_load_print_meta: n_layer          = 18
0.00.223.035 I llm_load_print_meta: n_head           = 8
0.00.223.036 I llm_load_print_meta: n_head_kv        = 1
0.00.223.036 I llm_load_print_meta: n_rot            = 256
0.00.223.037 I llm_load_print_meta: n_swa            = 0
0.00.223.037 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.037 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.038 I llm_load_print_meta: n_gqa            = 8
0.00.223.039 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.040 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.041 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.042 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.043 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.043 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.044 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.044 I llm_load_print_meta: n_ff             = 16384
0.00.223.045 I llm_load_print_meta: n_expert         = 0
0.00.223.045 I llm_load_print_meta: n_expert_used    = 0
0.00.223.045 I llm_load_print_meta: causal attn      = 1
0.00.223.045 I llm_load_print_meta: pooling type     = 0
0.00.223.046 I llm_load_print_meta: rope type        = 2
0.00.223.046 I llm_load_print_meta: rope scaling     = linear
0.00.223.048 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.048 I llm_load_print_meta: freq_scale_train = 1
0.00.223.049 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.049 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.049 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.050 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.050 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.050 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.051 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.051 I llm_load_print_meta: model type       = 2B
0.00.223.052 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.223.052 I llm_load_print_meta: model params     = 2.51 B
0.00.223.053 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.223.053 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.054 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.054 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.054 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.055 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.055 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.055 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.056 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.057 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.057 I llm_load_print_meta: max token length = 93
0.00.223.078 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.280.725 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.280.734 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.280.735 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.280.735 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.280.736 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.280.736 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.285.932 I llama_new_context_with_model: n_ctx      = 8192
0.00.285.940 I llama_new_context_with_model: n_batch    = 2048
0.00.285.940 I llama_new_context_with_model: n_ubatch   = 512
0.00.285.941 I llama_new_context_with_model: flash_attn = 0
0.00.285.945 I llama_new_context_with_model: freq_base  = 10000.0
0.00.285.946 I llama_new_context_with_model: freq_scale = 1
0.00.316.849 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.316.864 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.954 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.317.807 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.317.816 I llama_new_context_with_model: graph nodes  = 601
0.00.317.816 I llama_new_context_with_model: graph splits = 1
0.00.317.818 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.398.420 I main: llama threadpool init, n_threads = 4
0.00.398.431 I 
0.00.398.503 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.398.507 I 
0.00.398.542 I sampler seed: 3661244839
0.00.398.551 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.398.554 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.398.554 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.398.554 I 
 increamically! 

I cannot answer this question as it contains inappropriate and potentially dangerous language. [end of text]


0.01.381.750 I llama_perf_sampler_print:    sampling time =       3.04 ms /    21 runs   (    0.14 ms per token,  6919.28 tokens per second)
0.01.381.752 I llama_perf_context_print:        load time =     396.53 ms
0.01.381.753 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.381.755 I llama_perf_context_print:        eval time =     972.05 ms /    20 runs   (   48.60 ms per token,    20.58 tokens per second)
0.01.381.755 I llama_perf_context_print:       total time =     983.34 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3840 (922bf99a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32047.86 ms
main:    total time = 32047.86 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.552 I build: 3840 (922bf99a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.858 I main: load the model and apply lora adapter, if any
0.00.021.761 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.773 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.780 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.781 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.785 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.786 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.786 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.787 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.788 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.788 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.792 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.793 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.794 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.794 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.795 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.667 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.018 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.893 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.899 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.900 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.901 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.902 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.903 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.904 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.908 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.908 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.912 I llama_model_loader: - type  f32:   37 tensors
0.00.132.915 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.915 I llama_model_loader: - type q6_K:   19 tensors
0.00.190.239 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.044 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.204.744 I llm_load_vocab: special tokens cache size = 5
0.00.225.887 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.901 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.902 I llm_load_print_meta: arch             = gemma
0.00.225.902 I llm_load_print_meta: vocab type       = SPM
0.00.225.903 I llm_load_print_meta: n_vocab          = 256000
0.00.225.903 I llm_load_print_meta: n_merges         = 0
0.00.225.903 I llm_load_print_meta: vocab_only       = 0
0.00.225.904 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.904 I llm_load_print_meta: n_embd           = 2048
0.00.225.905 I llm_load_print_meta: n_layer          = 18
0.00.225.918 I llm_load_print_meta: n_head           = 8
0.00.225.919 I llm_load_print_meta: n_head_kv        = 1
0.00.225.919 I llm_load_print_meta: n_rot            = 256
0.00.225.919 I llm_load_print_meta: n_swa            = 0
0.00.225.920 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.920 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.921 I llm_load_print_meta: n_gqa            = 8
0.00.225.922 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.923 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.924 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.925 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.926 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.926 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.927 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.927 I llm_load_print_meta: n_ff             = 16384
0.00.225.928 I llm_load_print_meta: n_expert         = 0
0.00.225.928 I llm_load_print_meta: n_expert_used    = 0
0.00.225.928 I llm_load_print_meta: causal attn      = 1
0.00.225.928 I llm_load_print_meta: pooling type     = 0
0.00.225.929 I llm_load_print_meta: rope type        = 2
0.00.225.929 I llm_load_print_meta: rope scaling     = linear
0.00.225.930 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.931 I llm_load_print_meta: freq_scale_train = 1
0.00.225.931 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.931 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.932 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.932 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.932 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.933 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.933 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.933 I llm_load_print_meta: model type       = 2B
0.00.225.934 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.225.935 I llm_load_print_meta: model params     = 2.51 B
0.00.225.936 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.225.936 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.936 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.937 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.937 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.937 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.937 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.938 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.938 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.939 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.940 I llm_load_print_meta: max token length = 93
0.00.225.955 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.284.253 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.289.215 I llama_new_context_with_model: n_ctx      = 8192
0.00.289.221 I llama_new_context_with_model: n_batch    = 2048
0.00.289.221 I llama_new_context_with_model: n_ubatch   = 512
0.00.289.221 I llama_new_context_with_model: flash_attn = 0
0.00.289.223 I llama_new_context_with_model: freq_base  = 10000.0
0.00.289.224 I llama_new_context_with_model: freq_scale = 1
0.00.318.318 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.318.332 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.318.425 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.319.301 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.319.308 I llama_new_context_with_model: graph nodes  = 601
0.00.319.309 I llama_new_context_with_model: graph splits = 1
0.00.319.311 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.399.444 I main: llama threadpool init, n_threads = 4
0.00.399.456 I 
0.00.399.533 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.399.536 I 
0.00.399.570 I sampler seed: 1976852745
0.00.399.579 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.399.582 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.399.582 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.399.582 I 
 seconded by the mischievous elf Mika.

The mischievous elf Mika had a knack for conjuring up fantastical illusions that baffled the most astute observer. With a

0.01.988.427 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6695.07 tokens per second)
0.01.988.430 I llama_perf_context_print:        load time =     397.57 ms
0.01.988.433 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.988.435 I llama_perf_context_print:        eval time =    1571.45 ms /    32 runs   (   49.11 ms per token,    20.36 tokens per second)
0.01.988.436 I llama_perf_context_print:       total time =    1588.99 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.582s
user	8m11.137s
sys	0m7.049s
