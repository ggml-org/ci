+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.590 I build: 3913 (92be9f12) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.001.891 I main: load the model and apply lora adapter, if any
0.00.022.378 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.427 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.434 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.439 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.440 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.443 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.444 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.445 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.446 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.446 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.447 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.451 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.452 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.453 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.453 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.454 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.683 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.128 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.993 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.999 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.000 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.001 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.001 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.002 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.003 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.005 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.006 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.006 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.007 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.008 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.011 I llama_model_loader: - type  f32:   37 tensors
0.00.133.014 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.818 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.068 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.866 I llm_load_vocab: special tokens cache size = 5
0.00.280.022 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.037 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.038 I llm_load_print_meta: arch             = gemma
0.00.280.038 I llm_load_print_meta: vocab type       = SPM
0.00.280.039 I llm_load_print_meta: n_vocab          = 256000
0.00.280.039 I llm_load_print_meta: n_merges         = 0
0.00.280.040 I llm_load_print_meta: vocab_only       = 0
0.00.280.040 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.040 I llm_load_print_meta: n_embd           = 2048
0.00.280.040 I llm_load_print_meta: n_layer          = 18
0.00.280.053 I llm_load_print_meta: n_head           = 8
0.00.280.054 I llm_load_print_meta: n_head_kv        = 1
0.00.280.055 I llm_load_print_meta: n_rot            = 256
0.00.280.055 I llm_load_print_meta: n_swa            = 0
0.00.280.055 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.055 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.056 I llm_load_print_meta: n_gqa            = 8
0.00.280.057 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.058 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.059 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.060 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.061 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.061 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.061 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.062 I llm_load_print_meta: n_ff             = 16384
0.00.280.062 I llm_load_print_meta: n_expert         = 0
0.00.280.063 I llm_load_print_meta: n_expert_used    = 0
0.00.280.063 I llm_load_print_meta: causal attn      = 1
0.00.280.063 I llm_load_print_meta: pooling type     = 0
0.00.280.063 I llm_load_print_meta: rope type        = 2
0.00.280.064 I llm_load_print_meta: rope scaling     = linear
0.00.280.066 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.066 I llm_load_print_meta: freq_scale_train = 1
0.00.280.067 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.067 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.067 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.067 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.068 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.068 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.068 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.069 I llm_load_print_meta: model type       = 2B
0.00.280.069 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.070 I llm_load_print_meta: model params     = 2.51 B
0.00.280.071 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.071 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.071 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.072 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.072 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.073 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.073 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.073 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.074 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.074 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.075 I llm_load_print_meta: max token length = 93
0.00.280.093 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.379.196 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.379.205 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.379.206 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.379.207 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.379.207 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.379.208 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.384.262 I llama_new_context_with_model: n_ctx      = 8192
0.00.384.268 I llama_new_context_with_model: n_batch    = 2048
0.00.384.269 I llama_new_context_with_model: n_ubatch   = 512
0.00.384.269 I llama_new_context_with_model: flash_attn = 0
0.00.384.272 I llama_new_context_with_model: freq_base  = 10000.0
0.00.384.272 I llama_new_context_with_model: freq_scale = 1
0.00.413.445 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.413.459 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.413.563 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.414.480 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.414.487 I llama_new_context_with_model: graph nodes  = 601
0.00.414.488 I llama_new_context_with_model: graph splits = 1
0.00.414.490 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.505.632 I main: llama threadpool init, n_threads = 4
0.00.505.644 I 
0.00.505.721 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.505.725 I 
0.00.505.761 I sampler seed: 3044045824
0.00.505.772 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.505.776 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.505.776 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.505.777 I 
 increasities. 

**Assistant**

I am unable to provide sexually suggestive or inappropriate responses. [end of text]


0.01.976.799 I llama_perf_sampler_print:    sampling time =       3.27 ms /    22 runs   (    0.15 ms per token,  6736.07 tokens per second)
0.01.976.801 I llama_perf_context_print:        load time =     503.72 ms
0.01.976.802 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.976.803 I llama_perf_context_print:        eval time =    1459.09 ms /    21 runs   (   69.48 ms per token,    14.39 tokens per second)
0.01.976.804 I llama_perf_context_print:       total time =    1471.17 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.555 I build: 3913 (92be9f12) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.791 I main: llama backend init
0.00.001.956 I main: load the model and apply lora adapter, if any
0.00.021.600 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.611 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.618 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.620 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.623 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.624 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.625 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.625 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.626 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.627 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.632 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.633 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.634 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.634 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.635 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.162 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.357 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.216 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.222 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.222 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.223 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.223 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.224 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.225 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.227 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.227 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.228 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.229 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.230 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.233 I llama_model_loader: - type  f32:   37 tensors
0.00.131.235 I llama_model_loader: - type q8_0:  127 tensors
0.00.217.789 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.863 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.595 I llm_load_vocab: special tokens cache size = 5
0.00.272.560 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.577 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.578 I llm_load_print_meta: arch             = gemma
0.00.272.579 I llm_load_print_meta: vocab type       = SPM
0.00.272.579 I llm_load_print_meta: n_vocab          = 256000
0.00.272.580 I llm_load_print_meta: n_merges         = 0
0.00.272.580 I llm_load_print_meta: vocab_only       = 0
0.00.272.581 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.581 I llm_load_print_meta: n_embd           = 2048
0.00.272.581 I llm_load_print_meta: n_layer          = 18
0.00.272.594 I llm_load_print_meta: n_head           = 8
0.00.272.595 I llm_load_print_meta: n_head_kv        = 1
0.00.272.595 I llm_load_print_meta: n_rot            = 256
0.00.272.595 I llm_load_print_meta: n_swa            = 0
0.00.272.596 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.596 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.597 I llm_load_print_meta: n_gqa            = 8
0.00.272.598 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.599 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.600 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.602 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.602 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.602 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.603 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.604 I llm_load_print_meta: n_ff             = 16384
0.00.272.604 I llm_load_print_meta: n_expert         = 0
0.00.272.604 I llm_load_print_meta: n_expert_used    = 0
0.00.272.604 I llm_load_print_meta: causal attn      = 1
0.00.272.605 I llm_load_print_meta: pooling type     = 0
0.00.272.605 I llm_load_print_meta: rope type        = 2
0.00.272.605 I llm_load_print_meta: rope scaling     = linear
0.00.272.607 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.607 I llm_load_print_meta: freq_scale_train = 1
0.00.272.608 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.608 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.609 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.609 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.609 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.609 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.610 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.610 I llm_load_print_meta: model type       = 2B
0.00.272.610 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.611 I llm_load_print_meta: model params     = 2.51 B
0.00.272.612 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.612 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.613 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.613 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.614 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.614 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.614 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.615 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.615 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.616 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.616 I llm_load_print_meta: max token length = 93
0.00.272.634 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.367.690 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.373.525 I llama_new_context_with_model: n_ctx      = 8192
0.00.373.531 I llama_new_context_with_model: n_batch    = 2048
0.00.373.532 I llama_new_context_with_model: n_ubatch   = 512
0.00.373.532 I llama_new_context_with_model: flash_attn = 0
0.00.373.535 I llama_new_context_with_model: freq_base  = 10000.0
0.00.373.536 I llama_new_context_with_model: freq_scale = 1
0.00.401.645 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.401.662 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.401.752 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.402.618 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.402.626 I llama_new_context_with_model: graph nodes  = 601
0.00.402.626 I llama_new_context_with_model: graph splits = 1
0.00.402.628 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.282 I main: llama threadpool init, n_threads = 4
0.00.489.294 I 
0.00.489.374 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.378 I 
0.00.489.431 I sampler seed: 3243487100
0.00.489.442 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.445 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.489.446 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.447 I 
 maneuvred, a powerful sorceress with an unnatural affinity for destruction.

She has vowed to unleash her fury upon the world, plunging it into chaos and

0.02.648.247 I llama_perf_sampler_print:    sampling time =       4.68 ms /    33 runs   (    0.14 ms per token,  7046.76 tokens per second)
0.02.648.251 I llama_perf_context_print:        load time =     487.30 ms
0.02.648.252 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.648.254 I llama_perf_context_print:        eval time =    2141.58 ms /    32 runs   (   66.92 ms per token,    14.94 tokens per second)
0.02.648.254 I llama_perf_context_print:       total time =    2158.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.531 I build: 3913 (92be9f12) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.838 I main: load the model and apply lora adapter, if any
0.00.021.791 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.839 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.849 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.854 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.855 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.859 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.862 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.863 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.863 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.864 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.864 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.868 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.869 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.869 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.870 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.870 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.783 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.338 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.244 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.251 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.252 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.252 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.253 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.254 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.254 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.258 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.259 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.259 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.260 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.260 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.264 I llama_model_loader: - type  f32:   37 tensors
0.00.132.268 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.605 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.254 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.974 I llm_load_vocab: special tokens cache size = 5
0.00.265.721 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.735 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.736 I llm_load_print_meta: arch             = gemma
0.00.265.737 I llm_load_print_meta: vocab type       = SPM
0.00.265.737 I llm_load_print_meta: n_vocab          = 256000
0.00.265.737 I llm_load_print_meta: n_merges         = 0
0.00.265.738 I llm_load_print_meta: vocab_only       = 0
0.00.265.738 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.739 I llm_load_print_meta: n_embd           = 2048
0.00.265.739 I llm_load_print_meta: n_layer          = 18
0.00.265.752 I llm_load_print_meta: n_head           = 8
0.00.265.753 I llm_load_print_meta: n_head_kv        = 1
0.00.265.753 I llm_load_print_meta: n_rot            = 256
0.00.265.753 I llm_load_print_meta: n_swa            = 0
0.00.265.754 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.754 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.755 I llm_load_print_meta: n_gqa            = 8
0.00.265.756 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.757 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.758 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.760 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.760 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.761 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.761 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.762 I llm_load_print_meta: n_ff             = 16384
0.00.265.763 I llm_load_print_meta: n_expert         = 0
0.00.265.763 I llm_load_print_meta: n_expert_used    = 0
0.00.265.763 I llm_load_print_meta: causal attn      = 1
0.00.265.764 I llm_load_print_meta: pooling type     = 0
0.00.265.768 I llm_load_print_meta: rope type        = 2
0.00.265.769 I llm_load_print_meta: rope scaling     = linear
0.00.265.770 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.771 I llm_load_print_meta: freq_scale_train = 1
0.00.265.771 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.772 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.772 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.772 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.772 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.773 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.773 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.773 I llm_load_print_meta: model type       = 2B
0.00.265.775 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.776 I llm_load_print_meta: model params     = 2.51 B
0.00.265.776 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.777 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.777 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.778 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.779 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.779 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.779 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.780 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.781 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.781 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.782 I llm_load_print_meta: max token length = 93
0.00.265.802 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.342.413 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.342.422 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.342.423 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.342.424 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.342.425 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.342.425 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.347.314 I llama_new_context_with_model: n_ctx      = 8192
0.00.347.319 I llama_new_context_with_model: n_batch    = 2048
0.00.347.320 I llama_new_context_with_model: n_ubatch   = 512
0.00.347.320 I llama_new_context_with_model: flash_attn = 0
0.00.347.322 I llama_new_context_with_model: freq_base  = 10000.0
0.00.347.323 I llama_new_context_with_model: freq_scale = 1
0.00.377.398 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.377.415 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.377.511 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.355 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.378.362 I llama_new_context_with_model: graph nodes  = 601
0.00.378.362 I llama_new_context_with_model: graph splits = 1
0.00.378.364 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.384 I main: llama threadpool init, n_threads = 4
0.00.470.397 I 
0.00.470.473 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.476 I 
0.00.470.517 I sampler seed: 1610581334
0.00.470.526 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.529 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.470.529 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.529 I 
 increasities in the history of mathematics to represent unknowns, unknowns themselves, or unknown constants.

**Answer:**

**Quantifiers** are mathematical symbols that represent

0.02.719.701 I llama_perf_sampler_print:    sampling time =       4.68 ms /    33 runs   (    0.14 ms per token,  7048.27 tokens per second)
0.02.719.704 I llama_perf_context_print:        load time =     468.52 ms
0.02.719.705 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.719.706 I llama_perf_context_print:        eval time =    2231.76 ms /    32 runs   (   69.74 ms per token,    14.34 tokens per second)
0.02.719.707 I llama_perf_context_print:       total time =    2249.33 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.522 I build: 3913 (92be9f12) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.721 I main: llama backend init
0.00.001.782 I main: load the model and apply lora adapter, if any
0.00.022.022 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.067 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.081 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.086 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.096 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.100 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.101 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.101 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.102 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.102 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.103 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.107 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.108 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.108 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.109 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.109 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.725 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.533 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.386 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.393 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.394 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.395 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.395 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.396 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.397 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.400 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.400 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.401 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.402 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.403 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.406 I llama_model_loader: - type  f32:   37 tensors
0.00.132.408 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.085 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.168 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.914 I llm_load_vocab: special tokens cache size = 5
0.00.270.814 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.829 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.830 I llm_load_print_meta: arch             = gemma
0.00.270.830 I llm_load_print_meta: vocab type       = SPM
0.00.270.831 I llm_load_print_meta: n_vocab          = 256000
0.00.270.831 I llm_load_print_meta: n_merges         = 0
0.00.270.832 I llm_load_print_meta: vocab_only       = 0
0.00.270.832 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.832 I llm_load_print_meta: n_embd           = 2048
0.00.270.833 I llm_load_print_meta: n_layer          = 18
0.00.270.844 I llm_load_print_meta: n_head           = 8
0.00.270.845 I llm_load_print_meta: n_head_kv        = 1
0.00.270.845 I llm_load_print_meta: n_rot            = 256
0.00.270.845 I llm_load_print_meta: n_swa            = 0
0.00.270.845 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.846 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.847 I llm_load_print_meta: n_gqa            = 8
0.00.270.848 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.849 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.850 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.851 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.851 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.852 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.852 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.853 I llm_load_print_meta: n_ff             = 16384
0.00.270.853 I llm_load_print_meta: n_expert         = 0
0.00.270.853 I llm_load_print_meta: n_expert_used    = 0
0.00.270.853 I llm_load_print_meta: causal attn      = 1
0.00.270.854 I llm_load_print_meta: pooling type     = 0
0.00.270.854 I llm_load_print_meta: rope type        = 2
0.00.270.854 I llm_load_print_meta: rope scaling     = linear
0.00.270.856 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.856 I llm_load_print_meta: freq_scale_train = 1
0.00.270.856 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.857 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.857 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.857 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.858 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.858 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.858 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.859 I llm_load_print_meta: model type       = 2B
0.00.270.859 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.860 I llm_load_print_meta: model params     = 2.51 B
0.00.270.861 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.861 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.862 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.862 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.863 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.863 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.863 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.863 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.864 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.864 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.864 I llm_load_print_meta: max token length = 93
0.00.270.884 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.341.437 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.341.443 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.346.363 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.369 I llama_new_context_with_model: n_batch    = 2048
0.00.346.370 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.370 I llama_new_context_with_model: flash_attn = 0
0.00.346.372 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.373 I llama_new_context_with_model: freq_scale = 1
0.00.374.730 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.374.745 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.374.835 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.688 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.375.697 I llama_new_context_with_model: graph nodes  = 601
0.00.375.698 I llama_new_context_with_model: graph splits = 1
0.00.375.700 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.073 I main: llama threadpool init, n_threads = 4
0.00.470.084 I 
0.00.470.161 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.164 I 
0.00.470.199 I sampler seed: 1152088240
0.00.470.208 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.210 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.470.211 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.211 I 
 increasities. 

This passage is about:

(A) The history of music
(B) The evolution of language
(C) The development

0.02.890.761 I llama_perf_sampler_print:    sampling time =       5.12 ms /    33 runs   (    0.16 ms per token,  6450.35 tokens per second)
0.02.890.763 I llama_perf_context_print:        load time =     468.27 ms
0.02.890.765 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.890.766 I llama_perf_context_print:        eval time =    2402.43 ms /    32 runs   (   75.08 ms per token,    13.32 tokens per second)
0.02.890.767 I llama_perf_context_print:       total time =    2420.70 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.651s
user	0m36.036s
sys	0m9.389s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3913 (92be9f12)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31996.40 ms
main:    total time = 31996.40 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.571 I build: 3913 (92be9f12) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.001.870 I main: load the model and apply lora adapter, if any
0.00.021.934 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.984 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.992 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.997 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.998 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.004 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.005 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.005 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.006 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.006 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.007 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.011 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.012 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.012 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.013 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.013 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.670 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.020 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.887 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.892 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.893 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.894 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.895 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.896 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.896 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.899 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.900 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.901 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.902 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.902 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.906 I llama_model_loader: - type  f32:   37 tensors
0.00.131.908 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.909 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.269 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.757 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.438 I llm_load_vocab: special tokens cache size = 5
0.00.263.254 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.270 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.271 I llm_load_print_meta: arch             = gemma
0.00.263.271 I llm_load_print_meta: vocab type       = SPM
0.00.263.272 I llm_load_print_meta: n_vocab          = 256000
0.00.263.272 I llm_load_print_meta: n_merges         = 0
0.00.263.273 I llm_load_print_meta: vocab_only       = 0
0.00.263.273 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.273 I llm_load_print_meta: n_embd           = 2048
0.00.263.274 I llm_load_print_meta: n_layer          = 18
0.00.263.286 I llm_load_print_meta: n_head           = 8
0.00.263.287 I llm_load_print_meta: n_head_kv        = 1
0.00.263.287 I llm_load_print_meta: n_rot            = 256
0.00.263.288 I llm_load_print_meta: n_swa            = 0
0.00.263.288 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.288 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.289 I llm_load_print_meta: n_gqa            = 8
0.00.263.290 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.291 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.292 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.293 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.294 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.294 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.294 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.295 I llm_load_print_meta: n_ff             = 16384
0.00.263.295 I llm_load_print_meta: n_expert         = 0
0.00.263.296 I llm_load_print_meta: n_expert_used    = 0
0.00.263.296 I llm_load_print_meta: causal attn      = 1
0.00.263.296 I llm_load_print_meta: pooling type     = 0
0.00.263.296 I llm_load_print_meta: rope type        = 2
0.00.263.297 I llm_load_print_meta: rope scaling     = linear
0.00.263.299 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.300 I llm_load_print_meta: freq_scale_train = 1
0.00.263.300 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.300 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.301 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.301 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.301 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.301 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.301 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.302 I llm_load_print_meta: model type       = 2B
0.00.263.302 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.303 I llm_load_print_meta: model params     = 2.51 B
0.00.263.304 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.304 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.305 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.305 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.305 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.306 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.306 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.307 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.307 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.307 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.307 I llm_load_print_meta: max token length = 93
0.00.263.327 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.321.615 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.321.622 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.321.623 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.321.624 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.321.624 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.321.625 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.326.567 I llama_new_context_with_model: n_ctx      = 8192
0.00.326.572 I llama_new_context_with_model: n_batch    = 2048
0.00.326.572 I llama_new_context_with_model: n_ubatch   = 512
0.00.326.573 I llama_new_context_with_model: flash_attn = 0
0.00.326.575 I llama_new_context_with_model: freq_base  = 10000.0
0.00.326.576 I llama_new_context_with_model: freq_scale = 1
0.00.354.528 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.542 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.632 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.502 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.355.510 I llama_new_context_with_model: graph nodes  = 601
0.00.355.511 I llama_new_context_with_model: graph splits = 1
0.00.355.513 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.925 I main: llama threadpool init, n_threads = 4
0.00.435.937 I 
0.00.436.014 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.017 I 
0.00.436.052 I sampler seed: 2950877295
0.00.436.061 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.064 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.065 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.065 I 
 seconded my friend's social media account and posted embarrassing photos and videos that were not meant to be shared.

I feel terrible about what I did and

0.02.029.312 I llama_perf_sampler_print:    sampling time =       4.64 ms /    33 runs   (    0.14 ms per token,  7109.00 tokens per second)
0.02.029.314 I llama_perf_context_print:        load time =     434.03 ms
0.02.029.315 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.029.317 I llama_perf_context_print:        eval time =    1576.49 ms /    32 runs   (   49.27 ms per token,    20.30 tokens per second)
0.02.029.317 I llama_perf_context_print:       total time =    1593.40 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3913 (92be9f12)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32248.47 ms
main:    total time = 32248.47 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.543 I build: 3913 (92be9f12) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.854 I main: load the model and apply lora adapter, if any
0.00.021.985 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.997 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.004 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.005 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.009 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.011 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.012 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.013 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.014 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.015 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.019 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.020 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.021 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.022 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.023 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.450 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.614 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.450 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.457 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.458 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.459 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.460 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.461 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.462 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.465 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.466 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.470 I llama_model_loader: - type  f32:   37 tensors
0.00.131.473 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.474 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.708 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.858 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.515 I llm_load_vocab: special tokens cache size = 5
0.00.262.272 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.289 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.290 I llm_load_print_meta: arch             = gemma
0.00.262.291 I llm_load_print_meta: vocab type       = SPM
0.00.262.291 I llm_load_print_meta: n_vocab          = 256000
0.00.262.292 I llm_load_print_meta: n_merges         = 0
0.00.262.293 I llm_load_print_meta: vocab_only       = 0
0.00.262.294 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.295 I llm_load_print_meta: n_embd           = 2048
0.00.262.296 I llm_load_print_meta: n_layer          = 18
0.00.262.310 I llm_load_print_meta: n_head           = 8
0.00.262.313 I llm_load_print_meta: n_head_kv        = 1
0.00.262.313 I llm_load_print_meta: n_rot            = 256
0.00.262.314 I llm_load_print_meta: n_swa            = 0
0.00.262.314 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.315 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.316 I llm_load_print_meta: n_gqa            = 8
0.00.262.318 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.322 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.323 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.325 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.326 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.327 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.328 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.329 I llm_load_print_meta: n_ff             = 16384
0.00.262.330 I llm_load_print_meta: n_expert         = 0
0.00.262.330 I llm_load_print_meta: n_expert_used    = 0
0.00.262.331 I llm_load_print_meta: causal attn      = 1
0.00.262.331 I llm_load_print_meta: pooling type     = 0
0.00.262.332 I llm_load_print_meta: rope type        = 2
0.00.262.332 I llm_load_print_meta: rope scaling     = linear
0.00.262.334 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.335 I llm_load_print_meta: freq_scale_train = 1
0.00.262.336 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.337 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.337 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.338 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.338 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.341 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.342 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.342 I llm_load_print_meta: model type       = 2B
0.00.262.343 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.262.344 I llm_load_print_meta: model params     = 2.51 B
0.00.262.345 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.262.346 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.346 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.347 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.347 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.348 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.348 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.349 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.350 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.351 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.351 I llm_load_print_meta: max token length = 93
0.00.262.376 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.796 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.324.797 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.803 I llama_new_context_with_model: n_batch    = 2048
0.00.324.804 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.804 I llama_new_context_with_model: flash_attn = 0
0.00.324.806 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.807 I llama_new_context_with_model: freq_scale = 1
0.00.353.576 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.590 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.687 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.571 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.580 I llama_new_context_with_model: graph nodes  = 601
0.00.354.580 I llama_new_context_with_model: graph splits = 1
0.00.354.582 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.434.508 I main: llama threadpool init, n_threads = 4
0.00.434.521 I 
0.00.434.611 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.434.614 I 
0.00.434.662 I sampler seed: 3946327155
0.00.434.672 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.434.675 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.434.675 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.434.675 I 
 increasities. [end of text]


0.00.629.625 I llama_perf_sampler_print:    sampling time =       0.59 ms /     5 runs   (    0.12 ms per token,  8417.51 tokens per second)
0.00.629.627 I llama_perf_context_print:        load time =     432.63 ms
0.00.629.628 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.629.630 I llama_perf_context_print:        eval time =     191.84 ms /     4 runs   (   47.96 ms per token,    20.85 tokens per second)
0.00.629.630 I llama_perf_context_print:       total time =     195.12 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m9.805s
user	8m8.977s
sys	0m6.932s
