+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.649 I build: 4262 (92e54fb8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.000.855 I main: load the model and apply lora adapter, if any
0.00.023.638 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.649 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.739 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.751 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.753 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.760 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.764 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.765 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.766 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.768 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.769 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.779 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.782 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.783 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.785 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.794 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.558 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.805 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.853 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.861 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.862 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.863 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.865 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.866 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.868 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.871 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.872 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.874 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.875 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.349.877 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.887 I llama_model_loader: - type  f32:   37 tensors
0.00.349.889 I llama_model_loader: - type q8_0:  127 tensors
0.00.613.960 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.740.891 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.741.927 I llm_load_vocab: special tokens cache size = 5
0.00.930.326 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.930.400 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.930.401 I llm_load_print_meta: arch             = gemma
0.00.930.402 I llm_load_print_meta: vocab type       = SPM
0.00.930.403 I llm_load_print_meta: n_vocab          = 256000
0.00.930.405 I llm_load_print_meta: n_merges         = 0
0.00.930.406 I llm_load_print_meta: vocab_only       = 0
0.00.930.406 I llm_load_print_meta: n_ctx_train      = 8192
0.00.930.407 I llm_load_print_meta: n_embd           = 2048
0.00.930.407 I llm_load_print_meta: n_layer          = 18
0.00.930.473 I llm_load_print_meta: n_head           = 8
0.00.930.480 I llm_load_print_meta: n_head_kv        = 1
0.00.930.481 I llm_load_print_meta: n_rot            = 256
0.00.930.482 I llm_load_print_meta: n_swa            = 0
0.00.930.482 I llm_load_print_meta: n_embd_head_k    = 256
0.00.930.482 I llm_load_print_meta: n_embd_head_v    = 256
0.00.930.487 I llm_load_print_meta: n_gqa            = 8
0.00.930.492 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.930.497 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.930.499 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.930.501 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.930.502 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.930.503 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.930.503 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.930.519 I llm_load_print_meta: n_ff             = 16384
0.00.930.520 I llm_load_print_meta: n_expert         = 0
0.00.930.520 I llm_load_print_meta: n_expert_used    = 0
0.00.930.520 I llm_load_print_meta: causal attn      = 1
0.00.930.521 I llm_load_print_meta: pooling type     = 0
0.00.930.521 I llm_load_print_meta: rope type        = 2
0.00.930.521 I llm_load_print_meta: rope scaling     = linear
0.00.930.523 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.930.524 I llm_load_print_meta: freq_scale_train = 1
0.00.930.524 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.930.525 I llm_load_print_meta: rope_finetuned   = unknown
0.00.930.526 I llm_load_print_meta: ssm_d_conv       = 0
0.00.930.526 I llm_load_print_meta: ssm_d_inner      = 0
0.00.930.527 I llm_load_print_meta: ssm_d_state      = 0
0.00.930.527 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.930.528 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.930.528 I llm_load_print_meta: model type       = 2B
0.00.930.529 I llm_load_print_meta: model ftype      = Q8_0
0.00.930.530 I llm_load_print_meta: model params     = 2.51 B
0.00.930.531 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.930.532 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.930.533 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.930.533 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.930.534 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.930.535 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.930.535 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.930.536 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.930.543 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.930.544 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.930.545 I llm_load_print_meta: max token length = 93
0.01.034.794 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.01.034.801 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.01.034.802 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.01.034.803 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.01.034.804 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.01.034.804 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.01.040.744 I llama_new_context_with_model: n_seq_max     = 1
0.01.040.751 I llama_new_context_with_model: n_ctx         = 4096
0.01.040.752 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.040.752 I llama_new_context_with_model: n_batch       = 2048
0.01.040.753 I llama_new_context_with_model: n_ubatch      = 512
0.01.040.753 I llama_new_context_with_model: flash_attn    = 0
0.01.040.756 I llama_new_context_with_model: freq_base     = 10000.0
0.01.040.757 I llama_new_context_with_model: freq_scale    = 1
0.01.040.758 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.055.614 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.055.653 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.055.769 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.058.349 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.058.353 I llama_new_context_with_model: graph nodes  = 601
0.01.058.354 I llama_new_context_with_model: graph splits = 1
0.01.058.377 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.669.631 I main: llama threadpool init, n_threads = 4
0.01.669.647 I 
0.01.669.769 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.669.773 I 
0.01.670.011 I sampler seed: 523535161
0.01.670.024 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.670.034 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.670.037 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.670.037 I 
 increasities.

I cannot answer the question as it contains sexually suggestive and inappropriate content. [end of text]


0.09.736.674 I llama_perf_sampler_print:    sampling time =      29.34 ms /    20 runs   (    1.47 ms per token,   681.69 tokens per second)
0.09.736.677 I llama_perf_context_print:        load time =    1668.67 ms
0.09.736.679 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.736.707 I llama_perf_context_print:        eval time =    8013.12 ms /    19 runs   (  421.74 ms per token,     2.37 tokens per second)
0.09.736.709 I llama_perf_context_print:       total time =    8067.05 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.618 I build: 4262 (92e54fb8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.805 I main: llama backend init
0.00.000.812 I main: load the model and apply lora adapter, if any
0.00.023.200 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.292 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.306 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.307 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.313 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.318 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.319 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.320 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.322 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.325 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.334 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.336 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.337 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.338 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.339 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.226.493 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.328.561 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.351.720 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.351.730 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.351.732 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.351.733 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.351.734 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.351.736 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.351.737 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.351.741 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.351.743 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.351.744 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.351.745 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.351.747 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.351.758 I llama_model_loader: - type  f32:   37 tensors
0.00.351.761 I llama_model_loader: - type q8_0:  127 tensors
0.00.612.870 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.743.029 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.744.113 I llm_load_vocab: special tokens cache size = 5
0.00.935.466 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.935.538 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.935.539 I llm_load_print_meta: arch             = gemma
0.00.935.540 I llm_load_print_meta: vocab type       = SPM
0.00.935.541 I llm_load_print_meta: n_vocab          = 256000
0.00.935.543 I llm_load_print_meta: n_merges         = 0
0.00.935.544 I llm_load_print_meta: vocab_only       = 0
0.00.935.544 I llm_load_print_meta: n_ctx_train      = 8192
0.00.935.544 I llm_load_print_meta: n_embd           = 2048
0.00.935.545 I llm_load_print_meta: n_layer          = 18
0.00.935.608 I llm_load_print_meta: n_head           = 8
0.00.935.615 I llm_load_print_meta: n_head_kv        = 1
0.00.935.616 I llm_load_print_meta: n_rot            = 256
0.00.935.616 I llm_load_print_meta: n_swa            = 0
0.00.935.617 I llm_load_print_meta: n_embd_head_k    = 256
0.00.935.617 I llm_load_print_meta: n_embd_head_v    = 256
0.00.935.621 I llm_load_print_meta: n_gqa            = 8
0.00.935.626 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.935.631 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.935.633 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.935.634 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.935.635 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.935.635 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.935.636 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.935.642 I llm_load_print_meta: n_ff             = 16384
0.00.935.643 I llm_load_print_meta: n_expert         = 0
0.00.935.643 I llm_load_print_meta: n_expert_used    = 0
0.00.935.652 I llm_load_print_meta: causal attn      = 1
0.00.935.653 I llm_load_print_meta: pooling type     = 0
0.00.935.654 I llm_load_print_meta: rope type        = 2
0.00.935.654 I llm_load_print_meta: rope scaling     = linear
0.00.935.656 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.935.657 I llm_load_print_meta: freq_scale_train = 1
0.00.935.661 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.935.661 I llm_load_print_meta: rope_finetuned   = unknown
0.00.935.662 I llm_load_print_meta: ssm_d_conv       = 0
0.00.935.662 I llm_load_print_meta: ssm_d_inner      = 0
0.00.935.663 I llm_load_print_meta: ssm_d_state      = 0
0.00.935.675 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.935.676 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.935.677 I llm_load_print_meta: model type       = 2B
0.00.935.678 I llm_load_print_meta: model ftype      = Q8_0
0.00.935.679 I llm_load_print_meta: model params     = 2.51 B
0.00.935.683 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.935.684 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.935.685 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.935.685 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.935.686 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.935.686 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.935.686 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.935.687 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.935.693 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.935.695 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.935.695 I llm_load_print_meta: max token length = 93
0.01.032.664 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.01.038.483 I llama_new_context_with_model: n_seq_max     = 1
0.01.038.490 I llama_new_context_with_model: n_ctx         = 4096
0.01.038.490 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.038.491 I llama_new_context_with_model: n_batch       = 2048
0.01.038.491 I llama_new_context_with_model: n_ubatch      = 512
0.01.038.492 I llama_new_context_with_model: flash_attn    = 0
0.01.038.495 I llama_new_context_with_model: freq_base     = 10000.0
0.01.038.496 I llama_new_context_with_model: freq_scale    = 1
0.01.038.496 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.053.289 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.053.329 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.053.448 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.056.010 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.056.014 I llama_new_context_with_model: graph nodes  = 601
0.01.056.014 I llama_new_context_with_model: graph splits = 1
0.01.056.038 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.667.394 I main: llama threadpool init, n_threads = 4
0.01.667.407 I 
0.01.667.529 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.667.533 I 
0.01.667.767 I sampler seed: 236237282
0.01.667.782 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.667.791 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.667.795 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.667.795 I 
 increasities,
And the love of her life,
He who speaks with gentle words and eyes full of care.

Who is the woman?

A

0.15.369.733 I llama_perf_sampler_print:    sampling time =      49.24 ms /    33 runs   (    1.49 ms per token,   670.21 tokens per second)
0.15.369.736 I llama_perf_context_print:        load time =    1666.48 ms
0.15.369.738 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.369.740 I llama_perf_context_print:        eval time =   13612.40 ms /    32 runs   (  425.39 ms per token,     2.35 tokens per second)
0.15.369.742 I llama_perf_context_print:       total time =   13702.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.654 I build: 4262 (92e54fb8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.844 I main: llama backend init
0.00.000.852 I main: load the model and apply lora adapter, if any
0.00.023.490 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.500 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.593 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.604 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.606 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.613 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.617 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.619 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.620 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.621 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.623 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.633 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.635 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.637 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.638 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.646 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.225.207 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.327.959 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.351.230 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.351.243 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.351.245 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.351.246 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.351.248 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.351.249 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.351.250 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.351.254 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.351.255 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.351.257 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.351.258 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.351.260 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.351.270 I llama_model_loader: - type  f32:   37 tensors
0.00.351.272 I llama_model_loader: - type q8_0:  127 tensors
0.00.632.446 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.762.123 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.763.116 I llm_load_vocab: special tokens cache size = 5
0.00.957.838 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.957.908 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.957.912 I llm_load_print_meta: arch             = gemma
0.00.957.913 I llm_load_print_meta: vocab type       = SPM
0.00.957.914 I llm_load_print_meta: n_vocab          = 256000
0.00.957.916 I llm_load_print_meta: n_merges         = 0
0.00.957.917 I llm_load_print_meta: vocab_only       = 0
0.00.957.917 I llm_load_print_meta: n_ctx_train      = 8192
0.00.957.917 I llm_load_print_meta: n_embd           = 2048
0.00.957.918 I llm_load_print_meta: n_layer          = 18
0.00.957.983 I llm_load_print_meta: n_head           = 8
0.00.957.993 I llm_load_print_meta: n_head_kv        = 1
0.00.957.993 I llm_load_print_meta: n_rot            = 256
0.00.957.994 I llm_load_print_meta: n_swa            = 0
0.00.957.994 I llm_load_print_meta: n_embd_head_k    = 256
0.00.957.994 I llm_load_print_meta: n_embd_head_v    = 256
0.00.957.999 I llm_load_print_meta: n_gqa            = 8
0.00.958.004 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.958.009 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.958.011 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.958.013 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.958.013 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.958.015 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.958.015 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.958.020 I llm_load_print_meta: n_ff             = 16384
0.00.958.021 I llm_load_print_meta: n_expert         = 0
0.00.958.021 I llm_load_print_meta: n_expert_used    = 0
0.00.958.021 I llm_load_print_meta: causal attn      = 1
0.00.958.022 I llm_load_print_meta: pooling type     = 0
0.00.958.022 I llm_load_print_meta: rope type        = 2
0.00.958.022 I llm_load_print_meta: rope scaling     = linear
0.00.958.024 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.958.024 I llm_load_print_meta: freq_scale_train = 1
0.00.958.025 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.958.025 I llm_load_print_meta: rope_finetuned   = unknown
0.00.958.028 I llm_load_print_meta: ssm_d_conv       = 0
0.00.958.028 I llm_load_print_meta: ssm_d_inner      = 0
0.00.958.029 I llm_load_print_meta: ssm_d_state      = 0
0.00.958.029 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.958.029 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.958.030 I llm_load_print_meta: model type       = 2B
0.00.958.031 I llm_load_print_meta: model ftype      = Q8_0
0.00.958.032 I llm_load_print_meta: model params     = 2.51 B
0.00.958.032 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.958.033 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.958.033 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.958.035 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.958.036 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.958.036 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.958.036 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.958.037 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.958.042 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.958.044 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.958.044 I llm_load_print_meta: max token length = 93
0.01.035.128 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.01.035.139 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.01.035.140 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.01.035.140 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.01.035.141 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.01.035.142 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.01.042.023 I llama_new_context_with_model: n_seq_max     = 1
0.01.042.030 I llama_new_context_with_model: n_ctx         = 4096
0.01.042.030 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.042.030 I llama_new_context_with_model: n_batch       = 2048
0.01.042.031 I llama_new_context_with_model: n_ubatch      = 512
0.01.042.031 I llama_new_context_with_model: flash_attn    = 0
0.01.042.034 I llama_new_context_with_model: freq_base     = 10000.0
0.01.042.035 I llama_new_context_with_model: freq_scale    = 1
0.01.042.035 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.056.832 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.056.877 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.056.995 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.059.568 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.059.572 I llama_new_context_with_model: graph nodes  = 601
0.01.059.572 I llama_new_context_with_model: graph splits = 1
0.01.059.596 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.668.342 I main: llama threadpool init, n_threads = 4
0.01.668.358 I 
0.01.668.476 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.668.479 I 
0.01.668.716 I sampler seed: 3400298094
0.01.668.730 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.668.739 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.668.740 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.668.743 I 
 increasities, and the complexities of human interaction, all contribute to the richness and diversity of our lives.

What is the central message of the given text?

0.15.280.921 I llama_perf_sampler_print:    sampling time =      49.20 ms /    33 runs   (    1.49 ms per token,   670.69 tokens per second)
0.15.280.935 I llama_perf_context_print:        load time =    1667.39 ms
0.15.280.937 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.280.939 I llama_perf_context_print:        eval time =   13523.44 ms /    32 runs   (  422.61 ms per token,     2.37 tokens per second)
0.15.280.941 I llama_perf_context_print:       total time =   13612.59 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.651 I build: 4262 (92e54fb8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.858 I main: llama backend init
0.00.000.866 I main: load the model and apply lora adapter, if any
0.00.023.328 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.336 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.428 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.440 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.441 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.447 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.449 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.450 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.451 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.453 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.455 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.468 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.478 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.480 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.481 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.482 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.225.151 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.712 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.751 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.760 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.761 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.763 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.764 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.765 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.767 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.771 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.772 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.773 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.774 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.349.777 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.785 I llama_model_loader: - type  f32:   37 tensors
0.00.349.787 I llama_model_loader: - type q8_0:  127 tensors
0.00.622.369 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.752.322 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.753.350 I llm_load_vocab: special tokens cache size = 5
0.00.951.228 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.951.298 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.951.299 I llm_load_print_meta: arch             = gemma
0.00.951.300 I llm_load_print_meta: vocab type       = SPM
0.00.951.301 I llm_load_print_meta: n_vocab          = 256000
0.00.951.303 I llm_load_print_meta: n_merges         = 0
0.00.951.303 I llm_load_print_meta: vocab_only       = 0
0.00.951.304 I llm_load_print_meta: n_ctx_train      = 8192
0.00.951.304 I llm_load_print_meta: n_embd           = 2048
0.00.951.305 I llm_load_print_meta: n_layer          = 18
0.00.951.369 I llm_load_print_meta: n_head           = 8
0.00.951.377 I llm_load_print_meta: n_head_kv        = 1
0.00.951.377 I llm_load_print_meta: n_rot            = 256
0.00.951.378 I llm_load_print_meta: n_swa            = 0
0.00.951.378 I llm_load_print_meta: n_embd_head_k    = 256
0.00.951.378 I llm_load_print_meta: n_embd_head_v    = 256
0.00.951.383 I llm_load_print_meta: n_gqa            = 8
0.00.951.388 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.951.393 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.951.394 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.951.397 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.951.398 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.951.399 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.951.400 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.951.405 I llm_load_print_meta: n_ff             = 16384
0.00.951.405 I llm_load_print_meta: n_expert         = 0
0.00.951.417 I llm_load_print_meta: n_expert_used    = 0
0.00.951.417 I llm_load_print_meta: causal attn      = 1
0.00.951.418 I llm_load_print_meta: pooling type     = 0
0.00.951.418 I llm_load_print_meta: rope type        = 2
0.00.951.419 I llm_load_print_meta: rope scaling     = linear
0.00.951.421 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.951.422 I llm_load_print_meta: freq_scale_train = 1
0.00.951.423 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.951.423 I llm_load_print_meta: rope_finetuned   = unknown
0.00.951.423 I llm_load_print_meta: ssm_d_conv       = 0
0.00.951.424 I llm_load_print_meta: ssm_d_inner      = 0
0.00.951.424 I llm_load_print_meta: ssm_d_state      = 0
0.00.951.437 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.951.438 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.951.438 I llm_load_print_meta: model type       = 2B
0.00.951.439 I llm_load_print_meta: model ftype      = Q8_0
0.00.951.440 I llm_load_print_meta: model params     = 2.51 B
0.00.951.441 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.951.442 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.951.443 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.951.443 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.951.444 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.951.444 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.951.445 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.951.445 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.951.452 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.951.453 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.951.453 I llm_load_print_meta: max token length = 93
0.01.024.079 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.01.024.088 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.01.029.869 I llama_new_context_with_model: n_seq_max     = 1
0.01.029.876 I llama_new_context_with_model: n_ctx         = 4096
0.01.029.876 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.029.877 I llama_new_context_with_model: n_batch       = 2048
0.01.029.877 I llama_new_context_with_model: n_ubatch      = 512
0.01.029.878 I llama_new_context_with_model: flash_attn    = 0
0.01.029.880 I llama_new_context_with_model: freq_base     = 10000.0
0.01.029.881 I llama_new_context_with_model: freq_scale    = 1
0.01.029.882 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.044.511 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.044.553 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.044.679 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.047.344 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.047.347 I llama_new_context_with_model: graph nodes  = 601
0.01.047.348 I llama_new_context_with_model: graph splits = 1
0.01.047.371 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.661.843 I main: llama threadpool init, n_threads = 4
0.01.661.859 I 
0.01.661.983 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.661.987 I 
0.01.662.222 I sampler seed: 82771957
0.01.662.237 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.662.246 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.662.247 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.662.247 I 
 increably. [end of text]


0.03.366.212 I llama_perf_sampler_print:    sampling time =       6.24 ms /     5 runs   (    1.25 ms per token,   801.28 tokens per second)
0.03.366.216 I llama_perf_context_print:        load time =    1660.88 ms
0.03.366.218 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.366.220 I llama_perf_context_print:        eval time =    1691.37 ms /     4 runs   (  422.84 ms per token,     2.36 tokens per second)
0.03.366.221 I llama_perf_context_print:       total time =    1704.38 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m53.731s
user	2m42.415s
sys	0m9.400s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4262 (92e54fb8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186735.08 ms
main:    total time = 186735.08 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.633 I build: 4262 (92e54fb8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.846 I main: llama backend init
0.00.000.852 I main: load the model and apply lora adapter, if any
0.00.023.482 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.494 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.584 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.596 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.598 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.606 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.610 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.611 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.613 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.614 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.615 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.624 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.626 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.627 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.628 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.630 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.225.417 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.327.650 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.350.751 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.350.760 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.350.761 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.350.763 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.350.764 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.350.766 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.350.767 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.350.771 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.350.772 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.350.774 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.350.775 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.350.777 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.350.785 I llama_model_loader: - type  f32:   37 tensors
0.00.350.788 I llama_model_loader: - type q4_K:  108 tensors
0.00.350.789 I llama_model_loader: - type q6_K:   19 tensors
0.00.611.886 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.739.607 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.740.667 I llm_load_vocab: special tokens cache size = 5
0.00.932.311 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.932.384 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.932.385 I llm_load_print_meta: arch             = gemma
0.00.932.385 I llm_load_print_meta: vocab type       = SPM
0.00.932.387 I llm_load_print_meta: n_vocab          = 256000
0.00.932.389 I llm_load_print_meta: n_merges         = 0
0.00.932.389 I llm_load_print_meta: vocab_only       = 0
0.00.932.390 I llm_load_print_meta: n_ctx_train      = 8192
0.00.932.390 I llm_load_print_meta: n_embd           = 2048
0.00.932.390 I llm_load_print_meta: n_layer          = 18
0.00.932.455 I llm_load_print_meta: n_head           = 8
0.00.932.462 I llm_load_print_meta: n_head_kv        = 1
0.00.932.464 I llm_load_print_meta: n_rot            = 256
0.00.932.465 I llm_load_print_meta: n_swa            = 0
0.00.932.465 I llm_load_print_meta: n_embd_head_k    = 256
0.00.932.466 I llm_load_print_meta: n_embd_head_v    = 256
0.00.932.470 I llm_load_print_meta: n_gqa            = 8
0.00.932.475 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.932.480 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.932.481 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.932.490 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.932.494 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.932.495 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.932.495 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.932.500 I llm_load_print_meta: n_ff             = 16384
0.00.932.501 I llm_load_print_meta: n_expert         = 0
0.00.932.501 I llm_load_print_meta: n_expert_used    = 0
0.00.932.502 I llm_load_print_meta: causal attn      = 1
0.00.932.503 I llm_load_print_meta: pooling type     = 0
0.00.932.503 I llm_load_print_meta: rope type        = 2
0.00.932.503 I llm_load_print_meta: rope scaling     = linear
0.00.932.505 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.932.505 I llm_load_print_meta: freq_scale_train = 1
0.00.932.506 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.932.506 I llm_load_print_meta: rope_finetuned   = unknown
0.00.932.507 I llm_load_print_meta: ssm_d_conv       = 0
0.00.932.508 I llm_load_print_meta: ssm_d_inner      = 0
0.00.932.508 I llm_load_print_meta: ssm_d_state      = 0
0.00.932.508 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.932.508 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.932.509 I llm_load_print_meta: model type       = 2B
0.00.932.510 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.932.511 I llm_load_print_meta: model params     = 2.51 B
0.00.932.511 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.932.512 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.932.513 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.932.514 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.932.514 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.932.515 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.932.516 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.932.516 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.932.522 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.932.523 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.932.524 I llm_load_print_meta: max token length = 93
0.00.994.832 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.994.840 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.994.841 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.994.842 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.994.842 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.994.843 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.01.000.701 I llama_new_context_with_model: n_seq_max     = 1
0.01.000.708 I llama_new_context_with_model: n_ctx         = 4096
0.01.000.708 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.000.708 I llama_new_context_with_model: n_batch       = 2048
0.01.000.709 I llama_new_context_with_model: n_ubatch      = 512
0.01.000.709 I llama_new_context_with_model: flash_attn    = 0
0.01.000.711 I llama_new_context_with_model: freq_base     = 10000.0
0.01.000.712 I llama_new_context_with_model: freq_scale    = 1
0.01.000.712 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.015.187 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.015.227 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.015.341 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.017.873 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.017.877 I llama_new_context_with_model: graph nodes  = 601
0.01.017.878 I llama_new_context_with_model: graph splits = 1
0.01.017.901 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.606.051 I main: llama threadpool init, n_threads = 4
0.01.606.066 I 
0.01.606.187 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.606.191 I 
0.01.606.430 I sampler seed: 663990371
0.01.606.443 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.606.454 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.606.455 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.606.455 I 
 encompasses, and other creative solutions to help people manage their time.

**Creative Solutions for Time Management**

**1. Time Capsule Journal:**
-

0.12.763.526 I llama_perf_sampler_print:    sampling time =      49.22 ms /    33 runs   (    1.49 ms per token,   670.42 tokens per second)
0.12.763.529 I llama_perf_context_print:        load time =    1605.11 ms
0.12.763.531 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.763.556 I llama_perf_context_print:        eval time =   11068.70 ms /    32 runs   (  345.90 ms per token,     2.89 tokens per second)
0.12.763.558 I llama_perf_context_print:       total time =   11157.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4262 (92e54fb8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 187059.06 ms
main:    total time = 187059.06 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.630 I build: 4262 (92e54fb8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.828 I main: llama backend init
0.00.000.836 I main: load the model and apply lora adapter, if any
0.00.023.380 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.480 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.493 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.494 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.500 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.503 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.504 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.505 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.507 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.508 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.517 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.518 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.519 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.521 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.522 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.727 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.087 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.272 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.284 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.286 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.287 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.288 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.290 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.291 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.295 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.298 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.308 I llama_model_loader: - type  f32:   37 tensors
0.00.349.310 I llama_model_loader: - type q4_K:  108 tensors
0.00.349.310 I llama_model_loader: - type q6_K:   19 tensors
0.00.614.630 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.737.227 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.738.195 I llm_load_vocab: special tokens cache size = 5
0.00.948.711 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.948.783 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.948.784 I llm_load_print_meta: arch             = gemma
0.00.948.784 I llm_load_print_meta: vocab type       = SPM
0.00.948.785 I llm_load_print_meta: n_vocab          = 256000
0.00.948.788 I llm_load_print_meta: n_merges         = 0
0.00.948.788 I llm_load_print_meta: vocab_only       = 0
0.00.948.789 I llm_load_print_meta: n_ctx_train      = 8192
0.00.948.789 I llm_load_print_meta: n_embd           = 2048
0.00.948.789 I llm_load_print_meta: n_layer          = 18
0.00.948.854 I llm_load_print_meta: n_head           = 8
0.00.948.861 I llm_load_print_meta: n_head_kv        = 1
0.00.948.862 I llm_load_print_meta: n_rot            = 256
0.00.948.862 I llm_load_print_meta: n_swa            = 0
0.00.948.862 I llm_load_print_meta: n_embd_head_k    = 256
0.00.948.864 I llm_load_print_meta: n_embd_head_v    = 256
0.00.948.869 I llm_load_print_meta: n_gqa            = 8
0.00.948.874 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.948.879 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.948.880 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.948.882 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.948.883 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.948.883 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.948.884 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.948.890 I llm_load_print_meta: n_ff             = 16384
0.00.948.891 I llm_load_print_meta: n_expert         = 0
0.00.948.891 I llm_load_print_meta: n_expert_used    = 0
0.00.948.891 I llm_load_print_meta: causal attn      = 1
0.00.948.913 I llm_load_print_meta: pooling type     = 0
0.00.948.915 I llm_load_print_meta: rope type        = 2
0.00.948.915 I llm_load_print_meta: rope scaling     = linear
0.00.948.917 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.948.917 I llm_load_print_meta: freq_scale_train = 1
0.00.948.918 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.948.918 I llm_load_print_meta: rope_finetuned   = unknown
0.00.948.919 I llm_load_print_meta: ssm_d_conv       = 0
0.00.948.920 I llm_load_print_meta: ssm_d_inner      = 0
0.00.948.920 I llm_load_print_meta: ssm_d_state      = 0
0.00.948.921 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.948.921 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.948.922 I llm_load_print_meta: model type       = 2B
0.00.948.923 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.948.925 I llm_load_print_meta: model params     = 2.51 B
0.00.948.925 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.948.927 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.948.936 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.948.944 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.948.952 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.948.952 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.948.953 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.948.954 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.948.962 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.948.964 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.948.964 I llm_load_print_meta: max token length = 93
0.01.008.072 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.01.013.892 I llama_new_context_with_model: n_seq_max     = 1
0.01.013.900 I llama_new_context_with_model: n_ctx         = 4096
0.01.013.901 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.013.901 I llama_new_context_with_model: n_batch       = 2048
0.01.013.901 I llama_new_context_with_model: n_ubatch      = 512
0.01.013.902 I llama_new_context_with_model: flash_attn    = 0
0.01.013.904 I llama_new_context_with_model: freq_base     = 10000.0
0.01.013.905 I llama_new_context_with_model: freq_scale    = 1
0.01.013.906 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.028.715 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.028.760 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.028.876 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.031.343 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.031.347 I llama_new_context_with_model: graph nodes  = 601
0.01.031.348 I llama_new_context_with_model: graph splits = 1
0.01.031.372 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.615.855 I main: llama threadpool init, n_threads = 4
0.01.615.871 I 
0.01.615.990 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.615.994 I 
0.01.616.228 I sampler seed: 3100129347
0.01.616.243 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.616.263 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.616.265 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.616.265 I 
 seconded the data and metadata from the original dataset. What does it mean when a dataset is seconded?

**Answer:**

When a dataset is secon

0.12.758.321 I llama_perf_sampler_print:    sampling time =      49.10 ms /    33 runs   (    1.49 ms per token,   672.06 tokens per second)
0.12.758.324 I llama_perf_context_print:        load time =    1614.92 ms
0.12.758.325 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.758.340 I llama_perf_context_print:        eval time =   11053.68 ms /    32 runs   (  345.43 ms per token,     2.89 tokens per second)
0.12.758.342 I llama_perf_context_print:       total time =   11142.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m42.204s
user	46m48.082s
sys	0m6.279s
